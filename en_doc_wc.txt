1449	computerscience	alan curtis kay born 17 1940 american scientist elected fellow american academy arts sciences national academy engineering royal society arts pioneering object oriented programming windowing graphical user interface design president viewpoints institute adjunct professor science university california los angeles advisory board tti vanguard mid 2005 senior fellow hp labs visiting professor kyoto university adjunct professor massachusetts institute technology mit kay professional jazz guitarist composer theatrical designer amateur classical pipe organist life interview education america davis kay originally springfield massachusetts kay family relocated times father career physiology ultimately settling york metropolitan attended prestigious brooklyn technical school suspended insubordination senior accumulated credits graduate kay attended bethany college bethany west virginia majored biology minored mathematics leave administration protesting institution jewish quota kay taught guitar denver colorado hastily enlisted united air force local draft board inquired nonstudent status assigned programmer rare billet dominated women secretarial connotations field era passing aptitude devised cross platform file transfer discharge kay enrolled university colorado boulder earning bachelor degree mathematics molecular biology 1966 time professional jazz guitarist studies wrote music adaptation hobbit campus theatricals autumn 1966 graduate school university utah college engineering earned electrical engineering 1968 science 1969 doctoral dissertation flex flexible extendable language language flex utah father graphics ivan sutherland writing pioneering programs sketchpad greatly inspired kay evolving views objects programming grew busier musical career 1968 met seymour papert learned logo programming language dialect lisp optimized educational purposes led learn jean piaget jerome bruner lev vygotsky constructionist learning influencing professional orientation leaving utah associate professor science 1969 kay visiting researcher stanford artificial intelligence laboratory anticipation accepting professorship carnegie mellon university 1970 joined xerox parc staff palo alto california decade developed prototypes networked workstations programming language smalltalk inventions commercialized apple lisa macintosh computers kay fathers idea object oriented programming named colleagues parc original object oriented concepts including object class developed simula 67 norwegian computing center coined term objects topic people focus lesser idea idea messaging parc kay conceived dynabook concept key progenitor laptop tablet computers book architect modern overlapping windowing graphical user interface gui dynabook conceived educational platform kay considered researchers mobile learning features dynabook concept design laptop child educational platform kay actively involved field computing awaiting revolution happen kay educational communities parents children set tools invented douglas engelbart medium marshall mcluhan sense wrote simulas leading oop encounter finally hit destiny personal computing personal dynamic vehicle engelbart metaphor opposed ibm railroads profound personal dynamic medium vehicle wait school drivers medium extend childhood recognition 1981 1984 kay atari chief scientist apple fellow 1984 closure company advanced technology 1997 recruited friend bran ferren head development disney walt disney imagineering disney fellow remained ferren left start applied minds imagineer danny hillis leading cessation fellows program 2001 founded viewpoints institute profit organization dedicated children learning advanced software development kay viewpoints based applied minds glendale california ferren continued projects kay senior fellow hewlett packard hp disbanded advanced software team july 20 2005 kay taught fall 2011 class powerful ideas tools understand york university interactive telecommunications program itp time itp faculty nancy hechinger goal class devise forms teaching learning based fundamental powerful concepts traditional rote learning squeak etoys croquet december 1995 apple kay collaborated start source squeak version smalltalk continues effort november 1996 team etoys started david smith david reed andreas raab rick mcgeer julian lombardi mark mccahill croquet project source networked 2d 3d environment collaborative tweak 2001 etoy architecture squeak reached limits morphic interface infrastructure andreas raab researcher kay hewlett packard proposed defining script process providing default scheduling mechanism avoids result user interface proposed replace squeak morphic user interface future tweak mechanisms islands asynchronous messaging players costumes language extensions projects tile scripting underlying object class based users programming acts prototype based tweak objects created tweak project windows children machine november 2005 summit society mit laboratories unveiled laptop educational names 100 laptop laptop child program children machine xo program begun sustained kay friend nicholas negroponte based kay dynabook ideal kay prominent developer focusing educational software squeak etoys reinventing programming kay lectured extensively idea revolution ideas universally implemented lectures oopsla 1997 conference acm turing award talk entitled revolution happened informed experiences sketchpad simula smalltalk bloated code commercial software august 31 2006 kay proposal united national science foundation nsf granted funding viewpoints institute proposal title steps reinvention programming compact practical model personal computing exploratorium sense kay quote abstract seminar intel labs berkeley conglomeration commercial source software consumes neighborhood hundreds millions lines code days understandable practical model design covers functionality 1m lines code 200k loc 100k loc 20k loc awards honors alan kay received awards honors honors include warnier prix informatique acm systems software award nec computers communication foundation prize funai foundation prize lewis branscomb technology award acm sigcse award outstanding contributions science education 
2323	computerscience	architecture amdahl law amdahl argument theoretical speedup latency execution task fixed workload expected resources improved named scientist gene amdahl afips spring joint conference 1967 amdahl law parallel computing predict theoretical speedup multiple processors program 20 hours single processor core program takes hour execute parallelized remaining 19 hours execution time parallelized processors devoted parallelized execution program minimum execution time critical hour theoretical speedup limited 20 times reason parallel computing processors highly parallelizable programs definition amdahl law formulated wherefurthermore theoretical speedup execution task increases improvement resources magnitude improvement theoretical speedup limited task benefit improvement amdahl law applies size fixed practice computing resources tend larger larger datasets time spent parallelizable grows faster inherently serial gustafson law pessimistic realistic assessment parallel performance derivation task executed resources improved compared initial split program processes files disk program scan directory disk create list files internally memory program passes file separate thread processing scans directory creates file list sped parallel processes files execution time task improvement resources denoted includes execution time benefit improvement resources execution time benefit fraction execution time task benefit improvement resources denoted benefit execution benefits improvement resources accelerated factor improvement resources execution time benefit remains benefits theoretical execution time task improvement resources amdahl law theoretical speedup latency execution task fixed workload yieldsparallel programs 30 execution time subject speedup improvement fast be 2 amdahl law speedup applying improvement assume serial task split consecutive percentages execution time told 1st sped 2nd sped times 3rd sped 20 times 4th sped times amdahl law speedup isnotice times 20 times speedup 2nd 3rd speedup 4th 48 execution time accelerated times serial programs serial program times faster times faster percentage improvement speed calculated asoptimizing sequential parallel programs parallelizable optimized factor thenit amdahl law speedup parallelism bywhen 19 20 meaning speedup ismeasured respect execution time parallelizable optimized 21 23 24 25 transforming sequential parallel programs parallelizable parallelizable reduced factor parallelizable correspondingly increased thenit amdahl law speedup parallelism bythe derivation agreement jakob jenkov analysis execution time speedup tradeoff relation law diminishing returns amdahl law conflated law diminishing returns special applying amdahl law demonstrates law diminishing returns picks optimally terms achieved speedup improve monotonically decreasing improvements improves picks optimally improving optimal component moving improve optimal component increase return note rational improve optimal sense improvements difficult require larger development time amdahl law represent law diminishing returns sort return adding processors machine running fixed size computation processors capacity processor add usable power previous time doubles processors speedup ratio diminish total throughput heads limit 1 −  analysis neglects potential bottlenecks memory bandwidth bandwidth resources scale processors adding processors returns implication amdahl law speedup real applications serial parallel portions heterogeneous computing techniques required cpu gpu heterogeneous processor provide performance energy efficiency cpu gpu processor 
2928	computerscience	association computing machinery acm international learned society computing founded 1947 largest scientific educational computing society acm profit professional membership 100 000 headquarters york city acm umbrella organization academic scholarly science motto advancing computing science profession history acm founded 1947 eastern association computing machinery changed association computing machinery activities acm organized 171 local chapters 37 special sigs conducts activities additionally 500 college university chapters student chapter founded 1961 university louisiana lafayette sigs siggraph sigplan sigcse sigcomm sponsor regular conferences famous dominant venue innovations fields publish specialized journals magazines newsletters acm sponsors science events worldwide acm international collegiate programming contest icpc sponsored events chess match garry kasparov ibm deep blue services publications acm publishes 50 journals including prestigious journal acm magazines professionals communications acm communications cacm queue publications acm include communications publishes primary considered prestigious venue debates computing history published acm publications paid subscribers online digital library guide computing literature individual additionally access safari books online books24x7 acm offers insurance online courses services 1997 acm press published wizards wonders portraits computing written christopher morgan photographs louis fabian bachrach book collection historic current portrait photographs figures industry portal digital library acm portal online service acm core main sections acm digital library acm guide computing literature acm digital library collection articles published acm articles magazines conference proceedings guide bibliography computing entries acm digital library comprehensive archive starting 1950s organization journals magazines newsletters conference proceedings online services include forum called ubiquity tech news digest extensive underlying bibliographic database key genres major publishers computing literature secondary database rich discovery service acm guide computing literature acm hybrid access oa publishing model 2013 authors choose pay oa fee grant acm publishing rights copyright transfer agreement publishing license agreement acm green publisher term invented authors post documents websites institutional repositories link acm digital library permanently maintained version record metadata digital library including abstracts linked references citing citation usage statistics functionality services articles texts accessed subscription mounting challenge acm publication practices coming access movement authors centralized peer–review process relevant publish unreviewed sites arxiv organizations sprung peer review online journal artificial intelligence jair journal machine learning jmlr journal practice technology membership grades addition student regular acm advanced membership grades recognize multiple membership demonstrated performance sets peers fellows acm fellows program established council association computing machinery 1993 recognize honor outstanding acm achievements science technology contributions mission acm march 2015 958 fellows 75 000 professional distinguished 2006 acm recognizing additional membership grades called distinguished distinguished distinguished engineers distinguished scientists distinguished educators 15 professional experience continuous acm membership impact computing field note 2006 distinguished levels called distinguished changed distinguished educator distinguished title titles changed titles senior 2006 acm recognizing senior senior professional experience continuous acm membership distinguished speakers technically membership grade acm recognizes distinguished speakers topics science distinguished speaker appointed period 125 current distinguished speakers acm describes people renowned international leaders distinguished speaker program overseen committee norman gibbs served president acm chapters acm kinds chapters special professional chapters student chapters acm professional sig chapters 56 countries exist acm student chapters 41 countries conferences acm special sigs sponsors numerous conferences 170 hosted worldwide 2017 acm conferences complete list partial list sigs annual conference acm conferences popular publishing venues competitive 2007 siggraph conference attracted 30000 visitors cikm accepted 15 papers submitted 2005 acm co–presenter founding partner grace hopper celebration women computing ghc anita borg institute women technology conferences hosted acm student branches includes reflections projections hosted uiuc acm addition acm sponsors regional conferences regional conferences facilitate increased opportunities collaboration nearby institutions attended additional acm conferences list science conferences awards acm co–presents awards outstanding technical professional achievements contributions science technology 30 acm special award individuals contributions listed leadership president acm 2018–2020 cherri pancake professor emeritus oregon university director northwest alliance computational science engineering nacse successor vicki hanson 2016 2018 distinguished professor rochester institute technology visiting professor university dundee alexander wolf 2014–2016 dean jack baskin school engineering university california santa cruz vint cerf 2012–2014 american scientist recognized fathers internet alain chesnais 2010–2012 french citizen living toronto ontario canada runs company named visual transitions dame wendy hall university southampton 2008–2010 acm led council consisting president vice president treasurer president sig governing board chair publications board chair representatives sig governing board members–at–large institution referred simply council communications acm infrastructure acm boards committees subgroups headquarters staff maintain quality services products boards acm council women computing acm acm council women computing supports celebrates advocates internationally engagement women computing acm–w main programs regional celebrations women computing acm chapters scholarships women students attend conferences india europe activities overseen acm india acm europe acm collaborates organizations anita borg institute national center women technology ncwit athena lectures acm annual athena lecturer award honor outstanding women researchers fundamental contributions science program 2006 speakers nominated sig officers cooperation acm primary partner ieee society ieee largest subgroup institute electrical electronics engineers ieee ieee focuses hardware standardization issues theoretical science considerable overlap acm agenda joint activities including conferences publications awards acm sigs sponsor 20 conferences ieee ieee eckert mauchly award ken kennedy award major awards science jointly acm ieee occasionally cooperate projects developing computing curricula acm jointly sponsored events professional organizations society industrial applied mathematics siam 
3110	computerscience	andrew stuart tanenbaum born march 16 1944 referred handle ast american dutch scientist professor emeritus science vrije universiteit amsterdam netherlands author minix unix operating teaching purposes science textbooks regarded standard texts field teaching job 2004 operated electoral vote dedicated analysis polling data federal elections united biography tanenbaum born york city grew suburban white plains york jewish paternal grandfather born khorostkiv austro hungarian empire received bachelor science degree physics mit 1965 degree astrophysics university california berkeley 1971 tanenbaum served lobbyist sierra club moved netherlands live wife dutch retains united citizenship teaches courses organization operating systems supervises candidates university amsterdam announced retirement teaching books tanenbaum recognized textbooks science include book operating systems design implementation minix linus torvalds inspiration linux kernel autobiography fun torvalds describes book launched heights books translated languages including arabic basque bulgarian chinese dutch french german greek hebrew hungarian italian japanese korean macedonian mexican spanish persian polish portuguese romanian russian serbian spanish appeared 175 editions universities doctoral students tanenbaum students science researchers include dean advanced school computing imaging 1990s dutch government setting thematically oriented schools spanned multiple universities schools intended bring professors students dutch foreign universities cooperate enhance tanenbaum cofounders dean advanced school computing imaging asci school initially consisted 200 faculty students vrije universiteit university amsterdam delft university technology leiden university advanced systems parallel computing image analysis processing tanenbaum remained dean 12 2005 awarded academy professorship royal netherlands academy arts sciences time time professor asci grown include researchers dozen universities netherlands belgium france asci offers level courses annual conference runs workshops projects amsterdam compiler kit amsterdam compiler kit toolkit producing portable compilers started 1981 andrew tanenbaum architect start version minix 1987 tanenbaum wrote clone unix called minix mini unix ibm pc targeted students learn operating wrote book listed source code appendix source code set floppy disks months usenet newsgroup comp os minix sprung 40 000 subscribers discussing improving subscribers finnish student named linus torvalds adding features minix tailoring october 1991 torvalds announced posix kernel called linux originally minix file based minix code minix linux diverged minix continues developed production educational focus building highly modular reliable secure operating based microkernel 5000 lines code running kernel mode rest operating runs independent processes user mode including processes file process manager device driver continuously monitors processes failure detected capable automatically replacing failed process reboot disturbing running programs user noticing minix current version called bsd license projects tanenbaum involved numerous projects operating systems distributed systems ubiquitous computing supervisor students postdoctoral researcher projects include electoral vote 2004 tanenbaum created electoral vote analyzing opinion polls 2004 presidential election project outcome electoral college stated created american hand america pretty picture moment people america land freedom democracy land arrogance blind revenge america color coded map updated day projections electoral votes campaign period tanenbaum identity secret referring votemaster acknowledging personally preferred john kerry mentioning supported democrats revealed identity november 2004 day election stating reasons qualifications running covered 2006 midterm elections correctly predicting winner 33 senate races 2008 elections indiana mccain win obama missouri close mccain correctly predicted winners senate minnesota predicted win norm coleman franken months legal battling recounts franken 312 votes 01 2010 correctly projected 35 37 senate races midterm elections exceptions colorado nevada incorrectly predicted hillary clinton win 2016 united presidential election tanenbaum–torvalds debate tanenbaum–torvalds debate famous debate tanenbaum linus torvalds kernel design usenet 1992 keynote talks tanenbaum keynote speaker numerous conferences 
3116	computerscience	central processing unit cpu accumulator register intermediate arithmetic logic stored register accumulator write result calculation addition multiplication shift main memory read operation access main memory slower access register accumulator technology main memory slower cheaper register electronic systems split accumulators modern systems multiple purpose registers operate accumulators term common special purpose processors single accumulator simplify design basic concept mathematical operations stepwise fashion operation input instance manual calculation worker weekly payroll program carrying task follow basic sequence operations values looked stored memory computers hours held punch card pay rate form memory magnetic drum multiplication complete result drum machine drum operation takes considerable time operation read introduces considerable delay accumulators dramatically improve performance systems providing scratchpad operation fed performance penalty basic weekly pay calculated accumulator income tax calculation removes save read operation sequence operations tens hundreds times multiplication accumulator machines accumulator machine called operand machine cpu accumulator based architecture cpu registers cpu stores calculations special register typically called accumulator computers accumulator machines performance supercomputers multiple registers mainframe systems microcomputers accumulator architectures popular mos 6502 notable bit microcontrollers popular 2014 picmicro 8051 accumulator based machines modern cpus typically operand operand machines additional operands purpose registers called purpose accumulators source destination calculations cpus considered accumulator machines characteristic distinguishes register accumulator architecture accumulator architecture implicit operand arithmetic instructions instance cpu instruction codice adds read memory location memaddress accumulator placing result accumulator accumulator identified instruction register implicit instruction register instruction architectures register accumulator instructions instructions register explicit operand specification history accumulator single memory store result multiple operations considered accumulator presper eckert refers earliest adding machines gottfried leibniz blaise pascal accumulator based systems historical convention dedicates register accumulator arithmetic organ literally accumulates sequence arithmetic operations instructions modern interpretation convention exists names operations registers accumulator accumulator registers tradition donald knuth 1973 hypothetical mix instructions called load accumulator register memory lda store accumulator register memory sta knuth model instructions notable accumulator based computers 1945 configuration eniac 20 accumulators operate parallel store decimal digit add subtract received ibm binary scientific computers vacuum tube ibm 701 1952 single 36 bit accumulator separate multiplier quotient register handle operations ibm 650 decimal machine digit accumulator ibm 7070 transistorized decimal machine accumulators 12 bit pdp minicomputers accumulators inspired machines pdp accumulator hp 2100 data nova accumulators nova created follow pdp rejected favor pdp 11 nova accumulators ac0 ac3 ac2 ac3 provide offset addresses tending generality usage registers pdp 11 introduced contemporary model registers numbered r0 r7 cisc risc machines bit bit microprocessors 4004 8008 numerous typically single accumulators 8051 microcontroller primary accumulator secondary accumulator instructions multiplying mul ab dividing div ab splits 16 bit result bit accumulators stores quotient primary accumulator remainder secondary accumulator direct descendent 8008 8080 8086 modern ubiquitous intel x86 processors primary accumulator eax secondary accumulator edx multiplication division instance mul ecx multiply 32 bit registers ecx eax split 64 bit result eax edx mul div special arithmetic logical instructions add cmp xor registers eax ecx edx ebx esp ebp esi edi accumulator left operand destination supported multiply upper result required x86 register architecture based accumulator model 64 bit extension x86 x86 64 generalized 16 registers 
3712	computerscience	nokia bell labs named bell laboratories bell telephone laboratories industrial scientific development company owned finnish company nokia headquarters located murray hill jersey addition laboratories rest united countries historic laboratory originated western electric engineering department late 19th century located 463 west street york city 1925 conducting development western electric engineering department reformed bell telephone laboratories shared ownership american telephone telegraph company western electric researchers bell labs credited development radio astronomy transistor laser charge coupled device ccd theory unix operating programming languages nobel prizes awarded completed bell laboratories origin historical locations bell personal telephone 1880 french government awarded alexander graham bell volta prize 50 000 francs 000 time current dollars telephone bell award fund volta laboratory alexander graham bell laboratory washington collaboration sumner tainter bell cousin chichester bell laboratory variously volta bureau bell carriage house bell laboratory volta laboratory laboratory focused analysis recording transmission sound bell considerable profits laboratory education permit diffusion knowledge relating deaf founding volta bureau 1887 located bell father house 1527 35th street washington carriage house headquarters 1889 1893 bell constructed building close 1537 35th street house lab building declared national historic landmark 1972 telephone bell maintained distant role bell continued pursue personal antecedent bell labs origins complex bell alexander graham bell thomas sanders gardiner hubbard formed bell patent association filing patents telephone 1876 telephone company formed bell telephone company american bell telephone company 1889 subsidiary company american telephone telegraph company control american bell bell american bell held controlling western electric manufacturing arm business service providers 1884 american bell telephone company created mechanical department electrical patent department formed earlier formal organization location 1896 western electric bought property 463 west street station manufacturers engineers supplying product included telephones telephone exchange switches transmission equipment 1925 bell laboratories developed consolidate activities bell ownership split western electric decade development branch moved west street bell labs carried consulting bell telephone company government workers assigned basic president bell labs frank jewett stayed 1940 1940s bell labs engineers scientists begun locations congestion environmental distractions york city 1967 bell laboratories headquarters officially relocated murray hill jersey bell laboratories locations jersey holmdel crawford hill deal freehold lincroft branch middletown neptune princeton piscataway red bank chester whippany murray hill crawford hill remain existence piscataway red bank locations transferred operated telcordia technologies whippany purchased bayer largest people company illinois naperville lisle chicago largest concentration employees 11 000 prior 2001 employees indianapolis indiana columbus ohio north andover massachusetts allentown pennsylvania reading pennsylvania breinigsville pennsylvania burlington north carolina 1950s–1970s moved greensboro 1980s westminster colorado 2001 locations scaled closed holmdel square foot structure set 473 acres closed 2007 mirrored glass building designed eero saarinen august 2013 somerset development bought building intending redevelop mixed commercial residential project 2012 article expressed doubt success newly named bell tenants announced plans 2016 2017 discoveries developments bell laboratories regarded premier facility type developing wide range revolutionary technologies including radio astronomy transistor laser theory operating unix programming languages solar cells ccd floating gate mosfet host optical wireless wired communications technologies systems nobel prizes awarded completed bell laboratories turing award times bell labs researchers 1920s 1926 laboratories invented synchronous sound motion picture competition fox movietone deforest phonofilm 1924 bell labs physicist walter shewhart proposed control chart method determine process statistical control shewhart methods basis statistical process control spc statistically based tools techniques manage improve processes origin modern quality movement including sigma 1927 bell team headed herbert ives transmitted distance 128 television images secretary commerce herbert hoover washington york 1928 thermal noise resistor measured john johnson harry nyquist theoretical analysis termed johnson noise 1920s time pad cipher invented gilbert vernam joseph mauborgne laboratories bell labs claude shannon proved unbreakable 1930s 1931 foundation radio astronomy laid karl jansky investigating origins static distance shortwave communications discovered radio waves emitted center galaxy 1931 1932 experimental fidelity playing stereophonic recordings labs philadelphia orchestra conducted leopold stokowski 1933 stereo signals transmitted live philadelphia washington 1937 vocoder electronic speech compression device codec voder electronic speech synthesizer developed demonstrated homer dudley voder demonstrated 1939 york fair bell researcher clinton davisson shared nobel prize physics george paget thomson discovery electron diffraction helped lay foundation solid electronics 1940s 1940s photovoltaic cell developed russell ohl 1943 bell developed sigsaly digital scrambled speech transmission allies war british wartime codebreaker alan turing visited labs time speech encryption meeting claude shannon bell labs quality assurance department united statisticians walter shewhart edwards deming harold dodge george edwards harry romig jones paul olmstead paterson mary torrey war emergency technical committee – quality control drawn bell labs statisticians instrumental advancing army navy ammunition acceptance material sampling procedures 1947 transistor developed bell laboratories invented john bardeen walter houser brattain william bradford shockley subsequently shared nobel prize physics 1956 1947 richard hamming invented hamming codes error detection correction patent reasons result published 1950 1948 mathematical theory communication founding theory published claude shannon bell technical journal built earlier field bell researchers harry nyquist ralph hartley greatly extended bell labs introduced series increasingly complex calculators decade shannon founder modern cryptography 1949 paper communication theory secrecy systems 1950s 1952 william gardner pfann revealed method zone melting enabled semiconductor purification level doping 1950s developmental activity based theory central development binary code systems efforts concentrated precisely laboratories prime mission supporting bell engineering advances including carrier microwave radio relay direct distance dialing repeaters wire spring relays improved switching systems maurice karnaugh 1953 developed karnaugh map tool facilitate management boolean algebraic expressions 1954 modern solar cell invented bell laboratories spectacular business 1956 tat transatlantic telephone cable laid scotland newfoundland joint effort bell laboratories british canadian telephone companies 1957 music programs play electronic music created max mathews greedy algorithms developed robert prim joseph kruskal revolutionized network design 1958 laser technical paper arthur schawlow charles hard townes 1960s december 1960 ali javan associates william bennett donald heriot operated gas laser continuous light laser operating unprecedented accuracy color purity 1960 dawon kahng martin atalla invented metal oxide semiconductor field transistor mosfet mosfet achieved electronic hegemony sustains scale integrated circuits lsis underlying society 1962 electret microphone invented gerhard sessler james edward maceo west 1962 john pierce vision communications satellites realized launch telstar 1964 carbon dioxide laser invented kumar patel 1965 penzias wilson discovered cosmic microwave background awarded nobel prize physics 1978 frank sinden edward zajac kenneth knowlton michael noll animated movies mid 1960s ken knowlton invented animation language beflix digital art created 1962 noll 1966 orthogonal frequency division multiplexing ofdm key technology wireless services developed patented chang 1968 molecular beam epitaxy developed arthur cho molecular beam epitaxy semiconductor chips laser matrices manufactured atomic layer time 1969 dennis ritchie ken thompson created operating unix support telecommunication switching systems purpose computing 1969 1971 aaron marcus graphic designer involved graphics researched designed programmed prototype interactive layout picturephone 1969 charge coupled device ccd invented willard boyle george smith awarded nobel prize physics 2009 1960s york city sold westbeth artists community complex 1970s 1970s 1980s inventions bell laboratories personal computing revolution 1972 dennis ritchie developed compiled programming language replacement interpreted language worse rewrite unix language awk designed implemented alfred aho peter weinberger brian kernighan bell laboratories 1970 michael noll invented tactile force feedback coupled interactive stereoscopic display 1971 improved task priority computerized telephone exchange switching systems telephone traffic invented erna schneider hoover received software patents 1976 optical fiber systems tested georgia 1980 single chip 32 bit microprocessor bellmac 32a demonstrated production 1982 1970s major central office technology evolve crossbar electromechanical relay based technology discrete transistor logic bell labs developed film hybrid transistor–transistor logic ttl stored program controlled switching systems 1a toll electronic switching systems ess 2a local central offices produced bell labs naperville western electric lisle illinois facilities technology evolution dramatically reduced floor space ess diagnostic software switchman frame technicians maintain technology touted bell labs technical journals western electric magazine people 1980s 1980 tdma cdma digital cellular telephone technology patented 1982 fractional quantum hall discovered horst störmer bell laboratories researchers robert laughlin daniel tsui nobel prize 1998 discovery 1985 programming language commercial release bjarne stroustrup started developing bell laboratories 1979 extension original language 1984 photoconductive antennas picosecond electromagnetic radiation demonstrated auston type antenna component terahertz time domain spectroscopy 1984 karmarkar algorithm linear programming developed mathematician narendra karmarkar 1984 divestiture agreement signed 1982 american federal government forced break bellcore telcordia technologies split bell laboratories provide functions newly created local exchange carriers limited bell trademark association bell laboratories bell telephone laboratories wholly owned company technologies unit western electric 5ess switch developed transition 1985 laser cooling slow manipulate atoms steven chu team 1985 modeling language mathematical programming language ampl developed robert fourer david gay brian kernighan bell laboratories 1985 bell laboratories awarded national medal technology contribution decades modern communication systems 1980s operating plan bell labs developed extending unix model radiodrum electronic music instrument played space dimensions invented 1988 tat transatlantic fiber optic cable bell labs freehold nj developed micron fiber cable splicing laser detector 280 mbit repeater 40 000 telephone capacity arthur ashkin invented optical tweezers grab particles atoms viruses living cells laser beam fingers major breakthrough 1987 ashkin tweezers capture living bacteria harming studying biological systems optical tweezers investigate machinery life 1990s 1991 56k modem technology patented nuri dağdeviren team 1994 quantum cascade laser invented federico capasso alfred cho jerome faist collaborators 1994 peter shor devised quantum factorization algorithm 1996 scalpel electron lithography prints features atoms wide microchips invented lloyd harriott team operating inferno update plan created dennis ritchie concurrent programming language limbo performance database engine dali developed datablitz product form 1996 spun bell laboratories equipment manufacturing business company named lucent technologies retained researchers staff newly created labs 1997 practical transistor 60 nanometers 182 atoms wide built 1998 optical router invented 2000s 2000 active laboratories dna machine prototypes developed progressive geometry compression algorithm widespread communication practical electrically powered organic laser invented scale map cosmic dark matter compiled 15 material organic material plastic transistors invented 2002 physicist jan hendrik schön fired fraudulent data fraud bell labs 2003 jersey institute technology biomedical engineering laboratory created murray hill jersey 2005 jeong kim president lucent optical network returned academia president bell laboratories april 2006 bell laboratories parent company lucent technologies signed merger agreement alcatel december 2006 merged company alcatel lucent operations deal raised concerns united bell laboratories defense contracts separate company lgs innovations american board set manage bell laboratories lucent sensitive government contracts december 2007 announced lucent bell laboratories alcatel innovation merged organization bell laboratories period growth bell laboratories progressively lost manpower layoffs spin offs company shut short period time july 2008 scientists remained physics report scientific journal nature 28 august 2008 alcatel lucent announced pulling basic science material physics semiconductor focus marketable including networking speed electronics wireless networks nanotechnology software 2009 willard boyle george smith awarded nobel prize physics development charge coupled device ccd 2010s february 2013 gee rittenhouse head returned position chief operating officer alcatel lucent software services solutions business 12th president bell labs november 2013 alcatel lucent announced appointment marcus weldon president bell labs stated charter return bell labs forefront innovation communications technology focusing solving key industry challenges bell labs innovation eras july 2014 bell labs announced broken broadband internet speed record technology dubbed xg fast promises gigabits transmission speeds 2014 eric betzig shared nobel prize chemistry super resolved fluorescence microscopy pursuing bell labs semiconductor physics department 15 april 2015 nokia agreed acquire alcatel lucent bell labs parent company share exchange worth 16 day combined operations 14 january 2016 september 2016 nokia bell labs technische universität berlin deutsche telekom labs technical university munich achieved data rate terabit improving transmission capacity spectral efficiency optical communications field trial modulation technique 2018 arthur ashkin shared nobel prize physics optical tweezers application biological systems developed bell labs 1980s programs 20 2014 bell labs announced bell labs prize competition innovators offer proposals communication technologies cash awards 100 000 grand prize bell labs technology showcase murray hill campus features 3000 square foot exhibit bell labs technology showcase showcasing technological discoveries developments bell labs exhibit located main lobby public 
4279	computerscience	broadcast domain logical division network nodes reach broadcast data link layer broadcast domain lan segment bridged lan segments terms current popular technologies connected ethernet repeater switch broadcast domain connected set inter connected switches repeaters broadcast domain routers layer devices form boundaries broadcast domains compared collision domain nodes set inter connected repeaters divided switches learning bridges collision domains contained broadcast domains layer network devices divide collision domains broadcast domains divided layer network devices routers layer switches separating vlans divides broadcast domains explanation distinction broadcast collision domains simple ethernet systems shared transmission simple ethernet switches bridges data frames transmitted nodes network receiving node checks destination address frame simply ignores frame addressed mac address broadcast address switches buffers receiving analyzing frames connected network segment frames destined nodes connected originating segment forwarded switch frames destined specific node segment segment broadcast frames forwarded segments reduces unnecessary traffic collisions switched network transmitted frames received reachable nodes nominally broadcast frames received nodes collisions localized network segment occur broadcast domain entire inter connected layer network segments connected switch bridge port collision domain network systems media feature broadcast collision domains ppp links broadcast domain control sophisticated switch create network normal notion broadcast domain strictly controlled implementation concept termed private vlan implementation linux iptables helpful analogy creating multiple vlans broadcast domains increases size broadcast domain decreases virtual lan vlan technically broadcast domain achieved designating server provider nodes mac address switch port broadcast frames allowed originate sources nodes broadcast frames sources directed server provider nodes traffic sources destined server provider nodes peer peer traffic blocked result network based nominally shared transmission ethernet client nodes communicate server provider common application internet providers allowing direct data link layer communication customer nodes exposes network security attacks arp spoofing controlling broadcast domain fashion advantages network commodity broadcast based hardware 
4801	computerscience	beos operating personal computers developed 1991 written bebox hardware beos built digital media written advantage modern hardware facilities symmetric multiprocessing utilizing modular bandwidth pervasive multithreading preemptive multitasking 64 bit journaling file bfs beos gui developed principles clarity clean uncluttered design api written ease programming partial posix compatibility access command interface bash internally unix derived operating beos unicode default encoding gui support input methods bidirectional input realized beos positioned multimedia platform substantial population desktop users competitor classic mac os windows ultimately unable achieve market share proved commercially unviable company acquired palm beos developed population enthusiasts source os haiku complete reimplementation beos designed start beos left beta haiku released september 2018 alpha history initially designed hobbit based hardware beos modified powerpc based processors systems apple powerpc reference platform common hardware reference platform hope apple purchase license beos replacement aging classic mac os apple ceo gil amelio started negotiations negotiations stalled ceo jean louis gassée 300 apple unwilling offer 125 apple board directors decided nextstep choice purchased 1996 429 bringing apple founder steve jobs 1997 power computing bundling beos optional installation powerpc based macintosh clones systems dual boot classic mac os beos start screen offering choice apple moves mounting debt beos ported intel x86 platform r3 release march 1998 late 1990s beos managed create niche followers company failed remain viable released stripped beos r5 beos personal edition beos beos started windows linux intended nurture consumer product developers tinker released stripped version beos internet appliances beia company business focus beos 2001 copyrights sold palm 11 beos r5 considered official version beos r5 dano development sale palm included beos networking environment bone networking stack leaked public shortly company demise 2002 sued claiming hitachi dissuaded selling pcs loaded beos compaq pressured market internet appliance partnership claimed acted artificially depress initial public offering ipo eventually settled court 23 25 admission liability split palm palmsource beos multimedia framework failed palm os cobalt product takeover palmsource beos rights belong access continuation clones demise handful projects formed recreate beos key elements os eventual goal continuing left facilitated released components beos licence list projects zeta commercially operating based beos r5 codebase originally developed yellowtab operating distributed magnussoft development yellowtab company received criticism beos community refusing discuss legal position regard beos codebase contractual reasons access bought palmsource holder intellectual property beos declared yellowtab distribute modified version beos magnussoft ceased distribution operating products beos beos zeta continue media appliances edirol dv video editors roland corporation modified beos tunetracker radio automation software beos zeta sold station box zeta operating included nowadays tunetracker switched haiku tascam sx digital audio recorder runs heavily modified version beos launch recording interface software iz technology corporation sells radar 24 radar radar studio hard disk based 24 track professional audio recorders based beos radar based beos magicbox manufacturer signage broadcast display machines beos power aavelin product final scratch 12″ vinyl timecode record driven software hardware developed beos profs version sold dozen djs prior release linux virtual partition 
5218	computerscience	central processing unit cpu electronic circuitry carries instructions program performing basic arithmetic logic controlling input output operations instructions industry term central processing unit 1960s traditionally term cpu refers processor processing unit control unit distinguishing core elements external components main memory circuitry form design implementation cpus changed history fundamental operation remains unchanged principal components cpu include arithmetic logic unit alu performs arithmetic logic operations processor registers supply operands alu store alu operations control unit orchestrates fetching memory execution instructions directing coordinated operations alu registers components modern cpus microprocessors meaning contained single integrated circuit ic chip ic cpu memory peripheral interfaces components integrated devices variously called microcontrollers systems chip soc computers employ multi core processor single chip cpus called cores context speak single chips sockets array processors vector processors multiple processors operate parallel unit considered central exists concept virtual cpus abstraction dynamical aggregated computational resources history computers eniac physically rewired perform tasks caused machines called fixed program computers term cpu defined device software program execution earliest devices rightly called cpus advent stored program idea stored program design presper eckert john william mauchly eniac initially finished sooner june 30 1945 eniac mathematician john von neumann distributed paper entitled draft report edvac outline stored program eventually completed august 1949 edvac designed perform instructions operations types programs written edvac stored speed memory physical wiring overcame severe limitation eniac considerable time effort required reconfigure perform task von neumann design program edvac changed simply changing contents memory edvac stored program manchester baby scale experimental stored program program 21 june 1948 manchester mark program night 16–17 june 1949 cpus custom designs larger distinctive method designing custom cpus application development multi purpose processors produced quantities standardization era discrete transistor mainframes minicomputers rapidly accelerated popularization integrated circuit  ic ic allowed increasingly complex cpus designed manufactured tolerances nanometers miniaturization standardization cpus increased presence digital devices modern life limited application dedicated computing machines modern microprocessors electronic devices ranging automobiles cellphones toys von neumann credited design stored program design edvac design von neumann architecture konrad zuse suggested implemented ideas called harvard architecture harvard mark completed edvac stored program design punched paper tape electronic memory key difference von neumann harvard architectures separates storage treatment cpu instructions data memory space modern cpus von neumann design cpus harvard architecture embedded applications instance atmel avr microcontrollers harvard architecture processors relays vacuum tubes thermionic tubes commonly switching elements requires thousands tens thousands switching devices speed dependent speed switches tube computers edvac tended average hours failures relay computers slower earlier harvard mark failed rarely tube based cpus dominant speed advantages afforded outweighed reliability synchronous cpus clock rates compared modern microelectronic designs clock signal frequencies ranging 100 khz 4 mhz common time limited speed switching devices built transistor cpus design complexity cpus increased technologies facilitated building reliable electronic devices improvement advent transistor transistorized cpus 1950s 1960s built bulky unreliable fragile switching elements vacuum tubes relays improvement complex reliable cpus built printed circuit boards discrete individual components 1964 ibm introduced ibm 360 architecture series computers capable running programs speed performance time electronic computers incompatible manufacturer facilitate improvement ibm concept microprogram called microcode widespread usage modern cpus 360 architecture popular dominated mainframe market decades left legacy continued modern computers ibm zseries 1965 digital equipment corporation dec introduced influential aimed scientific markets pdp transistor based computers distinct advantages predecessors facilitating increased reliability power consumption transistors allowed cpus operate speeds short switching time transistor comparison tube relay increased reliability dramatically increased speed switching elements exclusively transistors time cpu clock rates tens megahertz easily period additionally discrete transistor ic cpus heavy usage performance designs simd single instruction multiple data vector processors experimental designs rise era specialized supercomputers cray fujitsu scale integration cpus period method manufacturing interconnected transistors compact space developed integrated circuit ic allowed transistors manufactured single semiconductor based die chip basic specialized digital circuits gates miniaturized ics cpus based building block ics referred scale integration ssi devices ssi ics apollo guidance contained dozen transistors build entire cpu ssi ics required thousands individual chips consumed space power earlier discrete transistor designs ibm 370 follow 360 ssi ics solid logic technology discrete transistor modules dec pdp ki10 pdp switched individual transistors pdp pdp ssi ics extremely popular pdp 11 originally built ssi ics eventually implemented lsi components practical scale integration cpus lee boysel published influential articles including 1967 manifesto build equivalent 32 bit mainframe scale integration circuits lsi time build lsi chips chips gates build mos process pmos logic nmos logic cmos logic companies continued build processors bipolar chips bipolar junction transistors faster mos chips datapoint built processors transistor–transistor logic ttl chips 1980s time mos ics slow considered niche applications required power microelectronic technology advanced increasing transistors ics decreasing individual ics complete cpu msi lsi ics increased transistor counts hundreds thousands 1968 ics required build complete cpu reduced 24 ics types ic roughly 1000 mosfets stark contrast ssi msi predecessors lsi implementation pdp 11 contained cpu composed lsi integrated circuits microprocessors introduction commercially microprocessor intel 4004 1970 microprocessor intel 8080 1974 class cpus completely overtaken central processing unit implementation methods mainframe minicomputer manufacturers time launched proprietary ic development programs upgrade architectures eventually produced instruction set compatible microprocessors compatible hardware software combined advent eventual success ubiquitous personal term cpu applied exclusively microprocessors cpus denoted cores combined single processing chip previous generations cpus implemented discrete components numerous integrated circuits ics circuit boards microprocessors hand cpus manufactured ics cpu size result implemented single die faster switching time physical factors decreased gate parasitic capacitance allowed synchronous microprocessors clock rates ranging tens megahertz gigahertz additionally ability construct exceedingly transistors ic increased complexity transistors single cpu fold observed trend moore law proven accurate predictor growth cpu ic complexity 2016 complexity size construction form cpus changed enormously 1950 basic design function changed common cpus accurately von neumann stored program machines moore law holds concerns arisen limits integrated circuit transistor technology extreme miniaturization electronic gates causing effects phenomena electromigration subthreshold leakage concerns factors causing researchers investigate methods computing quantum expand usage parallelism methods extend classical von neumann model operation fundamental operation cpus physical form execute sequence stored instructions called program instructions executed memory cpus follow fetch decode execute steps operation collectively instruction cycle execution instruction entire process repeats instruction cycle fetching sequence instruction incremented program counter jump instruction executed program counter modified address instruction jumped program execution continues complex cpus multiple instructions fetched decoded executed simultaneously describes referred classic risc pipeline common simple cpus electronic devices called microcontroller ignores role cpu cache access stage pipeline instructions manipulate program counter producing result data instructions called jumps facilitate program behavior loops conditional program execution conditional jump existence functions processors instructions change bits flags register flags influence program behaves outcome operations processors compare instruction evaluates values sets clears bits flags register equal flags jump instruction determine program flow fetch step fetch involves retrieving instruction represented sequence program memory instruction location address program memory determined program counter pc stores identifies address instruction fetched instruction fetched pc incremented instruction address instruction sequence instruction fetched retrieved slow memory causing cpu stall waiting instruction returned issue addressed modern processors caches pipeline architectures decode instruction cpu fetches memory determines cpu decode step performed circuitry instruction decoder instruction converted signals control cpu instruction interpreted defined cpu instruction set architecture isa bits field instruction called opcode operation performed remaining fields provide supplemental required operation operands operands constant called location processor register memory address determined addressing mode cpu designs instruction decoder implemented hardwired unchangeable circuit microprogram translate instructions sets cpu configuration signals applied sequentially multiple clock pulses memory stores microprogram rewritable change cpu decodes instructions execute fetch decode steps execute step performed depending cpu architecture consist single action sequence actions action cpu electrically connected perform desired operation action completed typically response clock pulse written internal cpu register quick access subsequent instructions written slower expensive capacity main memory addition instruction executed arithmetic logic unit alu inputs connected pair operand sources summed alu configured perform addition operation sum operand inputs output alu output connected storage register memory receive sum clock pulse occurs sum transferred storage sum larger alu output word size arithmetic overflow flag set structure implementation hardwired cpu circuitry set basic operations perform called instruction set operations involve adding subtracting comparing jumping program basic operation represented combination bits machine language opcode executing instructions machine language program cpu decides operation perform decoding opcode complete machine language instruction consists opcode additional bits arguments operation summed addition operation complexity scale machine language program collection machine language instructions cpu executes actual mathematical operation instruction performed combinational logic circuit cpu processor arithmetic logic unit alu cpu executes instruction fetching memory alu perform operation storing result memory instructions integer mathematics logic operations machine instructions exist loading data memory storing branching operations mathematical operations floating performed cpu floating unit fpu control unit control unit cpu circuitry electrical signals direct entire carry stored program instructions control unit execute program instructions directs control unit communicates alu memory arithmetic logic unit arithmetic logic unit alu digital circuit processor performs integer arithmetic bitwise logic operations inputs alu data operated called operands status previous operations code control unit indicating operation perform depending instruction executed operands internal cpu registers external memory constants generated alu input signals settled propagated alu circuitry result performed operation appears alu outputs result consists data word stored register memory status typically stored special internal cpu register purpose memory management unit mmu microprocessors desktop laptop server computers memory management unit translating logical addresses physical ram addresses providing memory protection paging abilities virtual memory simpler processors microcontrollers include mmu clock rate cpus synchronous circuits employ clock signal pace sequential operations clock signal produced external oscillator circuit generates consistent pulses form periodic square wave frequency clock pulses determines rate cpu executes instructions faster clock instructions cpu execute ensure proper operation cpu clock period maximum time signals propagate cpu setting clock period worst propagation delay design entire cpu moves data edges rising falling clock signal advantage simplifying cpu design perspective component count perspective carries disadvantage entire cpu wait slowest elements portions faster limitation compensated methods increasing cpu parallelism architectural improvements solve drawbacks globally synchronous cpus clock signal subject delays electrical signal clock rates increasingly complex cpus difficult clock signal phase synchronized entire unit led modern cpus require multiple identical clock signals avoid delaying single signal cpu malfunction major issue clock rates increase dramatically heat dissipated cpu constantly changing clock components switch time component switching energy element static clock rate increases energy consumption causing cpu require heat dissipation form cpu cooling solutions method dealing switching unneeded components called clock gating involves clock signal unneeded components effectively disabling regarded difficult implement common usage power designs notable cpu design extensive clock gating ibm powerpc based xenon xbox 360 power requirements xbox 360 greatly reduced method addressing global clock signal removal clock signal altogether removing global clock signal design process considerably complex asynchronous clockless designs carry marked advantages power consumption heat dissipation comparison synchronous designs uncommon entire asynchronous cpus built global clock signal notable examples arm compliant amulet mips r3000 compatible minimips totally removing clock signal cpu designs portions device asynchronous asynchronous alus conjunction superscalar pipelining achieve arithmetic performance gains altogether totally asynchronous designs perform comparable level synchronous counterparts evident excel simpler math operations combined excellent power consumption heat dissipation properties suitable embedded computers integer range cpu represents numerical values specific digital computers represented familiar decimal base numeral values employed unusual representations ternary base modern cpus represent binary form digit represented valued physical quantity voltage numeric representation size precision integer cpu represent binary cpu measured bits digits binary encoded integer cpu process operation commonly called word size bit data path integer precision integer size cpu integer size determines range integer values operate bit cpu manipulate integers represented bits range 256 28 discrete integer values integer range affect memory locations cpu address address integer representing specific memory location binary cpu 32 bits represent memory address address 232 memory locations circumvent limitation reasons cpus mechanisms bank switching additional memory addressed cpus larger word sizes require circuitry physically larger cost consume power generate heat result bit microcontrollers commonly modern applications cpus larger word sizes 16 32 64 128 bit performance required benefits larger word size larger data ranges address spaces outweigh disadvantages cpu internal data paths shorter word size reduce size cost ibm 360 instruction set 32 bit instruction set 360 model 30 model 40 bit data paths arithmetic logical unit 32 bit add required cycles bits operands motorola 68000 series instruction set 32 bit instruction set motorola 68000 motorola 68010 16 bit data paths arithmetic logical unit 32 bit add required cycles gain advantages afforded bit lengths instruction sets bit widths integer floating data allowing cpus implementing instruction set bit widths portions device ibm 360 instruction set 32 bit supported 64 bit floating values facilitate accuracy range floating 360 model 65 bit adder decimal fixed binary arithmetic 60 bit adder floating arithmetic cpu designs mixed bit processor meant purpose usage reasonable balance integer floating capability required parallelism description basic operation cpu offered previous describes simplest form cpu type cpu referred subscalar operates executes instruction pieces data time instruction clock cycle process rise inherent inefficiency subscalar cpus instruction executed time entire cpu wait instruction complete proceeding instruction result subscalar cpu hung instructions clock cycle complete execution adding execution unit improve performance pathway hung pathways hung unused transistors increased design cpu execution resources operate instruction time reach scalar performance instruction clock cycle performance subscalar instruction clock cycle attempts achieve scalar performance variety design methodologies cpu behave linearly parallel referring parallelism cpus terms classify design techniques methodology differs implemented relative effectiveness afford increasing cpu performance application instruction level parallelism simplest methods accomplish increased parallelism steps instruction fetching decoding prior instruction finishes executing simplest form technique instruction pipelining modern purpose cpus pipelining instruction executed time breaking execution pathway discrete stages separation compared assembly instruction complete stage exits execution pipeline retired pipelining introduce possibility situation result previous operation complete operation condition termed data dependency conflict cope additional care check sorts conditions delay portion instruction pipeline occurs naturally accomplishing requires additional circuitry pipelined processors complex subscalar pipelined processor scalar inhibited pipeline stalls instruction spending clock cycle stage improvement idea instruction pipelining led development method decreases idle time cpu components designs superscalar include instruction pipeline multiple identical execution units load store units arithmetic logic units floating units address generation units superscalar pipeline multiple instructions read passed dispatcher decides instructions executed parallel simultaneously dispatched execution units ability instructions executed simultaneously instructions superscalar cpu dispatch simultaneously waiting execution units instructions completed cycle difficulty design superscalar cpu architecture lies creating effective dispatcher dispatcher correctly determine instructions executed parallel dispatch execution units busy requires instruction pipeline filled rise superscalar architectures amounts cpu cache hazard avoiding techniques branch prediction speculative execution register renaming execution transactional memory crucial maintaining levels performance attempting predict branch path conditional instruction cpu minimize times entire pipeline wait conditional instruction completed speculative execution modest performance increases executing portions code conditional operation completes execution rearranges instructions executed reduce delays data dependencies single instruction stream multiple data stream—a lot data type processed— modern processors disable pipeline single instruction executed times cpu skips fetch decode phases greatly increases performance occasions highly monotonous program engines video creation software photo processing portion cpu superscalar suffers performance penalty scheduling stalls intel p5 pentium superscalar alus accept instruction clock cycle fpu accept instruction clock cycle p5 integer superscalar floating superscalar intel successor p5 architecture p6 superscalar capabilities floating features afforded increase floating instruction performance simple pipelining superscalar design increase cpu ilp allowing single processor complete execution instructions rates surpassing instruction clock cycle modern cpu designs superscalar purpose cpus designed decade superscalar emphasis designing ilp computers moved cpu hardware software interface isa strategy instruction word vliw ilp implied software reducing cpu perform boost ilp reducing design complexity task level parallelism strategy achieving performance execute multiple threads processes parallel parallel computing flynn taxonomy strategy multiple instruction stream multiple data stream mimd technology purpose multiprocessing initial flavor technology symmetric multiprocessing smp cpus share coherent view memory scheme cpu additional hardware maintain constantly view memory avoiding stale views memory cpus cooperate program programs migrate cpu increase cooperating cpus handful schemes uniform memory access numa directory based coherence protocols introduced 1990s smp systems limited cpus numa systems built thousands processors initially multiprocessing built multiple discrete cpus boards implement interconnect processors processors interconnect implemented single chip technology chip level multiprocessing cmp single chip multi core processor recognized finer grain parallelism existed single program single program threads functions executed separately parallel earliest examples technology implemented input output processing direct memory access separate thread computation thread approach technology introduced 1970s systems designed multiple computation threads parallel technology multi threading approach considered cost effective multiprocessing components cpu replicated support opposed entire cpu execution units memory including caches shared multiple threads downside hardware support multithreading visible software supervisor software operating systems undergo larger support type implemented temporal multithreading thread executed stalled waiting data return external memory scheme cpu context switch thread ready switch cpu clock cycle ultrasparc t1 type simultaneous multithreading instructions multiple threads executed parallel cpu clock cycle decades 1970s 2000s focus designing performance purpose cpus achieving ilp technologies pipelining caches superscalar execution execution trend culminated power hungry cpus intel pentium 2000s cpu designers thwarted achieving performance ilp techniques growing disparity cpu operating frequencies main memory operating frequencies escalating cpu power dissipation esoteric ilp techniques cpu designers borrowed ideas commercial computing markets transaction processing aggregate performance multiple programs throughput computing performance single thread process reversal emphasis evidenced proliferation dual core processor designs notably intel designs resembling superscalar p6 architecture late designs processor families exhibit cmp including x86 64 opteron athlon 64 x2 sparc ultrasparc t1 ibm power4 power5 video game console cpus xbox 360 triple core powerpc design playstation core cell microprocessor data parallelism common increasingly paradigm processors computing deals data parallelism processors discussed earlier referred type scalar device implies vector processors deal multiple pieces data context instruction contrasts scalar processors deal piece data instruction flynn taxonomy schemes dealing data referred single instruction stream multiple data stream simd single instruction stream single data stream sisd utility creating processors deal vectors data lies optimizing tasks tend require operation sum dot product performed set data classic examples types tasks include multimedia applications images video sound types scientific engineering tasks scalar processor complete entire process fetching decoding executing instruction set data vector processor perform single operation comparatively set data instruction application require steps apply operation set data vector processors cray exclusively scientific cryptography applications multimedia shifted digital media form simd purpose processors shortly inclusion floating units started commonplace purpose processors specifications implementations simd execution units purpose processors simd specifications hp multimedia acceleration extensions max intel mmx integer proved impediment software developers applications benefit simd deal floating progressively developers refined remade designs common modern simd specifications isa notable modern examples include intel sse powerpc altivec vmx virtual cpus cloud computing involve subdividing cpu operation virtual central processing units vcpus host virtual equivalent physical machine virtual operating physical machines operating tandem managed computing memory resources form cluster systems dynamically add remove cluster resources host cluster level partitioned resources pools fine granularity performance performance speed processor depends factors clock rate multiples hertz instructions clock ipc factors instructions ips cpu perform reported ips values represented peak execution rates artificial instruction sequences branches realistic workloads consist mix instructions applications execute performance memory hierarchy greatly processor performance issue barely considered mips calculations standardized tests called benchmarks purposesuch specinthave developed attempt measure real effective performance commonly applications processing performance computers increased multi core processors essentially plugging individual processors called cores sense integrated circuit ideally dual core processor powerful single core processor practice performance gain 50 imperfect software algorithms implementation increasing cores processor dual core quad core increases workload handled processor handle numerous asynchronous events interrupts toll cpu overwhelmed cores floors processing plant floor handling task cores handle tasks cores adjacent single core handle specific capabilities modern cpus hyper threading uncore involve sharing actual cpu resources aiming increased utilization monitoring performance levels hardware gradually complex task response cpus implement additional hardware logic monitors actual cpu counters accessible software intel performance counter monitor technology 
5300	computerscience	data storage called storage memory technology consisting components recording media retain digital data core function fundamental component computers central processing unit cpu manipulates data performing computations practice computers storage hierarchy fast expensive storage options close cpu slower larger cheaper options fast volatile technologies lose data power referred memory slower persistent technologies referred storage von neumann architecture cpu consists main control unit arithmetic logic unit alu controls flow data cpu memory performs arithmetic logical operations data functionality memory perform fixed operations output result reconfigured change behavior acceptable devices desk calculators digital signal processors specialized devices von neumann machines memory store operating instructions data computers versatile hardware reconfigured program simply reprogrammed memory instructions tend simpler design simple processor successive computations build complex procedural modern computers von neumann machines data organization representation modern digital represents data binary numeral pictures audio form converted string bits binary digits common unit storage byte equal bits piece handled device storage space accommodate binary representation piece simply data complete shakespeare 1250 print stored megabytes 40 bits byte character data encoded assigning bit pattern character digit multimedia object standards exist encoding character encodings ascii image encodings jpeg video encodings mpeg adding bits encoded unit redundancy detect errors coded data correct based mathematical algorithms errors occur probabilities random bit flipping physical bit fatigue loss physical bit storage ability maintain distinguishable errors inter intra communication random bit flip random radiation typically corrected detection bit malfunctioning physical bits specific defective bit definition depends specific storage device typically automatically fenced device replaced functioning equivalent device corrected bit values restored cyclic redundancy check crc method typically communications storage error detection detected error retried data compression methods database represent string bits shorter bit string compress reconstruct original string decompress utilizes storage tens percents types data cost computation compress decompress analysis trade storage cost saving costs computations delays data availability deciding data compressed security reasons types data credit card encrypted storage prevent possibility unauthorized reconstruction chunks storage snapshots hierarchy storage storage hierarchy lesser bandwidth access latency cpu traditional division storage primary secondary tertiary storage guided cost bit contemporary usage memory semiconductor storage read write random access memory typically dram dynamic ram forms fast temporary storage storage consists storage devices media accessible cpu secondary tertiary storage typically hard disk drives optical disc drives devices slower ram volatile retaining contents powered historically memory called core memory main memory real storage internal memory volatile storage devices referred secondary storage external memory auxiliary peripheral storage primary storage primary storage main memory internal memory referred simply memory accessible cpu cpu continuously reads instructions stored executes required data actively operated stored uniform manner historically computers delay lines williams tubes rotating magnetic drums primary storage 1954 unreliable methods replaced magnetic core memory core memory remained dominant 1970s advances integrated circuit technology allowed semiconductor memory economically competitive led modern random access memory ram sized light expensive time types ram primary storage volatile lose powered diagram traditionally layers primary storage main capacity ram main memory indirectly connected central processing unit memory bus buses diagram address bus data bus cpu firstly sends address bus called memory address desired location data reads writes data memory cells data bus additionally memory management unit mmu device cpu ram recalculating actual memory address provide abstraction virtual memory tasks ram types primary storage volatile uninitialized start storage source read instructions start volatile primary storage startup program bios bootstrap read larger program volatile secondary storage ram start execute volatile technology purpose called rom read memory terminology confusing rom types capable random access types rom literally read updates slow memory erased portions written embedded systems programs rom programs rarely changed standard computers store rudimentary programs rom capacities secondary storage volatile costly primary storage secondary storage refer historically called secondary storage tertiary storage secondary storage secondary storage external memory auxiliary storage differs primary storage accessible cpu input output channels access secondary storage transfers desired data intermediate primary storage secondary storage lose data device powered down—it volatile unit typically magnitude expensive primary storage modern systems typically magnitude secondary storage primary storage data time modern computers hard disk drives secondary storage time access byte stored hard disk typically thousandths milliseconds contrast time access byte stored random access memory measured billionths nanoseconds illustrates access time difference distinguishes solid memory rotating magnetic storage devices hard disks typically times slower memory rotating optical storage devices dvd drives access times disk drives disk read write head reaches proper placement data rotates subsequent data track fast access reduce seek time rotational latency data transferred disks contiguous blocks data reside disk accessing blocks hide latency offers opportunity design efficient external memory algorithms sequential block access disks magnitude faster random access sophisticated paradigms developed design efficient algorithms based sequential block access reduce bottleneck multiple disks parallel increase bandwidth primary secondary memory examples secondary storage technologies flash memory usb flash drives floppy disks magnetic tape paper tape punched cards standalone ram disks iomega zip drives secondary storage formatted file format abstraction organize data files directories providing additional called metadata describing owner file access time access permissions operating systems concept virtual memory allowing utilization primary storage capacity physically primary memory fills moves chunks secondary storage devices swap file file retrieving retrievals slower secondary storage performance degraded tertiary storage tertiary storage tertiary memory level storage typically involves robotic mechanism mount insert dismount removable mass storage media storage device demands data copied secondary storage archiving rarely accessed slower secondary storage 5–60 1–10 milliseconds extraordinarily data stores accessed human operators typical examples include tape libraries optical jukeboxes read tertiary storage consult catalog database determine tape disc instruct robotic arm fetch medium drive finished reading robotic arm return medium library tertiary storage nearline storage online formal distinction online nearline offline storage spinning hard disk drives online storage spinning drives spin automatically massive arrays idle disks maid nearline storage removable media tape cartridges automatically loaded tape libraries nearline storage tape cartridges manually loaded offline storage storage storage data storage medium device control processing unit medium recorded secondary tertiary storage device physically removed disconnected inserted connected human operator access tertiary storage accessed human interaction storage transfer detached medium easily physically transported additionally disaster destroys original data medium remote location unaffected enabling disaster recovery storage increases security physically inaccessible data confidentiality integrity based attack techniques stored archival purposes rarely accessed storage expensive tertiary storage modern personal computers secondary tertiary storage media storage optical discs flash memory devices popular lesser extent removable hard disk drives enterprise magnetic tape predominant examples floppy disks zip disks punched cards characteristics storage storage technologies levels storage hierarchy differentiated evaluating core characteristics measuring characteristics specific implementation core characteristics volatility mutability accessibility addressability implementation storage technology characteristics worth measuring capacity performance volatility volatile memory retains stored constantly supplied electric power suitable term storage volatile memory requires constant power maintain stored fastest memory technologies volatile universal rule primary storage required fast volatile memory dynamic random access memory form volatile memory requires stored periodically reread rewritten refreshed vanish static random access memory form volatile memory dram exception refreshed power applied loses content power supply lost uninterruptible power supply window time primary volatile storage volatile storage batteries exhausted systems emc symmetrix integrated batteries maintain volatile storage minutes performance utilities hdparm sar measure performance linux security disk encryption volume virtual disk encryption andor file folder encryption storage devices hardware memory encryption intel architecture supporting total memory encryption tme granular memory encryption multiple mktme sparc m7 generation october 2015 storage media commonly data storage media semiconductor magnetic optical paper limited usage fundamental storage technologies flash arrays afas proposed development semiconductor semiconductor memory semiconductor based integrated circuits store semiconductor memory chip millions tiny transistors capacitors volatile volatile forms semiconductor memory exist modern computers primary storage exclusively consists dynamic volatile semiconductor memory dynamic random access memory century type volatile semiconductor memory flash memory steadily gained share storage computers volatile semiconductor memory secondary storage advanced electronic devices specialized computers designed 2006 notebook desktop manufacturers started flash based solid drives ssds default configuration options secondary storage addition traditional hdd magnetic magnetic storage patterns magnetization magnetically coated surface store magnetic storage volatile accessed read write heads recording transducers read write head covers surface head medium moved relative access data modern computers magnetic storage forms computers magnetic storage optical optical storage typical optical disc stores deformities surface circular disc reads illuminating surface laser diode observing reflection optical disc storage volatile deformities permanent read media formed write media reversible recordable read write media forms common magneto optical disc storage optical disc storage magnetic ferromagnetic surface stores read optically written combining magnetic optical methods magneto optical disc storage volatile sequential access slow write fast read storage tertiary storage 3d optical data storage proposed light induced magnetization melting magnetic photoconductors proposed speed energy consumption magneto optical storage paper paper data storage typically form paper tape punched cards store automatic processing purpose computers existed recorded punching holes paper cardboard medium read mechanically optically determine location medium solid contained hole technologies people marks paper easily read machine—these tabulating votes grading standardized tests barcodes object sold transported readable securely attached technologies redundancy bits malfunction resolved error detection correction mechanisms storage device malfunction requires solutions solutions commonly valid storage devices device mirroring typical raid designed handle single device failure raid devices failure occurs raid completely repaired failure data lost probability single failure typically probability failures raid time proximity probability squared multiplied database tolerate probability data loss raid replicated mirrored mirroring geographically remotely storage array handle recovery disasters disaster recovery network connectivity secondary tertiary storage connect utilizing networks concept pertain primary storage shared multiple processors lesser degree robotic storage quantities individual magnetic tapes optical magneto optical discs stored robotic tertiary storage devices tape storage field tape libraries optical storage field optical jukeboxes optical disk libraries analogy forms technology drive device referred autoloaders autochangers robotic access storage devices slots holding individual media picking robots traverse slots load media built drives arrangement slots picking devices performance characteristics storage expansion options adding slots modules drives robots tape libraries 100 000 slots provide terabytes petabytes optical jukeboxes solutions 000 slots robotic storage backups capacity archives imaging medical video industries hierarchical storage management archiving strategy automatically migrating unused files fast hard disk storage libraries jukeboxes files retrieved disk 
5309	computerscience	software simply software collection data instructions contrast physical hardware built performs science software engineering software processed systems programs data software includes programs libraries executable data online documentation digital media hardware software require realistically lowest programming level executable code consists machine language instructions supported individual processor—typically central processing unit cpu graphics processing unit gpu machine language consists binary values signifying processor instructions change preceding instruction change stored storage location computer—an observable user instruction invoke input output operations displaying screen causing visible user processor executes instructions instructed jump instruction interrupted operating personal computers smartphone devices servers processors multiple execution units multiple processors performing computation computing concurrent activity majority software written level programming languages easier efficient programmers closer natural languages machine languages level languages translated machine language compiler interpreter combination software written level assembly language strong correspondence machine language instructions translated machine language assembler history outline algorithm piece software written ada lovelace 19th century planned analytical engine created proofs engine calculate bernoulli proofs algorithm considered programmer theory software—prior creation computers today—was proposed alan turing 1935 essay computable application entscheidungsproblem decision eventually led creation academic fields science software engineering fields study software creation science theoretical study software turing essay science software engineering application engineering development software prior 1946 software programs stored memory stored program digital computers understand electronic computing devices rewired reprogram types virtually platforms software broad categories purpose domain based goal software divided programming tools programming tools software form programs applications software developers programmers coders hackers software engineers create debug maintain improve support software software written programming languages programming languages existence implementation consists set programming tools tools contained programs compilers debuggers interpreters linkers editors combined accomplish task form integrated development environment ide combines functionality contained tools ides invoking relevant individual tools implementing functionality ide easier specific tasks searching files project programming language implementations provide option individual tools ide topics architecture users programmers people modern purpose computers opposed embedded systems analog computers supercomputers layers software performing variety tasks platform application user software execution software loaded storage hard drive memory software loaded execute software involves passing instructions application software software hardware ultimately receives instruction machine code instruction carry operation—moving data carrying computation altering control flow instructions data movement typically memory involves moving data memory registers enable speed data access cpu moving data amounts costly avoided pointers data computations include simple operations incrementing variable data element complex computations involve operations data elements quality reliability software quality commercial software office windows linux software faulty buggy delete person crash unexpected faults errors called bugs discovered alpha beta testing software victim software aging progressive performance degradation combination unseen bugs bugs discovered eliminated debugged software testing software testing rarely—if ever—eliminates bug programmers program bug lubarsky law waterfall method software development separate testing teams typically employed approaches collectively termed agile software development developers testing demonstrate software users clients regularly feedback software tested unit testing regression testing methods manually commonly automatically code tested instance nasa extremely rigorous software testing procedures operating systems communication functions nasa based operations interact identify command programs enables people nasa check evaluate functional systems programs command software enable hardware engineering operations function easier license software license user software licensed environment software licenses grants rights copies proprietary software divided types source software hand software license granting recipient rights modify redistribute software patents software patents types patents theoretically supposed inventor exclusive time limited license detailed idea algorithm implement piece software component piece software ideas software user requirements supposed patentable concrete implementations actual software packages implementing patent supposed patentable either—the covered copyright automatically software patents supposed cover middle requirements concrete implementation countries requirement claimed physical requirements software patent held valid—although software effects physical requirement debate american copyright law applied aspects writing software code software patents controversial software industry people holding views sources controversy aforementioned split initial ideas patent honored practice patent lawyers—for patent aspect oriented programming aop purported claim rights programming tool implementing idea aop howsoever implemented source controversy innovation distinguished experts companies arguing software fast moving field software patents create vast additional litigation costs risks retard innovation debates software patents united argument american corporations patent lawyers primary beneficiaries allowing continue software patents design implementation design implementation software varies depending complexity software instance design creation word time designing developing notepad basic functionality software designed created aka coded written programmed integrated development environments ide eclipse intellij visual studio simplify process compile software applicable software created existing software application programming interface api underlying software gtk javabeans swing libraries apis categorized purpose instance spring framework implementing enterprise applications windows forms library designing graphical user interface gui applications word windows communication foundation designing services program designed relies api instance windows desktop application api functions windows forms library form1 close form1 close application apis programmer write functionalities companies oracle provide apis applications written software libraries numerous apis data structures hash tables arrays binary trees algorithms quicksort creating software software special economic characteristics design creation distribution economic person creates software called programmer software engineer software developer terms meaning informal terms programmer exist coder hacker word confusion illegally breaks systems industry organizations variety software companies programmers comprise software industry software profitable industry gates founder richest person 2009 ownership shares company responsible windows office software products market leaders respective product categories profit software organizations include software foundation gnu project mozilla foundation software standard organizations w3c ietf develop recommended software standards xml software interoperate standards software companies include google ibm tcs infosys wipro hcl technologies oracle novell sap symantec adobe systems sidetrade corel companies provide innovation 
5323	computerscience	science deals theoretical foundations computation practical techniques application science study processes interact data represented data form programs enables algorithms manipulate store communicate digital scientist studies theory computation practice designing software systems fields divided theoretical practical disciplines computational complexity theory highly abstract graphics emphasizes real applications programming language theory considers approaches description computational processes programming involves programming languages complex systems human–computer interaction considers challenges computers usable accessible history earliest foundations science predate modern digital machines calculating fixed numerical tasks abacus existed antiquity aiding computations multiplication division algorithms performing computations existed antiquity development sophisticated computing equipment wilhelm schickard designed constructed mechanical calculator 1623 1673 gottfried leibniz demonstrated digital mechanical calculator called stepped reckoner considered scientist theorist reasons documenting binary 1820 thomas colmar launched mechanical calculator industry released simplified arithmometer calculating machine strong reliable daily office environment charles babbage started design automatic mechanical calculator difference engine 1822 eventually idea programmable mechanical calculator analytical engine started developing machine 1834 sketched salient features modern crucial step adoption punched card derived jacquard loom infinitely programmable 1843 translation french article analytical engine ada lovelace wrote notes included algorithm compute bernoulli considered program 1885 herman hollerith invented tabulator punched cards process statistical eventually company ibm 1937 babbage impossible dream howard aiken convinced ibm kinds punched card equipment calculator business develop giant programmable calculator ascc harvard mark based babbage analytical engine cards central computing unit machine finished hailed babbage dream true 1940s powerful computing machines developed term refer machines human predecessors computers mathematical calculations field science broadened study computation science established distinct academic discipline 1950s 1960s science degree program cambridge diploma science university cambridge laboratory 1953 science degree program united formed purdue university 1962 practical computers applications computing distinct study rights initially believed impossible computers scientific field study late fifties gradually accepted academic population ibm brand formed science revolution time ibm short international business machines released ibm 704 ibm 709 computers exploration period devices ibm frustrating misplaced letter instruction program crash start process late 1950s science discipline developmental stages issues commonplace time improvements usability effectiveness computing technology modern society shift users technology usage experts professionals ubiquitous user base initially computers costly degree humanitarian aid efficient use—in professional operators adoption widespread affordable human assistance common usage contributions short history formal academic discipline science fundamental contributions science society—in electronics founding science current epoch human history called age driver revolution major leap human technological progress industrial revolution 1750–1850 ce agricultural revolution 8000–5000 bc contributions include etymology proposed 1956 term science appears 1959 article communications acm louis fein argues creation graduate school sciences analogous creation harvard business school 1921 justifying arguing management science subject applied interdisciplinary nature characteristics typical academic discipline efforts numerical analyst george forsythe rewarded universities create programs starting purdue 1962 science involve study computers alternative names proposed departments major universities prefer term computing science emphasize precisely difference danish scientist peter naur suggested term datalogy reflect scientific discipline revolves data data treatment involving computers scientific institution term department datalogy university copenhagen founded 1969 peter naur professor datalogy term scandinavian countries alternative term proposed naur data science distinct field data analysis including statistics databases days computing terms practitioners field computing suggested communications acm turingineer turologist flow charts applied meta mathematician applied epistemologist months journal comptologist suggested hypologist term computics suggested europe terms derived contracted translations expression automatic informazione automatica italian mathematics informatique french informatik german informatica italian dutch informática spanish portuguese informatika slavic languages hungarian pliroforiki πληροφορική informatics greek school informatics university edinburgh informatics linked applied computing computing context domain folkloric quotation attributed to—but formulated by—edsger dijkstra science computers astronomy telescopes design deployment computers systems considered province disciplines science study hardware considered engineering study commercial systems deployment called technology systems cross fertilization ideas disciplines science intersects disciplines philosophy cognitive science linguistics mathematics physics biology statistics logic science considered closer relationship mathematics scientific disciplines observers computing mathematical science science influenced mathematicians kurt gödel alan turing rózsa péter alonzo church continues interchange ideas fields mathematical logic category theory domain theory algebra relationship science software engineering contentious issue muddied disputes term software engineering science defined david parnas cue relationship engineering science disciplines claimed principal focus science studying properties computation principal focus software engineering design specific computations achieve practical goals separate complementary disciplines academic political funding aspects science tend depend department formed mathematical emphasis engineering emphasis science departments mathematics emphasis numerical orientation alignment computational science types departments tend efforts bridge field educationally philosophy scientists argued distinction separate paradigms science peter wegner argued paradigms science technology mathematics peter denning argued theory abstraction modeling design amnon eden rationalist paradigm treats science branch mathematics prevalent theoretical science employs deductive reasoning technocratic paradigm engineering approaches prominently software engineering scientific paradigm approaches artifacts empirical perspective natural sciences identifiable branches artificial intelligence fields discipline science spans range topics theoretical studies algorithms limits computation practical issues implementing computing systems hardware software csab called computing sciences accreditation board—which representatives association computing machinery acm ieee society ieee —identifies considers crucial discipline science theory computation algorithms data structures programming methodology languages elements architecture addition csab identifies fields software engineering artificial intelligence networking communication database systems parallel computation distributed computation human–computer interaction graphics operating systems numerical symbolic computation science theoretical science theoretical science mathematical abstract spirit derives motivation practical everyday computation aim understand nature computation consequence understanding provide efficient methodologies studies mathematical logic formal concepts methods considered theoretical science motivation drawn field computing data structures algorithms data structures algorithms study commonly computational methods computational efficiency theory computation peter denning fundamental question underlying science efficiently automated theory computation focused answering fundamental questions computed resources required perform computations effort answer question computability theory examines computational solvable theoretical models computation question addressed computational complexity theory studies time space costs approaches solving multitude computational famous millennium prize theory computation coding theory theory quantification developed claude shannon fundamental limits signal processing operations compressing data reliably storing communicating data coding theory study properties codes systems converting form fitness specific application codes data compression cryptography error detection correction network coding codes studied purpose designing efficient reliable data transmission methods programming language theory programming language theory branch science deals design implementation analysis characterization classification programming languages individual features falls discipline science depending mathematics software engineering linguistics active numerous dedicated academic journals formal methods formal methods mathematically based technique specification development verification software hardware systems formal methods software hardware design motivated expectation engineering disciplines performing mathematical analysis contribute reliability robustness design form theoretical underpinning software engineering safety security involved formal methods adjunct software testing avoid errors framework testing industrial tool support required cost formal methods development integrity life critical systems safety security utmost formal methods application broad variety theoretical science fundamentals logic calculi formal languages automata theory program semantics type systems algebraic data types software hardware specification verification systems architecture engineering architecture digital organization conceptual design fundamental operational structure focuses central processing unit performs internally accesses addresses memory field involves disciplines engineering electrical engineering selecting interconnecting hardware components create computers meet functional performance cost goals performance analysis performance analysis study flowing computers goals improving throughput controlling response time resources efficiently eliminating bottlenecks predicting performance anticipated peak loads concurrent parallel distributed systems concurrency property systems computations executing simultaneously interacting mathematical models developed concurrent computation including petri nets process calculi parallel random access machine model distributed extends idea concurrency multiple computers connected network computers distributed private memory exchanged achieve common goal networks branch science aims manage networks computers worldwide security cryptography security branch technology objective protecting unauthorized access disruption modification maintaining accessibility usability intended users cryptography practice study hiding encryption deciphering decryption modern cryptography science encryption decryption algorithms based computational complexity databases database intended organize store retrieve amounts data easily digital databases managed database management systems store create maintain search data database models query languages applications graphics visualization graphics study digital visual contents involves synthesis manipulation image data study connected fields science including vision image processing computational geometry heavily applied fields special effects video games human–computer interaction develops theories principles guidelines user interface designers create satisfactory user experiences desktop laptop mobile devices scientific computing scientific computing computational science field study concerned constructing mathematical models quantitative analysis techniques computers analyze solve scientific practical typically application simulation forms computation scientific disciplines artificial intelligence artificial intelligence aims required synthesize goal orientated processes solving decision environmental adaptation learning communication humans animals origins cybernetics dartmouth conference 1956 artificial intelligence cross disciplinary drawing expertise applied mathematics symbolic logic semiotics electrical engineering philosophy mind neurophysiology social intelligence popular mind robotic development main field practical application embedded component software development require computational understanding starting late 1940s alan turing question computers question remains effectively unanswered turing assess output scale human intelligence automation evaluative predictive tasks increasingly successful substitute human monitoring intervention domains application involving complex real data software engineering software engineering study designing implementing modifying software ensure quality affordable maintainable fast build systematic approach software design involving application engineering practices software software engineering deals organizing analyzing software—it deal creation manufacture software internal maintenance arrangement discoveries philosopher computing rapaport insights science programming paradigms programming languages accomplish tasks common programming paradigms include languages offer support multiple paradigms distinction matter style technical capabilities academia conferences events science conferences researchers public private sectors meet academic fields science prestige conference papers journal publications proposed explanation quick development field requires rapid review distribution task handled conferences journals education science taught schools 2014 code estimated percent schools united offered science education 2010 report association computing machinery acm science teachers association csta 14 50 education standards school science science education growing israel zealand south korea included science national secondary education curricula countries gender gap science education 2012 20 percent science degrees united awarded women gender gap western countries gap nonexistent 2011 women earned science degrees malaysia 2001 55 percent science graduates guyana women external links bibliography academic search enginesprofessional organizationsmisc 
5921	computerscience	color american english colour commonwealth english characteristic human visual perception color categories names red orange yellow green blue purple perception color derives stimulation cone cells human eye electromagnetic radiation visible spectrum color categories physical specifications color objects wavelength light reflected reflection governed object physical properties light absorption emission spectra defining color space colors identified numerically coordinates 1931 named global agreement internationally agreed color names mentioned red orange international commission illumination rgb color space instance color space human trichromacy cone cell types respond bands light wavelengths peaking 564–580 nm red medium wavelength peaking 534–545 nm green short wavelength light 420–440 nm blue color dimensions color spaces cmyk color model dimensions relates color colorfulness photo receptivity eyes species varies considerably humans correspondingly color perceptions compared honeybees bumblebees instance trichromatic color vision sensitive ultraviolet insensitive red papilio butterflies possess types photoreceptors pentachromatic vision complex color vision animal kingdom stomatopods mantis shrimp 12 spectral receptor types multiple dichromatic units science color called chromatics colorimetry simply color science includes study perception color human eye brain origin color materials color theory art physics electromagnetic radiation visible range commonly referred simply light physics color electromagnetic radiation characterized wavelength frequency intensity wavelength visible spectrum range wavelengths humans perceive 390 nm 700 nm visible light light sources emit light wavelengths source spectrum distribution intensity wavelength spectrum light arriving eye direction determines color direction spectral combinations color sensations formally define color class spectra rise color sensation classes vary species lesser extent individuals species class called metamers color question spectral colors familiar colors rainbow spectrum—named latin word appearance apparition isaac newton 1671—include colors produced visible light single wavelength pure spectral monochromatic colors table approximate frequencies terahertz wavelengths nanometers pure spectral colors wavelengths listed measured air vacuum refractive color table interpreted definitive list—the pure spectral colors form continuous spectrum divided distinct colors linguistically matter culture historical contingency people perceive colors common list identifies main bands red orange yellow green blue violet newton conception included seventh color indigo blue violet newton referred blue nearer cyan indigo simply dark blue indigo dye imported time intensity spectral color relative context viewed alter perception considerably intensity orange yellow brown intensity yellow green olive green color objects color object depends physics object environment characteristics perceiving eye brain physically objects color light leaving surfaces depends spectrum incident illumination reflectance properties surface angles illumination viewing objects reflect light transmit light emit light contributes color viewer perception object color depends spectrum light leaving surface host contextual cues color differences objects discerned independent lighting spectrum viewing angle color constancy generalizations physics drawn neglecting perceptual effects summarize color object complex result surface properties transmission properties emission properties contribute mix wavelengths light leaving surface object perceived color conditioned nature ambient illumination color properties objects nearby characteristics perceiving eye brain perception development theories color vision aristotle ancient scientists written nature light color vision newton light identified source color sensation 1810 goethe published comprehensive theory colors ascribed physiological effects color understood psychological 1801 thomas proposed trichromatic theory based observation color matched combination lights theory refined james clerk maxwell hermann von helmholtz helmholtz principles newton law mixture experimentally confirmed maxwell 1856 theory color sensations marvelous investigator achieved advance time remained unnoticed maxwell directed attention time helmholtz ewald hering developed opponent process theory color noting color blindness afterimages typically opponent pairs red green blue orange yellow violet black white ultimately theories synthesized 1957 hurvich jameson retinal processing corresponds trichromatic theory processing level lateral geniculate nucleus corresponds opponent theory 1931 international experts commission internationale éclairage cie developed mathematical color model mapped space observable colors assigned set color eye ability human eye distinguish colors based varying sensitivity cells retina light wavelengths humans trichromatic—the retina types color receptor cells cones type distinct responsive light perceived blue blue violet wavelengths 450 nm cones type called short wavelength cones cones blue cones types closely genetically chemically middle wavelength cones cones green cones sensitive light perceived green wavelengths 540 nm wavelength cones cones red cones sensitive light perceived greenish yellow wavelengths 570  nm light matter complex composition wavelengths reduced color components eye cone type adheres principle univariance cone output determined light falls wavelengths location visual field types cones yield signals based extent stimulated amounts stimulation called tristimulus values response curve function wavelength varies type cone curves overlap tristimulus values occur incoming light combination stimulate mid wavelength called green cones cones inevitably stimulated degree time set tristimulus values determines human color space estimated humans distinguish roughly colors type light sensitive cell eye rod response curve normal situations light bright stimulate cones rods play virtually role vision hand dim light cones understimulated leaving signal rods colorless response rods barely sensitive light red range conditions intermediate illumination rod response weak cone response result color discriminations accounted cone responses effects combined summarized kruithof curve describes change color perception pleasingness light function temperature intensity color brain mechanisms color vision level retina terms tristimulus values color processing organized dominant theory color vision proposes color transmitted eye opponent processes opponent channels constructed raw output cones red–green channel blue–yellow channel black–white luminance channel theory supported neurobiology accounts structure subjective color experience explains humans perceive reddish green yellowish blue predicts color wheel collection colors color channels measures extremes exact nature color perception processing status color feature perceived feature perception world—a type qualia—is matter complex continuing philosophical dispute nonstandard color perception color deficiency types person color sensing cones missing responsive normal incoming light person distinguish colors color deficient color blind term misleading color deficient individuals distinguish colors kinds color deficiency caused anomalies nature cones retina central cortical achromatopsia caused neural anomalies brain visual processing takes tetrachromacy humans trichromatic types color receptors animals tetrachromats types include species spiders marsupials birds reptiles species fish species sensitive axes color perceive color called dichromats monochromats distinction retinal tetrachromacy pigments cone cells retina compared trichromats functional tetrachromacy ability enhanced color discriminations based retinal difference women retinal tetrachromats phenomenon arises individual receives copies gene medium wavelength cones carried x chromosome genes person x chromosomes phenomenon occurs women scholarly report confirms existence functional tetrachromat synesthesia forms synesthesia ideasthesia perceiving letters grapheme–color synesthesia hearing musical sounds music–color synesthesia lead unusual additional experiences colors behavioral functional neuroimaging experiments demonstrated color experiences lead behavioral tasks lead increased activation brain regions involved color perception demonstrating reality similarity real color percepts albeit evoked standard route afterimages exposure strong light sensitivity range photoreceptors type desensitized light ceases continue signal colors observed period lack color component detected desensitized photoreceptors responsible phenomenon afterimages eye continue bright figure complementary color afterimage effects utilized artists including vincent van gogh color constancy artist limited color palette eye compensate gray neutral color color missing color wheel limited palette consisting red yellow black white mixture yellow black variety green mixture red black variety purple pure gray bluish trichromatic theory strictly true visual fixed adaptation reality visual constantly adapting environment compares colors scene reduce effects illumination scene illuminated light difference light sources stays reasonable range colors scene constant studied edwin land 1970s led retinex theory color constancy phenomena explained mathematically modeled modern theories chromatic adaptation color appearance ciecam02 icam dismiss trichromatic theory vision enhanced understanding visual adapts viewing environment color naming colors vary including hue shades red orange yellow green blue violet saturation brightness gloss color derived object color orange salmon abstract red 1969 study brent berlin paul kay pattern naming basic colors red red orange dark red blood red shades red languages basic color names distinguish dark cool colors bright warm colors colors distinguished red yellow green languages basic colors include black white red green blue yellow pattern holds set black gray white pink red orange yellow green blue purple brown azure distinct blue russian italian english associations individual colors variety cultural associations national colors individual color articles color symbolism field color psychology attempts identify effects color human emotion activity chromotherapy form alternative medicine attributed eastern traditions colors associations countries cultures colors demonstrated effects cognition researchers university linz austria demonstrated color red decreases cognitive functioning spectral colors color reproduction light sources mixtures wavelengths light sources effectively produce spectral color eye distinguish single wavelength sources displays reproduce spectral color orange combination red green light appears orange red green mixed proportions eye cones respond spectral color orange concept understanding perceived color monochromatic light source dominant wavelength identifies single wavelength light produces sensation light source dominant wavelength roughly akin hue color perceptions definition pure spectral colors desaturation purples mixtures red violet light spectrum examples spectral colors achromatic colors black gray white colors pink tan magenta light spectra color receptors human eye perceived color metamers color exemplified white light emitted fluorescent lamps typically spectrum narrow bands daylight continuous spectrum human eye difference light spectra light source reflected colors objects exploited fruit tomatoes intensely red human color perceptions generated mixture colors called primaries reproduce color scenes photography printing television media methods color spaces color terms primary colors method advantages disadvantages depending application mixture colors produce response identical spectral color close wavelengths cie 1931 color space chromaticity diagram straight edge mixing green light 530 nm blue light 460 nm produces cyan light desaturated response red color receptor green blue light mixture pure cyan light 485 nm intensity mixture blue green primaries color printing systems pure colors reproduced perfectly saturated spectral colors spectral colors matched natural scenes rarely saturated colors scenes approximated systems range colors reproduced color reproduction called gamut cie chromaticity diagram gamut color reproduction systems connected acquisition devices cameras scanners characteristics color sensors devices characteristics receptors human eye acquisition colors poor special jagged spectra caused unusual lighting photographed scene color reproduction tuned human normal color vision inaccurate observers color response devices problematic properly managed color stored transferred digital form color management techniques based icc profiles avoid distortions reproduced colors color management circumvent gamut limitations output devices assist finding mapping input colors gamut reproduced additive coloring additive color light created mixing light colors red green blue additive primary colors additive color systems projectors terminals subtractive coloring subtractive coloring dyes inks pigments filters absorb wavelengths light color surface displays visible spectrum absorbed remain visible pigments dye fabric fibers paint base paper particles scatter white light colors directions pigment ink wavelengths absorbed subtracted white light light color reaches eye light pure white source forms artificial lighting spectrum color red paint viewed blue light black red paint red scatters red components spectrum red paint illuminated blue light absorbed red paint creating appearance black object structural color structural colors colors caused interference effects pigments color effects produced material scored fine parallel lines formed parallel layers composed microstructures scale color wavelength microstructures spaced randomly light shorter wavelengths scattered preferentially produce tyndall colors blue sky rayleigh scattering caused structures wavelength light air molecules luster opals blue human irises microstructures aligned arrays array pits behave diffraction grating grating reflects wavelengths directions interference phenomena separating mixed white light light wavelengths structure layers reflect wavelengths transmit depending layers thickness structural color studied field film optics changeable structural colors iridescent structural color responsible blues greens feathers birds blue jay butterfly wings beetle shells variations pattern spacing rise iridescent peacock feathers soap bubbles films oil mother pearl reflected color depends viewing angle numerous scientists carried butterfly wings beetle shells including isaac newton robert hooke 1942 electron micrography advancing development products exploit structural color photonic cosmetics 
6513	computerscience	client–server model distributed application structure partitions tasks workloads providers resource service called servers service requesters called clients clients servers communicate network separate hardware client server reside server host runs server programs share resources clients client share resources requests server content service function clients initiate communication sessions servers await incoming requests examples applications client–server model email network printing wide client server role client server characteristic describes relationship cooperating programs application server component function service clients initiate requests services servers classified services provide server serves file server serves files shared resource server software electronic components programs data processors storage devices sharing resources server constitutes service client server determined nature application requires service functions single server file server software time serve data clients kinds requests client software communicate server software communication servers synchronize data called inter server server server communication client server communication service abstraction resources client concerned server performs fulfilling request delivering response client understand response based application protocol content formatting data requested service clients servers exchange messages request–response messaging pattern client sends request server returns response exchange messages inter process communication communicate computers common language follow rules client server expect language rules communication defined communications protocol client server protocols operate application layer application layer protocol defines basic patterns dialogue formalize data exchange server implement application programming interface api api abstraction layer accessing service restricting communication specific content format facilitates parsing abstracting access facilitates cross platform data exchange server receive requests distinct clients short period time perform limited tasks moment relies scheduling prioritize incoming requests clients accommodate prevent abuse maximize availability server software limit availability clients denial service attacks designed exploit server obligation process requests overloading excessive request rates bank customer accesses online banking services browser client client initiates request bank server customer login credentials stored database server accesses database server client application server interprets returned data applying bank business logic output server finally server returns result client browser display step sequence client–server message exchanges processes request returns data request response messaging pattern requests met sequence complete browser data customer illustrates design pattern applicable client–server model separation concerns history form client–server architecture remote job entry dating os 360 announced 1964 request job response output formulating client–server model 1960s 1970s scientists building arpanet stanford institute terms server host serving host user host host documents rfc rfc usage continued xerox parc mid 1970s context researchers terms design network programming language called decode encode language del purpose language accept commands user host return status reports user encoded commands network packets del capable server host received packets decoded returned formatted data user host del program user host received user client–server transaction development del 1969 united department defense established arpanet predecessor internet client host server host client host server host subtly meanings client server host connected network server client refer program server host user host refer computers host versatile multifunction clients servers programs host client–server model server devoted task serving word client occurs separating data function distributed file 1978 paper xerox parc scientists howard sturgis james mitchell jay israel authors careful define term readers explain distinguish user user network node client 1992 word server entered parlance centralized computing client–server model dictate server hosts resources client hosts enables purpose extend capabilities shared resources hosts centralized computing allocates resources computers computation offloaded client hosts central computers simpler client hosts relies heavily network resources servers infrastructure computation storage diskless node loads operating network terminal operating input output interface server contrast fat client personal resources rely server essential functions microcomputers decreased price increased power 1980s late 1990s organizations transitioned computation centralized servers mainframes minicomputers fat clients afforded individualized dominion resources complicated technology management 2000s applications matured rival application software developed specific microarchitecture maturation affordable mass storage advent service oriented architecture factors rise cloud computing trend 2010s comparison peer peer architecture addition client–server model distributed computing applications peer peer p2p application architecture client–server model server designed operate centralized serves clients computing power memory storage requirements server scaled appropriately expected load clients connecting simultaneously load balancing failover systems employed scale server implementation peer peer network computers peers pool resources communicate decentralized peers coequal equipotent nodes hierarchical network clients client–server client–queue–client network peers communicate peer peer networking algorithm peer peer communications protocol balances load peers modest resources share load node unavailable shared resources remain peers offer ideally peer achieve availability redundant peers resource downtime availability load capacity peers change protocol reroutes requests client server master slave regarded categories distributed peer peer systems 
6557	computerscience	control unit component central processing unit cpu directs operation processor tells memory arithmetic logic unit input output devices respond instructions processor directs operation units providing timing control signals resources managed directs flow data cpu devices john von neumann included control unit von neumann architecture modern designs control unit typically internal cpu role operation unchanged introduction functions control unit control unit digital circuitry contained processor coordinates sequence data movements processor units result routed data movements digital circuits units processor produces manipulated data expected software instruction loaded earlier memory controls conducts data flow processor additionally external control signals rest direct data instructions processor external destinations memory examples devices require cpus graphics processing units gpus receives external instructions commands converts sequence control signals applies data path implement sequence register transfer level operations precisely control unit sizable collection complex digital circuitry interconnecting directing execution units alu data buffers registers contained cpu cpu unit accept externally stored program single instruction based cpu instruction set decodes individual instruction sequential steps fetching addresses data registers memory managing execution data alu storing data registers memory controls coordinates cpu properly manipulate data design sequential steps based instruction range steps execution units enabled program set instructions memory configure cpu data flows manipulate data correctly instructions complete program require human intervention hardware instructions punch cards computations stored programmed computers cus invented detailed steps dictate cpu interconnecting hardware control signals enable disable cpu units selected selected unit proper execution required instruction operation produce desired manipulated data additionally orderly hardware coordination properly sequences control signals configures hardware units comprising cpu directing data moved changed stored cpu memory instruction objective depending type instruction entering sequential steps produced vary selection configuration cpu hardware utilized achieve instruction objective moving storing modifying data cpu feature efficiently software instructions control select configure cpu hardware eventually manipulates program data reason modern computers flexible universal running programs compared 1930s 1940s computers proper required rewiring hardware changing programs instruction decode process repeated program counter incremented stored program address instruction enters address programs advanced forms control units manage translation instructions data portion micro instructions manages scheduling micro instructions selected execution units data channeled changed execution unit function alu functions processors control unit broken additional units instruction unit scheduling unit handle scheduling retirement unit deal coming instruction pipeline control unit orchestrates main functions cpu carrying stored instructions software program directing flow data based instructions roughly likened traffic lights systematically control flow cars data locations traffic grid parks desired parking spot memory address register car occupants building execution unit changed car returns location controlled traffic grid hardwired control unit hardwired control units implemented combinational logic units featuring finite gates generate specific based instructions invoke responses hardwired control units faster microprogrammed designs design fixed architecture—it requires wiring instruction set modified changed architecture preferred reduced instruction set computers risc simpler instruction set controller approach operate speed flexibility complexity instruction set implement limited hardwired approach popular computers evolved control units cpus hoc logic difficult design https slideshare mobile prithvisharma9083 architecture 42377303 microprogram control unit idea microprogramming introduced maurice wilkes 1951 intermediate level execute program instructions microprograms organized sequence microinstructions stored special control memory algorithm microprogram control unit hardwired control unit flowchart description main advantage microprogram control unit simplicity structure outputs controller organized microinstructions easily replaced 
6559	computerscience	control store cpu control unit stores cpu microprogram accessed microsequencer types control store form diode arrays accessed address decoders implemented writable microcode stored form read memory called writable control store outputs register prevent race condition occurring register clocked clock signal running implementation control stores implemented diode array accessed address decoders form read memory tradition dates program timing matrix mit whirlwind 1947 modern vlsi processors matrices field transistors build rom pla structures control processor internal sequencer microcoded implementation ibm 360 variety techniques ccros card capacitor read storage model 30 tros transformer read storage model 40 bcros balanced capacitor read storage model 50 writable stores computers built writable microcode storing microcode rom hard wired logic microcode stored ram called writable control store wcs called writable instruction set wisc machines experimental laboratory prototypes wisc cpu 16 rtx 32p original 360 models ibm mainframe read control store 360 370 successor models loaded microprograms floppy disks dasd writable control store consisting ultra speed random access read write memory 370 architecture included facility called initial microprogram load iml impl invoked console power reset por processor tightly coupled multiprocessor complex permitted ibm easily repair microprogramming defects field majority control store stored rom vendors sell writable control store option allowing customers customize machine microprogram vendors ibm wcs microcode emulator features hardware diagnostics commercial machines writable microcode include burroughs systems 1970s 1980s xerox processors lisp machines xerox star workstations dec vax 8800 nautilus family symbolics machines 1980s dec pdp machines stored microcode sram chips 80 bits wide kwords typically loaded power cpu machines offered user programmable writable control stores option including hp 2100 dec pdp 11 60 varian data machines 70 series minicomputers mentec m11 mentec m1 stored microcode sram chips loaded power cpu data eclipse 8000 eagle sram writable control store loaded power cpu wcs offered advantages including ease patching microprogram hardware generations faster access roms provide user programmable wcs allowed user optimize machine specific purposes cpu designs compile instruction set writable ram flash cpu rekursiv processor imsys cjip fpga reconfigurable computing intel cpus x86 architecture family writable microcode starting pentium pro 1995 allowed bugs intel core microcode intel xeon microcode fixed software requiring entire chip replaced fixes installed linux freebsd windows motherboard bios timing latching avoiding race condition control store register outputs outputs sequencer determine address sort register prevent creation race condition designs bits register machine faster execution microinstruction delayed cycle register pipeline register execution microinstruction dependent result current microinstruction stable current microcycle outputs control store register historically eproms register bits chip clock signal determining clock rate cycle time clocks register 
6596	computerscience	vision interdisciplinary scientific field deals computers gain level understanding digital images videos perspective engineering seeks automate tasks human visual vision tasks include methods acquiring processing analyzing understanding digital images extraction dimensional data real produce numerical symbolic forms decisions understanding context transformation visual images input retina descriptions interface processes elicit action image understanding disentangling symbolic image data models constructed aid geometry physics statistics learning theory scientific discipline vision concerned theory artificial systems extract images image data forms video sequences views multiple cameras multi dimensional data medical scanner technological discipline vision seeks apply theories models construction vision systems domains vision include scene reconstruction event detection video tracking object recognition 3d pose estimation learning indexing motion estimation image restoration definition vision interdisciplinary field deals computers gain level understanding digital images videos perspective engineering seeks automate tasks human visual vision concerned automatic extraction analysis understanding single image sequence images involves development theoretical algorithmic basis achieve automatic visual understanding scientific discipline vision concerned theory artificial systems extract images image data forms video sequences views multiple cameras multi dimensional data medical scanner technological discipline vision seeks apply theories models construction vision systems history late 1960s vision universities pioneering artificial intelligence meant mimic human visual stepping stone endowing robots intelligent behavior 1966 believed achieved summer project attaching camera distinguished vision prevalent field digital image processing time desire extract dimensional structure images goal achieving scene understanding studies 1970s formed foundations vision algorithms exist including extraction edges images labeling lines polyhedral polyhedral modeling representation objects interconnections structures optical flow motion estimation decade studies based rigorous mathematical analysis quantitative aspects vision include concept scale space inference shape cues shading texture focus contour models snakes researchers realized mathematical concepts treated optimization framework regularization markov random fields 1990s previous topics active projective reconstructions led understanding camera calibration advent optimization methods camera calibration realized lot ideas explored bundle adjustment theory field photogrammetry led methods sparse reconstructions scenes multiple images progress dense stereo correspondence multi view stereo techniques time variations graph cut solve image segmentation decade marked time statistical learning techniques practice recognize images eigenface 1990s change increased interaction fields graphics vision included image based rendering image morphing view interpolation panoramic image stitching light field rendering resurgence feature based methods conjunction machine learning techniques complex optimization frameworks fields artificial intelligence artificial intelligence deal autonomous planning deliberation robotical systems navigate environment detailed understanding environments required navigate environment vision acting vision sensor providing level environment robot artificial intelligence vision share topics pattern recognition learning techniques vision artificial intelligence field science field engineering vision considered engineering solid physics solid physics field closely vision vision systems rely image sensors detect electromagnetic radiation typically form visible infra red light sensors designed quantum physics process light interacts surfaces explained physics physics explains behavior optics core imaging systems sophisticated image sensors require quantum mechanics provide complete understanding image formation process measurement physics addressed vision motion fluids neurobiology field plays role neurobiology study biological vision century extensive study eyes neurons brain structures devoted processing visual stimuli humans animals led coarse complicated description real vision systems operate solve vision tasks led subfield vision artificial systems designed mimic processing behavior biological systems levels complexity learning based methods developed vision neural deep learning based image feature analysis classification background biology strands vision closely study biological vision – strands closely tied human consciousness stored knowledge interpret integrate utilize visual field biological vision studies models physiological processes visual perception humans animals vision hand studies describes processes implemented software hardware artificial vision systems interdisciplinary exchange biological vision proven fruitful fields signal processing field vision signal processing methods processing variable signals typically temporal signals extended natural processing variable signals multi variable signals vision specific nature images methods developed vision counterpart processing variable signals multi dimensionality signal defines subfield signal processing vision fields mentioned views vision topics studied purely mathematical view methods vision based statistics optimization geometry finally field devoted implementation aspect vision existing methods realized combinations software hardware methods modified gain processing speed losing performance vision fashion ecommerce inventory management patent search furniture beauty industry distinctions fields closely vision image processing image analysis machine vision overlap range techniques applications cover implies basic techniques developed fields interpreted field names hand appears scientific journals conferences companies market belonging fields characterizations distinguish fields graphics produces image data 3d models vision produces 3d models image data trend combination disciplines explored augmented reality characterizations relevant universally accepted photogrammetry overlaps vision stereophotogrammetry stereo vision applications applications range tasks industrial machine vision systems inspect bottles speeding production artificial intelligence computers robots comprehend vision machine vision fields overlap vision covers core technology automated image analysis fields machine vision refers process combining automated image analysis methods technologies provide automated inspection robot guidance industrial applications vision applications computers pre programmed solve task methods based learning increasingly common examples applications vision include systems prominent application fields medical vision medical image processing characterized extraction image data diagnose patient detection tumours arteriosclerosis malign measurements organ dimensions blood flow supports medical providing structure brain quality medical treatments applications vision medical includes enhancement images interpreted humans—ultrasonic images ray images example—to reduce influence noise application vision industry called machine vision extracted purpose supporting manufacturing process quality control details final products automatically inspected defects measurement position orientation details picked robot arm machine vision heavily agricultural process remove undesirable food stuff bulk material process called optical sorting military applications largest vision obvious examples detection enemy soldiers vehicles missile guidance advanced systems missile guidance send missile specific target target selection missile reaches based locally acquired image data modern military concepts battlefield awareness imply sensors including image sensors provide rich set combat scene support strategic decisions automatic processing data reduce complexity fuse multiple sensors increase reliability application autonomous vehicles include submersibles land based vehicles robots wheels cars trucks aerial vehicles unmanned aerial vehicles uav level autonomy ranges autonomous unmanned vehicles vehicles vision based systems support driver pilot situations autonomous vehicles typically vision navigation knowing producing map environment slam detecting obstacles detecting task specific events uav forest fires examples supporting systems obstacle warning systems cars systems autonomous landing aircraft car manufacturers demonstrated systems autonomous driving cars technology reached level market ample examples military autonomous vehicles ranging advanced missiles uavs recon missions missile guidance space exploration autonomous vehicles vision nasa mars exploration rover esa exomars rover application include typical tasks application employ range vision tasks defined measurement processing solved variety methods examples typical vision tasks vision tasks include methods acquiring processing analyzing understanding digital images extraction dimensional data real produce numerical symbolic forms decisions understanding context transformation visual images input retina descriptions interface processes elicit action image understanding disentangling symbolic image data models constructed aid geometry physics statistics learning theory recognition classical vision image processing machine vision determining image data specific object feature activity varieties recognition literature algorithms tasks based convolutional neural networks illustration capabilities imagenet scale visual recognition challenge benchmark object classification detection millions images hundreds object classes performance convolutional neural networks imagenet tests close humans algorithms struggle objects ant stem flower person holding quill hand trouble images distorted filters increasingly common phenomenon modern digital cameras contrast kinds images rarely trouble humans humans tend trouble issues classifying objects fine grained classes breed dog species bird convolutional neural networks handle ease specialized tasks based recognition exist motion analysis tasks relate motion estimation image sequence processed produce estimate velocity image 3d scene camera produces images examples tasks scene reconstruction typically images scene video scene reconstruction aims computing 3d model scene simplest model set 3d sophisticated methods produce complete 3d surface model advent 3d imaging requiring motion scanning processing algorithms enabling rapid advances field grid based 3d sensing acquire 3d images multiple angles algorithms stitch multiple 3d images clouds 3d models image restoration aim image restoration removal noise sensor noise motion blur images simplest approach noise removal types filters pass filters median filters sophisticated methods assume model local image structures model distinguishes noise analysing image data terms local image structures lines edges controlling filtering based local analysis step level noise removal compared simpler approaches field inpainting methods organization vision highly application dependent systems stand applications solve specific measurement detection constitute larger design systems control mechanical actuators planning databases machine interfaces specific implementation vision depends functionality pre learned modified operation functions unique application typical functions vision systems image understanding systems image understanding systems ius include levels abstraction level includes image primitives edges texture elements regions intermediate level includes boundaries surfaces volumes level includes objects scenes events requirements topics representational requirements designing ius levels representation prototypical concepts concept organization spatial knowledge temporal knowledge scaling description comparison differentiation inference refers process deriving explicitly represented control refers process selects inference search matching techniques applied stage processing inference control requirements ius search hypothesis activation matching hypothesis testing generation expectations change focus attention certainty strength belief inference goal satisfaction hardware kinds vision systems basic elements power source image acquisition device camera ccd processor control communication cables wireless interconnection mechanism addition practical vision software display monitor vision systems spaces industrial illumination controlled environment completed includes accessories camera supports cables connectors vision systems visible light cameras passively viewing scene frame rates 60 frames slower vision systems image acquisition hardware active illumination visible light structured light 3d scanner thermographic camera hyperspectral imager radar imaging lidar scanner magnetic resonance image scan sonar synthetic aperture sonar hardware captures images processed vision algorithms process visible light images traditional broadcast consumer video systems operate rate 30 frames advances digital signal processing consumer graphics hardware speed image acquisition processing display real time systems hundreds thousands frames applications robotics fast real time video systems critically simplify processing algorithms combined speed projector fast image acquisition 3d measurement feature tracking realised egocentric vision systems composed wearable camera automatically pictures person perspective 2016 vision processing units emerging class processor complement cpus graphics processing units gpus role 
6804	computerscience	charge coupled device ccd device movement electrical charge device charge manipulated conversion digital achieved shifting signals stages device time ccds charge capacitive bins device shift allowing transfer charge bins ccd major technology digital imaging ccd image sensor pixels represented doped metal oxide semiconductors mos capacitors capacitors biased threshold inversion image acquisition allowing conversion incoming photons electron charges semiconductor oxide interface ccd read charges ccds technology light detection ccd image sensors professional medical scientific applications quality image data required applications exacting quality demands consumer professional digital cameras active pixel sensors complementary metal oxide semiconductors cmos quality advantage ccds enjoyed narrowed time history charge coupled device invented 1969 united bell labs willard boyle george smith lab semiconductor bubble memory boyle smith conceived design termed notebook charge bubble devices device shift register essence design ability transfer charge surface semiconductor storage capacitor concept principle bucket brigade device bbd developed philips labs late 1960s patent application ccds imaging assigned michael tompsett initial paper describing concept listed memory delay imaging device experimental device demonstrating principle row closely spaced metal squares oxidized silicon surface electrically accessed wire bonds ccd integrated circuit technology simple bit shift register device input output circuits demonstrate shift register crude pixel linear imaging device development device progressed rapid rate 1971 bell researchers led michael tompsett capture images simple linear devices companies including fairchild semiconductor rca texas instruments picked development programs fairchild effort led bell researcher gil amelio commercial devices 1974 linear 500 element device 100 100 pixel device steven sasson electrical engineer kodak invented digital camera fairchild ccd 1975 11 kennen reconnaissance satellite equipped charge coupled device array pixels technology imaging launched december 1976 leadership kazuo iwama sony started development effort ccds involving investment eventually sony managed mass produce ccds camcorders happened iwama died august 1982 subsequently ccd chip tombstone acknowledge contribution january 2006 boyle smith awarded national academy engineering charles stark draper prize 2009 awarded nobel prize physics ccd concept michael tompsett awarded 2010 national medal technology innovation pioneering electronic technologies including design development charge coupled device ccd imagers awarded 2012 ieee edison medal pioneering contributions imaging devices including ccd imagers cameras thermal imagers basics operation ccd capturing images photoactive region epitaxial layer silicon transmission region shift register ccd properly speaking image projected lens capacitor array photoactive region causing capacitor accumulate electric charge proportional light intensity location dimensional array scan cameras captures single slice image dimensional array video cameras captures dimensional picture scene projected focal plane sensor array exposed image control circuit capacitor transfer contents neighbor operating shift register capacitor array dumps charge charge amplifier converts charge voltage repeating process controlling circuit converts entire contents array semiconductor sequence voltages digital device voltages sampled digitized stored memory analog device analog video camera processed continuous analog signal feeding output charge amplifier pass filter processed fed circuits transmission recording processing detailed physics operation charge generation mos capacitors exposed light biased depletion region channel ccds silicon bias gate doped intrinsic gate biased positive potential threshold strong inversion eventually result creation channel gate mosfet takes time reach thermal equilibrium hours scientific cameras cooled temperature initially biasing holes pushed substrate mobile electrons surface ccd operates equilibrium called deep depletion electron–hole pairs generated depletion region separated electric field electrons surface holes substrate pair generation processes identified processes dark current generation add noise image limit total usable integration time accumulation electrons surface proceed image integration charge transferred thermal equilibrium reached maximum capacity depth typically 105 electrons pixel design manufacturing photoactive region ccd epitaxial layer silicon lightly doped boron grown substrate material buried channel devices type design utilized modern ccds surface silicon ion implanted phosphorus doped designation region defines channel photogenerated charge packets travel simon sze details advantages buried channel device layer 2–0 micron depleted accumulated photogenerated charge surface structure advantages transfer efficiency dark current reduced surface recombination penalty charge capacity factor 2–3 compared surface channel ccd gate oxide capacitor dielectric grown epitaxial layer substrate process polysilicon gates deposited chemical vapor deposition patterned photolithography etched separately phased gates lie perpendicular channels channels defined utilization locos process produce channel region channel stops thermally grown oxides serve isolate charge packets column channel stops produced polysilicon gates locos process utilizes temperature step destroy gate material channel stops parallel exclusive channel charge carrying regions channel stops doped region underlying providing barrier electrons charge packets discussion physics ccd devices assumes electron transfer device hole transfer clocking gates alternately reverse bias diode buried channel doped epitaxial layer doped ccd deplete p–n junction collect charge packets beneath gates—and channels—of device ccd manufacturing operation optimized process describes frame transfer ccd ccds manufactured heavily doped wafer manufacture device wafer method reportedly reduces smear dark current infrared red response method manufacture construction interline transfer devices version ccd called peristaltic ccd peristaltic charge coupled device charge packet transfer operation analogous peristaltic contraction dilation digestive peristaltic ccd additional implant charge silicon silicon dioxide interface generates lateral electric field gate additional driving force aid transfer charge packets architecture ccd image sensors implemented architectures common frame frame transfer interline distinguishing characteristic architectures approach shuttering frame device image active electronic shutter mechanical shutter type sensor image smears device clocked read frame transfer ccd silicon covered opaque mask typically aluminum image transferred image opaque storage region acceptable smear percent image read slowly storage region image integrating exposing active frame transfer devices typically require mechanical shutter common architecture solid broadcast cameras downside frame transfer architecture requires silicon real estate equivalent frame device costs roughly interline architecture extends concept step masks column image sensor storage device pixel shift occur transfer image storage shutter times microsecond smear essentially eliminated advantage imaging covered opaque strips dropping factor 50 percent effective quantum efficiency equivalent modern designs addressed deleterious characteristic adding microlenses surface device direct light opaque regions active microlenses bring factor 90 percent depending pixel size optical design choice architecture utility application tolerate expensive failure prone power intensive mechanical shutter interline device choice consumer snap shot cameras interline devices hand applications require light collection issues money power time frame device choice astronomers tend prefer frame devices frame transfer falls common choice factor issue interline devices addressed frame transfer chosen interline architecture illuminated device ccds grids pixels digital cameras optical scanners video cameras light sensing devices commonly respond 70 percent incident light meaning quantum efficiency 70 percent efficient photographic film captures percent incident light common types ccds sensitive infrared light infrared photography night vision devices lux lux video recording photography normal silicon based detectors sensitivity limited 1 μm consequence sensitivity infrared infrared remote controls appears ccd based digital cameras camcorders infrared blockers cooling reduces array dark current improving sensitivity ccd light intensities ultraviolet visible wavelengths professional observatories cool detectors liquid nitrogen reduce dark current thermal noise negligible levels frame transfer ccd frame transfer ccd imager imaging structure proposed ccd imaging michael tompsett bell laboratories frame transfer ccd specialized ccd astronomy professional video cameras designed exposure efficiency correctness normal functioning ccd astronomical divided phases exposure readout phase ccd passively collects incoming photons storing electrons cells exposure time passed cells read time readout phase cells shifted entire ccd shifted continue collect light shifting fast errors result light falls cell holding charge transfer errors referred vertical smear strong light source create vertical exact location addition ccd collect light read faster shifting requires faster readout faster readout introduce errors cell charge measurement leading noise level frame transfer ccd solves shielded light sensitive cells exposed light typically covered reflective material aluminium exposure time cells transferred rapidly hidden safe incoming light cells read speed deems correctly measure cells charge time exposed ccd collecting light delay occurs successive exposures disadvantage ccd cost cell basically doubled complex control electronics intensified charge coupled device intensified charge coupled device iccd ccd optically connected image intensifier mounted ccd image intensifier includes functional elements photocathode micro channel plate mcp phosphor screen elements mounted close mentioned sequence photons coming light source fall photocathode generating photoelectrons photoelectrons accelerated mcp electrical control voltage applied photocathode mcp electrons multiplied mcp accelerated phosphor screen phosphor screen finally converts multiplied electrons photons guided ccd fiber optic lens image intensifier inherently includes shutter functionality control voltage photocathode mcp reversed emitted photoelectrons accelerated mcp return photocathode electrons multiplied emitted mcp electrons phosphor screen light emitted image intensifier light falls ccd shutter closed process reversing control voltage photocathode called gating iccds called gateable ccd cameras extremely sensitivity iccd cameras enable single photon detection gateability major advantages iccd emccd cameras performing iccd cameras enable shutter times short 200 picoseconds iccd cameras price emccd cameras expensive image intensifier hand emccd cameras cooling cool emccd chip temperatures 170 cooling adds additional costs emccd camera yields heavy condensation application iccds night vision devices scientific applications electron multiplying ccd electron multiplying ccd emccd l3vision ccd product commercialized e2v l3ccd impactron ccd discontinued product offered texas instruments charge coupled device gain register shift register output amplifier gain register split stages stage electrons multiplied impact ionization avalanche diode gain probability stage register elements 500 gain single input electrons thousands output electrons reading signal ccd noise background typically electrons emccd noise superimposed thousands electrons single electron devices primary advantage negligible readout noise avalanche breakdown amplification photo charges 1973 george smith bell telephone laboratories emccds sensitivity intensified ccds iccds iccds gain applied gain register stochastic exact gain applied pixel charge impossible gains 30 uncertainty signal noise ratio snr halving quantum efficiency qe respect operation gain unity light levels quantum efficiency assumed pixel electron removes noise stochastic multiplication risk counting multiple electrons pixel single electron avoid multiple counts pixel coincident photons mode operation frame rates essential dispersion gain graph multiplication registers elements gains modelled equation 3where probability output electrons input electrons total multiplication register gain costs resolution emccds capable replacing iccds applications iccds advantage gated fast applications range gated imaging emccd cameras indispensably cooling thermoelectric cooling liquid nitrogen cool chip temperatures range cooling adds additional costs emccd imaging yield condensation application emccd cameras equipped permanent hermetic vacuum confining chip avoid condensation issues light capabilities emccds astronomy biomedical fields noise readout speeds variety astronomical applications involving light sources transient events lucky imaging faint stars speed photon counting photometry fabry pérot spectroscopy resolution spectroscopy types ccds broken field biomedical light applications including animal imaging single molecule imaging raman spectroscopy super resolution microscopy wide variety modern fluorescence microscopy techniques snr light conditions comparison traditional ccds iccds terms noise commercial emccd cameras typically clock induced charge cic dark current dependent extent cooling lead effective readout noise ranging 01 electrons pixel read improvements emccd technology led generation cameras capable producing cic charge transfer efficiency em gain times advances light detection lead effective total background noise 001 electrons pixel read noise floor unmatched light imaging device astronomy quantum efficiencies ccds quantum efficiency 100 count equals photon linearity outputs ease compared photographic plates variety reasons ccds rapidly astronomers uv infrared applications thermal noise cosmic rays alter pixels ccd array counter effects astronomers exposures ccd shutter closed average images shutter closed random noise developed dark frame average image subtracted shutter image remove dark current systematic defects dead pixels hot pixels ccd hubble space telescope highly developed series steps “data reduction pipeline” convert raw ccd data images ccd cameras astrophotography require sturdy mounts cope vibrations wind sources tremendous weight imaging platforms exposures galaxies nebulae astronomers technique auto guiding autoguiders ccd chip monitor deviations imaging chip rapidly detect errors tracking command mount motors correct unusual astronomical application ccds called drift scanning ccd fixed telescope behave tracking telescope follow motion sky charges ccd transferred read direction parallel motion sky speed telescope image larger region sky normal field view sloan digital sky survey famous technique survey quarter sky addition imagers ccds array analytical instrumentation including spectrometers interferometers color cameras digital color cameras bayer mask ccd square pixels filtered red blue green human eye sensitive green red blue result luminance collected pixel color resolution luminance resolution color separation reached ccd devices 3ccd dichroic beam splitter prism splits image red green blue components ccds arranged respond color professional video camcorders semi professional camcorders technique developments competing cmos technology cmos sensors beam splitters bayer filters increasingly popular video digital cinema cameras advantage 3ccd bayer mask device quantum efficiency light sensitivity aperture size 3ccd device light entering aperture captured sensor bayer mask absorbs proportion light falling ccd pixel scenes instance microscopy resolution bayer mask device enhanced microscanning technology process color sampling frames scene produced acquisitions sensor moved pixel dimensions visual field acquired consecutively elements mask sensitive red green blue components color eventually pixel image scanned color resolution channels equivalent resolutions red blue channels quadrupled green channel doubled sensor sizes sensors ccd cmos sizes image sensor formats sizes referred inch fraction designation 8″ 3″ called optical format measurement originates 1950s time vidicon tubes blooming ccd exposure eventually electrons collect bins brightest image overflow bin blooming structure ccd electrons flow easily direction vertical streaking anti blooming features built ccd reduce sensitivity light pixel drain structure james developed vertical anti blooming drain detract light collection reduce light sensitivity 
6829	computerscience	computing cache aue hardware software component stores data future requests data served faster data stored cache result earlier computation data stored cache hit occurs requested data cache cache occurs cache hits served reading data cache faster recomputing result reading slower data store requests served cache faster performs cost effective enable efficient data caches caches proven computing typical applications access data degree locality reference access patterns exhibit temporal locality data requested requested spatial locality data requested stored physically close data requested motivation inherent trade size speed larger resource implies physical distances tradeoff expensive premium technologies sram cheaper easily mass produced commodities dram hard disks buffering cache benefits bandwidth latency latency larger resource incurs latency access hundreds clock cycles modern 4 ghz processor reach dram mitigated reading chunks hope subsequent reads nearby locations prediction explicit prefetching guess future reads requests time correctly latency bypassed altogether throughput cache throughput underlying resource assembling multiple fine grain transfers larger efficient requests dram circuits served wider data bus program accessing bytes 32 bit address space served 128 bit chip data bus individual uncached byte accesses 16th total bandwidth 80 data movement memory addresses data reading larger chunks reduces fraction bandwidth required transmitting address operation hardware implements cache block memory temporary storage data central processing units cpus hard disk drives hdds frequently cache browsers servers cache pool entries entry data data store entry tag specifies identity data store entry cache client cpu browser operating access data presumed exist store checks cache entry tag matching desired data data entry situation cache hit browser program check local cache disk local contents url url tag content data percentage accesses result cache hits hit rate hit ratio cache alternative situation cache checked entry desired tag cache requires expensive access data store requested data retrieved typically copied cache ready access cache existing cache entry removed newly retrieved data heuristic select entry replace replacement policy popular replacement policy lru replaces entry entry accessed entry cache algorithm efficient caching algorithms compute hit frequency size stored contents latencies throughputs cache store larger amounts data latencies slower throughputs experienced hard drives networks efficient cpu cache writing policies writes data cache write data store timing write controlled write policy basic writing approaches write cache complex implement track locations written mark dirty writing store data locations written store evicted cache referred lazy write reason read write cache requires block replaced require memory accesses service write replaced data cache store retrieve data policies trigger data write client data cache explicitly notify cache write data data returned requester write operations decision write misses data loaded cache defined approaches write write policies write policies paired entities cache change data store cache stale alternatively client updates data cache copies data caches stale communication protocols cache managers data consistent coherency protocols examples hardware caches cpu cache memories close cpu operate faster larger main memory cpus 1980s caches cascaded levels modern embedded desktop server microprocessors types cache levels functions examples caches specific function cache cache translation lookaside buffer mmu gpu cache earlier graphics processing units gpus limited read texture caches introduced morton swizzled textures improve 2d cache coherency cache misses drastically affect performance mipmapping caching leverage 32 bit wider transfers texture data 4 bits pixel indexed complex patterns arbitrary uv coordinates perspective transformations inverse texture mapping gpus advanced gpgpu compute shaders developed progressively larger increasingly caches including instruction caches shaders exhibiting increasingly common functionality cpu caches gt200 architecture gpus feature l2 cache fermi gpu 768 kb level cache kepler gpu 1536 kb level cache maxwell gpu 2048 kb level cache caches grown handle synchronisation primitives threads atomic operations interface cpu style mmu dsps digital signal processors generalised earlier designs scratchpad memory fed dma modern dsps qualcomm hexagon include set caches cpu modified harvard architecture shared l2 split l1 cache cache translation lookaside buffer memory management unit mmu fetches table entries main memory specialized cache recording virtual address physical address translations specialized cache called translation lookaside buffer tlb software caches disk cache cpu caches managed hardware variety software manages caches cache main memory disk cache managed operating kernel disk buffer integrated hard disk drive misleadingly referred disk cache main functions write sequencing read prefetching repeated cache hits rare size buffer comparison drive capacity disk controllers board cache hard disk drive data blocks finally fast local hard disk drive cache held slower data storage devices remote servers cache local tape drives optical jukeboxes scheme main concept hierarchical storage management fast flash based solid drives ssds caches slower rotational media hard disk drives hybrid drives solid hybrid drives sshds cache browsers proxy servers employ caches store previous responses servers images caches reduce transmitted network stored cache reduces bandwidth processing requirements server helps improve responsiveness users browsers employ built cache internet service providers isps organizations caching proxy server cache shared users network form cache p2p caching files sought peer peer applications stored isp cache accelerate p2p transfers decentralised equivalents exist communities perform task p2p traffic corelli memoization cache store data computed demand retrieved store memoization optimization technique stores resource consuming function calls lookup table allowing subsequent calls reuse stored avoid repeated computation dynamic programming algorithm design methodology caching caches bind dns daemon caches mapping domain names ip addresses resolver library write operation common operating unreliable networks ethernet lan enormous complexity coherency protocol required multiple write caches communication unreliable instance caches client network file caches nfs smb typically read write network protocol simple reliable search engines frequently indexed cache google cached link search result prove server temporarily permanently inaccessible type caching storing computed memoization ccache program caches output compilation speed compilation runs database caching improve throughput database applications processing indexes data dictionaries frequently subsets data distributed cache networked hosts provide scalability reliability performance application hosts located spread geographical regions buffer cache semantics buffer cache totally fundamental differences intent process caching process buffering fundamentally caching realizes performance increase transfers data repeatedly transferred caching realize performance increase initial typically write transfer data item performance increase buffering occurring caching read caches data item fetched residing location subsequent reads data item realize performance increase virtue fetched cache faster intermediate storage data residing location write caches performance increase writing data item realized write data item virtue data item stored cache intermediate storage deferring transfer data item residing storage stage occurring background process contrary strict buffering caching process adhere distributed cache coherency protocol maintain consistency cache intermediate storage location data resides buffering hand typical caching implementations data item read written time effectively buffered write realizing performance increase application write originated additionally portion caching protocol individual writes deferred batch writes form buffering portion caching protocol individual reads deferred batch reads form buffering form negatively impact performance initial reads positively impact performance sum individual reads practice caching involves form buffering strict buffering involve caching buffer temporary memory location traditionally cpu instructions address data stored peripheral devices addressable memory intermediate stage additionally buffer feasible block data assembled disassembled required storage device data delivered produced buffer data transferred sequentially hard disk buffering increases transfer performance reduces variation jitter transfer latency opposed caching intent reduce latency benefits buffered data written buffer read buffer cache increases transfer performance increase possibility multiple transfers combine block main performance gain occurs chance data read cache multiple times written data read cache sole purpose reduce accesses underlying slower storage cache abstraction layer designed invisible perspective neighboring layers 
7519	computerscience	file comparison convolution correlation svg thumb 400px visual comparison convolution cross correlation autocorrelation operations involving function assuming height result shaded symmetry reason identical mathematics functional analysis convolution mathematical operation functions produce function expresses shape modified term convolution refers result function process computing convolution cross correlation real valued functions continuous discrete variable differs cross correlation reflected axis cross correlation   continuous functions cross correlation operator adjoint convolution operator convolution applications include probability statistics vision natural language processing image signal processing engineering differential equations convolution defined functions euclidean space periodic functions discrete time fourier transform defined circle convolved periodic convolution row 13 dtft § properties discrete convolution defined functions set integers generalizations convolution applications field numerical analysis numerical linear algebra design implementation finite impulse response filters signal processing computing inverse convolution operation deconvolution definition convolution written asterisk star defined integral product functions reversed shifted integral transform equivalent definition commutativity symbol represent time domain   context convolution weighted average function moment weighting simply shifted   weighting function emphasizes input function functions supported negative arguments integration limits truncated multi dimensional formulation convolution domain definition notation common engineering convention interpreted carefully avoid confusion   instance equivalent   equivalent derivations convolution describes output terms input class operations linear time invariant lti lti theory derivation convolution result lti constraints terms fourier transforms input output lti operation frequency components created existing modified amplitude phase output transform pointwise product input transform transform transfer function convolution theorem derivation property convolution conversely convolution derived inverse fourier transform pointwise product fourier transforms historical developments earliest convolution integral appeared alembert derivation taylor theorem recherches sur différents importants du système du monde published 1754 expression type sylvestre françois lacroix 505 book entitled treatise differences series volumes encyclopedic series traité du calcul différentiel du calcul intégral chez courcier paris 1797–1800 convolution operations pierre simon laplace jean baptiste joseph fourier siméon denis poisson term wide 1950s 60s prior faltung folding german composition product superposition integral carson integral appears 1903 definition unfamiliar operation composition products considered italian mathematician vito volterra 1913 circular convolution function periodic period functions exists convolution periodic identical arbitrary choice summation called periodic summation function periodic summation function circular cyclic convolution periodic summation replaced operation called periodic convolution discrete convolution complex valued functions defined set integers discrete convolution equivalently commutativity convolution finite sequences defined extending sequences finitely supported functions set integers sequences coefficients polynomials coefficients ordinary product polynomials convolution original sequences cauchy product coefficients sequences finite support set representing instance finite impulse response finite summation circular discrete convolution function periodic period functions exists convolution periodic identical summation called periodic summation function periodic summation function circular convolution durations limited interval   reduces common forms triangleq notation cyclic convolution denotes convolution cyclic integers modulo circular convolution arises context fast convolution fast fourier transform fft algorithm fast convolution algorithms situations discrete convolutions converted circular convolutions fast transforms convolution property implement computation convolution digit sequences kernel operation multiplication multi digit efficiently implemented transform techniques common fast convolution algorithms fast fourier transform fft algorithms circular convolution theorem circular convolution finite sequences fft sequence multiplying pointwise performing inverse fft convolutions type defined efficiently implemented technique conjunction extension discarding portions output fast convolution algorithms schönhage–strassen algorithm mersenne transform fast fourier transforms rings sequence extension shorter sequence fast circular convolution computationally efficient method decomposing sequence blocks convolving block faster algorithms overlap–save method overlap–add method hybrid convolution method combines block fir algorithms input output latency real time convolution computations domain definition convolution complex valued functions complex valued function defined defined decay rapidly infinity integral exist conditions existence convolution tricky blow infinity easily offset rapid decay question existence involve conditions compactly supported functions compactly supported continuous functions convolution exists compactly supported continuous function compactly supported locally integrable convolution defined continuous convolution defined functions locally square integrable supported interval form supported integrable functions convolution exists lebesgue integrable functions integrable consequence tonelli theorem true functions discrete convolution convolution             andin banach algebra convolution equality holds negative inequality implies convolution continuous bilinear map suitable spaces satisfy thenso convolution continuous bilinear mapping inequality convolution true contexts circle convolution preceding inequality sharp real exists constant optimal discovered 1975 stronger estimate true 19 weak norm convolution defines bilinear continuous map 20 21functions rapid decay addition compactly supported functions integrable functions functions rapid decay infinity convolved feature convolution decay rapidly ∗ decays rapidly rapidly decreasing functions convolution ∗ combined convolution commutes differentiation properties class schwartz functions closed convolution distributions circumstances define convolution function distribution distributions compactly supported function distribution ∗ smooth function defined distributional analogous tomore extend definition convolution unique associative lawremains valid distribution compactly supported distribution measures convolution borel measures ν bounded variation measure λ defined agrees convolution defined ν regarded distributions convolution l1 functions ν absolutely continuous respect lebesgue measure convolution measures satisfies version inequalitywhere norm total variation measure space measures bounded variation banach space convolution measures treated standard methods functional analysis apply convolution distributions properties algebraic properties convolution defines product linear space integrable functions product satisfies algebraic properties formally space integrable functions product convolution commutative associative algebra identity linear spaces functions space continuous functions compact support closed convolution form commutative associative algebras proof definitionchanging variable integration 28 result proof fubini theorem double integrals evaluated asiterated integrals proof linearity integral real complex 32 algebra functions possesses identity convolution lack identity typically major inconvenience collections functions convolution performed convolved delta distribution admit approximations identity linear space compactly supported distributions admit identity convolution δ delta distribution distributions inverse element convolution −1 defined bythe set invertible distributions forms abelian convolution proof integration integrable functions integral convolution space simply product integrals fubini theorem result holds assumed nonnegative measurable functions tonelli theorem differentiation variable dx derivative functions variables analogous holds partial derivative consequence convolution viewed smoothing operation convolution differentiable times total identities hold precise condition absolutely integrable absolutely integrable l1 weak derivative consequence convolution inequality instance continuously differentiable compact support arbitrary locally integrable function identities hold broadly sense tempered distributions compactly supported distribution schwartz function tempered distribution hand positive integrable infinitely differentiable functions continuous convolution discrete difference operator − satisfies analogous relationship convolution theorem convolution theorem thatwhere 47 denotes fourier transform 48 49 constant depends specific normalization fourier transform versions theorem hold laplace transform sided laplace transform transform mellin transform trivial titchmarsh convolution theorem translational equivariance convolution commutes translations meaning thatwhere τ translation function defined byif schwartz function τ convolution translated dirac delta function τ ∗ τ δ translation invariance convolution schwartz functions consequence associativity convolution conditions convolution translation invariant operation informally speaking holdsthus translation invariant operations represented convolution convolutions play role study time invariant systems lti theory representing function impulse response transformation precise version theorem quoted requires class functions convolution defined requires assuming addition continuous linear operator respect topology instance continuous translation invariant continuous linear operator convolution finite borel measure continuous translation invariant continuous linear operator ≤ ∞ convolution tempered distribution fourier transform bounded wit bounded fourier multipliers convolutions suitable endowed measure λ real complex valued integrable functions define convolution byit commutative typical locally compact hausdorff topological λ left haar measure unimodular convolution defined 53 preference convolution fixed function commutes left translation convention required consistency definition convolution measures left haar measure integral preferred locally compact abelian version convolution theorem holds fourier transform convolution pointwise product fourier transforms circle lebesgue measure fixed familiar operator acting hilbert space operator compact direct calculation adjoint convolution withby commutativity property cited normal commutes translation operators family operators consisting convolutions translation operators commuting family normal operators spectral theory exists orthonormal basis simultaneously diagonalizes characterizes convolutions circle havewhich precisely characters convolution compact multiplication operator basis viewed version convolution theorem discussed discrete finite cyclic convolution operators represented circulant matrices diagonalized discrete fourier transform result holds compact abelian matrix coefficients finite dimensional unitary representations form orthonormal basis peter–weyl theorem analog convolution theorem continues hold aspects harmonic analysis depend fourier transform convolution measures multiplicatively written topological ν finite borel measures convolution μ∗ν defined pushforward measure action written asfor measurable subset convolution finite measure total variation satisfiesin locally compact left haar measure λ ν absolutely continuous respect λ density function convolution μ∗ν absolutely continuous density function convolution separate density functions ν probability measures topological convolution μ∗ν probability distribution sum independent random variables respective distributions ν bialgebras ∇ ε η bialgebra comultiplication multiplication ∇ unit η counit ε convolution product defined endomorphism algebra ψ ∈ ψ functions respect algebraic structure convolution φ∗ψ defined compositionthe convolution appears notably definition hopf algebras bialgebra hopf algebra antipode endomorphism thatapplications convolution operations applications science engineering mathematics 
7597	computerscience	processor design design engineering task creating processor component hardware subfield engineering design development implementation electronics engineering fabrication design process involves choosing instruction set execution paradigm vliw risc microarchitecture vhdl verilog microprocessor design description manufactured employing semiconductor device fabrication processes die bonded chip carrier chip carrier soldered inserted socket printed circuit board pcb mode operation processor execution lists instructions instructions typically include compute manipulate data values registers change retrieve values read write memory perform relational tests data values control program flow details basics cpu design divided design components cpus designed performance markets require custom optimized application specific designs items achieve frequency power dissipation chip goals cpus designed performance markets lessen implementation burden acquiring items purchasing intellectual property control logic implementation techniques logic synthesis cad tools implement datapaths register files clocks common logic styles cpu design include unstructured random logic finite machines microprogramming common 1965 1985 programmable logic arrays common 1980s common implementation logic device types implement logic include cpu design project major tasks designing cpu core die helps shrink photomask shrink transistors die improves performance transistors switch faster reduces power wires parasitic capacitance reduces cost cpus fit wafer silicon releasing cpu size die cpu core cost levels integration scale integration chip additional cache multiple cpus components improving performance reducing cost complex electronic designs logic verification effort proving design doesnot bugs dominates project schedule cpu key cpu architectural innovations include register cache virtual memory instruction pipelining superscalar cisc risc virtual machine emulators microprogram stack topics variety proposed including reconfigurable logic clockless cpus computational ram optical computing performance analysis benchmarking benchmarking testing cpu speed examples include specint specfp developed standard performance evaluation corporation consumermark developed embedded microprocessor benchmark consortium eembc commonly metrics include tradeoffs optimizing metrics design techniques cpu faster performance watt performance dollar deterministic response worse vice versa markets markets cpus markets requirements cpus devices designed market inappropriate markets purpose computing vast majority revenues generated cpu sales purpose computing desktop laptop server computers commonly businesses homes market intel ia 32 64 bit version x86 64 architecture dominate market rivals powerpc sparc maintaining customer bases yearly hundreds millions ia 32 architecture cpus market growing percentage processors mobile implementations netbooks laptops devices countless types programs cpu designs targeted type application function demands wide range programs efficiently cpu designs advanced technically disadvantages costly power consumption processor economics 1984 performance cpus required develop scientific computing scientific computing niche market revenue units shipped government labs universities 1990 cpu design market mass market cpus organized clusters proven affordable main remaining active hardware design scientific computing speed data transmission systems connect mass market cpus embedded design measured units shipped cpus embedded machinery telephones clocks appliances vehicles infrastructure embedded processors sell volume billions units price purpose processors single function devices familiar purpose cpus embedded processor economics embedded cpu family largest total units shipped 8051 averaging units 8051 inexpensive design time roughly commercial intellectual property embedded larger chip silicon cost 8051 001 implementations 200 logic gates 0127 square millimeters silicon 2009 cpus produced arm architecture instruction set 32 bit instruction set arm architecture arm chip designed human time 32 bit parallax propeller microcontroller architecture chip designed people human time bit avr architecture avr microcontroller conceived designed students norwegian institute technology bit 6502 architecture mos technology 6502 chip designed 13 months people educational cpu design 32 bit berkeley risc risc architecture chips designed series students quarter sequence graduate courses design basis commercial sparc processor design decade student 004 class mit team—each team semester design build simple bit cpu 7400 series integrated circuits team students designed built simple 32 bit cpu semester undergraduate courses require team students design implement simple cpu fpga single 15 week semester multititan cpu designed effort considered design effort time 24 people contributed multititan project included designing building prototype cpu soft microprocessor cores embedded systems performance levels desired power consumption requirements processors totally implemented logic synthesis techniques synthesized processors implemented shorter time quicker time market 
7622	computerscience	complex instruction set cisc single instructions execute level operations load memory arithmetic operation memory store capable multi step operations addressing modes single instructions term retroactively coined contrast reduced instruction set risc umbrella term risc complex mainframe computers simplistic microcontrollers memory load store operations separated arithmetic instructions modern risc processor complex modern microcontroller cisc labeled instruction set complexity electronic circuits instructions complexity encoding patterns typical differentiating characteristic risc designs uniform instruction instructions employ strictly separate load store instructions examples instruction set architectures retroactively labeled cisc 360 architecture pdp 11 vax architectures data nova microprocessors microcontrollers labeled cisc academic publications include motorola 6800 6809 68000 families intel 8080 iapx432 x86 family zilog z80 z8 z8000 families national semiconductor 32016 ns320xx mos technology 6502 family intel 8051 family designs regarded borderline writers instance microchip technology pic labeled risc circles cisc 6502 6809 risc complex addressing modes arithmetic instructions operate memory contrary risc principles historical design context incitements benefits risc philosophy prominent architects bridge called semantic gap design instruction sets support level programming constructs procedure calls loop control complex addressing modes allowing data structure array accesses combined single instructions instructions typically highly encoded enhance code density compact nature instruction sets program sizes slow main memory accesses time 1960s onwards tremendous saving cost memory disc storage faster execution meant programming productivity assembly language level languages fortran algol microprocessors category programmed assembly language types critical applications instructions 1970s analysis level languages complex machine language implementations determined instructions improve performance instructions intended assembly language fit compiled level languages compilers updated advantage instructions benefits semantically rich instructions compact encodings modern processors performance segment caches central component opposed embedded systems fast complex expensive memories inherently limited size compact code beneficial fundamental reason main memories dynamic ram remain slow compared performance cpu core design issues designs achieved aim throughput cost allowed level language constructs expressed instructions observed instance versions complex architectures hardware lead situations improve performance complex instruction procedure enter instruction sequence simpler instructions reason architects microcode writers designed assembly language instructions including features implemented efficiently basic hardware instance effects conventional flags setting register memory location seldom ordinary duplicated internal buses external bus demand extra cycles time inefficient balanced performance designs highly encoded level instructions complicated decode execute efficiently limited transistor budget architectures required deal processor designer simpler typically slower solution based decode tables microcode sequencing time transistors components limited resource left components opportunity types performance optimizations risc idea circuitry performs actions defined microcode cisc processors processor reminiscent structure cpu designs 1970s rise ideas return simpler processor designs feasible cope expensive rom tables pla structures sequencing decoding retroactively risc labeled processor ibm 801 ibm watson center mid 1970s tightly pipelined simple machine originally intended internal microcode kernel engine cisc designs processor introduced risc idea larger public simplicity regularity visible instruction set easier implement overlapping processor stages pipelining machine code level level compilers pipelining level performance cisc supercomputers reduce instruction cycle time complications implementing limited component count wiring complexity feasible time internal microcode execution cisc processors hand pipelined depending design akin basic structure risc processors superscalar modern context complex variable encoding typical cisc architectures complicated feasible build superscalar implementation cisc programming model superscalar original pentium superscalar cyrix 6x86 examples frequent memory accesses operands typical cisc machine limit instruction level parallelism extracted code mediated fast cache structures modern designs measures inherently compact semantically rich instructions average performed machine code unit byte bit cisc risc processor advantage modern cache based implementation transistors logic plas microcode scarce resources speed cache memories limited maximum transistors complex transistor count cisc decoders grow exponentially total transistors processor majority typically caches tools enhanced technologies led implementations highly encoded variable designs load store limitations risc governs implementations architectures ubiquitous x86 designs microcontrollers embedded systems superscalar complexity modern x86 solved converting instructions micro operations dynamically issuing micro operations indirect dynamic superscalar execution pentium pro amd k5 examples simple superscalar design located complex decoders buffers speak worlds respects technique ibm z196 architecture microprocessors cisc risc terms terms cisc risc meaningful continued evolution cisc risc designs implementations highly tightly pipelined x86 implementations 486 designs intel amd cyrix ibm supported instruction predecessors achieved maximum efficiency simple x86 subset typical risc instruction set typical risc load store limitations intel p5 pentium generation superscalar version principles modern x86 processors typically decode split instructions dynamic sequences internally buffered micro operations helps execute larger subset instructions pipelined overlapping fashion facilitates advanced extraction parallelism code stream performance contrary popular simplifications academic texts ciscs microcoded complex instructions cisc catch term meaning load store risc architecture instructions complexity implementation instructions define cisc arithmetic instructions perform memory accesses compared bit cisc processor risc floating instruction complex cisc complex addressing modes 32 64 bit risc processors complex addressing modes bit cisc processors pdp pdp intel 80386 intel 4004 motorola 68000 mainframe burroughs b5000 vax zilog z80000 mos technology 6502 vary wildly sizes formats instructions types sizes registers data types hardware support operations scanning substring arbitrary precision bcd arithmetic transcendental functions bit addition subtraction cisc category load operate instructions load store memory contents instructions perform actual calculations instance pdp fixed instructions microcode cisc instructions powerpc 230 instructions vaxes complex internals register renaming reorder buffer risc minimal cisc instructions cisc combines memory access computation instructions 
8095	computerscience	donald ervin knuth born january 1938 american scientist mathematician professor emeritus stanford university author multi volume art programming contributed development rigorous analysis computational complexity algorithms systematized formal mathematical techniques process popularized asymptotic notation addition fundamental contributions branches theoretical science knuth creator tex typesetting metafont font definition language rendering modern family typefaces writer scholar knuth created cweb programming systems designed encourage facilitate literate programming designed mix mmix instruction set architectures knuth opposes granting software patents expressed opinion united patent trademark office european patent organisation biography life knuth born milwaukee wisconsin german americans ervin henry knuth louise marie bohning father jobs running printing company teaching bookkeeping milwaukee lutheran school donald student milwaukee lutheran school received academic accolades ingenious solving eighth grade entered contest letters ziegler giant bar rearranged create judges 500 list donald 500 winning contest prizes school received television candy bars schoolmates eat education 1956 knuth received a scholarship to institute technology western reserve university cleveland ohio joined beta chapter theta chi fraternity studying physics institute technology knuth introduced ibm 650 mainframes reading manual knuth decided rewrite assembly compiler code machine school believed 1958 knuth created program school basketball team win games assigned values players gauge probability approach newsweek cbs evening news reported knuth founding editors engineering science review national award technical magazine 1959 switched physics mathematics 1960 received bachelor science degree simultaneously master science degree special award faculty considered exceptionally outstanding 1963 mathematician marshall hall adviser earned phd mathematics california institute technology receiving phd knuth joined caltech faculty assistant professor accepted commission write book programming language compilers project knuth decided adequately treat topic developing fundamental theory programming art programming originally planned publish single book knuth developed outline book concluded required volumes cover subject published volume 1968 publishing volume art programming knuth left caltech accept employment institute defense analyses communications division situated princeton university campus performing mathematical cryptography support national security agency knuth left position stanford university faculty fletcher jones professor science emeritus writings knuth writer scientist knuth called father analysis algorithms art programming taocp 1970s knuth science totally field real identity standard publications lot papers coming simply wrong   motivations straight story badly told 2011 volumes volume series published concrete mathematics foundation science 2nd originated expansion mathematical preliminaries volume taocp published gates praised difficulty subject matter art programming stating programmer  send résumé read knuth author surreal mathematical novelette john conway set theory construction alternate simply explaining subject book seeks development mathematics knuth book prepare students original creative 1995 knuth wrote foreword book marko petkovšek herbert wilf doron zeilberger knuth occasional contributor language puzzles knuth delved recreational mathematics contributed articles journal recreational mathematics 1960s acknowledged major contributor joseph madachy mathematics vacation knuth appeared numberphile computerphile videos youtube discussed topics writing surreal email knuth religious beliefs addition writings science knuth lutheran author 16 bible texts illuminated examines bible process systematic sampling analysis chapter verse 16 book verse accompanied rendering calligraphic art contributed calligraphers leadership hermann zapf subsequently invited set lectures 16 project book scientist rarely talks published lectures god science opinion software patents academic scientific community knuth opposed policy granting software patents trivial solutions obvious expressed nuanced views nontrivial solutions interior method linear programming expressed disagreement united patent trademark office european patent organisation musings knuth informal lectures times stanford university titled musings visiting professor oxford university department science united kingdom honorary fellow magdalen college programming digital typesetting 1970s publishers taocp abandoned monotype favor phototypesetting knuth frustrated inability approach quality previous volumes typeset time digital typesetting created tex metafont literate programming developing tex knuth created methodology programming called literate programming believed programmers programs literature imagining main task instruct concentrate explaining human knuth embodied idea literate programming source weave tex file tangle pascal source file produce readable description program executable binary iteration cweb replaces pascal knuth program tex metafont published programs books personal life donald knuth married nancy jill carter 24 june 1961 graduate student california institute technology children john martin knuth jennifer sierra knuth chinese knuth chinese gao dena 1977 frances yao shortly week trip china 1980 volume art programming knuth explains embraced chinese growing programmers china time 1989 chinese atop journal science technology header knuth feel close chinese people speak language health concerns 2006 knuth diagnosed prostate cancer underwent surgery december stated bit radiation therapy  precaution prognosis pretty reported video autobiography humor knuth pay finder fee 56 typographical errors mistakes discovered books 256 pennies hexadecimal dollar 32 valuable suggestions article massachusetts institute technology technology review knuth reward checks computerdom prized trophies knuth sending real checks 2008 bank fraud error finder certificate deposit publicly listed balance fictitious bank san serriffe warned correspondent beware bugs code proved correct knuth published scientific article school magazine 1957 title potrzebie weights measures defined fundamental unit thickness mad 26 named fundamental unit force whatmeworry mad published article issue 33 june 1957 demonstrate concept recursion knuth intentionally referred circular definition definition circular art programming volume preface concrete mathematics paragraph tug 2010 conference knuth announced satirical xml based successor tex titled itex performed bell ringing support features arbitrarily scaled irrational units 3d printing input seismographs heart monitors animation stereophonic sound awards honors 1971 knuth recipient acm grace murray hopper award received awards including turing award national medal science john von neumann medal kyoto prize knuth elected distinguished fellow british society dfbcs 1980 recognition knuth contributions field science 1990 awarded academic title professor art programming revised professor emeritus art programming knuth elected national academy sciences 1975 1992 associate french academy sciences retired regular teaching stanford university finish art programming elected foreign royal society formemrs 2003 knuth elected fellow class fellows society industrial applied mathematics 2009 outstanding contributions mathematics norwegian academy science letters 2012 fellow american mathematical society awards honors include publications short list publications include art programming computers typesetting books hardcover books collected papers books 
10018	computerscience	edsger wybe dijkstra 11 1930 – august 2002 dutch systems scientist programmer software engineer science essayist pioneer computing science theoretical physicist training programmer mathematisch centrum amsterdam 1952 1962 university professor life dijkstra held schlumberger centennial chair sciences university texas austin 1984 retirement 1999 professor mathematics eindhoven university technology 1962–1984 fellow burroughs corporation 1973–1984 influential figures computing science founding generation dijkstra helped shape discipline engineering theoretical perspective fundamental contributions cover diverse computing science including compiler construction operating systems distributed systems sequential concurrent programming programming paradigm methodology programming language program design program development program verification software engineering principles graph algorithms philosophical foundations programming science papers source concepts standard science identified dijkstra bear names coined foremost opponent mechanizing view computing science refuted concepts science oftware engineering umbrella terms academic disciplines mid 1960s programming considered art craft scientific discipline harlan mills 1986 programming 1970s regarded private puzzle solving activity writing instructions program late 1960s programming crisis dijkstra academics industrial programmers advocated programming style improve quality programs dijkstra background mathematics physics driving forces acceptance programming scientific discipline coined phrase structured programming 1970s programming orthodoxy ideas structured programming helped lay foundations birth development professional discipline software engineering enabling programmers organize manage increasingly complex software projects bertrand meyer 2009 revolution views programming started dijkstra iconoclasm led movement structured programming advocated systematic rational approach program construction structured programming basis programming methodology including object oriented programming academic study concurrent computing started 1960s dijkstra 1965 credited paper field identifying solving mutual exclusion pioneers principles distributed computing foundational concurrency semaphores mutual exclusion deadlock deadly embrace finding shortest paths graphs fault tolerance stabilization contributions comprises pillars field distributed computing built shortly death 2002 received acm podc influential paper award distributed computing stabilization program computation annual award renamed dijkstra prize edsger dijkstra prize distributed computing honor prize sponsored jointly acm symposium principles distributed computing podc eatcs international symposium distributed computing disc recognizes individual larger influence principles distributed computing biography edsger dijkstra born rotterdam father chemist president dutch chemical society taught chemistry secondary school superintendent mother mathematician formal job dijkstra considered career law hoped represent netherlands united nations graduating school 1948 parents suggestion studied mathematics physics theoretical physics university leiden 1950s electronic computers novelty dijkstra stumbled career accident supervisor professor haantjes met adriaan van wijngaarden director computation department mathematical center amsterdam offered dijkstra job officially netherlands programmer march 1952 time dijkstra remained committed physics leiden days week increasing exposure computing focus shift recalled dijkstra married maria ria debets 1957 required marriage rites profession stated programmer unacceptable authorities profession time netherlands 1959 received phd university amsterdam thesis entitled communication automatic devoted description assembly language designed commercial developed netherlands x1 thesis supervisor van wijngaarden mathematisch centrum amsterdam 1952 1962 dijkstra mathematisch centrum amsterdam closely bram jan loopstra carel scholten hired build mode interaction disciplined decide interface hardware software writing programming manual hardware designers faithful contract dijkstra programmer write software nonexistent machine lessons learned experience documentation program debugging avoided careful design dijkstra formulated solved shortest path demonstration official inauguration armac 1956 but—because absence journals dedicated automatic computing—did publish result 1959 mathematical center dijkstra colleague developed compiler programming language algol 60 profound influence thinking programming scientific activity zonneveld completed implementation algol 60 compiler august 1960 compiler produced eindhoven university technology 1962 dijkstra moved eindhoven nuenen south netherlands professor mathematics department eindhoven university technology university separate science department culture mathematics department suit dijkstra build scientists collaborate solving unusual model mathematics department late 1960s built operating named university technische hogeschool eindhoven influenced designs subsequent operating systems software based paged virtual memory burroughs corporation dijkstra joined burroughs corporation company time production computers based innovative hardware architecture fellow august 1973 duties consisted visiting company centers times carrying burroughs facility study floor house nuenen dijkstra fellow burroughs corporation occasionally travelling branches united result reduced appointment university day week day tuesday day famous tuesday afternoon club seminar discussed colleagues scientific articles aspects – notation organisation presentation language content shortly moved 1984 university texas austin usa branch tuesday afternoon club emerged austin burroughs prolific output articles wrote 500 documents ewd series technical reports private circulation select university texas austin dijkstra accepted schlumberger centennial chair science department university texas austin 1984 dijkstra austin retirement november 1999 mark occasion celebrate seminal contributions computing science department sciences organized symposium 70th birthday 2000 dijkstra wife returned austin original house nuenen netherlands months live retire austin texas die netherlands dijkstra died august 2002 struggle cancer wife maria ria debets survived children marcus femke scientist rutger dijkstra scientific contributions impacts theoretical pioneer computing science dijkstra helped shape discipline engineering academic perspective papers source concepts standard science identified dijkstra bear names coined formulated solved 1994 survey professors science conducted list 38 influential scholarly papers field dijkstra author papers computing scientist included positions academia industry dijkstra numerous seminal contributions computing science including compiler construction operating systems concurrent programming concurrent computing distributed programming distributed computing programming paradigm methodology programming language program design program development program verification software engineering principles algorithm design philosophical foundations programming science addition dijkstra intensely teaching science relationships academic computing science software industry algorithmic dijkstra algorithmic graph algorithms concurrent algorithms distributed algorithms plays role computing science leslie lamport 2002 dijkstra started field concurrent distributed algorithms 1965 cacm paper solution concurrent programming control stated solved mutual exclusion lamport explains paper podc exists remains day influential paper field win podc influential paper award reflects artificial separation concurrent distributed algorithms–a separation existed dijkstra 1959 dijkstra published article note connexion graphs algorithm shortest path graph nodes called dijkstra algorithm impact 40 summarised article mikkel thorup undirected single source shortest paths positive integer weights linear time 1999 1959 theoretical developments sssp shortest paths directed undirected graphs based dijkstra algorithm dijkstra algorithm spf shortest path routing protocols ospf modifications dijkstra algorithm proposed authors heuristics reduce time shortest path search heuristic algorithms search algorithm peter hart nils nilsson bertram raphael stanford institute 1968 main goal reduce time reducing search space dijkstra shortest path mathematical center amsterdam 1956 programmer demonstrate capabilities called armac objective choose answer produced computing people understand designed shortest path algorithm 20 minutes aid paper pen implemented armac simplified transportation map 64 cities netherlands bits suffice represent city algorithm recalled interview published 2001 hardware engineers institute minimize wire connect pins panel machine solution discovered algorithm prim minimal spanning tree algorithm prim algorithm originally developed 1930 czech mathematician vojtěch jarník independently rediscovered republished robert prim 1957 dijkstra 1959 called djp algorithm 1961 dijkstra shunting yard algorithm method parsing mathematical expressions infix notation mathematisch centrum report produce output reverse polish notation rpn abstract syntax tree ast algorithm named shunting yard algorithm operation resembles railroad shunting yard shunting yard algorithm commonly implement operator precedence parsers 1962 1963 dijkstra proposed semaphore mechanism mutual exclusion algorithm processes generalization dekker algorithm published concurrent algorithm introduced algorithmic identified deadlock proposed banker algorithm prevents deadlock 1974 dijkstra stabilizing algorithms mutual exclusion dijkstra considered introduce demonstrate stabilization concept mid 1970s dijkstra authors introduced abstractions mutator collector study garbage collection mutator abstracts process performs computation including allocation storage cell collector process automatically reclaims garbage paper formalization tri color marking basic incremental garbage collection 1980s dijkstra carel scholten proposed dijkstra–scholten algorithm detecting termination distributed systems 1981 dijkstra developed smoothsort comparison based sorting algorithm variation heapsort compiler construction programming language dijkstra fan algol 60 team implemented compiler language closely involved algol 60 development realisation popularisation discussed peter naur article european phase development algol 60 proceedings acm sigplan conference history programming languages january 1978 dijkstra period 1958–1959 meetings culminated publication report defining algol 60 language dijkstra list 13 authors final report eventually left committee agree majority opinions mathematisch centrum amsterdam wrote jointly jaap zonneveld algol 60 compiler dijkstra zonneveld collaborated compiler agreed shave project completed zonneveld shaved shortly dijkstra beard rest life algol result collaboration american european committees algol 60 short algorithmic language 1960 algol family programming languages algol 58 inspired languages rise programming languages including bcpl pascal simula algol 60 sophisticatedly designed language hitherto unknown implementation challenges bjarne stroustrup notes algol60 implement major challenge algol 60 implementation time allocation management data 1960 dijkstra zonneveld recursive procedures executed time stack activation records efficiently access identifiers statically enclosing scopes called isplay algol 60 compiler support recursion employing method dijkstra short book primer algol 60 programming originally published 1962 standard reference language programming paradigm methodology programming 1950s 1960s recognized academic discipline mature sciences theoretical concepts coding systems programming professional activity understood late 1960s programming crisis software crisis term days computing science difficulty writing efficient programs required time software crisis rapid increases power complexity tackled increase complexity software software arose existing methods sufficient mark term software crisis coined attendees nato software engineering conference 1968 garmisch germany 1972 acm turing award lecture reference major software crisis machines magnitude powerful bluntly machines programming weak computers programming mild gigantic computers programming equally gigantic dijkstra programmed extensively machine code 1950s conclusion level languages frequent goto statement symptomatic poor structure 1968 wrote private paper statement published letter cacm editor niklaus wirth letter heading statement considered harmful introduced phrase considered harmful computing dijkstra argued programming statement goto level programming languages major source errors eliminated letter caused huge debate programming community equating programming elimination dijkstra refused mention debate statement article notes structured programming debate died programming languages provide alternatives programmers liberally dijkstra thesis departures linear control flow clearer allowed disciplined level structures statement loop methodology developed structured programming movement title 1972 book coauthored hoare ole johan dahl considered movement history programming structured programming programming orthodoxy 1970s bertrand meyer remarked revolution views programming started dijkstra iconoclasm led movement structured programming advocated systematic rational approach program construction structured programming basis programming methodology including object oriented programming structured programming regarded goto programming bertrand meyer notes book topic structured programming dijkstra dahl hoare structured programming control structures goto principal message programming considered scientific discipline based mathematical rigor programming paradigm structured programming – 1970s 1980s – influenced birth modern programming languages pascal modula ada fortran 77 version incorporates concepts structured programming released 1978 language considerably extended enhanced version popular structured programming language list based programming languages developed traditional structured language hybrid language pure object oriented programming language article structured programming retrospect prospect 1986 harlan mills writes edsger dijkstra 1969 structured programming article precipitated decade intense focus programming techniques fundamentally altered human expectations achievements software development decade intense focus programming regarded private puzzle solving activity writing instructions program decade programming regarded public mathematics based activity restructuring specifications programs challenge programs debugged programs expected debugging common wisdom sizable program error sizable programs errors detected expectations achievements universal inertia industrial practices established herald fundamental change software development book concise encyclopedia science 2004 edited edwin reilly notes major contributions structured programming twofold—the elevation programming technique art science demonstration carefully structured programs creative sufficient literary merit deserve read humans program design development software engineering dijkstra ideas programming methodology structured programming movement helped lay foundations birth development professional discipline software engineering software design development enabling programmers organize manage increasingly complex software projects late 1960s dijkstra discussed concept program families mid 1970s david parnas clarified idea apply software engineering principles rise structured programming movement led structured approaches applied software design techniques structured analysis structured design outgrowths structured programming concepts techniques ideas modular design principles modularity strengthened larry constantine concepts coupling minimized modules cohesion maximized modules david parnas techniques hiding abstract data types tools methods employing structured concepts developed structured design jackson structured programming ross structured analysis design technique sadt yourdon structured method structured systems analysis design method ssadm james martin technology engineering field software metrics considered direct influence structured programming movement software engineering 1970s separation concerns soc basic principles software engineering design principle separating program distinct sections addresses separate concern term separation concerns coined dijkstra 1974 paper role scientific operating 1960s dijkstra colleagues eindhoven designed implemented standing technische hogeschool eindhoven operating organised identified layers 1968 article subject foundation subsequent designs operating systems ieee society david alan grier writes trace idea building systems layers 1967 paper dutch scientist edsger dijkstra joint ieee society acm conference prior paper engineers struggled organize software examples programs electronic library society code era complicated difficult read hard modify challenging reuse 1967 paper dijkstra software constructed layers simple operating layers admitted realistic ideas argued larger project essential structuring idea layers control complexity mainstay software architecture forms apply hierarchy classes object oriented programming structure service oriented architecture soa soa application layering science articulated 2007 controlling complexity business systems distributed systems substantial internet dijkstra plan development layering called soa solution stack s3 s3 layers operational systems service components services business processes consumer actions integration quality control assurance architecture governance policies dijkstra organized design layers reduce complexity software term architecture software design considered glimpse software architecture introduced design principles vocabulary professional programmer levels abstraction programming layers semaphore cooperating sequential processes original paper operating reprinted 25th anniversary issue communications acm january 1983 introduction editor chief project initiated multilevel systems architecture continues day hierarchical modularity powerful approach organizing systems concurrent computing programming paper 1965 dijkstra introduced mutual exclusion processes discussed solution published concurrent algorithm notion standard critical introduced paper brinch hansen pioneer field concurrent computing considers dijkstra cooperating sequential processes 1965 classic paper concurrent programming brinch hansen notes dijkstra lays conceptual foundation abstract concurrent programming paper 1968 dijkstra published seminal paper cooperating sequential processes 70 essay originated field concurrent programming discussed notion mutual exclusion mutex criteria satisfactory solution satisfy redressed historical perspective left 1965 paper including correct solution mutual exclusion processes theodorus dekker dijkstra subsequently generalized dekker solution processes proposed synchronisation mechanism concurrent processes semaphore operations identified eadlock called deadly embrace proposed elegant banker algorithm prevents deadlock deadlock detection prevention perennial field concurrent programming dining philosophers concurrent algorithm design illustrate synchronization issues techniques resolving originally formulated 1965 dijkstra student exam exercise terms computers competing access tape drive peripherals tony hoare formulation sleeping barber attributed dijkstra book concurrent programming algorithms principles foundations michel raynal writes dijkstra 1965 introduced mutual exclusion concept process semaphore object notion weakest precondition guarded commands contributions synchronization catalog tricks domain computing science concepts mechanisms techniques applied domains process synchronization major topic science curriculum john mccormick 2011 notes notion concurrent program writing parallel programs regard underlying hardware introduced edsger dijkstra 1968 moti ben ari 1982 elegantly summed dijkstra idea sentences ‘concurrent programming programming notation techniques expressing potential parallelism solving synchronization communication implementation parallelism topic systems hardware software essentially independent concurrent programming concurrent programming abstract setting study parallelism bogged implementation details distributed computing dijkstra pioneers principles distributed computing citation dijkstra prize recognizes individual larger influence principles distributed computing papers considered established field dijkstra 1965 paper solution concurrent programming control correct solution mutual exclusion leslie lamport writes podc exists started field concurrent distributed algorithms paper stabilizing systems spite distributed control 1974 started field stabilization considered scientific examination fault tolerant systems dijkstra paper noticed leslie lamport invited talk acm symposium principles distributed computing podc 1983 report dijkstra stabilizing distributed systems lamport regard milestone fault tolerance fertile field formal specification verification 1970s dijkstra chief formal verification 1976 dijkstra published seminal book discipline programming method systematic development programs correctness proofs exposition guarded command language language reliance determinism weakest precondition semantics proposed development method considerable impact field day refinement calculus originally proposed ralph johan developed carroll morgan extension dijkstra weakest precondition calculus program statements modeled predicate transformers 1984 add support approach programming published jointly wim feijen introductory textbook students science book published dutch entitled een methode van programmeren english edition appeared 1988 method programming nature science programming opinions science programming widespread programming phrase rule thumb loop attributed claim programming inherently complex manage programmers harness trick abstraction dijkstra famous opponents engineering view computing science peter naur kristen nygaard dijkstra disliked term science science dijkstra deserves suggests called computing science computing technology dijkstra emphasize abstract mechanisms computing science master complexity expressing abstract nature computing science wrote humble programmer 1972 dijkstra wrote forget scientists business programs business design classes computations display desired behaviour dijkstra opposed inclusion software engineering umbrella academic science wrote economics miserable science software engineering doomed discipline doomed approach goal goal contradictory software engineering accepted charter program personality style computing science dijkstra character preface book discipline programming 1976 stated absence bibliography offer explanation apology articles books references approach references deplored researchers dijkstra chose preserve reliance university professor life dijkstra teaching required activity endeavor approach teaching unconventional lecturing style idiosyncratic lecturing pauses sentences attributed english dijkstra language pauses served feet regarded quick deep thinker engaged lecturing courses students austin science dealt presentation mathematical proofs semester photo students memorize names textbook exception preparation lecturing write proofs chalk blackboard overhead foils invited students ideas explored refused explore violated tenets assigned challenging homework study students solutions conducted final examinations orally week student examined dijkstra office exam lasted hours highly original assessing people capacity job vladimir lifschitz austin 1990 job interview dijkstra puzzle vladimir solved austin invented technology software dijkstra eschewed computers decades succumbed ut colleagues encouragement acquired macintosh mail browsing wide dijkstra wrote articles preferred rely typewriter montblanc pen dijkstra favorite writing instrument montblanc meisterstück fountain pen repeatedly pens displaced montblanc word processors believing write letter article rough drafts rewriting editing head putting pen paper mentioned physics student solve homework head walking streets leiden dijkstra publications written secretary care correspondence colleagues prepared festschrift sixtieth birthday published springer verlag trouble 61 contributors separately hand written letter dijkstra career characterized elegance economy prolific writer essayist dijkstra authored 300 papers written hand precise script essays parables fairy tales warnings comprehensive explanation pedagogical pretext mathematics science trip reports revealing author people visited habit paper circulate colleagues papers limited scientists love affair simplicity age mother guidance mother trigonometry difficult topic replied learn formulas required lines prove wrong track dijkstra famous wit eloquence remark question machines relevant question submarines swim advice promising researcher select topic dijkstra vocal criticism outspoken critical visionary opposed teaching basic humorous essays dijkstra fictional company served chairman company called mathematics company imagined commercialized production mathematical theorems software companies commercialized production programs invented activities challenges mathematics documented papers ewd series imaginary company produced proof riemann hypothesis difficulties collecting royalties mathematicians proved assuming riemann hypothesis proof trade secret company proofs rushed door company effort spent maintenance successful effort standard proof pythagoras theorem replaced 100 incompatible existing proofs dijkstra mathematics exciting miserable business conceived ewd 443 1974 describes fictional company 75 percent market share ewd manuscripts dijkstra habit carefully composing manuscripts fountain pen manuscripts called ewds dijkstra numbered ewd initials prefix dijkstra ewds started moved mathematical centre amsterdam eindhoven university technology technische hogeschool eindhoven eindhoven dijkstra experienced writer block dijkstra distributed photocopies ewd colleagues recipients photocopied forwarded copies ewds spread international science community topics science mathematics included trip reports letters speeches short articles span period 40 ewds appearing 1972 hand written rarely 15 consecutively numbered 1318 14 april 2002 science ewd reports simply ewds 1300 ewds scanned growing transcribed facilitate search online dijkstra archive university texas personal life dijkstra confidence remarkably modest lifestyle spartan wife house nuenen simple unassuming vcr mobile telephone movies contrast played piano austin concerts enthusiastic listener classical music dijkstra favorite composer mozart death dijkstra died august 2002 officials university texas death cancer influence recognition 1972 association computing machinery acm acknowledged dijkstra seminal contributions field awarding distinguished turing award citation award reads introduction awards ceremony tribute dijkstra sir tony hoare frs delivered dijkstra funeral march 2003 email distributed computing community acm president peter denning wrote dijkstra awards honors dijkstra awards honors distinguished fellowship british society bcs awarded bylaw bcs royal charter award approved 1969 election 1971 dijkstra occasion dijkstra 60th birthday 1990 department science utcs university texas austin organized day seminar honor speakers united europe scientists contributed articles edited book 2002 foundation japan recognized dijkstra pioneering contributions establishment scientific basis software creative basic software theory algorithm theory structured programming semaphores dijkstra alive receive notice award accepted family award ceremony death shortly death 2002 dijkstra received acm podc influential paper award distributed computing stabilization program computation annual award renamed dijkstra prize edsger dijkstra prize distributed computing honor dijkstra award outstanding academic achievement science loyola university chicago department science named edsger dijkstra 2005 award recognizes academic performance graduating science major selection based gpa major courses election department faculty department science utcs university texas austin hosted inaugural edsger dijkstra memorial lecture 12 october 2010 tony hoare emeritus professor oxford principal researcher speaker event lecture series generous grant schlumberger honor memory dijkstra publications books selected articles 
10931	computerscience	finite machine fsm finite automaton fsa plural automata finite automaton simply machine mathematical model computation abstract machine finite time fsm change response external inputs change called transition fsm defined list initial conditions transition finite machines types – deterministic finite machines deterministic finite machines deterministic finite machine constructed equivalent deterministic behavior machines observed devices modern society perform predetermined sequence actions depending sequence events simple examples vending machines dispense products proper combination coins deposited elevators sequence stops determined floors requested riders traffic lights change sequence cars waiting combination locks require input combination proper finite machine computational power models computation turing machine computational power distinction computational tasks turing machine fsm fsm memory limited fsms studied field automata theory coin operated turnstile simple mechanism modeled machine turnstile turnstile control access subways amusement park rides gate rotating arms waist height entryway initially arms locked blocking entry preventing patrons passing depositing coin token slot turnstile unlocks arms allowing single customer push customer passes arms locked coin inserted considered machine turnstile locked unlocked inputs affect putting coin slot coin pushing arm push locked pushing arm matter times input push stays locked putting coin – machine coin input – shifts locked unlocked unlocked putting additional coins additional coin inputs change customer pushing arms push input shifts locked turnstile machine represented transition table transitions based inputs machine outputs input turnstile machine represented directed graph called diagram represented node circle edges arrows transitions arrow labeled input triggers transition input change coin input unlocked represented circular arrow returning original arrow locked node black dot initial concepts terminology description status waiting execute transition transition set actions executed condition fulfilled event received audio listen radio radio receiving stimulus moving station stimulus moving track identical stimuli trigger actions depending current finite machine representations associate actions representations event table transition table types common representation combination current input complete action table footnotes fsm definition including actions tables virtual finite machine uml machines unified modeling language notation describing machines uml machines overcome limitations traditional finite machines retaining main benefits uml machines introduce concepts hierarchically nested orthogonal regions extending notion actions uml machines characteristics mealy machines moore machines support actions depend triggering event mealy machines entry exit actions transitions moore machines sdl machines specification description language standard itu includes graphical symbols actions transition sdl embeds basic data types called abstract data types action language execution semantic finite machine executable diagrams variants represent fsm figure usage addition modeling reactive systems finite machines including electrical engineering linguistics science philosophy biology mathematics logic finite machines class automata studied automata theory theory computation science finite machines modeling application behavior design hardware digital systems software engineering compilers network protocols study computation languages classification finite machines subdivided transducers acceptors classifiers sequencers acceptors recognizers acceptors called recognizers sequence detectors produce binary output indicating received input accepted fsm accepting accepting input received current accepting input accepted rejected rule input sequence symbols characters actions figure finite machine accepts string nice fsm accepting infinite set symbol sequences aka formal language called regular language finite machine accepts set set binary strings zeroes regular language fig set strings prime machine defining language string accepted machine rejected language accepted machine definition languages accepted fsms regular languages— language regular fsm accepts determining language accepted finite acceptor instance algebraic path problem—itself generalization shortest path graphs edges weighted elements arbitrary semiring start accepting automaton accepts string accepting appears fig deterministic finite automaton dfa detects binary input string 0s start 0s input s1 accepting machine finish accept binary string 0s including binary string 0s examples strings accepted dfa ε string 11 11… 00 010 1010 10110 classifiers classifier generalization finite machine acceptor produces single output termination terminal transducers transducers generate output based input actions control applications field computational linguistics control applications types distinguished generators sequencers generators subclass acceptor transducer types single letter input alphabet produce sequence output sequence acceptor transducer outputs determinism distinction deterministic dfa deterministic nfa gnfa automata deterministic automaton transition input deterministic automaton input lead transition powerset construction algorithm transform nondeterministic automaton complex deterministic automaton identical functionality finite machine called combinatorial fsm actions transition concept finite machines required convenient purely combinatorial form fsm suit design tools alternative semantics sets semantics represent machines tools modeling designing logic embedded controllers combine hierarchical machines current flow graphs truth tables language formalism set semantics charts harel original machines support hierarchically nested orthogonal regions actions transition actions mathematical model classification formal definitions deterministic deterministic fsms conventional partial function 13 defined combination 14 15 fsm 16 17 symbol 18 13 defined 16 error reject input definitions machines transforming machine algorithms default form require total functions finite machine computational power turing machine restricted head perform read operations left formal language accepted finite machine accepted restricted turing machine vice versa output function function input alphabet 31 definition corresponds mealy model modelled mealy machine output function depends 32 definition corresponds moore model modelled moore machine finite machine output function semiautomaton transition disregard output symbol moore machine 33 converted output equivalent mealy machine setting output function mealy transition labeling edge output symbol destination moore converse transformation straightforward mealy machine output labels incoming transitions edges split multiple moore machine incident output symbol optimization optimizing fsm finding machine minimum performs function fastest algorithm hopcroft minimization algorithm techniques include implication table moore reduction procedure additionally acyclic fsas minimized linear time implementation hardware applications digital circuit fsm built programmable logic device programmable logic controller logic gates flip flops relays hardware implementation requires register store variables block combinational logic determines transition block combinational logic determines output fsm classic hardware implementations richards controller medvedev machine output connected flip flops minimizing time delay flip flops output encoding power machines optimized minimize power consumption software applications concepts commonly build software applications finite machines finite machines compilers finite automata frontend programming language compilers frontend comprise finite machines implement lexical analyzer parser starting sequence characters lexical analyzer builds sequence language tokens literals identifiers parser builds syntax tree lexical analyzer parser handle regular context programming language grammar reading finite markov chain processes finite markov chain processes subshifts finite type 
11324	computerscience	dictionary computing foldoc online searchable encyclopedic dictionary computing subjects history foldoc founded 1985 denis howe hosted imperial college london 2015 updated supported imperial college department computing howe served editor chief dictionary inception visitors suggestions additions corrections articles sourcing dictionary incorporates resources jargon file covering computing topics availability gnu documentation license copyleft license incorporated content projects wikipedia 
12590	computerscience	grace brewster murray hopper december 1906 – january 1992 american scientist united navy rear admiral programmers harvard mark i pioneer programming invented compiler tools popularized idea machine independent programming languages led development cobol level programming language prior joining navy hopper attained mathematics yale university professor mathematics vassar college hopper attempted enlist navy war rejected 34 joined navy reserves hopper computing career 1944 harvard mark team led howard aiken 1949 joined eckert–mauchly corporation team developed univac eckert–mauchly developing compiler believed programming language based english compiler converted english terms machine code understood computers 1952 hopper finished program linker originally called compiler written 1954 eckert–mauchly chose hopper lead department automatic programming led release compiled languages flow matic 1959 participated codasyl consortium consulted hopper guide creating machine independent programming language led cobol language inspired idea language based english 1966 retired naval reserve 1967 navy recalled active duty retired navy 1986 consultant digital equipment corporation sharing computing experiences accomplishments naval rank referred amazing grace navy guided missile destroyer named cray xe6 hopper supercomputer nersc lifetime hopper awarded 40 honorary degrees universities college yale university renamed honor 1991 received national medal technology november 22 2016 posthumously awarded presidential medal freedom president barack obama life education hopper born york city eldest children parents walter fletcher murray mary campbell van horne scottish dutch descent attended west collegiate church grandfather alexander wilson russell admiral navy fought battle mobile bay civil war grace curious child lifelong trait age decided determine alarm clock dismantled alarm clocks mother realized limited clock preparatory school education attended hartridge school plainfield jersey hopper initially rejected admission vassar college age 16 scores latin admitted graduated phi beta kappa vassar 1928 bachelor degree mathematics physics earned master degree yale university 1930 1934 earned mathematics yale direction Øystein ore dissertation types irreducibility criteria published hopper teaching mathematics vassar 1931 promoted associate professor 1941 married york university professor vincent foster hopper 1906–1976 1930 divorce 1945 marry chose retain surname career war hopper enlist navy war rejected multiple reasons age 34 enlist weight height ratio denied basis job mathematician mathematics professor vassar college valuable war effort war 1943 hopper leave absence vassar sworn united navy reserve women volunteered serve waves exemption enlist navy minimum weight reported december trained naval reserve midshipmen school smith college northampton massachusetts hopper graduated class 1944 assigned bureau ships computation project harvard university lieutenant junior grade served mark programming staff headed howard aiken hopper aiken authored papers mark automatic sequence controlled calculator hopper request transfer regular navy war declined advanced age 38 continued serve navy reserve hopper remained harvard computation lab 1949 professorship vassar favor fellow navy contract harvard univac 1949 hopper employee eckert–mauchly corporation senior mathematician joined team developing univac hopper served univac director automatic programming development remington rand univac scale electronic market 1950 competitive processing mark hopper recommended development programming language english told computers understand english idea accepted published paper subject compilers 1952 1950s company remington rand corporation original compiler program compiler version 1952 operational link loader time referred compiler believed running compiler touch told computers arithmetic compiler translated mathematical notation machine code manipulating symbols fine mathematicians data processors symbol manipulators people symbol manipulators professional mathematicians data processors easier people write english statement symbols decided data processors write programs english computers translate machine code cobol language data processors subtract income tax pay write octal code kinds symbols cobol major language data processing 1954 hopper named company director automatic programming department released compiler based programming languages including math matic flow matic cobol spring 1959 experts industry government brought day conference conference data systems languages codasyl hopper served technical consultant committee employees served short term committee defined language cobol acronym common business oriented language language extended hopper flow matic language ideas ibm equivalent comtran hopper belief programs written language close english machine code languages close machine code assembly languages captured business language cobol ubiquitous business language committee cobol mount holyoke college alumnus jean sammet 1967 1977 hopper served director navy programming languages navy office systems planning promoted rank captain 1973 developed validation software cobol compiler cobol standardization program entire navy standards 1970s hopper advocated defense department replace centralized systems networks distributed computers user node access common databases located network developed implementation standards testing systems components programming languages fortran cobol navy tests conformance standards led convergence programming language dialects major vendors 1980s tests official administration assumed national bureau standards nbs national institute standards technology nist retirement navy attrition regulations hopper retired naval reserve rank commander age 60 1966 recalled active duty august 1967 month period indefinite assignment retired 1971 return active duty 1972 promoted captain 1973 admiral elmo zumwalt jr republican representative philip crane march 1983 segment 60 minutes championed joint resolution originating house representatives led promotion commodore special presidential appointment remained active duty mandatory retirement special approval congress effective november 1985 rank commodore renamed rear admiral hopper navy female admirals career spanned 42 admiral hopper retirement navy august 14 1986 celebration held boston commemorate retirement hopper awarded defense distinguished service medal combat decoration awarded department defense time retirement active duty commissioned officer united navy 79 months days retirement ceremony aboard commissioned ship united navy 188 months 23 days admirals william leahy chester nimitz hyman rickover charles stewart officers navy history serve active duty age leahy nimitz served active duty life promotions rank fleet admiral post retirement retirement navy hired senior consultant digital equipment corporation dec hopper initially offered job position rita yavinsky insisted applying position dec typical formal interview process letter yavinsky boss explaining alternating thursdays receiving salary access unlimited expense account exhibited museum computing pioneer proposal hopper hired time senior consultant position report yavinsky position hopper represented company industry forums serving industry committees obligations retained position death age 85 1992 hopper goodwill ambassador primary activity capacity lectured days computing career efforts vendors life easier users visited digital engineering facilities received standing ovation conclusion remarks serving officer wore navy dress uniform lectures allowed department defense regulation 32 cfr 53 accomplished building compiler training people em track stir em intervals forget chances death day 1992 hopper died sleep natural arlington virginia 85 age interred military honors arlington national cemetery legacy popular culture grace hopper celebration women computing legacy inspiring factor creation grace hopper celebration women computing held yearly conference designed bring career women computing forefront 
13729	computerscience	honda largest motorcycle manufacturer 1959 largest manufacturer internal combustion engines measured volume producing 14 internal combustion engines honda largest japanese automobile manufacturer 2001 honda eighth largest automobile manufacturer toyota volkswagen hyundai motor motors ford nissan fiat chrysler automobiles 2015 honda japanese automobile manufacturer release dedicated luxury brand acura 1986 core automobile motorcycle businesses honda manufactures garden equipment marine engines personal watercraft power generators products 1986 honda involved artificial intelligence robotics released asimo robot 2000 ventured aerospace establishment honda aero engines 2004 honda ha 420 hondajet production 2012 honda joint ventures china honda china dongfeng honda guangqi honda 2013 honda invested revenues development 2013 honda japanese automaker exporter united exporting 108 705 honda acura models importing 88 357 history life honda founder soichiro honda automobiles mechanic art shokai garage tuned cars entered races 1937 financing acquaintance kato shichirō honda founded tōkai seiki eastern sea precision machine company piston rings art shokai garage initial failures tōkai seiki contract supply piston rings toyota lost contract poor quality products attending engineering school graduating visiting factories japan understand toyota quality control processes 1941 honda mass produce piston rings acceptable toyota automated process employ unskilled wartime laborers tōkai seiki control ministry commerce industry called ministry munitions 1943 start war soichiro honda demoted president senior managing director toyota 40 stake company honda aided war effort assisting companies automating production military aircraft propellers relationships honda cultivated personnel toyota nakajima aircraft company imperial japanese navy instrumental postwar period 29 bomber attack destroyed tōkai seiki yamashita plant 1944 itawa plant collapsed 13 january 1945 mikawa earthquake soichiro honda sold salvageable remains company toyota war ¥450 000 proceeds honda technical institute october 1946 staff 12 shack built sold improvised motorized bicycles supply 500 stroke 50 cc tohatsu war surplus radio generator engines engines honda building tohatsu engine supplying customers attach bicycles honda type nicknamed bata bata sound engine 1949 honda technical institute liquidated 000 000 000 funds incorporate honda motor time honda hired engineer kihachiro kawashima takeo fujisawa indispensable business marketing expertise complement soichiro honda technical bent close partnership soichiro honda fujisawa lasted stepped october 1973 complete motorcycle frame engine honda 1949 type honda dream honda motor company grew short time largest manufacturer motorcycles 1964 production automobile honda t360 mini pick truck sale august 1963 powered 356 straight gasoline engine classified cheaper kei car tax bracket production car honda s500 sports car t360 production october 1963 chain driven rear wheels honda motorcycle origins decades honda expand product expanded operations exports numerous countries 1986 honda introduced successful acura brand american market attempt gain ground luxury vehicle market 1991 introduction honda nsx supercar aluminum monocoque vehicle incorporated mid engine v6 variable valve timing ceo tadashi kume succeeded nobuhiko kawamoto 1990 kawamoto selected shoichiro irimajiri oversaw successful establishment honda america manufacturing marysville ohio irimajiri kawamoto shared friendly rivalry honda health issues irimajiri resign 1992 death soichiro honda departure irimajiri honda outpaced product development japanese automakers caught guard truck sport utility vehicle boom 1990s toll profitability company japanese media reported 1992 1993 honda risk unwanted hostile takeover mitsubishi motors time larger automaker volume flush profits successful pajero diamante models kawamoto acted change honda corporate culture rushing market driven product development recreational vehicles generation odyssey refocusing numerous sedans coupes popular company engineers buying public shocking change honda kawamoto company successful participation 1992 season citing costs light takeover threat mitsubishi desire create environmentally friendly company image honda aircraft company established 1995 wholly owned subsidiary goal produce jet aircraft honda 23 february 2015 honda announced ceo president takanobu ito step replaced takahiro hachigo june additional retirements senior managers directors expected corporate profile divisions honda headquartered minato tokyo japan shares trade tokyo stock exchange york stock exchange exchanges osaka nagoya sapporo kyoto fukuoka london paris switzerland company assembly plants globe plants located china united pakistan canada england japan belgium brazil méxico zealand malaysia indonesia india philippines thailand vietnam turkey taiwan perú argentina july 2010 89 percent honda acura vehicles sold united built north american plants 82 percent earlier shields profits yen advance 15 dollar honda sales operating revenue geographical regions 2007american honda motor company based torrance california honda racing corporation hrc honda motorcycle racing division honda canada headquartered markham ontario originally planned located richmond hill ontario delays led manufacturing division honda canada manufacturing based alliston ontario honda created joint ventures honda siel cars hero honda motorcycles india guangzhou honda dongfeng honda china boon siew honda malaysia honda atlas pakistan japanese earthquake tsunami march 2011 honda announced plans halve production plants decision staff swindon plant day week manufacturer struggled source supplies japan 22 500 cars produced period fiscal 2018 honda reported earnings 534 annual revenue 138 250 increase previous fiscal cycle honda shares traded 32 share market capitalization valued 50 october 2018 products automobiles honda global lineup consists fit civic accord insight legend versions odyssey north america vehicle sold internationally proponent developing vehicles cater markets worldwide honda lineup varies country vehicles exclusive region examples honda odyssey minivan ridgeline honda light duty uni body pickup truck designed engineered north america produced exclusive models includes honda civic door hatchback sold europe honda automotive manufacturing ambitions traced 1963 honda t360 kei car truck built japanese market door roadster honda s500 introduced 1963 1965 honda built door commercial delivery van called honda l700 honda door sedan accord air cooled cylinder gasoline powered honda 1300 1969 civic hatchback gained wide popularity internationally door hatchback built honda n360 kei car adapted international sale n600 civic appeared 1972 replaced n600 sibling replaced air cooled n360 called honda life water cooled honda life represented honda efforts competing kei car segment offering sedan delivery van pick platforms shared chassis life stepvan approach initially commercial success appears influence vehicles passengers sitting engine cargo flat roof liftgate installed utilizing transversely installed engine wheel drive powertrain honda entered automobile manufacturing late 1960s japanese manufacturers toyota nissan cars wwii appears honda instilled sense japanese competitors mainstay products accord civic exception usa market 1993–97 passport vehicle exchange program isuzu subaru isuzu joint venture employed wheel drive powertrain implementation held honda tradition honda installed technologies products optional equipment standard anti lock brakes speed sensitive power steering multi port fuel injection 1980s desire approaches evident creation japanese luxury chain acura evident aluminum mid engined sports car honda nsx introduced variable valve timing technology honda calls vtec civic compact cars developed manufactured honda north america civic continuously running nameplate japanese manufacturer perennial rival toyota corolla introduced 1968 production civic accord prelude comprised honda vehicles sold north america 1990s model lineup expanded generational civic larger upmarket slots fit accord honda produces civic hybrid hybrid electric vehicle competes toyota prius produces insight 2008 honda increased global production meet demand cars hybrids emerging markets company shuffled production factories busy boost car output building minivans sport utility vehicles light truck sales fell entrance pickup segment light duty ridgeline truck motor trend magazine 2006 2006 redesigned civic car magazine honda rare double win motor trend honors reported honda plans increase hybrid sales japan 20 total sales fiscal 2011 14 previous united environmental protection agency fuel efficient cars 1984 2010 honda automakers models 2000–2006 honda insight combined 1986–1987 honda civic coupe hf combined 1994–1995 honda civic hatchback vx combined 2006– honda civic hybrid combined 2010– honda insight combined aceee rated civic gx greenest car america consecutive motorcycles honda largest motorcycle manufacturer japan started production 1955 peak 1982 honda manufactured motorcycles annually 2006 figure reduced 550 000 domestic competitors 2017 india largest motorcycle market honda india honda leading scooters segment 59 percent market share 1960s manufacturer honda broke japanese motorcycle market exporting advertising agency grey advertising honda created innovative marketing campaign slogan meet nicest people honda contrast prevailing negative stereotypes motorcyclists america tough antisocial rebels campaign suggested honda motorcycles everyman campaign hugely successful ads 1963 honda sold 90 000 motorcycles honda story archetype manufacturer entering market occupied highly dominant competitors story market entry subsequent huge success subject academic controversy competing explanations advanced explain honda strategy reasons success explanations 1975 boston consulting bcg commissioned government write report explaining british motorcycle industry competed japanese competitors report concluded japanese firms including honda sought scale production motorbikes benefit economies scale learning curve effects blamed decline british motorcycle industry failure british managers invest businesses profit economies scale scope explanation offered 1984 richard pascale interviewed honda executives responsible firm entry market opposed tightly focused strategy cost scale bcg accredited honda pascale entry market story miscalculation serendipity organizational learning – honda success adaptability hard staff term strategy honda initial plan entering compete motorcycles 300 cc honda motorcycles class suffered performance reliability ridden distances highways team scooters base san francisco attracted positive consumers fell selling super cub school honda strategy gary hamel prahalad 1989 creating concept core competencies honda argued honda success focus leadership technology internal combustion engines power weight ratio engines honda produced racing bikes technology expertise transferable mopeds honda entry motorcycle market 1960s study teaching introductory strategy business schools worldwide power equipment production started 1953 type engine prior motorcycle honda power equipment reached record sales 2007 4 million units 2010 fiscal 31 march figure decreased 7 million units cumulative production power products exceeded 85 units september 2008 honda power equipment includes engines honda engines powered entire 33 car starting field 2010 indianapolis 500 consecutive race engine retirements running memorial day classic 1980s honda developed gy6 engine motor scooters manufactured honda commonly chinese korean taiwanese light vehicles honda engine company built v8 passenger vehicles late 1990s company resisted considerable pressure american dealers v8 engine honda suvs acuras american honda reportedly sending dealer shipment v8 beverages silence honda considered starting v8 production mid 2000s larger acura sedans version nsx sports car dohc v6 engines vtec achieve power output future ventures american size truck suv segment acura honda brands cancelled late 2008 honda citing environmental worldwide economic conditions reasons termination project robots asimo honda development robotics program eleventh successive builds starting 1986 honda e0 moving ensuing honda series honda series weighing 54 kilograms standing 130 centimeters tall asimo resembles astronaut wearing backpack walk feet manner resembling human locomotion asimo humanoid robot ascend descend stairs independently human motions climbing stairs difficult mimic machine asimo demonstrated plunges staircase honda robot asimo project brings expertise create robot walks dances navigates steps 2010 marks honda developed machine capable reading user brainwaves asimo helmet covered electroencephalography infrared spectroscopy sensors monitor electrical brainwaves cerebral blood flow—signals alter human process user limited gestures robot fitted brain machine interface aircraft honda pioneered technology ha 420 hondajet manufactured subsidiary honda aircraft company levels reduced drag increased aerodynamics fuel efficiency reducing operating costs mountain bikes honda built downhill racing bicycle honda rn 01 sale public bike gearbox replaces standard derailleur bikes honda hired people pilot bike greg minnaar team team cross honda products atv honda builds terrain vehicles atv 420450r400ex300ex250rsolar cells honda solar cell subsidiary company honda soltec headquarters kikuchi gun kumamoto president ceo akio kazusa started sales japan film solar cells public industrial 24 october 2008 selling solar cells residential october 2007 honda announced october 2013 honda soltec cease business operation support existing customers spring 2014 subsidiary dissolved motorsports honda active motorsports motorcycle grand prix superbike racing automobile honda entered constructor time 1964 season german grand prix ronnie bucknum wheel 1965 addition richie ginther team scored honda belgian grand prix honda win mexican grand prix 1967 win italian grand prix john surtees driver 1968 schlesser killed honda ra302 french grand prix racing tragedy coupled commercial difficulties selling automobiles united prompted honda withdraw international motorsport learning 1965 honda powered brabhams dominated 1966 french championship hands jack brabham denny hulme european championship season f2 championship 1980s honda returned f2 supplying engines ron tauranac ralt team tauranac designed brabham cars earlier involvement extremely successful exercise john judd engine developments company produced turbo brabham honda engine indycar racing race 1988 bobby rahal pocono honda returned 1983 initially partner spirit team switching abruptly williams 1984 late 1980s 1990s honda powered cars consecutive constructors championships williamsf1 crown 1986 1987 honda switched allegiance 1988 partners mclaren title 1988 1989 1990 1991 honda withdrew 1992 mugen honda company maintained presence 1999 winning races ligier jordan grand prix honda debuted cart indycar series supplier 1994 engines competitive development company powered consecutive drivers championships 2003 honda transferred effort rival irl indycar series ilmor joint development 2006 2004 honda powered cars overwhelmingly dominated indycar series winning 14 16 indycar races including indianapolis 500 claimed indycar series manufacturers championship drivers championship rookie titles 2006 2011 honda lone engine supplier indycar series including indianapolis 500 2006 indianapolis 500 time indianapolis 500 history race single engine 2012 hpd constructed turbocharged engines indycar effort 1998 honda considered returning team project aborted death technical director harvey postlethwaite honda official engine supplier british american racing bar jordan grand prix honda bought stake bar team 2004 buying team outright 2005 constructor time 1960s honda 2006 hungarian grand prix driver jenson button announced december 2008 honda exiting 2008 global economic crisis team sold team principal ross brawn renamed brawn subsequently mercedes honda official team british touring car championship 2010 honda official announcement 16 2013 planned enter 2015 engine supplier mclaren 15 september 2017 winless campaign spanning seasons yielding single podium achieving finish mclaren announced divorce honda sign multi deal supply toro rosso junior team red bull racing motorcycles honda racing corporation hrc formed 1982 company combines participation motorcycle races development potential racing machines racing activities source creation leading edge technologies development honda motorcycles hrc contributes advancement motorcycle sports range activities include sales production racing motorcycles support satellite teams rider education programs soichiro honda race driver stay international motorsport 1959 honda entered motorcycles isle race prestigious motorcycle race powerful engines 1961 honda tune chassis mike hailwood claim grand prix victories 125 250 cc classes hailwood pick senior wins 1966 1967 honda race bikes sleek stylish design exotic engine configurations cylinder 22 000 rpm 125 cc bike cylinder 250 cc 297 cc bikes 1979 honda returned grand prix motorcycle racing monocoque framed stroke nr500 fim rules limited engines cylinders nr500 circular race track cylinders valves connecting rods provide sufficient valve compete dominant stroke racers honda accomplish time experiment failed 1982 season honda debuted stroke race bike ns500 honda 500 cc grand prix championship freddie spencer honda dominant marque motorcycle grand prix racing winning plethora level titles riders mick doohan valentino rossi honda head wins isle notched 227 victories solo classes sidecar including ian hutchinson clean sweep 2010 races outright lap record snaefell mountain held honda set 2015 john mcguinness average speed honda cbr1000rr bettered michael dunlop bmw s1000rr motocross championship honda claimed championships enduro championship honda captured titles stefan merriman 2003 mika ahola 2007 2010 motorcycle trials honda claimed championships belgian rider eddy lejeune electric alternative fuel vehicles compressed natural gas honda civic gx time purpose built natural gas vehicle ngv commercially honda civic gx appeared 1998 factory modified civic lx designed exclusively compressed natural gas car drives contemporary honda civic lx gasoline 2001 civic gx rated cleanest burning internal combustion engine environmental protection agency epa leased city los angeles 2005 honda started offering gx public factory trained dealers certified service gx fleets eligible purchase civic gx 2006 civic gx released york consumer car june 2015 honda announced decision phase commercialization natural gas powered vehicles focus development generation electrified vehicles hybrids plug electric cars hydrogen powered fuel cell vehicles 2008 honda sold 16 000 natural gas vehicles taxi commercial fleets flexible fuel honda brazilian subsidiary launched flexible fuel versions honda civic honda fit late 2006 brazilian flex fuel vehicles models blend hydrous ethanol e100 e20 e25 gasoline initially market preferences carmaker decided produce limited share vehicles flex fuel engines 33 percent civic production 28 percent fit models sale price flex fuel version respective gasoline versions 000 premium civic 650 fit flex fuel vehicles sold brazil tag price gasoline versions july 2009 honda launched brazilian market flexible fuel car honda city months 2006 flex fuel models sold 427 cars 546 gasoline powered automobiles jumping 41 990 flex fuel cars 2007 reaching 93 361 2008 success flex versions 2009 percent honda automobile production brazilian market flexible fuel percentage gasoline version produced brazil exports march 2009 honda launched brazilian market flex fuel motorcycle produced brazilian subsidiary moto honda da amazônia 150 titan mix sold 700 hybrid electric late 1999 honda launched commercial hybrid electric car sold market honda insight month introduction toyota prius initially sold 20 000 generation insight produced 2000 2006 fuel economy epa highway rating fuel efficient mass produced car time total global sales insight amounted 18 000 vehicles cumulative global sales reached 100 000 hybrids 2005 200 000 2007 honda introduced generation insight japan february 2009 released markets 2009 market april 2009 19 800 door hatchback expensive hybrid 2002 honda selling honda civic hybrid 2003 model market honda accord hybrid offered model 2005 2007 sales honda japan february 2010 honda hybrid electric car market honda producing 200 000 hybrids japan sales fit hybrid japan october 2010 time lowest price gasoline hybrid electric vehicle sold country european version called honda jazz hybrid released 2011 2011 honda launched hybrid models japan fit shuttle hybrid freed hybrid freed spike hybrid honda cumulative global hybrid sales passed unit milestone september 2012 12 11 months sales generation insight japan november 1999 total 187 851 hybrids sold worldwide 2013 158 696 hybrids months 2014 honda sold 35 million hybrids worldwide hydrogen fuel cell takanezawa japan 16 june 2008 honda motors produced assembly fcx clarity hybrid hydrogen fuel cell vehicle efficient gas electric hybrid vehicle fcx clarity combines hydrogen oxygen ordinary air generate electricity electric motor july 2014 honda announced production honda fcx clarity 2015 model vehicle emit pollutants products heat water fcx clarity advantage gas electric hybrids internal combustion engine propel gas electric hybrid lithium ion battery assist fuel cell acceleration capture energy regenerative braking improving fuel efficiency lack hydrogen filling stations developed countries production volumes honda release vehicle 150 california market infrastructure fueling vehicle stations limited building stations expensive california air resources board carb granted 8 million h2 fueling stations costing 7 million usd honda views hydrogen fuel cell vehicles term replacement piston cars battery cars plug electric vehicles electric honda ev introduced 1997 result carb emissions vehicle mandate leasing california ev battery electric vehicle major automaker lead–acid batteries ev electric range 276 units sold production 1999 electric honda fit ev introduced 2012 range electric car launched retail customers july 2012 initial availability limited california oregon production limited 100 units total 007 units leased september 2014 fit ev released japan leasing local government corporate customers august 2012 availability japanese market limited 200 units july 2014 honda announced production fit ev 2015 model honda accord plug hybrid introduced 2013 electric range sales january 2013 plug hybrid california york total 835 units sold september 2014 accord phev introduced japan june 2013 leasing corporations government agencies marketing japanese marketing starting 1978 honda japan decided diversify sales distribution channels created honda verno sold established products content standard equipment sporting nature establishment honda verno coincided sports compact honda prelude honda vigor honda ballade honda quint honda verno stores approach implemented efforts rival japanese automakers toyota nissan sales progressed honda created sales channels called honda clio 1984 honda primo 1985 honda clio chain sold products traditionally honda dealerships 1978 honda accord honda primo sold honda civic kei cars honda superminis honda capa honda products farm equipment lawn mowers portable generators marine equipment motorcycles scooters honda super cub styling tradition established honda primo clio operations verno products rear license plate installed rear bumper primo clio products rear license plate installed trunk lid rear door minivans time progressed sales diminish partly collapse japanese bubble economy supermini kei vehicles specific honda primo badge engineered sold sales channels providing vehicles sold honda verno honda clio locations march 2006 sales chains discontinued establishment honda cars dealerships network disbanded japanese honda dealerships network names offering japanese market honda cars locations honda sells genuine accessories separate retail chain called honda access motorcycle scooter automobile products cooperation corporate partner pioneer honda sells aftermarket audio car navigation equipment installed vehicle brand gathers honda access locations japanese auto retailers autobacs buyers vehicles directed specific honda retail chain sells vehicles called honda auto terrace spring 2012 honda japan introduced honda cars store japanese devoted compact cars honda fit kei vehicles honda honda s660 roadster international marketing 2003 honda released cog advertisement internet engineers honda constructed rube goldberg machine car honda accord touring chagrin engineers honda hand assembled pre production models accord advertisement depicted single cog sets chain events honda accord moving garrison keillor speaking tagline nice 606 takes perfect 2004 produced grrr advert shortened version 2005 impossible dream advert december 2005 honda released impossible dream minute panoramic advertisement filmed zealand japan argentina illustrates founder dream build performance vehicles singing song impossible dream reaches racing helmet leaves trailer minibike rides succession vintage honda vehicles motorcycle car powerboat waterfall reappear piloting hot air balloon garrison keillor song song 1960s musical mancha sung andy williams 2006 honda released choir advertisement internet 60 person choir sang car noises film honda civic mid late 2000s united model close sales current start model honda advertising animated character simply opportunity voiced rob paulsen casual talked deals offered honda phrase opportunity knockin knocking television screen thumping speaker radio ads addition commercials honda international hatchback jazz parodies pop culture images tetris thomas tank engine late 2006 honda released asimo exploring museum exhibits childlike wonderment spreading arms aerospace exhibit waving astronaut suit resembles garrison keillor ruminates progress concludes tagline forwards honda sponsored itv coverage 2007 announced continue 2008 sponsorship price requested itv 2007 focuses strengths racing red badge – symbol termed hondamentalism campaign highlights lengths honda engineers engine bikes cars powerboats – lawnmowers honda released hondamentalism campaign spot garrison keillor engineer build swimming honey honda engineers white suits walk light battling strong winds flying debris holding blown finally engineers walks red light hand outstretched address hondamentalism digital campaign aims visitors share hondamentalist characteristics 2008 honda released – playground advert outlines honda environmental responsibility demonstrating hybrid engine efficient solar panels fcx clarity hydrogen powered car 90 advert scale puzzles involving rubik cubes shapes dimensional puzzle 29 2008 honda partnership channel broadcast live advertisement skydivers jumping aeroplane spain forming letters mid air live advertisement agreed british television advert lasted minutes 2009 american honda released dream impossible documentary series collection minute vignettes focus core philosophies honda current short films include failure secret success kick ladder mobility 2088 honda employees danica patrick christopher guest ben bova chee pearlman joe johnston orson scott card film series plays dreams honda national television ads feature voice overs american radio host garrison keillor voice honda commercials actor director fred savage sports late f1 driver ayrton senna stated honda played role championships immense respect founder soichiro honda relationship nobuhiko kawamoto chairman honda time senna called honda company marketing campaign honda official partner sponsor national hockey league anaheim ducks nhl arena named honda center honda sponsors honda classic golf tournament sponsor major league soccer honda player award united soccer honda sports award female athlete college sports united honda sports award winners chosen receive honda broderick cup collegiate woman athlete honda sponsored liga club valencia starting 2014–15 season honda sponsor los angeles marathon 2010 sponsorship deal winners marathon receiving honda accord 1989 honda campus star challenge quizbowl tournament historically black colleges universities 2010 chinese labour strike 2010 chinese labor strike happened guangqi honda dongfeng honda 
14537	computerscience	irix discontinued operating developed silicon graphics sgi mips workstations servers variety unix bsd extensions irix operating include xfs file major version irix irix released 1998 minor versions irix released quarter 2005 minor releases version 22 branches release maintenance release identified suffix version includes fixes original irix code feature release suffix includes improvements enhancements overlay upgrade 22 maintenance release download versions 23 require active silicon graphics support contract history irix time release operating sgi iris 4d series workstations servers 1988 previous releases identified release prefixed 4d1 4d1 4d1 prefix continued official documentation prefix irix release irix based unix release 3bsd enhancements incorporates 4sight windowing based news iris sgi extent file efs replaces filesystem irix released 1991 replaces 4sight window x11r4 4dwm window manager providing feel 4sight irix released 1993 incorporates features unix release including elf executables irix introduced xfs journaling file 1994 irix support 64 bit mips r8000 processor irix releases support mips processor family 64 bit mode irix released sgi o2 workstation irix improved multiprocessor scalability octane origin 2000 onyx2 systems origin 2000 onyx2 irix marketed cellular irix incorporates features original cellular irix distributed operating project irix development stabilized irix released 1998 version irix 30 released august 2006 2001 computerworld review irix critical sgi moving efforts linux windows mips irix customers convinced sgi continue support platform 2006 september sgi press release announced mips irix product production december 29 2006 deliveries march 2007 special arrangement support products december 2013 receive updates bankruptcy silicon graphics subsequent purchase rackable systems sgi badged hardware x86 64 based incapable running mips code ships red hat enterprise linux suse linux enterprise server features irix compliant unix release unix 95 posix including 1e 2c draft 15 acls capabilities irix strong support real time disk graphics irix unix versions feature graphical user interface main desktop environment irix decade 1990 continuing 2000s animation industry scientific visualization application base relevant legacy applications 1990s irix leader symmetric multi processing smp scalable 1024 processors single image irix indigo magic desktop default 4dwm window manager custom designed motif widget toolkit irix mipspro compiler compiler designed support parallel posix programming fortran 77 90 ada workshop gui ide development tools include speedshop performance tuning performance pilot irix supports opengl graphics chips image processing libraries 
14777	computerscience	international olympiad informatics ioi annual competitive programming competition secondary school students largest olympiad international mathematical olympiad terms participating countries 83 ioi 2017 ioi held 1989 pravetz bulgaria contest consists days programming solving algorithmic nature deal involving amounts data programmers creative coders dream programmers hard programming mathematics students ioi compete individual basis students competing participating country 81 countries 2012 students national teams selected national computing contests australian informatics olympiad british informatics olympiad indian computing olympiad bundeswettbewerb informatik germany international olympiad informatics prestigious science competitions unesco ifip patrons competition structure participation competition days students typically solve hours student allowed communication contestants books solve task contestant write program pascal java submit hour competition time program graded secret data ioi 2010 tasks divided subtasks graduated difficulty awarded tests subtask yield correct specific time memory limits contestant program interact secret library input fixed depends program actions – game type inputs publicly hours contest contestants submit output file program output files writing program exploiting special characteristics input hand combination pascal removed programming language 2019 11ioi 2010 time live scoreboard real time provisional submissions scored contest posted contestants aware scores resubmit improve scores starting 2012 ioi contest management cms developing monitoring contest scores competition days summed separately contestant awarding ceremony contestants awarded medals depending relative total score 50 contestants awarded medals relative gold silver bronze medal 12 contestants gold medal prior ioi 2010 students receive medals scores published impossible country ranked adding scores competitors wins medal ioi 2010 scores students receive medals official live scoreboard ioi 2012 nations ranked aggregate score russia china usa subsequently awarded closing ceremony analysis female performance 77 women medal 49 medal average female participation 1989–1994 1996–2014 suggests women participate national level claiming double digit percentage women participate stage president ioi richard forster competition difficulty attracting women spite solve hit solution ioi 2017 held iran participate iran israeli students participated offsite competition organized ioi russia 11 visa issues usa team unable attend contestant zhezheng luo attend traveling chinese team winning gold medal 3rd standings multiple ioi winners list performers history ioi sign perfect score rare achievement ioi history sign unofficial participation contestant participated host team iii gold medalists list includes countries national selection contest participant multiple times ioi feeder competitions participating countries feeder competitions select team listed 
15034	computerscience	usc sciences institute isi component university southern california usc viterbi school engineering specializes development processing computing communications technologies located marina del rey california isi actively participated revolution played leading role developing managing internet predecessor arpanet institute conducts basic applied supported 20 government agencies involved defense science health homeland security energy annual funding 100 isi employs 350 scientists programmers graduate students administrative staff marina del rey california headquarters arlington virginia staff hold phd degrees 40 faculty teach usc advise graduate students senior researchers tenured usc faculty viterbi school sponsors isi spans artificial intelligence cybersecurity grid computing quantum computing microelectronics supercomputing nano satellites expertise includes natural language processing isi international reputation reconfigurable robotics integration motion analysis social media analysis hardware software expertise includes cyber physical security data mining reconfigurable computing cloud computing networking isi explores internet resilience internet traffic analysis photonics researchers scientific data management wireless technologies biomimetics electrical smart grid isi advising los angeles department water power major demonstration project current initiative involves data brain imaging jointly keck school medicine usc federal agency sponsors include air force office scientific department defense advanced projects agency department education department energy department homeland security national institutes health national science foundation scientific technical defense agencies corporate partners include chevron corp center interactive smart oilfield technologies cisoft lockheed martin company usc lockheed martin quantum computation center parsons corp subsidiary sparta deter project cybersecurity initiative international testbed isi partnered businesses including ibm corporation samsung electronics company raytheon company globalfoundries northrop grumman corporation carl zeiss micron technology altera corporation fujitsu isi operates metal oxide semiconductor implementation service mosis multi project electronic circuit wafer service prototyped 60 000 chips 1981 mosis design tools pools circuit designs produce specialty volume chips corporations universities entities worldwide institute rise startup spinoff companies grid software geospatial fusion machine translation data integration technologies history isi founded keith uncapher headed rand corporation 1960s 1970s uncapher decided leave rand funding cut 1971 approached university california los angeles creating campus technology institute told decision 15 months concept usc approved proposal days isi launched employees 1972 proposal funded defense advanced projects agency darpa 30 days isi earliest nodes arpanet predecessor internet 1977 figured prominently demonstration international viability isi helped refine tcp ip communications protocols fundamental operations researcher paul mockapetris developed familiar domain characterized operates names invented sri international ongoing collaborator steve crocker originated request comments rfc series written record network technical structure operation documented shaped emerging internet isi researcher danny cohen implement packet voice packet video arpanet demonstrating viability packet switching real time applications jonathan postel collaborated development tcp ip dns smtp protocol supports email edited rfc decades sudden death 1998 isi colleagues assumed responsibility institute retained role 2009 postel simultaneously directed internet assigned authority iana predecessor assign internet addresses iana administered isi nonprofit organization icann created purpose 1998 achievements cohen entity implement voice internet protocol voice ip voip security applications portable computers originated isi isi researchers created created 2011 isi natural language experts advised ibm team created watson machine win human competitors jeopardy 2012 isi kevin knight spearheaded successful drive crack copiale cipher lengthy encrypted manuscript remained unreadable 250 2012 usc lockheed martin quantum computation center qcc organization operate quantum annealing manufacturer wave systems usc isi lockheed martin performing basic applied quantum computing quantum annealing located nasa ames center operated jointly nasa google usc andrew erna viterbi school engineering ranked nation engineering graduate schools news report 2015 including isi usc ranked nationally federal science development expenditures organizational structure isi organized divisions focused differing expertise specialized operate divisions isi led executive director prem natarajan executive vice president principal scientist raytheon bbn technologies natural language specialist focus optical character recognition speech processing multimedia analysis natarajan joined isi 2013 succeeding usc viterbi school vice dean john brien served interim executive director 2012 2013 1988 2012 isi led ibm executive herbert schorr 
15271	computerscience	retrieval activity obtaining resources relevant collection resources searches based content based indexing retrieval science searching document searching documents searching metadata data databases texts images sounds automated retrieval systems reduce called overload software provide access books journals documents stores manages document search engines visible applications overview retrieval process user enters query queries formal statements search strings search engines retrieval query uniquely identify single object collection objects match query degrees relevancy object entity represented content collection database user queries matched database opposed classical sql queries database retrieval returned match query typically ranked ranking key difference retrieval searching compared database searching depending application data objects documents images audio mind maps videos documents stored represented document surrogates metadata systems compute numeric score object database matches query rank objects ranking objects user process iterated user wishes refine query history idea computers search relevant pieces popularized article vannevar bush 1945 bush inspired patents tatistical machine filed emanuel goldberg 1920s 30s searched documents stored film description searching holmstrom 1948 detailing mention univac automated retrieval systems introduced 1950s featured 1957 romantic comedy desk set 1960s retrieval formed gerard salton cornell 1970s retrieval techniques perform corpora cranfield collection documents scale retrieval systems lockheed dialog 1970s 1992 department defense national institute standards technology nist cosponsored retrieval conference trec tipster program aim retrieval community supplying infrastructure evaluation retrieval methodologies collection catalyzed methods scale huge corpora introduction search engines boosted scale retrieval systems model types effectively retrieving relevant documents strategies documents typically transformed suitable representation retrieval strategy incorporates specific model document representation purposes picture illustrates relationship common models picture models categorized dimensions mathematical basis properties model performance correctness measures evaluation retrieval process assessing meets users measurement considers collection documents searched search query traditional evaluation metrics designed boolean retrieval retrieval include precision recall measures assume ground truth notion relevancy document relevant relevant query practice queries posed shades relevancy 
15476	computerscience	internet protocol suite conceptual model set communications protocols internet networks commonly tcp ip foundational protocols suite transmission control protocol tcp internet protocol ip occasionally department defense dod model development networking method funded united department defense darpa internet protocol suite data communication data packetized addressed transmitted routed received functionality organized abstraction layers classify protocols scope networking involved lowest layers link layer communication methods data remains single network segment link internet layer providing internetworking independent networks transport layer handling host host communication application layer providing process process data exchange applications technical standards underlying internet protocol suite constituent protocols maintained internet engineering task force ietf internet protocol suite predates osi model comprehensive reference framework networking systems history internet protocol suite development conducted defense advanced projects agency darpa late 1960s initiating pioneering arpanet 1969 darpa started data transmission technologies 1972 robert kahn joined darpa processing technology office satellite packet networks ground based radio packet networks recognized communicate spring 1973 vinton cerf developer existing arpanet network control program ncp protocol joined kahn architecture interconnection models goal designing protocol generation arpanet summer 1973 kahn cerf fundamental reformulation differences local network protocols hidden common internetwork protocol network responsible reliability arpanet function delegated hosts cerf credits hubert zimmermann louis pouzin designer cyclades network influences design protocol implemented transmission control program published 1974 initially tcp managed datagram transmissions routing protocol grew researchers recommended division functionality protocol layers advocates included jonathan postel university southern california sciences institute edited request comments rfcs technical strategic document series documented catalyzed internet development postel stated screwing design internet protocols violating principle layering encapsulation mechanisms intended create environment upper layers access layers monolithic design inflexible lead scalability issues transmission control program split distinct protocols transmission control protocol internet protocol design network included recognition provide functions efficiently transmitting routing traffic nodes intelligence located edge network nodes design principle design connect network arpanet irrespective local characteristics solving kahn initial internetworking popular expression tcp ip eventual product cerf kahn tin cans string joke ip avian carriers formal protocol specification created tested called router interface network forwards network packets originally router called gateway term changed avoid confusion types gateways specification 1973 1974 cerf networking stanford details idea tcp specification technical influence networking xerox parc produced parc universal packet protocol suite existed time darpa contracted bbn technologies stanford university university college london develop operational versions protocol hardware platforms versions developed tcp v1 tcp v2 tcp v3 ip v3 tcp ip v4 protocol implementation 1975 network tcp ip communications performed stanford university college london ucl november 1977 network tcp ip conducted sites norway tcp ip prototypes developed multiple centers 1978 1983 migration arpanet tcp ip officially completed flag day january 1983 protocols permanently activated adoption march 1982 department defense declared tcp ip standard military networking 1985 internet advisory board renamed internet architecture board held day tcp ip workshop industry attended 250 vendor representatives promoting protocol leading increasing commercial 1985 interop conference focused network interoperability broader adoption tcp ip conference founded dan lynch internet activist corporations ibm dec attended meeting ibm dec major corporations adopt tcp ip competing proprietary protocols ibm 1984 barry appelman tcp ip development navigated corporate politics stream tcp ip products ibm systems including mvs vm os time companies ftp software wollongong offering tcp ip stacks dos windows vm cms tcp ip stack university wisconsin tcp ip stacks written single handedly programmers jay elinsky oleg vishnepolsky ibm wrote tcp ip stacks vm cms os 1984 donald gillies mit wrote ntcp multi connection tcp atop ip packetdriver layer maintained john romkey mit 1983 romkey leveraged tcp 1986 ftp software founded starting 1985 phil karn created multi connection tcp application ham radio systems ka9q tcp spread tcp ip fueled june 1989 university california berkeley agreed tcp ip code developed bsd unix public domain vendors including ibm included code commercial tcp ip software releases released native tcp ip stack windows 95 event helped cement tcp ip dominance protocols based networks included ibm systems network architecture sna platforms digital equipment corporation decnet systems interconnection osi xerox network systems xns key architectural principles principle evolved time original expression maintenance intelligence edges assumed internet connected edges retained concentrated speed simplicity real firewalls network address translators content caches forced principle robustness principle implementation conservative sending behavior liberal receiving behavior careful send formed datagrams accept datagram interpret object technical errors meaning principle software hosts deficiencies unwise exploit legal obscure protocol features encapsulation provide abstraction protocols services encapsulation aligned division protocol suite layers functionality application level model set protocols send data layers data encapsulated level architectural document emphasizes architectural principles layering rfc 1122 titled host requirements structured paragraphs referring layers document refers architectural principles emphasize layering loosely defines layer model layers names layers protocol suite logically closer user application logically closer physical transmission data viewing layers providing consuming service method abstraction isolate upper layer protocols details transmitting bits ethernet collision detection layers avoid details application protocol layers examined assorted architectural documents—there single architectural model iso 7498 systems interconnection osi model—have rigidly defined layers osi model provide easier fit real protocols frequently referenced document rfc 1958 stack layers lack emphasis layering major difference ietf osi approaches refers existence internetworking layer upper layers document intended 1996 snapshot architecture internet architecture grown evolutionary fashion modest grand plan process evolution main reasons technology success record snapshot current principles internet architecture internet protocol suite layered protocol stack design osi model established tcp ip model compared osi model books classrooms confusion models assumptions goals including relative strict layering abstraction upper layers provide services layers provide original osi model extended include connectionless services osirm ip designed reliable effort delivery protocol transport layer implementations choose provide reliability udp data integrity checksum guarantee delivery tcp data integrity delivery guarantee retransmitting receiver acknowledges reception packet model lacks formalism osi model documents ietf formal model limitation illustrated comment david clark reject kings presidents voting rough consensus running code criticisms model respect osi model iso extensions model multi access links addressing systems ethernet address mapping protocol protocols considered ip existing link ietf terminology subnetwork dependent convergence facility extension osi model internal organization network layer ionl icmp igmp operate ip transport data udp tcp functionality exists layer management extensions osi model management framework osirm mf ssl tls library operates transport layer tcp application protocols intention designers protocols comply osi architecture link treated black box ietf explicitly intend discuss transmission systems academic practical alternative osi model description layer tcp ip networking model starting lowest level link layer link layer networking scope local network connection host attached regime called link tcp ip literature lowest component layer internet protocols tcp ip designed hardware independent result tcp ip implemented virtually hardware networking technology link layer packets internet layer interfaces hosts link processes transmitting receiving packets link controlled software device driver network card firmware specialized chipsets perform data link functions adding packet header prepare transmission transmit frame physical medium tcp ip model includes specifications translating network addressing methods internet protocol link layer addresses media access control mac addresses aspects level implicitly assumed exist link layer explicitly defined layer packets selected virtual private network networking tunnel scenario link layer data considered application data traverses instantiation ip stack transmission reception ip connection connection virtual link established transport protocol application scope protocol serves tunnel link layer protocol stack tcp ip model dictate strict hierarchical encapsulation sequence tcp ip model link layer corresponds systems interconnection osi model physical data link layers layers osi model internet layer internet layer responsibility sending packets multiple networks internetworking requires sending data source network destination network process called routing internet protocol performs basic functions internet layer agnostic data structures transport layer distinguish operation transport layer protocols ip carries data variety upper layer protocols protocols identified unique protocol internet control message protocol icmp internet management protocol igmp protocols protocols carried ip icmp transmit diagnostic igmp manage ip multicast data layered ip perform internetworking functions illustrates differences architecture tcp ip stack internet osi model tcp ip model internet layer corresponds layer systems interconnection osi model referred network layer internet layer unreliable datagram transmission facility hosts located ip networks forwarding transport layer datagrams hop router relaying destination functionality internet layer internetworking interworking ip networks essentially establishes internet internet protocol principal component internet layer defines addressing systems identify network hosts computers locate network original address arpanet successor internet internet protocol version ipv4 32 bit ip address capable identifying hosts limitation eliminated 1998 standardization internet protocol version ipv6 128 bit addresses ipv6 production implementations emerged 2006 transport layer transport layer establishes basic data channels applications task specific data exchange layer establishes host host connectivity meaning message transfer services independent structure user data logistics exchanging specific purpose independent underlying network protocols layer provide error control segmentation flow control congestion control application addressing port message transmission connecting applications transport layer categorized connection oriented implemented tcp connectionless implemented udp purpose providing process specific transmission channels applications layer establishes concept network port numbered logical construct allocated communication channels application types services port standardized client computers address specific services server involvement service announcements directory services ip effort delivery transport layer protocols offer reliability ip reliable data link protocol level data link control hdlc tcp connection oriented protocol addresses numerous reliability issues providing reliable byte stream stream control transmission protocol sctp reliable connection oriented transport mechanism message stream oriented—not byte stream oriented tcp—and multiple streams multiplexed single connection multi homing support connection represented multiple ip addresses representing multiple physical interfaces fails connection interrupted developed initially telephony applications transport ss7 ip applications user datagram protocol connectionless datagram protocol ip effort unreliable protocol reliability addressed error detection weak checksum algorithm udp typically applications streaming media audio video voice ip time arrival reliability simple query response applications dns lookups overhead setting reliable connection disproportionately real time transport protocol rtp datagram protocol designed real time data streaming audio video applications network address distinguished tcp udp port convention ports specific applications tcp ip model transport host host layer corresponds roughly fourth layer systems interconnection osi model called transport layer application layer application layer includes protocols applications providing user services exchanging application data network connections established level protocols include basic network support services protocols routing host configuration examples application layer protocols include hypertext transfer protocol file transfer protocol ftp simple mail transfer protocol smtp dynamic host configuration protocol dhcp data coded application layer protocols encapsulated transport layer protocol units tcp udp messages layer protocols actual data transfer tcp ip model specifics formatting data define additional layers application transport layers osi model presentation session layers functions realm libraries application programming interfaces application layer protocols treat transport layer protocols black boxes provide stable network connection communicate applications aware key qualities transport layer connection ip addresses port application layer protocols client server applications common services port internet assigned authority iana hypertext transfer protocol server port 80 telnet server port 23 clients connecting service ephemeral ports port assigned duration transaction random specific range configured application transport layer level layers unconcerned specifics application layer protocols routers switches typically examine encapsulated traffic provide conduit firewall bandwidth throttling applications interpret application data resource reservation protocol rsvp network address translator nat traversal application payload application layer tcp ip model compared equivalent combination session sixth presentation seventh application layers systems interconnection osi model tcp ip reference model distinguishes user protocols support protocols support protocols provide services user protocols actual user applications ftp user protocol dns support protocol layer names layers literature table networking models layers varies networking models textbooks secondary sources conflict intent rfc 1122 ietf primary sources comparison tcp ip osi layering layers osi model application layer presentation layer session layer distinguished separately tcp ip model application layer transport layer pure osi protocol applications 400 combined requirement tcp ip protocol stack impose monolithic architecture transport layer nfs application protocol runs external data representation xdr presentation protocol runs protocol called remote procedure rpc rpc reliable record transmission safely effort udp transport authors interpreted tcp ip model disagree link layer entire tcp ip model covers osi layer physical layer issues hardware layer assumed link layer authors attempted incorporate osi model layers tcp ip model commonly referred modern standards ieee itu model layers link layer network access layer split osi model layers ietf protocol development effort concerned strict layering protocols fit cleanly osi model rfcs refer osi layer ietf repeatedly stated internet protocol architecture development intended osi compliant rfc 3439 addressing internet architecture entitled layering considered harmful session presentation layers osi suite considered included application layer tcp ip suite functionality session layer protocols smtp evident protocols telnet session initiation protocol sip session layer functionality realized port numbering tcp udp protocols cover transport layer tcp ip suite functions presentation layer realized tcp ip applications mime standard data exchange conflicts apparent original osi model iso 7498 annexes model iso 7498 management framework iso 8648 internal organization network layer ionl ionl management framework documents considered icmp igmp defined layer management protocols network layer manner ionl structure subnetwork dependent convergence facilities arp rarp ietf protocols encapsulated recursively demonstrated tunneling protocols generic routing encapsulation gre gre mechanism osi tunneling network layer implementations internet protocol suite presume specific hardware software environment requires hardware software layer exists capable sending receiving packets network result suite implemented essentially computing platform minimal implementation tcp ip includes internet protocol ip address resolution protocol arp internet control message protocol icmp transmission control protocol tcp user datagram protocol udp internet management protocol igmp addition ip icmp tcp udp internet protocol version requires neighbor discovery protocol ndp icmpv6 igmpv6 accompanied integrated ipsec security layer application programmers typically concerned interfaces application layer transport layer layers services tcp ip stack operating ip implementations accessible programmers sockets apis unique implementations include lightweight tcp ip source stack designed embedded systems ka9q stack protocols amateur packet radio systems personal computers connected serial lines microcontroller firmware network adapter typically handles link issues supported driver software operating programmable analog digital electronics charge physical components link layer typically application specific integrated circuit asic chipset network interface physical standard performance routers extent based fast programmable digital electronics carrying link level switching 
16750	computerscience	mathematical logic science kleene star kleene operator kleene closure unary operation sets strings sets symbols characters mathematicsit commonly monoid construction application kleene star set written regular expressions context introduced stephen kleene characterize automata set set finite strings generated concatenating arbitrary elements allowing element multiple times set ∅ singleton set ε ε finite set countably infinite set operators rewrite rules generative grammars definition notation set defineand define recursively setif formal language power set shorthand concatenation set times understood set strings represented concatenation strings definition kleene star isnotice kleene star operator idempotent unary operator set strings characters kleene formal language studies afl theory variation kleene star operation called kleene kleene omits term union kleene isfor set kleene denoting equals concatenation holds element composed element finitely terms element retrieved concatenated ε conversely ε ∪ examples kleene star applied set strings kleene applied set characters kleene star applied character set kleene star applied set kleene applied set concatenation associative noncommutative product sharing properties cartesian product sets kleene kleene star applied singleton set string generalization strings form monoid concatenation binary operation ε identity element kleene star defined monoid strings precisely ⋅ monoid ⊆ submonoid neutral element set ∈ ⋅ ∈ kleene star generalized including operation union algebraic structure notion complete star semiring 
18847	computerscience	multics multiplexed computing service influential time sharing operating based concept single level memory virtually modern operating systems heavily influenced multics – unix created people multics – linux macos indirectly windows nt overview initial planning development multics started 1964 cambridge massachusetts originally cooperative project led mit project mac fernando corbató electric bell labs developed 645 specially designed delivered mit january 1967 multics conceived commercial product electric honeywell albeit valuable ideas multics impact science faults multics numerous features intended ensure availability support computing utility telephone electricity utilities modular hardware structure software architecture achieve grow size simply adding resource computing power main memory disk storage separate access control lists file flexible sharing complete privacy multics standard mechanisms engineers analyze performance adaptive performance optimization mechanisms ideas multics implemented single level store data access discarding distinction files called segments multics process memory memory process consisted solely segments mapped address space read write process simply normal central processing unit cpu instructions operating care modifications saved disk posix terminology file codice 1ed multics concept process memory separate memory hold mapped files unix memory segment appeared file included temporary scratch memory process kernel stack disadvantage size segments limited 256 kilowords 1 mib hardware architecture machines multics 36 bit word size registers address segments size 18 bits extra code files larger called multisegment files days megabyte memory prohibitively expensive databases huge bitmap graphics limit rarely encountered major idea multics dynamic linking running process request segments address space segments code execute allowed applications automatically version external routine called routines segments dynamically linked process execution processes search rules users versions external routines automatically equally importantly settings multics security facilities code segment gain access data structures maintained process interact application running daemon process user process simply performed normal procedure instruction code segment dynamically linked code segment implemented operation daemon code segment modify data maintained daemon action commence request completed simple procedure return instruction returned control user process user code single level store dynamic linking power operating systems rapid enormous advance field 1960s accepted limited forms dynamic linking multics supported extremely aggressive reconfiguration central processing units memory banks disk drives removed continued operating mit software development common practice split multiprocessor separate systems hours incrementally removing components form leaving rest running original logged users software development testing components main user shut multics supported multiple cpus earliest multiprocessor systems multics major operating designed secure outset versions multics broken repeatedly led secure prefigured modern security engineering techniques break ins rare generation hardware base hardware support oriented security multilevel refinement concept master mode multics operating provide hierarchical file file names arbitrary syntax file directory multiple names typically short form symbolic links directories supported multics standard concept process stacks kernel separate stack security command processor implemented ordinary user code – idea unix written level language multics burroughs mcp written algol project history 1964 multics developed initially 645 mainframe 36 bit business including multics honeywell 1970 1973 multics supported honeywell 6180 machines included security improvements including hardware support protection rings bell labs pulled project 1969 people create unix multics development continued mit electric honeywell continued development 1985 80 multimillion dollar sites installed universities industry government sites french university installations 1980s honeywell stopped supporting multics users migrated systems unix 1985 multics issued certification b2 level secure operating trusted evaluation criteria national security center ncsc division nsa operating evaluated level multics distributed 1975 2000 groupe bull europe bull systems united 2006 bull sas sourced multics versions mr10 mr11 mr12 mr12 mr12 mr12 mr12 mr12 multics installation running natively honeywell hardware shut october 30 2000 canadian department national defence halifax nova scotia canada current status 2006 bull released source code mr12 final 1992 multics release mit source software exception optional pieces tcp ip 2014 multics current hardware simulator release simulator release 12 6f multics accompanies release emulator adds features including command recall editing video retrospective observations peter salus author book covering unix stated position multics versatile flexible operating failed miserably position discredited computing community technical innovations multics project modern commercial computing systems permanently resident kernel powerful multiprocessor mainframe computing utility derided day complex 135 kb code comparison linux 2007 occupied 18 mb mit 645 512 kilowords memory 2 mib enormous time kernel moderate portion multics main memory entire including operating complex compiler user commands subroutine libraries consisted 1500 source modules averaged roughly 200 lines source code compiled produce total roughly 5 mib procedure code standards day multics compilers optimised code density cpu performance routines called operators short standard code sequences direct comparison object code size modern systems code density optimisation choice multi user expensive main memory multics influence projects unix design features multics greatly influenced unix operating originally written multics programmers ken thompson dennis ritchie superficial influence multics unix evident including naming commands internal design philosophy focusing keeping simple correcting deficiencies multics resource demands limited hardware time unix originally unics pun multics unix rumored stand uniplexed opposed multiplexed multics underscoring designers rejections multics complexity favor straightforward workable approach computers garfinkel abelson cite alternative origin peter neumann bell labs watching demonstration prototype suggested pun unics – pronounced eunuchs – castrated multics dennis ritchie denied ken thompson transcribed 2007 interview peter seibel refers multics overdesigned overbuilt close unusable institute technology claim monstrous success admits multics hierarchical file shell—a separate process replace process operating systems prime operating primos referred multics shoebox william poduska founder company poduska moved apollo aegis domain os operating systems called multics matchbox extended multics design heavily networked graphics workstation environment stratus vos operating stratus stratus technologies influenced multics external user interface internal structure bear close resemblances project reliability availability security features multics extended stratus vos support fault tolerant systems supporting secure reliable transaction processing stratus vos descendant multics active development production usage protection architecture multics restricting ability code level access resources basis security features icl vme operating reading literature papers multics components complete list multics bibliography informative listed 
18977	computerscience	minix mini unix posix compliant version unix operating based microkernel architecture versions minix created andrew tanenbaum educational purposes starting minix primary aim development shifted education creation highly reliable healing microkernel os minix developed source software minix released 1987 complete source code universities study courses source software licensed bsd license april 2000 implementation minix andrew tanenbaum created minix vrije universiteit amsterdam exemplify principles conveyed textbook 1987 abridged 12 000 lines source code kernel memory manager file minix printed book prentice hall released minix source code binaries floppy disk reference manual minix compatible seventh edition unix tanenbaum originally developed minix compatibility ibm pc ibm pc microcomputers time minix minix released 1991 included support microchannel ibm ps systems ported motorola 68000 sparc architectures supporting atari commodore amiga apple macintosh sun sparcstation platforms unofficial ports intel 386 pc compatibles 32 bit protected mode national semiconductor ns32532 arm inmos transputer processors meiko scientific version minix basis meikos operating transputer based computing surface parallel computers version minix running user process sunos solaris simulator named smx minix demand 68k based architectures waned minix released 1997 x86 solaris hosted sparc architectures subject edition tanenbaum textbook cowritten albert woodhull distributed rom included book minix posix compliance support 386 processors 32 bit mode replaced amoeba network protocols included minix tcp ip stack unofficial ports minix 68020 based isicad prisma 700 workstation hitachi sh3 based hp jornada 680 690 personal digital assistant pda developed minix vmd minix vmd variant minix intel ia 32 compatible processors created vrije universiteit researchers adds virtual memory support window minix minix publicly announced 24 october 2005 andrew tanenbaum keynote speech association computing machinery acm symposium operating systems principles sosp serves edition tanenbaum woodhull textbook comprehensively redesigned usable resource limited embedded computers applications requiring reliability minix supports ia 32 arm architecture systems live format installing hard drive versions compatible hardware emulating virtualizing systems including bochs qemu vmware workstation fusion virtualbox virtual pc version released november 2009 x11 emacs gcc perl python ash bash zsh ftp ssh telnet pine 400 common unix utility programs addition x11 version marks transition withstand driver crashes automatically restart drivers running processes minix healing applications demanding reliability minix support virtual memory management suitable desktop os desktop applications firefox openoffice minix version userland replaced netbsd support pkgsrc increasing software applications minix clang replaced prior compiler gcc optionally supported gdb gnu debugger ported minix released september 2014 brought arm support minix 0rc release candidates january 2016 stable release minix announced minix supports programming languages including fortran modula pascal perl python tcl minix active development community 50 people attending minixcon 2016 conference discuss history future minix intel chipsets post 2015 running minix internally software component intel management engine relationship linux influence torvalds appreciated minix design deviated minix architecture notably employing monolithic kernel microkernel disapproved tanenbaum tanenbaum–torvalds debate tanenbaum explained rationale microkernel 2006 linux kernel development minix host led linux inheriting features minix minix file samizdat claims 2004 kenneth brown alexis tocqueville institution accusation major linux kernel copied minix codebase book named samizdat accusations rebutted universally—most prominently andrew tanenbaum criticised kenneth brown published rebuttal personal claiming brown funded licensing time minix original development license liberal licensing fee 69 relative operating systems tanenbaum wished minix accessible students publisher unwilling offer material source code copied freely restrictive license requiring nominal fee included price tanenbaum book applied compromise prevented minix basis freely distributed software source unix operating systems linux 386bsd 1990s volunteer software developers abandoned minix favor april 2000 minix source software permissive software license time operating systems surpassed capabilities remained operating students hobbyists 
19980	computerscience	machine translation referred abbreviation confused aided translation machine aided human translation maht interactive translation field computational linguistics investigates software translate speech language basic level performs simple substitution language produce translation recognition phrases closest counterparts target language solving corpus statistical neural techniques rapidly growing field leading translations handling differences linguistic typology translation idioms isolation anomalies current machine translation software customization domain profession weather reports improving output limiting scope allowable substitutions technique effective domains formal formulaic language machine translation government legal documents produces usable output conversation standardised improved output quality achieved human intervention systems translate accurately user unambiguously identified proper names assistance techniques proven tool assist human translators limited produce output weather reports progress potential machine translation debated history 1950s scholars questioned possibility achieving automatic machine translation quality notably yehoshua bar hillel critics claim principle obstacles automating translation process history idea machine translation traced 17th century 1629 rené descartes proposed universal language equivalent ideas tongues sharing symbol field machine translation appeared warren weaver memorandum translation 1949 researcher field yehosha bar hillel mit 1951 georgetown university team 1951 public demonstration georgetown ibm experiment 1954 programs popped japan russia 1955 conference held london 1956 researchers continued field association machine translation computational linguistics formed 1962 national academy sciences formed automatic language processing advisory committee alpac study 1964 real progress slower alpac report 1966 failed fulfill expectations funding greatly reduced 1972 report director defense engineering ddr feasibility scale reestablished success logos translating military manuals vietnamese conflict french textile institute translate abstracts french english german spanish 1970 brigham university started project translate mormon texts automated translation 1971 xerox systran translate technical manuals 1978 late 1980s computational power increased expensive statistical models machine translation companies launched including trados 1984 develop market translation memory technology 1989 commercial russian english german ukrainian developed kharkov university 1991 started systran offering translation texts 1996 altavista babelfish racked 500 000 requests day 1997 franz josef och future head translation development google darpa speed competition 2003 innovations time included moses source statistical engine 2007 sms translation service mobiles japan 2008 mobile phone built speech speech translation functionality english japanese chinese 2009 google announced google translate translates roughly books day 2012 idea digital computers translation natural languages proposed 1946 booth warren weaver wrote memorandum translation 1949 georgetown experiment application demonstration 1954 apexc machine birkbeck college university london rudimentary translation english french papers topic published time articles popular journals wireless sept 1955 cleave zacharov application pioneered birkbeck college time reading composing braille texts translation process human translation process ostensibly simple procedure lies complex cognitive operation decode meaning source entirety translator interpret analyse features process requires depth knowledge grammar semantics syntax idioms source language culture speakers translator depth knowledge encode meaning target language lies challenge machine translation program understand person create target language sounds written person application current technology faster automated translation program procedure human participation produce output close quality human translator produce provide imperfect approximation original gist process called gisting sufficient purposes including finite expensive time human translator total accuracy indispensable approached evolution accuracy improved approaches machine translation method based linguistic rules translated linguistic – suitable orally speaking target language replace source language argued success machine translation requires natural language understanding solved rule based methods parse creating intermediary symbolic representation target language generated nature intermediary representation approach interlingual machine translation transfer based machine translation methods require extensive lexicons morphological syntactic semantic sets rules data machine translation programs native speaker language approximate meaning written native speaker difficulty data support method multilingual corpus data statistical methods grammar based methods grammar methods skilled linguist carefully design grammar translate closely languages technique referred rule based machine translation rule based rule based machine translation paradigm includes transfer based machine translation interlingual machine translation dictionary based machine translation paradigms type translation creation dictionaries grammar programs methods rbmt involves linguistics source target languages morphological syntactic rules semantic analysis languages basic approach involves linking structure input sentence structure output sentence parser analyzer source language generator target language transfer lexicon actual translation rbmt biggest downfall explicit orthographical variation erroneous input source language analyser cope lexical selection rules written instances ambiguity adapting domains hard core grammar domains domain specific adjustment limited lexical selection adjustment transfer based machine translation transfer based machine translation interlingual machine translation creates translation intermediate representation simulates meaning original sentence interlingual depends partially language pair involved translation interlingual interlingual machine translation instance rule based machine translation approaches approach source language translated transformed interlingual language language neutral representation independent language target language generated interlingua major advantages interlingua valuable target languages increases interlingual machine translation operational commercial level kant nyberg mitamura 1992 designed translate caterpillar technical english cte languages dictionary based machine translation method based dictionary entries translated dictionary statistical statistical machine translation generate translations statistical methods based bilingual corpora canadian hansard corpus english french record canadian parliament europarl record european parliament corpora achieved translating texts corpora rare language pairs statistical machine translation software candide ibm google systran switched statistical translation method october 2007 2005 google improved internal translation capabilities 200 united nations materials train translation accuracy improved google translate statistical translation programs detecting patterns hundreds millions documents translated humans intelligent guesses based findings human translated documents language translation quality approaches statistical machine translation metis presemt minimal corpus size focus derivation syntactic structure pattern recognition development statistical machine translation operate monolingual corpus smt biggest downfall includes dependent huge amounts parallel texts morphology rich languages translating languages inability correct singleton errors based based machine translation ebmt approach proposed makoto nagao 1984 based machine translation based idea analogy approach corpus texts translated sentence translated sentences corpus selected sentential components sentences translate sentential components original sentence target language phrases form complete translation hybrid hybrid machine translation hmt leverages strengths statistical rule based translation methodologies organizations omniscien technologies asia online linguasys systran polytechnic university valencia claim hybrid approach rules statistics approaches advent neural version hybrid machine translation emerging combines benefits rules statistical neural machine translation approach benefitting pre post processing rule guided workflow benefitting nmt smt downside inherent complexity approach suitable specific proponents approach complex omniscien technologies neural deep learning based approach neural machine translation rapid progress google announced translation services technology preference previous statistical methods providers including pangeanic kantanmt omniscien technologies sdl announced deployment neural machine translation technology 2017 major issues disambiguation word sense disambiguation concerns finding suitable translation word meaning raised 1950s yehoshua bar hillel universal encyclopedia machine distinguish meanings word numerous approaches designed overcome divided shallow approaches deep approaches shallow approaches assume knowledge simply apply statistical methods surrounding ambiguous word deep approaches presume comprehensive knowledge word shallow approaches successful claude piron time translator united nations health organization wrote machine translation automates easier translator job harder time consuming involves extensive resolve ambiguities source grammatical lexical exigencies target language require resolved ideal deep approach require translation software disambiguation require degree attained shallow approach simply guessed sense ambiguous english phrase piron mentions based prisoner war camp mentioned corpus reasonable chance guessing wrong shallow approach involves user ambiguity piron estimate automate 25 professional translator job leaving harder 75 human standard speech major pitfalls inability translate standard language accuracy standard language heuristic statistical based takes input sources standard form language rule based translation nature include common standard usages errors translation vernacular source colloquial language limitations translation casual speech issues machine translation mobile devices named entities entities narrow sense refer concrete abstract entities real including people organizations companies refers expressing time space quantity july 2011 79 99 named entities occur analyzed statistical machine translation initial difficulty arises dealing named entities simply identifying list names common language illustrate – common names language constantly changing named entities recognized machine translator erroneously translated common nouns affect bleu rating translation change human readability identified named entities output translation implications readability message deal named entities transliteration translation meaning letters target language closely correspond source language attempts incorporate machine translation adding transliteration step translation procedure attempts cited worsening quality translation named entities identified incorrectly transliterated transliterated southern california word translated word transliterated machines transliterate treated entity hard machine translators transliteration component process lack attention issue named entity translation recognized stemming lack resources devote task addition complexity creating named entity translation approach named entity translation transliterate translate create translate list goal – transliteration opposed translation approaches rely correct identification named entities approach successful named entity translation class based model method named entities replaced token represent class belong ted erica replaced person class token statistical distribution person names analyzed distributions ted erica individually class based model solves probability specific language affect assigned probability translation study stanford improving translation examples probabilities assigned david walk ankit walk english target language occurrences training data frustrating outcome study stanford attempts improve named recognition translation times decrease bleu scores translation result inclusion methods named entity translation translation multiparallel sources utilization multiparallel corpora body translated languages methods translated languages utilized combination provide accurate translation language compared source languages ontologies ontology formal representation knowledge includes concepts objects processes domain relations stored linguistic nature speak lexicon nlp ontologies source knowledge machine translation systems access knowledge base systems enabled resolve lexical ambiguities classic examples humans interpret prepositional phrase context knowledge stored lexicons machine translation initially differentiate meanings syntax change ontology source knowledge interpretations ambiguous specific context reduced usage ontologies nlp include retrieval extraction summarization building ontologies ontology generated pangloss knowledge based machine translation 1993 serve ontology nlp purposes compiled applications holy grail automatic quality machine translation unrestricted automated systems produce reasonable output quality machine translation improved domain restricted controlled inherent limitations programs largest institutional user european commission molto project coordinated university gothenburg received 375 euros project support eu create reliable translation tool covers majority eu languages development systems time budget cuts human translation increase eu dependency reliable programs european commission contributed 072 euros isa programme creation statistical machine translation program tailored administrative eu replace previous rule based machine translation 2005 google claimed promising proprietary statistical machine translation engine statistical translation engine google language tools arabic english chinese english score 4281 runner ibm bleu score 3954 summer 2006 tests conducted national institute standards technology focus terrorism military sources united investing amounts money natural language engineering tel venture capital fund funded intelligence community stimulate technologies private sector entrepreneurs brought companies language weaver military community translation processing languages arabic pashto dari languages focus key phrases quick communication military civilians mobile phone apps processing technology office darpa hosts programs tides babylon translator air force awarded contract develop language translation technology notable rise social networking created niche application machine translation software – utilities facebook instant messaging clients skype googletalk msn messenger – allowing users speaking languages communicate machine translation applications released mobile devices including mobile telephones pocket pcs pdas portability instruments designated mobile translation tools enabling mobile business networking partners speaking languages facilitating foreign language learning unaccompanied traveling foreign countries intermediation human translator labelled unworthy competitor human translation 1966 automated language processing advisory committee united government quality machine translation improved levels application online collaboration medical field investigated application technology medical settings human translators absent topic difficulties accurate translations medical diagnoses evaluation factors affect machine translation systems evaluated factors include intended translation nature machine translation software nature translation process programs purposes statistical machine translation smt typically outperforms based machine translation ebmt researchers evaluating english french translation ebmt performs concept applies technical documents easily translated smt formal language applications product descriptions written controlled language dictionary based machine translation produced satisfactory translations require human intervention save quality inspection evaluating output quality machine translation systems human judges assess translation quality human evaluation time consuming reliable method compare systems rule based statistical systems automated evaluation include bleu nist meteor lepor relying exclusively unedited machine translation ignores communication human language context embedded takes person comprehend context original reasonable degree probability true purely human generated translations prone error ensure machine generated translation human publishable quality translation achieved translations reviewed edited human late claude piron wrote machine translation automates easier translator job harder time consuming involves extensive resolve ambiguities source grammatical lexical exigencies target language require resolved prelude pre editing provide input machine translation software output meaningless addition disambiguation decreased accuracy occur varying levels training data machine translating programs based statistical machine translation rely vast array real sentences base translation sentences analyzed accuracy jeopardized researchers program trained 203 529 sentence pairings accuracy decreases optimal level training data 100 000 sentences training data increases sentences increases harder exact translation match machine translation teaching tool concerns machine translation accuracy dr ana nino university manchester researched advantages utilizing machine translation classroom pedagogical method called bad model bad model forces language learner identify inconsistencies incorrect aspects translation individual possess grasp language dr nino cites teaching tool implemented late 1980s semesters dr nino survey students bad model models overwhelmingly students observed improved comprehension lexical retrieval increased confidence target language machine translation signed languages 2000s options machine translation spoken signed languages severely limited common belief deaf individuals traditional translators stress intonation pitch timing conveyed spoken languages compared signed languages deaf individual misinterpret confused meaning written based spoken language researchers zhao 2000 developed prototype called team translation english asl machine completed english american sign language asl translations program analyze syntactic grammatical morphological aspects english step program accessed sign synthesizer acted dictionary asl synthesizer housed process follow complete asl signs meanings signs entire analyzed signs complete translation located synthesizer generated human appeared asl sign english user copyright original subject copyright protection scholars claim machine translation entitled copyright protection involve creativity copyright issue derivative author original original language lose rights translated translator permission publish translation 
19999	computerscience	microcode hardware technique imposes interpreter cpu hardware programmer visible instruction set architecture microcode layer hardware level instructions implement level machine code instructions internal machine sequencing digital processing elements microcode purpose central processing units current desktop cpus fallback path faster hardwired control unit handle microcode typically resides special speed memory translates machine instructions machine data input sequences detailed circuit level operations separates machine instructions underlying electronics instructions designed altered freely facilitates building complex multi step instructions reducing complexity circuits writing microcode called microprogramming microcode processor implementation called microprogram extensive microcoding simple microarchitectures emulate powerful architectures wider word execution units simple achieve software compatibility products processor family hardware vendors ibm term microcode synonym firmware code device termed microcode microcode machine code hard disk drives microcode updated typically microcode firmware overview lowest layer software stack traditionally raw binary machine code instructions processor microcode sits level avoid confusion microprogram element differentiated micro prefix microinstruction microassembler microprogrammer microarchitecture engineers write microcode design phase processor storing read memory rom programmable logic array pla structure combination machines exist microcode stored sram flash memory traditionally denoted writeable control store context computers read read write memory cpu initialization process loads microcode control store storage medium possibility altering microcode correct bugs instruction set implement machine instructions complex digital processors employ microcode based control unit delegate tasks performed essentially asynchronously parallel level programmer assembly programmer change microcode machine code retains compatibility processors family microcode runs exact electronic circuitry designed constitutes inherent processor design microprograms consist series microinstructions control cpu fundamental level hardware circuitry single typical horizontal microinstruction operations simultaneously control processor features cycle microinstruction wider 50 bits 128 bits 360 85 emulator feature microprograms carefully designed optimized fastest execution slow microprogram result slow machine instruction degraded performance application programs instructions justification microcode originally developed simpler method developing control logic initially cpu instruction sets hardwired step fetch decode execute machine instructions including operand address calculations reads writes controlled combinational logic minimal sequential machine circuitry efficient powerful instruction sets multi step addressing complex operations hard wired processors difficult design debug highly encoded varied instructions contribute irregular encodings microcode simplified job allowing processor behaviour programming model defined microprogram routines dedicated circuitry late design process microcode easily changed hard wired cpu designs cumbersome change greatly facilitated cpu design 1940s late 1970s portion programming assembly language level instructions programmer productivity advantage microcode relative ease powerful machine instructions defined ultimate extension executable level language designs statement level language executed microcode compilation ibm future systems project data fountainhead processor examples 1970s cpu speeds grew memory speeds numerous techniques memory block transfer memory pre fetch multi level caches alleviate level machine instructions microcode helped complex machine instructions require memory bandwidth operation character string single machine instruction avoiding multiple instruction fetches architectures instruction sets implemented complex microprograms included ibm 360 digital equipment corporation vax approach increasingly complex microcode implemented instruction sets called cisc alternate approach microprocessors plas roms combinational logic instruction decoding simple machine microcode sequencing mos technology 6502 microprocessor pla instruction decode sequencing pla visible photomicrographs chip operation transistor level simulation microprogramming modern cpu designs microcode debugged simulation logic functions substituted control store logic functions faster expensive equivalent microprogram memory benefits processor microprograms operate primitive totally hardware oriented architecture assembly instructions visible normal programmers coordination hardware microcode implements programmer visible architecture underlying hardware fixed relationship visible architecture easier implement instruction set architecture wide variety underlying hardware micro architectures ibm 360 32 bit architecture 16 purpose registers 360 implementations hardware implemented simpler underlying microarchitecture 360 model 30 bit data paths arithmetic logic unit alu main memory implemented purpose registers special unit speed core memory 360 model 40 bit data paths alu 16 bit data paths main memory implemented purpose registers special unit speed core memory model 50 32 bit data paths implements purpose registers special unit speed core memory model 65 model 195 larger data paths implement purpose registers faster transistor circuits microprogramming enabled ibm design 360 models hardware spanning wide range cost performance architecturally compatible dramatically reduces unique software programs written model approach digital equipment corporation dec vax family computers result vax processors microarchitectures programmer visible architecture change microprogramming reduces cost field correct defects bugs processor bug fixed replacing portion microprogram hardware logic wiring history 1947 design mit whirlwind introduced concept control store simplify design hoc methods control store diode matrix dimensional lattice dimension accepts control time pulses cpu internal clock connects control signals gates circuits pulse distributor takes pulses generated cpu clock breaks separate time pulses activates row lattice row activated activates control signals connected signals transmitted control store played player piano roll controlled sequence wide constructed bits played sequentially control store song short repeated continuously 1951 maurice wilkes enhanced concept adding conditional execution concept akin conditional software initial implementation consisted pair matrices generated signals manner whirlwind control store matrix selected row signals microprogram instruction word speak invoke cycle conditionals implemented providing single control store choose alternatives matrix control signals conditional detected internal signal wilkes coined term microprogramming feature distinguish simple control store implementation microinstruction microprogram bits control functional elements internally compose cpu advantage hard wired cpu internal cpu control specialized form program microcode transforms complex electronic design challenge control cpu complex programming challenge advantage cpu divided memory address register memory data register access main storage elements form execution unit modern cpus execution units simple computers unit read write memory execute user code elements brought single chip chip fixed form slice execution unit bit slice chips amd am2900 family examples bit slice elements execution units execution units interconnected bundle wires called bus programmers develop microprograms basic software tools microassembler programmer define table bits symbolically close relationship underlying architecture microcode properties difficult generate compiler simulator program intended execute bits electronics freedom debug microprogram microprogram finalized extensively tested input program constructs logic produce data program optimize programmable logic array optimal logic heuristically optimized logic vastly reduce transistors required rom control store reduces cost producing electricity consumed cpu microcode characterized horizontal vertical referring microinstruction controls cpu elements decoding horizontal microcode requires extensive decoding combinatorial logic vertical microcode horizontal microinstruction wider bits occupies storage space vertical microinstruction horizontal microcode horizontal microcode discrete micro operations combined single microinstruction simultaneous operation horizontal microcode typically contained wide control store uncommon word 108 bits tick sequencer clock microcode word read decoded control functional elements cpu typical implementation horizontal microprogram word comprises tightly defined bits simple arrangement type micromachine implement jump instruction address opcode microcode require clock ticks engineer designing write microassembler source code tick common portions cpu remaining bits microinstruction ops careful design hardware microcode property exploited parallelise operations cpu alu required tick complete earlier arithmetic instruction vertical microcode vertical microcode microinstruction encoded bit fields pass intermediate combinatory logic generates actual control sequencing signals internal cpu elements alu registers contrast horizontal microcode bit fields produce control sequencing signals minimally encoded vertical microcode requires instruction lengths storage requires time decode slower cpu clock vertical microcode assembly language simple conventional emulating complex processors dec alpha processors cmos microprocessors ibm 390 mainframes architecture mainframes palcode term alpha processors millicode term ibm mainframe microprocessors form machine code access special registers hardware resources regular machine code implement instructions functions table walks alpha processors form vertical microcode fields field select selects cpu controlled word control store field controls cpu type microcode designer explicitly chooses slower cpu save money reducing unused bits control store reduced complexity increase cpu clock frequency lessens increased cycles instruction transistors cheaper horizontal microcode dominate design cpus microcode vertical microcode vertical horizontal microcode horizontal microcode referred nanocode picocode writable control store computers built writable microcode design storing microcode rom hard wired logic microcode stored ram called writable control store wcs called writable instruction set wisc experimental prototype computers writable control stores commercial machines writable microcode burroughs systems xerox workstations dec vax 8800 nautilus family symbolics machines ibm 360 370 implementations dec pdp machines data eclipse 8000 machines offer user programmable writable control stores option including hp 2100 dec pdp 11 60 varian data machines 70 series minicomputers ibm 370 includes facility called initial microprogram load iml impl invoked console power reset por processor tightly coupled multiprocessor complex commercial machines ibm 360 85 read storage writable control store microcode wcs offers advantages including ease patching microprogram hardware generations faster access roms provide user programmable wcs user optimize machine specific purposes starting pentium pro 1995 x86 cpus writable intel microcode allowed bugs intel core 2 intel xeon microcodes fixed patching microprograms requiring entire chips replaced prominent set microcode patches intel offered processor architectures age bid counter security vulnerabilities discovered designs spectre meltdown public start 2018 microcode update installed linux freebsd windows motherboard bios comparison vliw risc design trend heavily microcoded processors complex instructions 1960s continued roughly mid 1980s risc design philosophy started prominent cpu microcode takes clock cycles execute single instruction clock cycle step microprogram instruction cisc processors include instructions time execute variations interfere interrupt latency modern systems pipelining designing processor hardwired control risc advantages microcoded cisc counterpoints risc vliw processors designed execute instruction cache single cycle cpus microcode execute microinstruction cycle vliw processors instructions behave wide horizontal microcode typically fine grained control hardware microcode risc instructions narrow vertical microcode microcoding popular application specific processors network processors microcontrollers digital signal processors channel controllers disk controllers network interface controllers graphics processing units hardware micro ops modern cisc implementations x86 family decode instructions dynamically buffered micro operations μops instruction encoding risc traditional microcode hardwired instruction decode unit emits μops common x86 instructions falls traditional microcode rom complex rarely instructions x86 μops microcode handle complex multistep operations loop string instructions floating unit transcendental functions unusual values denormal special purpose instructions cpuid 
20272	computerscience	minicomputer colloquially mini class computers developed mid 1960s sold mainframe mid size computers ibm direct competitors 1970 survey york times suggested consensus definition minicomputer machine costing input output device teleprinter memory capable running programs level language fortran basic class formed distinct software architectures operating systems minis designed control instrumentation human interaction communication switching distinct calculation record keeping sold indirectly original equipment manufacturers oems final application decade lifetime minicomputer class 1965–1985 100 companies formed dozen remained single chip cpu microprocessors appeared intel 4004 1971 term minicomputer machine lies middle range computing spectrum mainframe computers microcomputers term minicomputer contemporary term class midrange sparc power architecture itanium based systems oracle ibm hewlett packard history term minicomputer developed 1960s computers transistors core memory technologies minimal instructions sets expensive peripherals ubiquitous teletype model 33 asr 19 inch rack cabinets compared mainframes 1960s minicomputers arrive definition minicomputer vague consequence candidates minicomputer highly successful minicomputer digital equipment corporation dec 12 bit pdp built discrete transistors cost launched 1964 versions pdp advantage scale integrated circuits precursors pdp include pdp linc tx tx pdp dec rise minicomputer companies massachusetts route 128 including data wang laboratories apollo prime minicomputers midrange computers grew processing power capacity manufacturing process control telephone switching control laboratory equipment 1970s hardware launch aided design cad industry industries dedicated 7400 series ttl integrated circuits started appearing minicomputers late 1960s 74181 arithmetic logic unit alu commonly cpu data paths 74181 bus bits popularity bit slice architecture scientific computers nicolet 1080 7400 series ics parallel uncommon bits architecture 7400 series offered data selectors multiplexers buffers memories dual packages tenth inch spacing major components architecture evident naked eye starting 1980s minicomputers vlsi circuits launch mits altair 8800 1975 radio electronics magazine referred minicomputer term microcomputer usual personal computers based single chip microprocessors time microcomputers bit single user simple machines running simple program launcher operating systems cp dos minis powerful systems multi user multitasking operating systems vms unix classical mini 16 bit emerging performance superminis 32 bit mid 1980s 1990s minis micros decline minis happened cost microprocessor based hardware emergence inexpensive easily deployable local network systems emergence 68020 80286 80386 microprocessors desire users reliant inflexible minicomputer manufacturers departments data centers result minicomputers terminals replaced networked workstations file servers pcs installations 1980s 1990s change minicomputers inexpensive pc networks cemented development versions unix unix systems intel x86 microprocessor architecture including solaris linux freebsd netbsd openbsd windows series operating systems nt included server versions supported preemptive multitasking features required servers microprocessors powerful cpus built multiple components – distinguishing feature differentiating mainframes midrange systems microcomputers – increasingly obsolete largest mainframe computers digital equipment corporation dec leading minicomputer manufacturer time largest company ibm minicomputer declined generic unix servers intel based pcs dec minicomputer company including data prime computervision honeywell wang laboratories based england massachusetts miracle collapsed merged dec sold compaq 1998 data acquired emc corporation proprietary minicomputer architectures survive ibm 38 operating introduced advanced concepts lives ibm 400 realising myriad lines legacy code programs written stands application efforts ibm enable programs originally written 34 36 moved 400 400 replaced iseries subsequently replaced 2008 replaced ibm power systems contrast competing proprietary computing architectures 1980s dec vax wang hewlett packard hp3000 discontinued compatible upgrade path openvms runs hp alpha intel ia64 itanium cpu architectures tandem computers specialized reliable scale computing acquired compaq afterward combined entity merged hewlett packard nsk based nonstop product ported mips processors itanium based processors branded hp integrity nonstop servers earlier migration stack machines mips microprocessors customer software carried source integrity nonstop continues hp answer extreme scaling largest customers nsk operating termed nonstop os continues base software environment nonstop servers extended include support java integration popular development tools visual studio eclipse minicomputer industrial impact heritage variety companies emerged built turnkey systems minicomputers specialized software custom peripherals addressed specialized aided design aided manufacturing process control manufacturing resource planning minicomputers sold original equipment manufacturers resellers pioneering companies built minicomputers dec data hewlett packard hp refers hp3000 minicomputers servers minicomputers pcs servers microcomputers physically architecturally cpus operating systems developed integrating features minicomputers software context simple oss microcomputers inspired minicomputer oss cp similarity digital single user os rt 11 multi user rsts time sharing multiuser oss inspired descended minicomputer oss unix originally minicomputer os windows nt kernel—the foundation current versions windows borrowed design ideas liberally vms generation pc programmers educated minicomputer systems 
20412	computerscience	matlab matrix laboratory multi paradigm numerical computing environment proprietary programming language developed mathworks matlab matrix manipulations plotting functions data implementation algorithms creation user interfaces interfacing programs written languages including java fortran python matlab intended numerical computing optional toolbox mupad symbolic engine allowing access symbolic computing abilities additional package simulink adds graphical multi domain simulation model based design dynamic embedded systems 2018 matlab users worldwide matlab users backgrounds engineering science economics history cleve moler chairman science department university mexico started developing matlab late 1970s designed students access linpack eispack learn fortran spread universities strong audience applied mathematics community jack engineer exposed visit moler stanford university 1983 recognizing commercial potential joined moler steve bangert rewrote matlab founded mathworks 1984 continue development rewritten libraries jackpac 2000 matlab rewritten set libraries matrix manipulation lapack matlab researchers practitioners control engineering specialty spread domains education teaching linear algebra numerical analysis popular scientists involved image processing syntax matlab application built matlab scripting language common usage matlab application involves command window interactive mathematical executing files matlab code variables variables defined assignment operator codice matlab weakly typed programming language types implicitly converted inferred typed language variables assigned declaring type treated symbolic objects type change values constants computation involving values variables output function vectors matrices simple array defined colon syntax initial codice increment codice terminator instance defines variable named codice assigns existing variable codice array consisting values array starts initial increments step previous increment stops reaches avoid exceeding terminator increment left syntax colons default assigns variable named codice array values default incrementer indexing based usual convention matrices mathematics programming languages java matrices defined separating elements row blank space comma semicolon terminate row list elements surrounded square brackets parentheses access elements subarrays denote function argument list sets indices expressions evaluates submatrix rows columns written square identity matrix size generated function eye matrices size zeros generated functions zeros transposing vector matrix function transpose adding prime dot matrix dot matlab perform conjugate transpose matlab functions accept matrices apply element codice multiply element reduce element modulo matlab include standard loops applications vectorized notation produces code faster execute code excerpted function magic creates magic square odd values matlab function codice generate square matrices structures matlab structure data types variables matlab arrays adequate structure array element array field names addition matlab supports dynamic field names field field manipulations matlab jit support matlab structures simple bundling variables structure cost functions creating matlab function file match function file valid function names alphabetic character letters underscores functions sensitive function handles matlab supports elements lambda calculus introducing function handles function references implemented files anonymous nested functions classes object oriented programming matlab supports object oriented programming including classes inheritance virtual dispatch packages pass semantics pass reference semantics syntax calling conventions languages matlab classes reference classes depending class handle super class reference classes classes method behavior reference classes methodcan alter object object instance reference class simple class file named executed commands graphics graphical user interface programming matlab supports developing applications graphical user interface gui features matlab includes guide gui development environment graphically designing guis tightly integrated graph plotting features function plot produce graph vectors code produces figure sine function matlab program produce dimensional graphics functions surf plot3 mesh matlab graphical user interfaces programmed gui design environment guide tool interfacing languages matlab functions subroutines written programming languages fortran wrapper function created allowing matlab data types passed returned mex files matlab executables dynamically loadable object files created compiling functions 2014 increasing interfacing python libraries written perl java activex called matlab matlab libraries xml sql support implemented wrappers java activex libraries calling matlab java complicated matlab toolbox sold separately mathworks undocumented mechanism called jmi java matlab interface confused unrelated java metadata interface called jmi official matlab api java 2016 alternatives mupad based symbolic math toolbox mathworks matlab connected maple mathematica libraries exist import export mathml license matlab proprietary product mathworks users subject vendor lock matlab builder products deploy matlab functions library files java application building environment future development tied matlab language toolbox purchased separately evaluation license requested mathworks sales department requires detailed project matlab evaluated granted evaluation license valid weeks student version matlab license matlab simulink subset mathwork toolboxes reduced prices reported european union eu competition regulators investigating mathworks refused sell licenses competitor regulators dropped investigation complainant withdrew accusation evidence wrongdoing alternatives matlab competitors commercial competitors include mathematica solver maple idl source alternatives matlab gnu octave scilab freemat sagemath intended compatible matlab language julia programming language initially matlab syntax languages treat arrays basic entities array programming languages apl fortran 90 lang statistical languages libraries add functionality existing languages perl data language perl ilnumerics numpy scipy matplotlib python scilua torch lua sciruby ruby numeric js javascript gnu octave unique alternatives treats incompatibility matlab bug matlab compatibility gnu octave gnu octave superset matlab language release history release version reported concurrent license manager program flexlm complete list matlab official toolboxes consult matlab release notes easter eggs easter eggs exist matlab include hidden pictures jokes typing spy generate picture spies spy spy displays image dog typing randomly outputs philosophical answer commands include penny toilet image life easter egg appears version matlab 
20926	computerscience	supervised learning machine learning task learning function maps input output based input output pairs infers function consisting set training examples supervised learning pair consisting input object typically vector desired output called supervisory signal supervised learning algorithm analyzes training data produces inferred function mapping examples optimal scenario algorithm correctly determine class labels unseen instances requires learning algorithm generalize training data unseen situations reasonable inductive bias parallel task human animal psychology referred concept learning steps solve supervised learning perform steps algorithm choice wide range supervised learning algorithms strengths weaknesses single learning algorithm supervised learning lunch theorem major issues supervised learning bias variance tradeoff issue tradeoff bias variance imagine equally training data sets learning algorithm biased input trained data sets systematically incorrect predicting correct output learning algorithm variance input predicts output values trained training sets prediction error learned classifier sum bias variance learning algorithm tradeoff bias variance learning algorithm bias flexible fit data learning algorithm flexible fit training data set variance key aspect supervised learning methods adjust tradeoff bias variance automatically providing bias variance parameter user adjust function complexity training data issue training data relative complexity true function classifier regression function true function simple inflexible learning algorithm bias variance learn data true function highly complex involves complex interactions input features behaves input space function learnable training data flexible learning algorithm bias variance dimensionality input space issue dimensionality input space input feature vectors dimension learning difficult true function depends features extra dimensions confuse learning algorithm variance input dimensionality typically requires tuning classifier variance bias practice engineer manually remove irrelevant features input data improve accuracy learned function addition algorithms feature selection seek identify relevant features discard irrelevant instance strategy dimensionality reduction seeks map input data dimensional space prior running supervised learning algorithm noise output values fourth issue degree noise desired output values supervisory target variables desired output values incorrect human error sensor errors learning algorithm attempt function matches training examples attempting fit data carefully leads overfitting overfit measurement errors stochastic noise function learn complex learning model situation target function modeled corrupts training data phenomenon called deterministic noise type noise bias variance estimator practice approaches alleviate noise output values stopping prevent overfitting detecting removing noisy training examples prior training supervised learning algorithm algorithms identify noisy training examples removing suspected noisy training examples prior training decreased generalization error statistical significance factors factors choosing applying learning algorithm include application engineer compare multiple learning algorithms experimentally determine hand cross validation tuning performance learning algorithm time consuming fixed resources spend time collecting additional training data informative features spend extra time tuning learning algorithms algorithms learning algorithms supervised learning algorithms set training examples form feature vector label class learning algorithm seeks function input space andformula output space function 11 element space functions 12 called hypothesis space convenient torepresent 11 scoring function 14 11 defined returning 16 score 17 18 denote space scoring functions 12 18 space functions learning algorithms probabilistic models 11 takes form conditional probability model 22 23 takes form joint probability model 24 naive bayes linear discriminant analysis joint probability models logistic regression conditional probability model basic approaches choosing 23 11 empirical risk minimization structural risk minimization empirical risk minimization seeks function fits training data structural risk minimization includes penalty function controls bias variance tradeoff assumed training set consists sample independent identically distributed pairs 27 measure function fits training data loss function 28 defined training 29 loss predicting 30 31 risk 32 function 11 defined expected loss 11 estimated training data asempirical risk minimization empirical risk minimization supervised learning algorithm seeks function 11 minimizes 32 supervised learning algorithm constructed applying optimization algorithm 11 11 conditional probability distribution 40 loss function negative log likelihood 41 empirical risk minimization equivalent maximum likelihood estimation 12 candidate functions training set empirical risk minimization leads variance poor generalization learning algorithm ableto memorize training examples generalizing called overfitting structural risk minimization structural risk minimization seeks prevent overfitting incorporating regularization penalty optimization regularization penalty viewed implementing form occam razor prefers simpler functions complex wide variety penalties employed correspond definitions complexity function 11 linear function forma popular regularization penalty 45 squared euclidean norm weights 46 norm norms include 47 norm 48 49 norm 50s penalty denoted 51 supervised learning optimization function 11 minimizesthe parameter 54 controls bias variance tradeoff 55 empirical risk minimization bias variance 54 learning algorithm bias variance 54 chosen empirically cross validation complexity penalty bayesian interpretation negative log prior probability 11 59 60 posterior probabability 11 generative training training methods discriminative training methods seek function 11 discriminates output values discriminative model special 24 joint probability distribution loss function negative log likelihood 64 risk minimization algorithm perform generative training 23 regarded generative model explains data generated generative training algorithms simpler computationally efficient discriminative training algorithms solution computed closed form naive bayes linear discriminant analysis generalizations standard supervised learning generalized 
21173	computerscience	neuropsychology linguistics philosophy language natural language ordinary language language evolved naturally humans repetition conscious planning premeditation natural languages forms speech signing distinguished constructed formal languages program computers study logic defining natural language exact definition varies scholars natural language broadly defined contrast artificial constructed languages programming languages international auxiliary languages communication systems nature examples include bees waggle dance whale song researchers applied linguistic cognates dialect syntax language varieties languages natural languages varieties subject degrees published prescriptivism language regulation nonstandard dialects viewed wild type comparison standard languages official language regulating academy standard french french academy classified natural language field natural language processing prescriptive constructed classified constructed language controlled classified controlled natural language controlled languages controlled natural languages subsets natural languages grammars dictionaries restricted reduce eliminate ambiguity complexity instance cutting rarely superlative adverbial forms irregular verbs purpose development implementation controlled natural language typically aid native speakers natural language understanding ease processing natural language controlled natural language simplified english originally developed aerospace industry maintenance manuals constructed languages international auxiliary languages loveconstructed international auxiliary languages esperanto interlingua native speakers considered natural languages natural languages communicate evolved natural esperanto designed zamenhof selecting elements natural languages grown natural fluctuations vocabulary syntax natural languages naturally standardized children natural tendency correct illogical grammatical structures parents speech development pidgin languages creole languages explained steven pinker language instinct languages including constructed languages esperanto strict rules attempt consciously remove irregularities exception true native speakers languages substantive basis designation vocabulary grammar orthography interlingua natural standardized linguistic body predated considered product human experts interlingua naturalistic natural latino sine flexione naturalistic auxiliary language naturalistic content spoken 
21459	computerscience	rolf nevanlinna prize named honor rolf nevanlinna awarded international congress mathematicians outstanding contributions mathematical aspects sciences including prize established 1981 executive committee international mathematical union imu named honour finnish mathematician rolf nevanlinna died earlier award consists gold medal cash prize fields medal prize targeted mathematicians 40 january award eligible medal features profile nevanlinna rolf nevanlinna prize characters rh 83 obverse rh refers raimo heino medal designer 83 minting reverse figures university helsinki prize sponsor engraved rim bears prizewinner appropriateness naming prize questioned nevanlinna involvement nazis shortly july 2016 alexander soifer president federation national mathematics competitions forwarded personal organization’s requests executive committee imu change prize’s july 30 31 2018 18th assembly imu decided remove rolf nevanlinna prize achievement mathematics science replace resolution 2018 resolutions 
21523	computerscience	artificial neural networks ann connectionist systems computing systems vaguely inspired biological neural networks constitute animal brains neural network algorithm framework machine learning algorithms process complex data inputs systems learn perform tasks examples programmed task specific rules image recognition learn identify images cats analyzing images manually labeled cat cat identify cats images prior knowledge cats fur tails whiskers cat automatically generate identifying characteristics learning material process ann based collection connected units nodes called artificial neurons loosely model neurons biological brain connection synapses biological brain transmit signal artificial neuron artificial neuron receives signal process signal additional artificial neurons connected common ann implementations signal connection artificial neurons real output artificial neuron computed linear function sum inputs connections artificial neurons called edges artificial neurons edges typically weight adjusts learning proceeds weight increases decreases strength signal connection artificial neurons threshold signal aggregate signal crosses threshold typically artificial neurons aggregated layers layers perform kinds transformations inputs signals travel layer input layer layer output layer traversing layers multiple times original goal ann approach solve human brain time attention moved performing specific tasks leading deviations biology artificial neural networks variety tasks including vision speech recognition machine translation social network filtering playing board video games medical diagnosis history warren mcculloch walter pitts 1943 created computational model neural networks based mathematics algorithms called threshold logic model paved neural network split approaches approach focused biological processes brain focused application neural networks artificial intelligence led nerve networks link finite automata hebbian learning late 1940s hebb created learning hypothesis based mechanism neural plasticity hebbian learning hebbian learning unsupervised learning evolved models term potentiation researchers started applying ideas computational models 1948 turing type machines farley clark 1954 computational machines called calculators simulate hebbian network neural network computational machines created rochester holland habit duda 1956 rosenblatt 1958 created perceptron algorithm pattern recognition mathematical notation rosenblatt circuitry basic perceptron exclusive circuit processed neural networks time 1959 biological model proposed nobel laureates hubel wiesel based discovery types cells primary visual cortex simple cells complex cells functional networks layers published ivakhnenko lapa 1965 method data handling neural network stagnated machine learning minsky papert 1969 discovered key issues computational machines processed neural networks basic perceptrons incapable processing exclusive circuit computers processing power effectively handle required neural networks neural network slowed computers achieved processing power artificial intelligence focused level symbolic models processed algorithms characterized expert systems knowledge embodied rules late 1980s expanded level symbolic machine learning characterized knowledge embodied parameters cognitive model backpropagation key trigger renewed neural networks learning werbos 1975 backpropagation algorithm effectively solved exclusive training multi layer networks feasible efficient backpropagation distributed error term layers modifying weights node mid 1980s parallel distributed processing popular connectionism rumelhart mcclelland 1986 connectionism simulate neural processes support vector machines simpler methods linear classifiers gradually overtook neural networks machine learning popularity neural networks transformed domains prediction protein structures 1992 max pooling introduced shift invariance tolerance deformation aid 3d object recognition 2010 backpropagation training max pooling accelerated gpus perform pooling variants vanishing gradient layered feedforward networks backpropagation recurrent neural networks rnns errors propagate layer layer shrink exponentially layers impeding tuning neuron weights based errors deep networks overcome schmidhuber multi level hierarchy networks 1992 pre trained level time unsupervised learning fine tuned backpropagation behnke 2003 relied sign gradient rprop image reconstruction localization hinton 2006 proposed learning level representation successive layers binary real valued latent variables restricted boltzmann machine model layer layers learned deep architecture generative model reproducing data sampling model ancestral pass level feature activations 2012 dean created network learned recognize level concepts cats watching unlabeled images youtube videos earlier challenges training deep neural networks addressed methods unsupervised pre training computing power increased gpus distributed computing neural networks deployed scale image visual recognition deep learning hardware based designs computational devices created cmos biophysical simulation neuromorphic computing nanodevices scale principal components analyses convolution create class neural computing fundamentally analog digital implementations digital devices ciresan colleagues 2010 schmidhuber vanishing gradient gpus propagation feasible layered feedforward neural networks contests 2009 2012 recurrent neural networks deep feedforward neural networks developed schmidhuber international competitions pattern recognition machine learning directional multi dimensional short term memory lstm graves competitions connected handwriting recognition 2009 international conference document analysis recognition icdar prior knowledge languages learned ciresan colleagues pattern recognition contests including ijcnn 2011 traffic sign recognition competition isbi 2012 segmentation neuronal structures electron microscopy stacks challenge neural networks pattern recognizers achieve human competitive superhuman performance benchmarks traffic sign recognition ijcnn 2012 mnist handwritten digits researchers demonstrated 2010 deep neural networks interfaced hidden markov model context dependent define neural network output layer drastically reduce errors vocabulary speech recognition tasks voice search gpu based implementations approach pattern recognition contests including ijcnn 2011 traffic sign recognition competition isbi 2012 segmentation neuronal structures em stacks challenge imagenet competition deep highly nonlinear neural architectures neocognitron standard architecture vision inspired simple complex cells pre trained unsupervised methods hinton team lab 2012 contest sponsored merck design software molecules identify drugs convolutional networks art deep learning feedforward networks alternated convolutional layers max pooling layers topped sparsely connected layers final classification layer learning unsupervised pre training convolutional layer filters convolved input filter equivalent weights vector trained supervised deep learning methods achieve human competitive performance tasks artificial neural networks guarantee shift invariance deal natural objects cluttered scenes invariance extended shift ann learned concepts location type object class label scale lighting realized developmental networks dns embodiments networks wwn 2008 wwn 2013 models artificial neural network network simple elements called artificial neurons receive input change internal activation input produce output depending input activation artificial neuron mimics biophysical neuron inputs outputs biological neuron model network forms connecting output neurons input neurons forming directed weighted graph weights functions compute activation modified process called learning governed learning rule components artificial neural network neurons neuron label receiving input predecessor neurons consists components output function simply identity function input neuron predecessor serves input interface network output neuron successor serves output interface network connections weights biases network consists connections connection transferring output neuron 13 input neuron sense 13 predecessor successor 13 connection assigned weight 19 bias term total weighted sum inputs serve threshold shift activation function propagation function propagation function computes input neuron outputs 22 predecessor neurons typically formwhen bias function form learning rule learning rule rule algorithm modifies parameters neural network input network produce favored output learning process typically amounts modifying weights thresholds variables network neural networks functions neural network models viewed simple mathematical models defining function 26 distribution 27 27 29 models intimately learning rule common phrase ann model definition class functions class varying parameters connection weights specifics architecture neurons connectivity mathematically neuron network function 30 defined composition functions 31 decomposed functions conveniently represented network structure arrows depicting dependencies functions type composition nonlinear weighted sum 32 33 commonly referred activation function predefined function hyperbolic tangent sigmoid function softmax function rectifier function characteristic activation function smooth transition input values change change input produces change output refers collection functions 34 vector 35 figure depicts decomposition 36 dependencies variables arrows interpreted view functional view input 37 transformed dimensional vector 38 transformed dimensional vector finally transformed 36 view commonly encountered context optimization view probabilistic view random variable 41 depends random variable 42 depends 43 depends random variable 27 view commonly encountered context graphical models views equivalent architecture components individual layers independent components independent input 38 naturally enables degree parallelism implementation networks previous commonly called feedforward graph directed acyclic graph networks cycles commonly called recurrent networks commonly depicted manner figure 36 dependent implied temporal dependence learning possibility learning attracted neural networks specific task solve class functions 48 learning set observations 49 solves task optimal sense entails defining cost function 50 optimal solution 51 52 53 solution cost cost optimal solution mathematical optimization cost function 54 concept learning measure solution optimal solution solved learning algorithms search solution space function cost applications solution data dependent cost function observations model relate data frequently defined statistic approximations simple finding model 36 minimizes 56 data pairs 57 drawn distribution 58 practical situations 59 samples 58 minimize 61 cost minimized sample data entire distribution 62 form online machine learning cost reduced online machine learning 58 fixed distribution slowly time neural network methods form online machine learning frequently finite datasets choosing cost function define hoc cost function frequently cost function desirable properties convexity arises naturally formulation probabilistic formulation posterior probability model inverse cost ultimately cost function depends task backpropagation dnn discriminatively trained standard backpropagation algorithm backpropagation is method calculate the gradient of the loss function  produces cost respect weights an ann basics continuous backpropagation derived context control theory kelley 1960 bryson 1961 principles dynamic programming 1962 dreyfus published simpler derivation based chain rule bryson ho multi stage dynamic optimization method 1969 1970 linnainmaa finally published method automatic differentiation discrete connected networks nested differentiable functions corresponds modern version backpropagation efficient networks sparse 1973 dreyfus backpropagation adapt parameters controllers proportion error gradients 1974 werbos mentioned possibility applying principle artificial neural networks 1982 applied linnainmaa method neural networks 1986 rumelhart hinton williams method generate internal representations incoming data hidden layers neural networks 1993 wan win international pattern recognition contest backpropagation weight updates backpropagation stochastic gradient descent equation 65 learning rate 66 cost loss function 67 stochastic term choice cost function depends factors learning type supervised unsupervised reinforcement activation function performing supervised learning multiclass classification common choices activation function cost function softmax function cross entropy function softmax function defined 68 69 represents class probability output unit 70 71 72 represent total input units 70 74 level cross entropy defined 75 76 represents target probability output unit 70 69 probability output 70 applying activation function output object bounding boxes form binary mask multi scale regression increase localization precision dnn based regression learn features capture geometric addition serving classifier remove requirement explicitly model relations helps broaden variety objects learned model consists multiple layers rectified linear unit activation function linear transformation layers convolutional connected convolutional layer additional max pooling network trained minimize error predicting mask ranging entire training set bounding boxes represented masks alternatives backpropagation include extreme learning machines prop networks training backtracking weightless networks connectionist neural networks learning paradigms major learning paradigms correspond learning task supervised learning unsupervised learning reinforcement learning supervised learning supervised learning set pairs 80 aim function 81 allowed class functions matches examples infer mapping implied data cost function mismatch mapping data implicitly prior knowledge domain commonly cost squared error minimize average squared error network output 82 target 83 pairs minimizing cost gradient descent class neural networks called multilayer perceptrons mlp produces backpropagation algorithm training neural networks tasks fall paradigm supervised learning pattern recognition classification regression function approximation supervised learning paradigm applicable sequential data hand writing speech gesture recognition learning teacher form function continuous feedback quality solutions unsupervised learning unsupervised learning data 37 cost function minimized function data 37 network output 36 cost function dependent task model domain priori assumptions implicit properties model parameters observed variables trivial model 87 88 constant cost 89 minimizing cost produces 88 equal data cost function complicated form depends application compression mutual 37 30 statistical modeling posterior probability model data note examples quantities maximized minimized tasks fall paradigm unsupervised learning estimation applications include clustering estimation statistical distributions compression filtering reinforcement learning reinforcement learning data 37 generated agent interactions environment time 94 agent performs action 95 environment generates observation 96 instantaneous cost 97 unknown dynamics aim discover policy selecting actions minimizes measure term cost expected cumulative cost environment dynamics term cost policy unknown estimated formally environment modeled markov decision process mdp 98 actions 99 probability distributions instantaneous cost distribution 100 observation distribution 101 transition 102 policy defined conditional distribution actions observations define markov chain aim discover policy minimizes cost artificial neural networks frequently reinforcement learning algorithm dynamic programming coupled artificial neural networks neurodynamic programming bertsekas tsitsiklis applied multi dimensional nonlinear involved vehicle routing natural resources management medicine ability artificial neural networks mitigate losses accuracy reducing discretization grid density numerically approximating solution original control tasks fall paradigm reinforcement learning control games sequential decision tasks learning algorithms training neural network model essentially selecting model set allowed models bayesian framework determining distribution set allowed models minimizes cost numerous algorithms training neural network models viewed straightforward application optimization theory statistical estimation employ form gradient descent backpropagation compute actual gradients simply derivative cost function respect network parameters changing parameters gradient direction backpropagation training algorithms fall categories evolutionary methods gene expression programming simulated annealing expectation maximization parametric methods particle swarm optimization methods training neural networks convergent recursive learning algorithm learning method specially designed cerebellar model articulation controller cmac neural networks 2004 recursive squares algorithm introduced train cmac neural network online algorithm converge step update weights step input data initially algorithm computational complexity based qr decomposition recursive learning algorithm simplified optimization optimization algorithm repeats phase cycle propagation weight update input vector network propagated network layer layer reaches output layer output network compared desired output loss function error calculated neurons output layer error values propagated output network neuron error reflects contribution original output backpropagation error values calculate gradient loss function phase gradient fed optimization method update weights attempt minimize loss function algorithm 103 neural network 104 connections 105 inputs 106 outputs 107 denote vectors 108 109 vectors 110 111 vectors 112 called inputs outputs weights neural network corresponds function 113 weight 114 maps input 115 output 116 optimization takes input sequence training examples 117 produces sequence weights 118 starting initial weight 119 chosen random weights computed compute 120 121 122 output algorithm 123 function 124 computation step 125 calculating 126 127 variable weight 114 applying gradient descent function 129 local minimum starting 130 126 minimizing weight gradient descent algorithm code implement algorithm explicit formulas required gradient function 132 function 133 learning algorithm divided phases propagation weight update phase propagation propagation involves steps phase weight update weight steps ratio percentage influences speed quality learning called learning rate ratio faster neuron trains ratio accurate training sign gradient weight error varies inversely weight weight updated direction descending gradient learning repeated batches network performs adequately pseudocode pseudocode stochastic gradient descent algorithm training layer network hidden layer lines labeled pass implemented backpropagation algorithm calculates gradient error network network modifiable weights extension choice learning rate 134 strong change causing minimum missed learning rate slows training unnecessarily optimizations quickprop aimed speeding error minimization improvements increase reliability adaptive learning rate avoid oscillation network alternating connection weights improve rate convergence refinements algorithm adaptive learning rate inertia variable inertia term momentum 135 gradient change weighted weight adjustment additionally depends previous change momentum 135 equal change depends solely gradient depend change ball rolling mountain current speed determined current slope mountain inertia inertia 137where inertia current weight change 153 depend current gradient error function slope mountain 1st summand weight change previous time inertia 2nd summand inertia stuck steep ravines flat plateaus avoided gradient error function flat plateaus plateau lead deceleration gradient descent deceleration delayed addition inertia term flat plateau escaped modes learning modes learning stochastic batch stochastic learning input creates weight adjustment batch learning weights adjusted based batch inputs accumulating errors batch stochastic learning introduces noise gradient descent process local gradient calculated data reduces chance network stuck local minima batch learning typically yields faster stable descent local minimum update performed direction average error batch common compromise choice mini batches meaning batches samples batch selected stochastically entire data set variants method data handling method data handling gmdh features automatic structural parametric model optimization node activation functions kolmogorov gabor polynomials permit additions multiplications deep feedforward multilayer perceptron layers supervised learning network grows layer layer layer trained regression analysis useless items detected validation set pruned regularization size depth network depends task convolutional neural networks convolutional neural network cnn class deep feed networks composed convolutional layers connected layers matching typical artificial neural networks tied weights pooling layers max pooling structured fukushima convolutional architecture architecture cnns advantage 2d structure input data cnns suitable processing visual dimensional data superior image speech applications trained standard backpropagation cnns easier train regular deep feed neural networks parameters estimate examples applications vision include deepdream robot navigation development capsule neural network capsnet idea add structures called capsules cnn reuse output capsules form stable respect perturbations representations capsules short term memory short term memory lstm networks rnns avoid vanishing gradient lstm augmented recurrent gates called forget gates lstm networks prevent backpropagated errors vanishing exploding errors flow unlimited virtual layers space unfolded lstm lstm learn deep learning tasks require memories events happened thousands millions discrete time steps specific lstm topologies evolved lstm handle delays signals mix frequency components stacks lstm rnns trained connectionist temporal classification ctc rnn weight matrix maximizes probability label sequences training set input sequences ctc achieves alignment recognition 2003 lstm started competitive traditional speech recognizers 2007 combination ctc achieved speech data 2009 ctc trained lstm rnn win pattern recognition contests competitions connected handwriting recognition 2014 baidu ctc trained rnns break switchboard hub5 00 speech recognition benchmark traditional speech processing methods lstm improved vocabulary speech recognition speech synthesis google android photo real talking heads 2015 google speech recognition experienced 49 improvement ctc trained lstm lstm popular natural language processing previous models based hmms concepts lstm learn recognise context sensitive languages lstm improved machine translation language modeling multilingual language processing lstm combined cnns improved automatic image captioning deep reservoir computing deep reservoir computing deep echo networks deepesns provide framework efficiently trained models for hierarchical processing temporal data enabling investigation inherent role rnn layered composition deep belief networks deep belief network dbn probabilistic generative model multiple layers hidden units considered composition simple learning modules layer dbn generatively pre train dnn learned dbn weights initial dnn weights backpropagation discriminative algorithms tune weights helpful training data limited initialized weights hinder model performance pre trained weights region weight space closer optimal weights randomly chosen improved modeling faster convergence fine tuning phase memory storage retrieval neural networks memory storage retrieval neural networks lamstar fast deep learning neural networks layers filters simultaneously filters nonlinear stochastic logic stationary analytical biologically motivated learn continuously lamstar neural network serve dynamic neural network spatial time domains speed hebbian link weights integrate filters preprocessing functions layers dynamically rank significance layers functions relative learning task grossly imitates biological learning integrates preprocessors cochlea retina cortexes auditory visual regions deep learning capability enhanced inhibition correlation ability cope incomplete data lost neurons layers task transparent link weights link weights dynamic determination innovation redundancy facilitate ranking layers filters individual neurons relative task lamstar applied domains including medical financial predictions adaptive filtering noisy speech unknown noise image recognition video image recognition software security adaptive control linear systems lamstar faster learning speed error rate cnn based relu function filters max pooling 20 comparative studies applications demonstrate delving aspects data hidden shallow learning networks human senses predicting onset sleep apnea events electrocardiogram fetus recorded skin surface electrodes mother abdomen pregnancy financial prediction blind filtering noisy speech lamstar proposed 1996 developed graupe kordylewski 1997–2002 modified version lamstar developed schneider graupe 2008 stacked noising auto encoders auto encoder idea motivated concept representation classifier representation defined yields performing classifier encoder deterministic mapping 154 transforms input vector hidden representation 155 156 weight matrix offset vector bias decoder maps hidden representation reconstructed input 157 process auto encoding compare reconstructed input original minimize error reconstructed close original stacked denoising auto encoders partially corrupted output cleaned noised idea introduced 2010 vincent specific approach representation representation robustly corrupted input recovering clean input implicit definition ideas algorithm starts stochastic mapping 158 159 160 corrupting step corrupted input 159 passes basic auto encoder process mapped hidden representation 162 hidden representation reconstruct 163 stage minimization algorithm runs close uncorrupted input 158 reconstruction error 165 cross entropy loss affine sigmoid decoder squared error loss affine decoder deep architecture auto encoders stack encoding function 154 denoising auto encoder learned uncorrupt input corrupted input level trained stacked auto encoder trained output input supervised learning algorithm support vector machine classifier multi class logistic regression deep stacking networks deep stacking network dsn deep convex network based hierarchy blocks simplified neural network modules introduced 2011 deng dong formulates learning convex optimization closed form solution emphasizing mechanism similarity stacked generalization dsn block simple module easy train supervised fashion backpropagation entire blocks block consists simplified multi layer perceptron mlp single hidden layer hidden layer logistic sigmoidal units output layer linear units connections layers represented weight matrix input hidden layer connections weight matrix target vectors form columns matrix input data vectors form columns matrix matrix hidden units 167 modules trained layer weights stage function performs element wise logistic sigmoid operation block estimates final label class estimate concatenated original input form expanded input block input block original data downstream blocks input adds output preceding blocks learning upper layer weight matrix weights network formulated convex optimization closed form solution deep architectures dbns goal discover transformed feature representation structure hierarchy architecture parallel learning straightforward batch mode optimization purely discriminative tasks dsns perform conventional dbns tensor deep stacking networks architecture dsn extension offers improvements covariance statistics transforms convex layer convex upper layer tdsns covariance statistics bilinear mapping distinct sets hidden units layer predictions tensor parallelization scalability considered conventional learning batch mode parallelization parallelization scaling design larger deeper architectures data sets basic architecture suitable diverse tasks classification regression spike slab rbms deep learning real valued inputs gaussian restricted boltzmann machines led spike slab rbm ss rbm models continuous valued inputs strictly binary latent variables basic rbms variants spike slab rbm bipartite graph grbms visible units input real valued difference hidden layer hidden unit binary spike variable real valued slab variable spike discrete probability mass slab density continuous domain mixture forms prior extension ssrbm called µ ssrbm extra modeling capacity additional terms energy function terms enables model form conditional distribution spike variables marginalizing slab variables observation compound hierarchical deep models compound hierarchical deep models compose deep networks parametric bayesian models features learned deep architectures dbns dbms deep auto encoders convolutional variants ssrbms deep coding networks dbns sparse feature learning rnns conditional dbns noising auto encoders representation allowing faster learning accurate classification dimensional data architectures poor learning classes examples network units involved representing input adjusted degree freedom limiting degree freedom reduces parameters learn facilitating learning classes examples hierarchical bayesian hb models learning examples vision statistics cognitive science compound hd architectures aim integrate characteristics hb deep networks compound hdp dbm architecture hierarchical dirichlet process hdp hierarchical model incorporated dbm architecture generative model generalized abstract concepts flowing layers model synthesize examples classes natural levels learned jointly maximizing joint log probability score dbm hidden layers probability visible input 170 set hidden units 171 model parameters representing visible hidden hidden hidden symmetric interaction terms learned dbm model undirected model defines joint distribution 172 express learned conditional model 173 prior term 174 173 represents conditional dbm model viewed layer dbm bias terms 176 deep predictive coding networks deep predictive coding network dpcn predictive coding scheme empirically adjust priors inference procedure deep locally connected generative model extracting sparse features time varying observations linear dynamical model pooling strategy learn invariant feature representations units compose form deep architecture trained greedy layer wise unsupervised learning layers constitute markov chain layer depend preceding succeeding layers dpcns predict representation layer approach upper layer temporal dependencies previous dpcns extended form convolutional network networks separate memory structures integrating external memory artificial neural networks dates distributed representations kohonen organizing maps sparse distributed memory hierarchical temporal memory patterns encoded neural networks addresses content addressable memory neurons essentially serving address encoders decoders controllers memories differentiable lstm differentiable memory structures short term memory lstm approaches differentiable memory recurrent functions neural turing machines neural turing machines couple lstm networks external memory resources interact attentional processes combined analogous turing machine differentiable allowing efficiently trained gradient descent preliminary demonstrate neural turing machines infer simple algorithms copying sorting associative recall input output examples differentiable neural computers dnc ntm extension performed neural turing machines short term memory systems memory networks sequence processing tasks semantic hashing approaches represent previous experiences experience form local model called nearest neighbour nearest neighbors methods deep learning semantic hashing deep graphical model word count vectors set documents documents mapped memory addresses semantically documents located nearby addresses documents query document accessing addresses bits address query document sparse distributed memory operates 1000 bit addresses semantic hashing 32 64 bit addresses conventional architecture memory networks memory networks extension neural networks incorporating term memory term memory read written goal prediction models applied context question answering term memory effectively acts dynamic knowledge base output textual response team electrical engineers ucla samueli school engineering created physical artificial neural network analyze volumes data identify objects actual speed light pointer networks deep neural networks improved deepening parameter reduction maintaining trainability training extremely deep layers neural networks practical cpu architectures pointer networks neural random access machines overcome limitation external random access memory components typically belong architecture registers alu pointers systems operate probability distribution vectors stored memory cells registers model differentiable trains key characteristic models depth size short term memory parameters altered independently – models lstm parameters grows quadratically memory size encoder–decoder networks encoder–decoder frameworks based neural networks map highly structured input highly structured output approach arose context machine translation input output written sentences natural languages lstm rnn cnn encoder summarize source sentence summary decoded conditional rnn language model produce translation systems share building blocks gated rnns cnns trained attention mechanisms multilayer kernel machine multilayer kernel machines mkm learning highly nonlinear functions iterative application weakly nonlinear kernels kernel principal component analysis kpca method unsupervised greedy layer wise pre training step deep learning layer 178 learns representation previous layer 179 extracting 180 principal component pc projection layer 179 output feature domain induced kernel sake dimensionality reduction updated representation layer supervised strategy selects informative features features extracted kpca process drawbacks accompany kpca method building cells mkm straightforward kernel machines deep learning developed spoken language understanding main idea kernel machine approximate shallow neural infinite hidden units stacking splice output kernel machine raw input building level kernel machine levels deep convex network hyper parameter determined cross validation neural architecture search neural architecture search nas machine learning automate design artificial neural networks approaches nas designed networks compare hand designed systems basic search algorithm propose candidate model evaluate dataset feedback teach nas network artificial neural networks requires understanding characteristics ann capabilities fall broad categories applications ability reproduce model nonlinear processes artificial neural networks applications wide range disciplines application include identification control vehicle control trajectory prediction process control natural resource management quantum chemistry game playing pattern recognition radar systems identification signal classification 3d reconstruction object recognition sequence recognition gesture speech handwritten printed recognition medical diagnosis finance automated trading systems data mining visualization machine translation social network filtering mail spam filtering artificial neural networks diagnose cancers including lung cancer prostate cancer colorectal cancer distinguish highly invasive cancer cell lines invasive lines cell shape artificial neural networks accelerate reliability analysis infrastructures subject natural disasters predict foundation settlements artificial neural networks building black box models geoscience hydrology ocean modelling coastal engineering geomorphology types models types models defined levels abstraction modeling aspects neural systems range models short term behavior individual neurons models dynamics neural circuitry interactions individual neurons finally models behavior abstract neural modules represent complete subsystems include models term short term plasticity neural systems relations learning memory individual neuron level theoretical properties computational power multilayer perceptron universal function approximator proven universal approximation theorem proof constructive neurons required network topology weights learning parameters specific recurrent architecture rational valued weights opposed precision real valued weights power universal turing machine finite neurons standard linear connections irrational values weights machine super turing power capacity models capacity property roughly corresponds ability model function stored network notion complexity convergence models consistently converge single solution firstly local minima exist depending cost function model optimization method guarantee converge local minimum thirdly data parameters methods impractical cmac neural network recursive squares algorithm introduced train algorithm guaranteed converge step generalization statistics applications goal create generalizes unseen examples possibility training arises convoluted systems capacity network exceeds parameters approaches address training cross validation techniques check presence training optimally select hyperparameters minimize generalization error form regularization concept emerges probabilistic bayesian framework regularization performed selecting larger prior probability simpler models statistical learning theory goal minimize quantities empirical risk tructural risk roughly corresponds error training set predicted error unseen data overfitting supervised neural networks squared error mse cost function formal statistical methods determine confidence trained model mse validation set estimate variance calculate confidence interval output network assuming normal distribution confidence analysis statistically valid output probability distribution stays network modified assigning softmax activation function generalization logistic function output layer neural network softmax component component based neural network categorical target variables outputs interpreted posterior probabilities classification certainty measure classifications softmax activation function theory criticism training issues common criticism neural networks robotics require training real operation potential solutions include randomly shuffling training examples numerical optimization algorithm steps changing network connections examples called mini batches improving training efficiency convergence capability ongoing neural network introducing recursive squares algorithm cmac neural network training process takes step converge theoretical issues neural network solved computationally difficult queens travelling salesman factoring integers fundamental objection reflect real neurons function propagation critical artificial neural networks mechanism exists biological neural networks coded real neurons sensor neurons action potentials frequently sensor activation muscle cells pull motor neurons receive action potentials frequently relaying sensor neuron motor neuron principles handled biological neural networks subject active neural coding motivation artificial neural networks strictly replicate neural function biological neural networks inspiration central claim artificial neural networks embodies powerful principle processing principles defined claimed emergent network simple statistical association basic function artificial neural networks learning recognition alexander dewdney commented result artificial neural networks quality imparts peculiar aura laziness distinct lack curiosity computing systems human hand mind intervenes solutions magic learned biological brains shallow deep circuits reported brain anatomy displaying wide variety invariance weng argued brain wires signal statistics serial cascade catch major statistical dependencies hardware issues effective neural networks require considerable computing resources brain hardware tailored task processing signals graph neurons simulating simplified neuron von neumann architecture compel neural network designer millions database rows connections consume vast amounts memory storage designer transmit signals connections neurons matched enormous cpu processing power time schmidhuber notes resurgence neural networks century attributable advances hardware 1991 2015 computing power delivered gpgpus gpus increased fold standard backpropagation algorithm feasible training networks layers deeper accelerators fpgas gpus reduce training times months days neuromorphic engineering addresses hardware difficulty constructing von neumann chips implement neural networks circuitry chip optimized neural network processing called tensor processing unit tpu practical counterexamples criticisms arguments dewdney position neural networks solve complex diverse tasks ranging autonomously flying aircraft detecting credit card fraud mastering game technology writer roger bridgman commented true analyzing learned artificial neural network difficult easier analyze learned biological neural network researchers involved exploring learning algorithms neural networks gradually uncovering principles learning machine successful local local learning shallow deep architecture hybrid approaches advocates hybrid models combining neural networks symbolic approaches claim mixture capture mechanisms human mind types artificial neural networks variations simplest static types static components including units layers unit weights topology dynamic types change learning process complicated shorten learning periods produce types require learning supervised operator operate independently types operate purely hardware purely software purpose computers 
21642	computerscience	niklaus emil wirth born 15 february 1934 swiss scientist designed programming languages including pascal pioneered classic topics software engineering 1984 turing award recognized distinction science developing sequence innovative languages biography wirth born winterthur switzerland 1934 1959 earned degree electronics engineering swiss federal institute technology zürich eth zürich 1960 earned université laval canada 1963 awarded electrical engineering science eecs university california berkeley supervised designer pioneer harry huskey 1963 1967 served assistant professor science stanford university university zurich 1968 professor informatics eth zürich sabbaticals xerox parc california 1976–1977 1984–1985 wirth retired 1999 2004 fellow history museum seminal programming languages algorithms including euler algol pascal modula oberon programming languages wirth chief designer programming languages euler algol pascal modula modula oberon oberon oberon 07 major design implementation team lilith oberon operating systems lola digital hardware design simulation received association computing machinery acm turing award development languages 1984 1994 inducted fellow acm publications book written jointly kathleen jensen pascal user manual report served basis language implementation efforts 1970s 1980s united europe article program development stepwise refinement teaching programming considered classic software engineering 1975 wrote book algorithms data structures programs gained wide recognition major revisions book title algorithms data structures published 1985 2004 examples edition written pascal replaced editions examples written modula oberon textbook systematic programming introduction considered source students coding regarded challenging sought imperative reading numerical mathematics 1992 published jürg gutknecht documentation oberon os book martin reiser intended programmer guide wirth law 1995 popularized adage wirth law software slower rapidly hardware faster 1995 paper plea lean software attributes martin reiser 
21652	computerscience	natural language processing nlp subfield science engineering artificial intelligence concerned interactions computers human natural languages program computers process analyze amounts natural language data challenges natural language processing frequently involve speech recognition natural language understanding natural language generation history history natural language processing started 1950s earlier periods 1950 alan turing published article titled intelligence proposed called turing criterion intelligence georgetown experiment 1954 involved automatic translation russian sentences english authors claimed machine translation solved real progress slower alpac report 1966 failed fulfill expectations funding machine translation dramatically reduced machine translation conducted late 1980s statistical machine translation systems developed notably successful natural language processing systems developed 1960s shrdlu natural language restricted blocks worlds restricted vocabularies eliza simulation rogerian psychotherapist written joseph weizenbaum 1964 1966 human emotion eliza startlingly human interaction patient exceeded knowledge base eliza provide generic response responding head hurts head hurts 1970s programmers write conceptual ontologies structured real understandable data examples margie schank 1975 sam cullingford 1978 pam wilensky 1978 talespin meehan 1976 qualm lehnert 1977 politics carbonell 1979 plot units lehnert 1981 time chatterbots written including parry racter jabberwacky 1980s natural language processing systems based complex sets hand written rules starting late 1980s revolution natural language processing introduction machine learning algorithms language processing steady increase computational power moore law gradual lessening dominance chomskyan theories linguistics transformational grammar theoretical underpinnings discouraged sort corpus linguistics underlies machine learning approach language processing earliest machine learning algorithms decision trees produced systems hard rules existing hand written rules speech tagging introduced hidden markov models natural language processing increasingly focused statistical models soft probabilistic decisions based attaching real valued weights features input data cache language models speech recognition systems rely examples statistical models models robust unfamiliar input input errors common real data produce reliable integrated larger comprising multiple subtasks notable successes occurred field machine translation ibm successively complicated statistical models developed systems advantage existing multilingual textual corpora produced parliament canada european union result laws calling translation governmental proceedings official languages systems government systems depended corpora developed tasks implemented systems continues major limitation success systems result deal methods effectively learning limited amounts data increasingly focused unsupervised semi supervised learning algorithms algorithms learn data hand annotated desired answers combination annotated annotated data task difficult supervised learning typically produces accurate input data enormous annotated data including entire content wide inferior algorithm time complexity practical 2010s representation learning deep neural network style machine learning methods widespread natural language processing flurry techniques achieve art natural language tasks language modeling parsing popular techniques include word embeddings capture semantic properties increase learning level task question answering relying pipeline separate intermediate tasks speech tagging dependency parsing shift entailed substantial nlp systems designed deep neural network based approaches viewed paradigm distinct statistical natural language processing instance term neural machine translation nmt emphasizes deep learning based approaches machine translation learn sequence sequence transformations obviating intermediate steps word alignment language modeling statistical machine translation smt rule based statistical nlp days language processing systems designed hand coding set rules writing grammars devising heuristic rules stemming rarely robust natural language variation called statistical revolution late 1980s mid 1990s natural language processing relied heavily machine learning machine learning paradigm calls statistical inference automatically learn rules analysis corpora typical real examples corpus plural corpora set documents human annotations classes machine learning algorithms applied natural language processing tasks algorithms input set features generated input data earliest algorithms decision trees produced systems hard rules systems hand written rules common increasingly focused statistical models soft probabilistic decisions based attaching real valued weights input feature models advantage express relative certainty answers producing reliable model included component larger systems based machine learning algorithms advantages hand produced rules major evaluations tasks list commonly researched tasks natural language processing note tasks direct real applications commonly serve subtasks aid solving larger tasks natural language processing tasks closely intertwined frequently subdivided categories convenience coarse division 
22409	computerscience	os series operating systems initially created ibm leadership ibm software designer iacobucci result feud companies position os relative windows operating environment companies severed relationship 1992 os development fell ibm exclusively stands operating introduced generation change release ibm personal ps generation personal computers version os released december 1987 versions released december 2001 os intended protected mode successor pc dos notably basic calls modelled dos calls names started dos create family mode applications mode applications systems heritage os shares similarities unix xenix windows nt ibm discontinued support os 31 december 2006 updated maintained marketed ecomstation 2015 announced oem distribution os released called arcaos arcaos purchase development history 1985–1989 joint development development os ibm signed joint development agreement august 1985 code named cp dos product delivered os announced april 1987 released december original release textmode gui introduced os os features api controlling video display vio handling keyboard mouse events programmers writing protected mode bios access hardware addition development tools include subset video keyboard apis linkable libraries family mode programs dos task switcher named program selector ctrl esc hotkey combination allowing user select multitasked mode sessions screen multiple programs communications database oriented extensions delivered 1988 os extended edition sna 25 appc lan manager query manager sql promised user interface presentation manager introduced os october 1988 user interface windows released interface replaced versions closer appearance windows extended edition sold ibm sales channels introduced distributed database support ibm database systems sna communications support ibm mainframe networks 1989 version introduced installable filesystems notably hpfs filesystem hpfs improvements fat file including filenames form alternate data streams called extended attributes addition extended attributes fat file extended edition introduced tcp ip ethernet support os windows books late 1980s acknowledged existence systems promoted os future 1990 breakup collaboration ibm unravelled 1990 releases windows os time windows tremendous success selling millions copies success windows dos bundled computers os hand additional stand software package addition os lacked device drivers common devices printers ibm hardware windows hand supported larger variety hardware increasing popularity windows prompted shift development focus cooperating os ibm building business based windows technical practical reasons contributed breakup companies differences culture vision favored hardware approach contributed success pc ibm sought os drive sales hardware including systems support features programmers frustrated ibm bureaucracy lines code measure programmer productivity ibm developers complained terseness lack comments code developers complained ibm code bloated products differences api os announced windows completion windows api defined ibm requested api changed os issues surrounding application compatibility appeared os designers hoped source code conversion tools allowing complete migration windows application source code os os gain momentum vendors avoid developing os windows parallel os targets intel 80286 processor dos fundamentally ibm insisted supporting 80286 processor 16 bit segmented memory mode commitments customers purchased 80286 based ps 2s result ibm promises surrounding os release april 1992 os 16 bit protected mode benefit intel 80386 simpler 32 bit flat memory model virtual 8086 mode features painful providing support dos applications 1988 windows 386 cooperatively multitasked dos applications including expanded memory ems emulation os released 1991 limited dos box issues started parallel version windows future oriented portable hiring dave cutler vms architect 1988 created competition os team cutler os technology build digital creating dos nt os completely architecture ibm grew concerned delays development os initially companies agreed ibm maintenance os development os continue development os decided recast nt os windows nt leaving future os development ibm business perspective logical concentrate consumer operating systems based dos windows prepare compatibility existing windows applications waiting develop receive licensing money xenix os sales windows nt os heritage initial support hpfs filesystem mode os applications os lan manager network support nt materials included os copyright notices embedded software nt os support win2k resource kit windows nt support os presentation manager avio applications addition windows nt add subsystem presentation manager 1992 32 bit era os released april 1992 32 bit api native programs os contained 16 bit code drivers included ooui object oriented user interface called workplace object oriented interface departure previous gui providing environment program windows program manager workplace environment user manage programs files devices manipulating objects screen workplace object manipulated dos compatibility os touted ibm dos dos windows windows managed including licensed dos patched improved time os dos application time effective allowed os modified windows dos extender including windows applications limitations intel 80286 processor os dos program time allowed dos program total control dos mode crash entire contrast os benefit virtual 8086 mode intel 80386 processor create safer virtual machine dos programs included extensive set configuration options optimize performance capabilities dos program real mode operating 8086 xenix os virtual machine capabilities subject direct hardware access limitations 32 bit environments os protected mode dos programs vcpi interface standard mode windows supported programs written dpmi discouraged vcpi windows performance degradation windows nt os dos programs possibility masking real hardware interrupts dos program deadlock machine os hardware watchdog selected machines notably ibm machines break deadlock release leveraged enhancements intel 80486 intel pentium processors—the virtual interrupt flag vif virtual mode extensions vme —to solve windows compatibility compatibility windows windows achieved adapting windows user mode code components virtual dos machine vdm originally complete version windows code included os windows os windows os ibm developed versions os windows version user installed patching fly sparing cost additional windows license screen set video drivers seamlessly windows programs os desktop process windows extensive access hardware video result switching screen winos session workplace occasionally issues os runs user mode components windows compatible windows device drivers vxds applications multiple windows applications default single windows session multitasking cooperatively memory protection native windows achieve true isolation windows programs os multiple copies windows parallel residing separate vdm user optionally program windows session preemptive multitasking memory protection sessions applications cooperatively shared windows session isolating applications separate windows sessions cost additional hardware resources approach protect program windows session instance windows program running separate windows session programs running windows session windows applications running screen windowed mode windows session dde os windows applications ole windows applications 1994–1996 warp released 1994 os version labelled os warp highlight performance benefits freshen product image warp originally internal ibm release ibm claimed star trek terms internal names prior os releases external launch os warp 1994 patrick stewart master ceremonies kate mulgrew upcoming series substituted minute os warp offers host benefits os notably broader hardware support multimedia capabilities internet compatible networking includes basic office application suite ibm released versions expensive red spine expensive blue spine named color boxes red spine designed support windows applications utilizing existing installation windows hard drive blue spine includes windows support installation support windows applications windows installation computers sold windows pre installed price red spine popular product os warp connect—which lan client support built in—followed mid 1995 warp connect nicknamed grape os performance sensitive subsystems including graphics gre multimedia mmpm systems updated 32 bit code fixpack included os warp brought 32 bit windowing warp introduced object oriented 32 bit gradd display driver model 1996 warp java speech recognition software ibm released server editions warp warp bundled ibm lan server product operating installation personal version lotus notes included template databases contact management brainstorming distributed demo rom os warp essentially contained entire os easily accidentally cracked meaning people backdoor tactic increase os users belief increase sales demand party applications strengthen os desktop suggestion bolstered demo version replaced easily cracked released trial versions applications 2000 july edition australian personal magazine bundled software roms included version warp required activation essentially release special versions os 11 warp included symmetric multiprocessing smp support os sales concentrated networked computing corporate professionals 1990s overtaken windows nt os arguably technically superior windows 95 os failed develop penetration consumer stand desktop pc segments reports installed properly ibm aptiva series pcs offer 1994 ibm receive terms compaq largest pc manufacturer time license windows 95 ibm development os completely ibm refused ibm strategy promoting os warp disparaging windows ibm aimed drive sales software hardware 1995 windows 95 negotiations ibm difficult stalled ibm purchased lotus smartsuite competed office result dispute ibm signed license agreement 15 minutes windows 95 launch event competitors badly hurt sales ibm pcs ibm officials conceded os viable operating pc business workplace os 1991 ibm started development intended replacement os called workplace os product brand code borrowed sections code existing os aix products microkernel code base intended eventually host ibm operating systems including os microkernel personalities included major architectural features including registry jfs support unix graphics libraries driver model workplace os developed solely power platforms ibm intended market powerpcs effort market intel mission formed create prototypes machines disclosed corporate customers raised issues idea dropping intel advanced plans code base eventually include replacement os 400 operating workplace os microkernel product industries telecommunications set television receivers partial pre alpha version workplace os demonstrated comdex bemused gates stopped booth time public os user phoenix pre alpha code refused boot released 1995 990 spent development workplace os profit widespread adoption entire workplace os os product downsizing project launched internally ibm evaluate looming competitive situation windows 95 primary concerns included major code quality issues existing os product 20 service packs requiring diskettes original installation ineffective heavily matrixed development organization boca raton consultants reported basically reports austin study tightly classified registered confidential printed numbered copies identified untenable weaknesses failures board personal systems division ibm decision level division cut 95 budget entire product development including workplace os eliminate boca raton development lab sales marketing efforts product lay 300 development individuals sales support personnel 990 spent warp distributed version os 2001 fading dedicated community remained faithful os final mainstream release os failed catch mass market niches ibm traditionally stronghold bank installations automated teller machines os customized user interface french sncf national railways os thousands ticket selling machines telecom companies nortel os voicemail systems os host pc control satellite operations support equipment installed npr stations 1994 2007 receive network programming satellite ibm indicating shortly release warp os eventually withdrawn company support december 31 2006 sales os stopped december 23 2005 ibm version 52 released desktop server systems december 2001 serenity systems reselling os 2001 calling ecomstation version released 2004 series preliminary release candidates version availability released 15 2010 ecomstation version released 20 2011 ibm delivering defect support fee ibm urges customers migrate highly complex applications business technologies java platform neutral manner application migration completed ibm recommends migration operating suggesting linux alternative virtualization support running os virtualization appears improving party products os historically difficult virtual machine legacy x86 operating systems extensive reliance set features x86 cpu os prevented running vmware emulators qemu bochs suffer os beta vmware workstation released january 2000 hypervisor os company decided drop official os support virtualpc originally connectix os hardware virtualization support additions code greatly improves host–guest os interactions os additions current version virtualpc version included release current releases os supported host virtualpc addition guest note os runs guest versions virtualpc virtualization x86 based hosts emulation virtualpc mac virtualbox oracle corporation originally innotek sun supports os warp ecomstation guests attempting os ecomstation difficult impossible strict requirements vt amd hardware enabled virtualization acp2 mcp2 reported reliable manner difficulties efficiently running os created opportunity virtualization company bank moscow os hardware os support virtualization software easy company desired os hypervisor determined vmware possibility hired russian software developers write host based hypervisor officially support os parallels company parallels workstation born atms atm vendors ncr corporation diebold incorporated windows xp migration path os diebold incorporated initially shipped xp embedded edition exclusively extensive pressure customer banks support common os switched xp professional match primary competitor ncr corporation security niche os native viruses invulnerable design reduced market share appears discouraged virus writers os based antivirus programs dealing dos viruses windows viruses pass os server petitions source people hoped ibm release os source petitions held 2005 2007 ibm refused citing legal technical reasons entire os future party code ibm copyright code ibm engaged technology transfer commodore licensing amiga technology os exchange rexx scripting language os code written ibm prevent os announced sourced future hand ibm donated object rexx windows os object rexx project maintained rexx language association sourceforge petition arranged os2world os source operating systems linux profited os indirectly ibm release improved jfs file ported os code base ibm release source os jfs driver developers ported linux driver ecomstation functionality boot jfs partition jfs driver integrated ecomstation v2 successor os summary releases release dates refer english editions technology graphic layer named presentation manager manages windows fonts icons functionality networked version x11 windows gdi lies workplace wps introduced os wps object oriented allowing user perform traditional computing tasks accessing files printers launching legacy programs advanced object oriented tasks built party application objects extended integrated fashion mainstream operating wps ibm common user access user interface standards hardware vendors reluctant support device drivers alternative operating systems including os linux leaving users choices select vendors relieve issue video cards ibm licensed reduced version scitech display drivers allowing users choose wide selection cards supported scitech modular driver design wps represents objects disks folders files program objects printers object model som code shared applications written programming languages distributed version called dsom allowed objects computers communicate dsom based corba object oriented aspect som direct competitor component object model implemented radically manner instance notable differences som som support inheritance fundamental concepts oo programming —com support som dsom developed os includes radical advancement application development compound document technology called opendoc developed apple opendoc proved technology accepted users developers opendoc developed multimedia capabilities os accessible media control interface commands update bundled ibm version navigator plugins support mpeg files support formats png progressive jpeg divx ogg mp3 parties integrated multimedia offers standalone applications tcp ip stack based source bsd stack visible sccs compatible tools classic subjects comparison operating systems historical os iran export bank bank saderat iran teller machines atms local servers 30 000 stations 2011 bank moved virtualize renew infrastructure moving os virtual machines running windows os brazilian banks banco brasil peak 000 machines running os warp 1990s os automated teller machines 2006 workstations automated teller machines attendant computers migrated linux os banking industry suncorp bank australia atm network os late 2002 atms perisher blue os late 2009 decade os accounting professionals auditing companies mid 1990s native 32 bit accounting software developed serving corporate markets os faulty baggage handling denver international airport os eventually scrapped software written led massive delays airport os fault software written os baggage handling eventually removed os radio personality howard stern minute air rant os windows 95 recommended os os ibm 760cd laptop os satellite operations support soss npr public radio satellite soss controlled os npr stations receive programming feeds satellite soss introduced 1994 os retired 2007 npr switched successor contentdepot os control skytrain automated light rail vancouver british columbia canada late 2000s replaced windows xp os london underground jubilee extension signals control jlescs london control delivered alcatel 1999 2011 abandonment unimplemented original automatic train control seltrac jlescs provide automatic train operation manual train supervision os local computers distributed railway stratford westminster shunting tower stratford depot formed central equipment located neasden intended cover rest green park stanmore introduced os operative bank domestic centre staff bespoke program created access customer accounts easily migrated windows os shop supermarket chain installed stores march 2010 os ticket machines croydon tramlink outer london os york city subway metrocards os checkout systems safeway supermarkets os trenitalia desktops ticket counters automatic ticket counters 2011 incidentally automatic ticket counters os reliable current running flavor windows os main operating abbey national insurance motor direct centre products pmsc series iii insurance platform db2 1996 2001awards byte 1989 listed os excellence winners byte awards stating macintosh 1984 development platform search developers magazine predicted complete bug 80386 desktops sport os capable pcs os will—deservedly—supersede dos stands os milestone product march 1995 os awardsibm products utilizing os ibm os wide variety hardware products effectively form embedded operating 
23665	computerscience	digital imaging pixel pel dots picture element physical raster image addressable element addressable display device controllable element picture represented screen pixel sample original image samples typically provide accurate representations original intensity pixel variable color imaging systems color typically represented component intensities red green blue cyan magenta yellow black contexts descriptions camera sensors pixel refers single scalar element multi component representation called photosite camera sensor context sensel contexts refer set component intensities spatial position word pixel portmanteau pix pictures shortened pics el element formations el include voxel texel etymology word pixel published 1965 frederic billingsley jpl picture elements video images space probes moon mars billingsley learned word keith mcfarland link division precision palo alto originated mcfarland simply time circa 1963 word combination pix picture element word pix appeared variety magazine headlines 1932 abbreviation word pictures reference movies 1938 pix reference pictures photojournalists concept picture element dates earliest days television bildpunkt german word pixel literally picture 1888 german patent paul nipkow etymologies earliest publication term picture element wireless magazine 1927 earlier patents filed 1911 authors explain pixel picture cell 1972 graphics image video processing pel pixel ibm technical reference original pc pixels abbreviated px unit measurement commonly graphic design equivalent roughly measurement element display size matter screen resolution views pixilation spelled unrelated filmmaking technique dates cinema live actors posed frame frame photographed create motion animation archaic british word meaning possession spirits pixies term animation process 1950s animators including norman mclaren grant munro credited popularizing technical measures dots inch dpi pixels inch ppi interchangeably distinct meanings printer devices dpi measure printer density dot ink droplet placement quality photographic image printed 600 ppi 1200 dpi inkjet printer dpi 4800 dpi quoted printer manufacturers 2002 terms achievable resolution pixels represent image closer result resemble original pixels image called resolution resolution specific definition pixel counts expressed single megapixel digital camera nominal pixels pair 640 480 display 640 pixels 480 vga display total 640×480 307 200 pixels megapixels pixels color samples form digitized image jpeg file correspondence screen pixels depending displays image computing image composed pixels bitmapped image raster image word raster originates television scanning patterns halftone printing storage techniques sampling patterns convenience pixels arranged regular dimensional grid arrangement common operations implemented uniformly applying operation pixel independently arrangements pixels sampling patterns changing shape kernel pixel image reason care acquiring image device displaying converting image data pixel format resolution monitors computers pixels display image abstract image represents gui resolution image called display resolution determined video card lcd monitors pixels display image native resolution pixel triads triads determining native resolution crt monitors beam sweep rate fixed fixed native resolution crt monitors fixed beam sweep rate meaning native resolution set resolutions equally supported produce sharpest images lcd user ensure display resolution matches native resolution monitor resolution telescopes pixel scale astronomy angular distance objects sky fall pixel detector ccd infrared chip scale measured radians ratio pixel spacing focal preceding optics focal product focal ratio diameter lens mirror expressed units arcseconds pixel radian equals 180 π 3600≈206 265 arcseconds diameters millimeters pixel sizes micrometers yields factor 000 quoted 206p bits pixel distinct colors represented pixel depends bits pixel bpp bpp image bit pixel pixel additional bit doubles colors bpp image colors bpp image colors color depths 15 bits pixel depth sum bits allocated red green blue components highcolor meaning 16 bpp bits red blue bits green human eye sensitive errors green primary colors applications involving transparency 16 bits divided bits red green blue bit left transparency 24 bit depth bits component systems 32 bit depth 24 bit pixel extra bits opacity purposes combining image subpixels display image acquisition systems capable displaying sensing color channels pixel grid divided single color regions contribute displayed sensed color viewed distance displays lcd led plasma displays single color regions separately addressable elements subpixels lcds typically divide pixel vertically subpixels square pixel divided subpixels subpixel rectangular display industry terminology subpixels referred pixels basic addressable elements viewpoint hardware pixel circuits subpixel circuits digital camera image sensors single color sensor regions bayer filter pattern camera industry pixels display industry subpixels systems subpixels approaches approach referred subpixel rendering knowledge pixel geometry manipulate colored subpixels separately producing increase apparent resolution color displays crt displays red green blue masked phosphor dictated mesh grid called shadow mask require difficult calibration step aligned displayed pixel raster crts subpixel rendering concept subpixels samples megapixel digital cameras photosensitive electronics charge coupled device ccd complementary metal–oxide–semiconductor cmos image sensors consisting single sensor elements records measured intensity level digital cameras sensor array covered patterned color filter mosaic red green blue regions bayer filter arrangement sensor element record intensity single primary color light camera interpolates color neighboring sensor elements process called demosaicing create final image sensor elements called pixels record channel red green blue final color image color channels sensor interpolated called megapixel camera produces megapixel image image size scanner color contrasts fuzzier depending allocation primary colors green elements red blue bayer arrangement dxo labs invented perceptual megapixel mpix measure sharpness camera produces paired lens – opposed manufacturer camera product based camera sensor mpix claims accurate relevant photographers weighing camera sharpness mid 2013 sigma 35mm dg hsm lens mounted nikon d800 measured mpix 23 wipes d800 36 sensor method add megapixels introduced micro thirds camera 16mp sensor produce 64mp raw 40mp jpeg exposures shifting sensor pixel tripod level multi shots instance multiple 16mp images generated unified 64mp image 
23716	computerscience	programmer developer dev coder software engineer person creates software term programmer refer specialist computers generalist writes code kinds software practices professes formal approach programming programmer analyst programmer primary language assembly cobol java lisp python prefixed titles environment prefix titles range occupations including software developer developer mobile applications developer embedded firmware developer software engineer scientist software analyst involve programming require range skills simple term programmer positions considered insulting derogatory simplification history british countess mathematician ada lovelace considered programmer publish algorithm intended implementation charles babbage analytical engine october 1842 intended calculation bernoulli babbage machine completed functioning standard time algorithm person program functioning modern electronically based scientist konrad zuse 1941 eniac programming team consisting kay mcnulty betty jennings betty snyder marlyn wescoff fran bilas ruth lichterman regularly programmers international programmers day celebrated annually january 2009 government russia decreed professional annual holiday programmers day celebrated 13 september 12 september leap unofficial international holiday software word software 1953 print 1960s time computers programmed customers commercial vendors time univac ibm company founded provide software products services usage company 1955 software industry expanded 1960s computers sold mass produced quantities universities government business customers created demand software programs written house time staff programmers distributed freely users machine charge commercial basis firms sciences corporation founded 1959 started grow hardware makers started bundling operating systems software programming environments machines industry expanded greatly rise personal pc mid 1970s brought computing desktop office worker created growing market games applications utilities dos operating product dominant operating time 21st century successful business model arisen hosted software called software service saas time model attempted view producers proprietary software saas reduces concerns unauthorized copying accessed definition client software loaded user pc 2014 role cloud developer defined context definition developer published nature programmers write debug maintain detailed instructions called programs computers follow perform functions programmers conceive design logical structures solving technical innovations programming — advanced computing technologies sophisticated languages programming tools — redefined role programmer elevated programming job titles descriptions vary depending organization programmers settings including corporate technology departments software companies service firms government entities sizes professional programmers consulting companies client sites contractors licensing typically required programmer professional certifications commonly held programmers programming considered profession authorities disagree grounds careers legal licensing requirements count profession programmers varies depending type business writing programs instructions involved updating financial records required duplicate conditions aircraft pilots training flight simulator simple programs written hours complex require considered complete continuously improved stay programmers team senior programmer’s supervision programmers write programs specifications determined senior programmers systems analysts design process complete job programmer convert design logical series instructions follow programmer codes instructions programming languages programming languages depending purpose program cobol commonly business applications typically mainframe midrange computers fortran science engineering scientific business applications java vb php popular programming languages business applications programmers programming language languages learn languages easily practice programmers referred language java programmers type function perform environment database programmers mainframe programmers developers source code programs programmers programmers aware task routine perform inserting comments source code understand program easily documenting code save programmers libraries basic code modified customized specific application approach yields reliable consistent programs increases programmers productivity eliminating routine steps testing debugging programmers program running bugs errors identified programmer corrections rechecks program acceptably level severity bugs remain process called testing debugging programmer job programmers continue life program updating repairing modifying expanding existing programs called maintenance programming programmers contribute user guides online technical writers application programming programmers broad types application programmers systems programmers application programmers write programs handle specific job program track inventory organization revise existing packaged software customize generic applications frequently purchased independent software vendors systems programmers contrast write programs maintain control systems software operating systems database management systems workers instructions determine network workstations cpu handle jobs communicate peripheral equipment printers disk drives qualifications skills software developer deep technical expertise aspects computing positions require degree relevant field science technology engineering programming post graduate studies ideal software developer motivated professional carrying dynamic hands experience key languages programming php java javascript vb oracle uml linux python unix xml smalltalk software testing tools developer eric sink differences design software development programming apparent current market segregation programmers developers implements designs class structure hierarchy developers software architects systems architects design multi leveled architecture component interactions software types software programmers software development companies experts fields create software – programs designed specific clients packaged software use – ranging video games educational software programs desktop publishing financial planning programming packaged software constitutes rapidly growing segments services industry companies organizations – – set team ensure design development house software answer specific internal users existing software suitable expensive laboratories organizations people commonly programmer analysts responsible systems analysis actual programming transition mainframe environment based personal computers pcs blurred rigid distinction programmer user increasingly adept users tasks performed programmers growing packaged software spreadsheet database management software packages users write simple programs access data perform calculations addition rise internet development huge programming field software applications applications browser examples applications include google search service outlook mail service flickr photo sharing service programming editors source code editors editors designed programmers developers writing source code application program editors include features programmers include color syntax highlighting auto indentation auto complete bracket matching syntax check plug ins features aid users coding debugging testing globalization market bbc news 17 science students field months graduation 2009 rate university subjects surveyed medical students unemployed survey category class degrees technology game design science industries jobs extremely difficult inflating actual figure market programming offshore outsourcing foreign worker visas controversial topic crash dot bubble left programmers wages programming mentioned 2004 presidential debate topic offshore outsourcing companies claim skills shortage regard programming talent programmers unions counter companies exaggerating cheaper programmers developing countries avoid employer paid training industry specific technologies covered accredited degree programs reasons employers claiming skill shortages result cost saving combining disparate skill sets held specialized programmers generalized multifaceted positions qualified candidates desired experience enrollment degrees dropped lack science mathematics apparent fear programming subject pressures manufacturing agriculture careers situation confusion economy entering post age nature comparative advantages academic institutions institutional office statistics degrees conferred dips rises science degrees 30 trend decline growth compared stem degree growth peaks 1986 1992 2002 2008 periods flat growth declines addition bureau labor statistics occupational outlook 2016 26 decline programmers programming companies hire programmers countries wages 
23862	computerscience	python interpreted level purpose programming language created guido van rossum released 1991 python design philosophy emphasizes code readability notably whitespace constructs enable programming scales van rossum led language community stepping leader july 2018 python features dynamic type automatic memory management supports multiple programming paradigms including object oriented imperative functional procedural comprehensive standard library python interpreters operating systems cpython reference implementation python source software community based development model python implementations python cpython managed profit python software foundation history python conceived late 1980s guido van rossum centrum wiskunde informatica cwi netherlands successor abc language inspired setl capable exception handling interfacing amoeba operating implementation december 1989 van rossum influence python reflected title python community benevolent dictator life bdfl post permanent vacation july 12 2018 python released 16 october 2000 major features including cycle detecting garbage collector support unicode python released december 2008 major revision language completely compatible major features backported python version series releases python include codice utility automates partially translation python code python python life initially set 2015 postponed 2020 concern body existing code easily ported python january 2017 google announced python transcompiler improve performance concurrent workloads features philosophy python multi paradigm programming language object oriented programming structured programming supported features support functional programming aspect oriented programming including metaprogramming metaobjects magic methods paradigms supported extensions including design contract logic programming python dynamic typing combination reference counting cycle detecting garbage collector memory management features dynamic resolution late binding binds method variable names program execution python design offers support functional programming lisp tradition codice codice codice functions list comprehensions dictionaries sets generator expressions standard library modules itertools functools implement functional tools borrowed haskell standard language core philosophy summarized document zen python pep 20 includes aphorisms functionality built core python designed highly extensible compact modularity popular adding programmable interfaces existing applications van rossum vision core language standard library easily extensible interpreter stemmed frustrations abc espoused approach offering choice coding methodology python philosophy rejects exuberant syntax perl favor simpler cluttered grammar alex martelli clever considered compliment python culture python philosophy rejects perl approach language design favor one—and preferably one—obvious python developers strive avoid premature optimization reject patches critical cpython reference implementation offer marginal increases speed cost clarity speed python programmer time critical functions extension modules written languages pypy time compiler cython translates python script direct level api calls python interpreter goal python developers keeping fun reflected language name—a tribute british comedy monty python—and occasionally playful approaches tutorials reference materials examples refer spam eggs famous monty python sketch standard foo bar common neologism python community pythonic wide range meanings program style code pythonic python idioms natural fluency language conforms python minimalist philosophy emphasis readability contrast code difficult understand reads rough transcription programming language called unpythonic users admirers python considered knowledgeable experienced referred pythonists pythonistas pythoneers syntax semantics python meant easily readable language formatting visually uncluttered english keywords languages punctuation languages curly brackets delimit blocks semicolons statements optional syntactic exceptions special pascal indentation python whitespace indentation curly brackets keywords delimit blocks increase indentation statements decrease indentation signifies current block program visual structure accurately represents program semantic structure feature termed rule statements control flow python statements include python support tail optimization class continuations guido van rossum support coroutine functionality extending python generators generators lazy iterators passed unidirectionally generator python pass generator function python passed multiple stack levels expressions python expressions languages java python distinction expressions statements rigidly enforced contrast languages common lisp scheme ruby leads duplicating functionality statements expression list comprehensions lambda expressions expressions statements assignment statement codice 74 form conditional expression conditional statement advantage avoiding classic error mistaking assignment operator codice 75 equality operator codice 34 conditions codice 77 syntactically valid unintended code codice 78 syntax error python methods methods objects functions attached object class syntax codice 79 normal methods functions syntactic sugar codice 80 python methods explicit codice 81 parameter access instance data contrast implicit codice 81 codice 83 object oriented programming languages java objective ruby typing python duck typing typed objects untyped variable names type constraints checked compile time operations object fail signifying object suitable type dynamically typed python typed forbidding operations defined adding string silently attempting sense python programmers define types classes object oriented programming instances classes constructed calling class codice 84 codice 85 classes instances metaclass codice 86 instance allowing metaprogramming reflection version python kinds classes style style syntax styles difference class codice 87 inherited indirectly style classes inherit codice 87 instances codice 86 versions python python onwards kinds classes style classes eliminated python term plan support gradual typing python syntax language static types checked default implementation cpython experimental optional static type checker named mypy supports compile time type checking mathematics python usual language arithmetic operators codice 48 codice 91 codice 92 codice 93 codice 56 codice 32 exponentiation codice 96 codice 97 matrix multiply codice 33 operator included version additionally unary operator codice 99 essentially inverts bits argument integers codice 100 operators include bitwise shift operators codice 101 shifts codice 102 left codice 103 codice 104 codice 105 shifts codice 102 codice 103 codice 108 behavior division changed time rounding negative infinity languages adds consistency instance equation codice 122 true equation codice 123 valid positive negative values codice 124 maintaining validity equation result codice 125 expected interval codice 126 positive integer lie interval codice 126 negative python codice 128 function rounding float nearest integer tie breaking versions codice 129 codice 130 −1 python codice 131 codice 132 python boolean expressions multiple equality relations manner consistent mathematics expression code tests codice 124 codice 126 codice 126 codice 136 derived languages interpret expression expression evaluate code result compared codice 136 python extensive built support arbitrary precision arithmetic integers transparently switched machine supported maximum fixed precision 32 64 bits belonging python type codice 138 arbitrary precision belonging python type codice 139 suffix textual representation python distinction codice 138 codice 139 types eliminated behavior contained codice 138 class codice 143 type class module codice 144 version decimal floating arbitrary precision rounding modes codice 145 type module codice 146 version arbitrary precision rational python extensive mathematics library party library numpy extends native capabilities frequently scientific scripting language aid numerical data processing manipulation libraries python standard library commonly cited strengths tools suited tasks internet facing applications standard formats protocols mime supported includes modules creating graphical user interfaces connecting relational databases generating pseudorandom arithmetic arbitrary precision decimals manipulating regular expressions unit testing standard library covered specifications server gateway interface wsgi implementation codice 147 pep 333 modules code internal documentation suites supplied standard library cross platform python code modules altering rewriting variant implementations development environments python implementations including cpython include read–eval–print loop repl permitting function command interpreter user enters statements sequentially receives shells including idle ipython add abilities auto completion session retention syntax highlighting standard desktop integrated development environments browser based ides sagemath intended developing science math python programs pythonanywhere browser based ide hosting environment canopy ide commercial python ide emphasizing scientific computing implementations reference implementation cpython reference implementation python written meeting c89 standard select c99 features compiles python programs intermediate bytecode executed virtual machine cpython distributed standard library written mixture native python platforms including windows modern unix systems platform portability earliest priorities implementations pypy fast compliant interpreter python time compiler brings speed improvement cpython stackless python fork cpython implements microthreads memory stack allowing massively concurrent programs pypy stackless version micropython circuitpython python variants optimised microcontrollers unsupported implementations time python compilers developed unsupported 2005 nokia released python interpreter series 60 mobile phones named pys60 includes modules cpython implementations additional modules integrate symbian operating project variants s60 platform party modules nokia n900 supports python gtk widget libraries enabling programs written target device cross compilers languages compilers level object languages unrestricted python restricted subset python language python source language performance performance comparison python implementations numerical combinatorial workload euroscipy 13 development python development conducted python enhancement proposal pep process primary mechanism proposing major features collecting community input issues documenting python design decisions outstanding peps reviewed commented python community guido van rossum python benevolent dictator life enhancement language corresponds development cpython reference implementation mailing list python dev primary forum language development specific issues discussed roundup bug tracker maintained python development originally hosted source code repository running mercurial python moved github january 2017 cpython public releases types distinguished version incremented alpha beta release candidates released previews testing final releases rough schedule release delayed code ready python development team monitors code running unit suite development buildbot continuous integration community python developers contributed 86 000 software modules python package pypi official repository party python libraries major academic conference python pycon special python mentoring programmes pyladies naming python derived british comedy monty python python creator guido van rossum enjoyed developing language monty python references frequently python code culture metasyntactic variables python literature spam eggs traditional foo bar official python documentation references monty python routines prefix python examples prefix names python applications libraries include pygame binding sdl python commonly create games pyqt pygtk bind qt gtk python pypy python implementation originally written python api documentation generators python api documentation generators include 2003 python consistently ranked popular programming languages tiobe programming community popular language java selected programming language 2007 2010 2018 empirical study scripting languages python productive conventional languages java programming involving string manipulation search dictionary determined memory consumption java worse organizations python include wikipedia google yahoo cern nasa facebook amazon instagram spotify entities ilm ita social news networking reddit written python python serve scripting language applications mod wsgi apache server server gateway interface standard api evolved facilitate applications frameworks django pylons pyramid turbogears web2py tornado flask bottle zope support developers design maintenance complex applications pyjs ironpython develop client ajax based applications sqlalchemy data mapper relational database twisted framework program communications computers dropbox libraries numpy scipy matplotlib effective python scientific computing specialized libraries biopython astropy providing domain specific functionality sagemath mathematical software notebook interface programmable python library covers aspects mathematics including algebra combinatorics numerical mathematics theory calculus python embedded software products scripting language including finite element method software abaqus 3d parametric modeler freecad 3d animation packages 3ds max blender cinema 4d lightwave houdini maya modo motionbuilder softimage visual effects compositor nuke 2d imaging programs gimp inkscape scribus paint shop pro musical notation programs scorewriter capella gnu debugger python pretty printer complex structures containers esri promotes python choice writing scripts arcgis video games programming languages google app engine java python algorithmic trading quantitative finance python implemented apis online brokerages languages wrappers python commonly artificial intelligence projects libraries tensorflow keras scikit learn scripting language modular architecture simple syntax rich processing tools python natural language processing operating systems include python standard component ships linux distributions amigaos freebsd netbsd openbsd macos command terminal linux distributions installers written python ubuntu ubiquity installer red hat linux fedora anaconda installer gentoo linux python package management portage python extensively security industry including exploit development sugar software laptop child xo developed sugar labs written python raspberry pi single board project python main user programming language libreoffice includes python intends replace java python python scripting provider core feature version february 2013 languages influenced python python design philosophy influenced programming languages python development practices emulated languages practice requiring document describing rationale issues surrounding change language python pep tcl erlang python received tiobe programming language awards 2007 2010 2018 award language growth popularity measured tiobe 
24226	computerscience	plan bell labs distributed operating originating computing sciences center csrc bell labs mid 1980s building unix concepts developed late 1960s final official release 2015 plan unix file metaphor extended pervasive network centric filesystem graphical user interface assumed basis functionality retaining heavily centric ideology plan bell labs reference wood 1959 cult science fiction movie plan outer space glenda plan bunny reference wood film glen glenda continues developed operating researchers hobbyists history plan bell labs originally developed starting mid 1980s computing science center bell labs originally developed unix plan team initially led rob pike ken thompson dave presotto phil winterbottom support dennis ritchie head computing techniques department notable developers contributed project including brian kernighan tom duff doug mcilroy bjarne stroustrup bruce ellis plan replaced unix bell labs primary platform operating systems explored original unix model facilitate programming notably distributed multi user environments development internal bell labs shipped operating universities 1992 1995 plan commercial parties book publisher harcourt brace source licenses costing 350 targeted embedded systems market market ritchie commented developers expect displacement established operating systems 1996 plan project burner favor inferno intended rival sun microsystems java platform late 1990s bell labs owner lucent technologies dropped commercial support project 2000 release distributed source license fourth release software license occurred 2002 user development community including current bell labs personnel produced minor daily releases form iso images bell labs hosted development development source tree accessible 9p protocols update existing installations addition official components os included isos bell labs hosts repository externally developed applications tools bell labs moved projects development official plan stopped unofficial development continues 9front fork active contributors provide monthly builds functionality 9front fork wi drivers audio drivers usb support built game emulator features plan inspired operating systems include harvey os jehanne os design concepts plan distributed operating designed network heterogeneous geographically separated computers function single typical plan installation users terminals running window rio access cpu servers handle computation intensive processes permanent data storage additional network hosts acting file servers archival storage designers idea operating systems processes running programs view namespace operating systems file single path refer resources processes potential complexity setup controlled set conventional locations common resources idea processes offer services processes providing virtual files processes namespace client process input output file inter process communication processes plan generalizes unix notion filesystem central access computing resources carries unix idea device files provide access peripheral devices mice removable media possibility mount filesystems residing physically distinct filesystems hierarchical namespace adds possibility mount connection server program speaks standardized protocol treat services namespace original window called 8½ exploited possibilities plan represents user interface terminal pseudo files read program notification mouse movements button clicks perform textual input output writing enacts graphics operations bit blit window multiplexes devices creating window program sets namespace connected hiding actual device files access window receives input output commands program handles appropriately sending output actual screen device focused program keyboard mouse input program communicating operating device drivers window assume namespace set special files provide input accept messages expects plan distributed operation relies process namespaces allowing client server processes communicate machines outlined command starts remote session computation server command exports local namespace including user terminal devices server remote programs perform input output terminal mouse keyboard display combining effects remote login shared network filesystem 9p protocol programs provide services files programs speak unified protocol called 9p compared systems reduces custom programming interfaces 9p generic medium agnostic byte oriented protocol messages delivered server client protocol refer communicate processes programs data including user interface network release 4th edition modified renamed 9p2000 operating systems plan provide special application programming interfaces berkeley sockets resources ioctl calls access devices plan device drivers implement control interface file hardware accessed ordinary file input output operations read write sharing device network accomplished mounting directory tree target machine union directories namespaces plan user collect files called names directory trees single location union directory behaves concatenation underlying directories concatenation controlled constituent directories files listing union directory simply report duplicate names resolution single path performed directories unioned denotes exists exists exist file exists recursive unioning subdirectories performed exists files accessible union union directory created command mounted contents replacing previous contents acme directory union mounted alice personal directory union mounted file requested looked finally separate process namespaces replace notion search path unix shells list directories search programs command plan directory adding commands binding directories single kernel separate mount tables process provide process file namespace processes namespaces constructed independently user simultaneously programs heterogeneous namespaces namespaces create isolated environment chroot secure plan union directory architecture inspired 4bsd linux union file implementations developers bsd union mounting facility recursive merging directories plan restrictive purpose special virtual filesystems proc calls process management plan file process appears directory control files manipulated ordinary file calls file approach plan processes managed simple file management tools cat processes copied moved files plan specialised calls ioctls accessing networking stack networking hardware file network connections controlled reading writing control messages control files directories interface respective protocols unicode reduce complexity managing character encodings plan unicode initial unicode implementation iso 10646 ken thompson invented utf native encoding plan entire converted 1992 utf preserves compatibility traditional terminated strings enabling reliable processing chaining multilingual string data unix pipes multiple processes single utf encoding characters cultures regions eliminates switching code sets combining design concepts design concepts plan supposed combined implement network address translation nat server union directory created overlaying router directory tree virtual private network vpn implemented overlaying union directory hierarchy remote gateway secured 9p public internet union directory hierarchy filters sandbox untrusted application implement firewall manner distributed computing network composed union directory hierarchies remote hosts interacting local features assembling complex distributed computing environment reusing existing hierarchical software plan benefit design tasks plan accomplished cat grep cp rm utilities combination rc default plan factotum authentication key management server plan handles authentication behalf programs secret implementation details factotum graphical programs unix plan designed graphics mind booting plan terminal rio windowing user create windows displaying rc graphical programs invoked replace window plumber inter process communication mechanism wide hyperlinking sam acme plan editors storage plan supports kfs paq cwfs fat fossil file systems designed bell labs plan snapshot storage capability hard drive venti archival file permanent data storage software development distribution package plan includes special compiler variants programming languages tailored set libraries windowing user interface specific plan bulk written dialect ansi extensions features left compilers language custom built portability mind author compile load slowly produce medium quality object code concurrent programming language called alef editions dropped maintenance reasons replaced threading library unix compatibility plan supposed development unix concepts compatibility preexisting unix software goal project command utilities plan share names unix counterparts plan support posix applications emulate berkeley socket interface ansi posix environment ape implements interface close ansi posix common extensions native plan interfaces conform standard includes posix compatible ape authors claim port window x11 plan ship x11 supporting properly job linux binaries linuxemu linux emulator application progress vice versa vx32 virtual machine modified plan kernel user process linux supporting unmodified plan programs reception comparison contemporary operating systems 1991 plan designers compared nineties operating systems terms size source code minimal albeit version size mach microkernel device drivers 5899 4622 lines code plan depending metric 25530 lines complete kernel comprised 18000 lines code 2006 count kernel 150 000 lines compared linux operating systems community commercial unix attempts achieving distributed computing remote filesystem access concurrently plan design effort included network file vnode architecture developed sun microsystems radical departures unix model sprite os uc berkeley sprite developer brent welch sunos vnode architecture limited compared plan capabilities support remote device access remote inter process communication cleanly preexisting unix domain sockets essentially user level servers integrated vnode architecture critique file communication textual message design plan limitations paradigm compared typed interfaces sun object oriented operating spring retrospective comparison plan sprite contemporary distributed operating amoeba thatimpact plan demonstrated integral concept unix—that interface represented set files—could implemented modern distributed features plan utf character encoding unicode implemented operating systems unix operating systems linux implemented 9p plan file features rfork plan process creation mechanism additionally plan user space plan applications tools including sam acme editors ported unix linux systems achieved level popularity projects seek replace gnu operating programs surrounding linux kernel plan operating programs 9wm window manager inspired 8½ windowing plan wmii heavily influenced plan science plan grid computing platform vehicle ubiquitous computing middleware commerce plan underlies coraid storage systems plan approached unix popularity tool factors contributed adoption plan include lack commercial backup user applications lack device drivers plan proponents developers claim hindering adoption solved original goals distributed development environment platform met enjoys moderate growing popularity inferno hosted capabilities vehicle bringing plan technologies systems hosted heterogeneous computing grids projects extend plan including 9atom 9front forks augment plan additional hardware drivers software including improved version upas mail compiler mercurial version control support programs plan ported raspberry pi single board harvey project attempts replace custom plan compiler gcc leverage modern development tools github coverity speed development derivatives forks inferno descendant plan shares design concepts source code kernel devices styx 9p2000 protocol inferno shares plan unix heritage bell labs unix philosophy command tools inferno plan tools translated limbo license starting release fourth edition april 2002 source code plan bell labs freely lucent public license 02 considered source license source initiative osi software license software foundation passes debian software guidelines february 2014 university california berkeley authorized current plan copyright holder – alcatel lucent – release plan software governed lucent public license version 02 gnu public license version 
25220	computerscience	quantum computing computing quantum mechanical phenomena superposition entanglement quantum device performs quantum computing completely binary digital electronic computers based transistors capacitors common digital computing requires data encoded binary digits bits definite quantum computation quantum bits qubits superpositions quantum turing machine theoretical model universal quantum field quantum computing initiated paul benioff yuri manin 1980 richard feynman 1982 david deutsch 1985 scale quantum computers theoretically solve classical computers algorithms integer factorization shor algorithm quantum algorithm simulation quantum body systems exist quantum algorithms simon algorithm faster probabilistic classical algorithm classical principle exponential resources simulate quantum algorithm quantum computation violate church–turing thesis 500 complex values 2501 bits stored comparison terabyte digital 243 bits hand quantum computers efficiently solve practically feasible classical computers review mikhail dyakonov ieee spectrum argues practical quantum computers implemented tremendous gap rudimentary hard experiments carried qubits extremely developed quantum computing theory relies manipulating thousands millions qubits calculate gap closed anytime basics classical memory bits bit represented quantum hand maintains sequence qubits represent quantum superposition qubit pair qubits quantum superposition qubits superposition quantum qubits arbitrary superposition simultaneously compares normal time quantum operates qubits quantum gates measurement alters observed algorithm composed fixed sequence quantum logic gates encoded setting initial values qubits classical calculation measurement collapsing qubits eigenstates qubit decomposing classical outcome classical bits algorithm measurement result unobserved quantum unobserved computers distributed quantum algorithms quantum algorithms probabilistic provide correct solution probability note term deterministic computing probabilistic computing term deterministic meaning science implementation qubits quantum start particles spin typically written true mapped effective spin principles operation quantum qubits fundamentally classical composed classical bits representing qubit classical requires storage complex coefficients characterize classical bit sufficient provide values bits qubits hold exponentially classical counterparts care overlook qubits probabilistic superposition final qubits measured configurations measurement incorrect qubits measurement qubits superposition measurement outcomes computation understand classical operates bit register exact register time probability distribution bit strings 000 001 010 011 100 101 110 111 uncertainty probability probabilistic possibility qubit quantum dimensional vector 11 dimensional vector witheach vector node holding amplitude bit string qubits coefficients 12 complex sum squares coefficients absolute values 13 equal 14 absolute squared 15 probability 14 measurement complex encodes magnitude direction complex plane phase difference coefficients represents meaningful parameter fundamental difference quantum computing probabilistic classical computing measure qubits observe bit string probability measuring string squared magnitude string coefficient probability measuring 000 17 probability measuring 001 18 measuring quantum complex coefficients 11 classical probability distribution 20 quantum collapses classical result measurement dimensional vector depending basis chosen space basis bit strings 000 001 111 computational basis bases unit orthogonal vectors eigenvectors pauli operator ket notation choice basis explicit 11 computational basis written computational basis single qubit dimensions 24 25 eigenvectors pauli operator single qubit 26 27 operation classical bit quantum qubit dimensional vectors manipulated classical quantum computation computing initialized zeros string 28 vector classical randomized computation evolves application stochastic matrices preserve probabilities add preserve l1 norm quantum computation hand allowed operations unitary matrices effectively rotations preserve sum squares add euclidean l2 norm unitaries applied depend physics quantum device rotations undone rotating quantum computations reversible technically quantum operations probabilistic combinations unitaries quantum computation generalize classical computation quantum circuit precise formulation finally termination algorithm result read classical sample probability distribution bit register definite bit string 000 quantum mechanically measures qubit equivalent collapsing quantum classical distribution coefficients classical squared magnitudes coefficients quantum sampling distribution destroys original quantum algorithms correct answer probability repeatedly initializing running measuring quantum probability correct answer increased contrast counterfactual quantum computation correct answer inferred quantum running technical sense earlier initialization frequent measurements counterfactual computation protocol details sequences operations quantum algorithms universal quantum shor algorithm grover algorithm deutsch–jozsa algorithm amplitude amplification quantum fourier transform quantum gate quantum adiabatic algorithm quantum error correction potential cryptography integer factorization underpins security public key cryptographic systems believed computationally infeasible ordinary integers product prime products 300 digit primes comparison quantum efficiently solve shor algorithm factors ability quantum break cryptographic systems sense polynomial time digits integer algorithm solving popular public key ciphers based difficulty factoring integers discrete logarithm solved shor algorithm rsa diffie–hellman elliptic curve diffie–hellman algorithms broken protect secure encrypted email types data breaking ramifications electronic privacy security cryptographic algorithms broken algorithms public key algorithms based integer factorization discrete logarithm shor algorithm applies mceliece cryptosystem based coding theory lattice based cryptosystems broken quantum computers finding polynomial time algorithm solving dihedral hidden subgroup break lattice based cryptosystems studied proven applying grover algorithm break symmetric secret key algorithm brute force requires time equal roughly 2n invocations underlying cryptographic algorithm compared roughly 2n classical meaning symmetric key lengths effectively halved aes 256 security attack grover algorithm aes 128 classical brute force search key size quantum cryptography fulfill functions public key cryptography quantum based cryptographic systems secure traditional systems quantum hacking quantum search factorization discrete logarithms quantum algorithms offering polynomial speedup classical algorithm including simulation quantum physical processes chemistry solid physics approximation jones polynomials solving pell equation mathematical proof equally fast classical algorithm discovered considered quantum computers offer polynomial speedup quantum database search solved grover algorithm quadratically queries database required classical algorithms advantage provable optimal grover algorithm maximal probability finding desired element oracle lookups examples provable quantum speedups query subsequently discovered finding collisions functions evaluating nand trees addressed grover algorithm properties properties running time grover algorithm quantum scale square root inputs elements database opposed linear scaling classical algorithms class grover algorithm applied boolean satisfiability instance database algorithm iterating answers application password cracker attempts guess password secret key encrypted file symmetric ciphers triple des aes vulnerable attack application quantum computing major government agencies quantum simulation chemistry nanotechnology rely understanding quantum systems systems impossible simulate efficient manner classically quantum simulation applications quantum computing quantum simulation simulate behavior atoms particles unusual conditions reactions collider quantum annealing adiabatic optimisation adiabatic quantum computation relies adiabatic theorem undertake calculations ground simple hamiltonian slowly evolved complicated hamiltonian ground represents solution question adiabatic theorem evolution slow stay ground times process solving linear equations quantum algorithm linear systems equations hhl algorithm named discoverers harrow hassidim lloyd expected provide speedup classical counterparts quantum supremacy john preskill introduced term quantum supremacy refer hypothetical speedup advantage quantum classical field google announced 2017 expected achieve quantum supremacy happen ibm 2018 classical computers beaten practical task views quantum supremacy potential future benchmark quantum supremacy achieved skeptics gil kalai doubt unruh doubted practicality quantum computers paper published 1994 paul davies 400 qubit conflict cosmological bound implied holographic principle roger schlafly claimed theoretical benefits quantum computing proven theory quantum mechanics imply standard interpretations worlds interpretation negative probabilities schlafly maintains born rule metaphysical fluff quantum mechanics rely probability branches science simply calculates expected values observables arguments turing complexity prefer bayesian interpretations quantum mechanics questioned physical nature mathematical abstractions employed obstacles technical challenges building scale quantum quantum computers solve faster classical david divincenzo ibm listed requirements practical quantum quantum decoherence challenges controlling removing quantum decoherence isolating environment interactions external decohere sources decoherence exist examples include quantum gates lattice vibrations background thermonuclear spin physical implement qubits decoherence irreversible effectively unitary highly controlled avoided decoherence times candidate systems transverse relaxation time nmr mri technology called dephasing time typically range nanoseconds temperature quantum computers require qubits cooled 20 millikelvins prevent decoherence result time consuming tasks render quantum algorithms inoperable maintaining qubits duration eventually corrupt superpositions issues difficult optical approaches timescales magnitude shorter cited approach overcoming optical pulse shaping error rates typically proportional ratio operating time decoherence time operation completed decoherence time quantum threshold theorem error rate quantum error correction suppress errors decoherence total calculation time decoherence time error correction scheme correct errors faster decoherence introduces cited figure required error rate gate fault tolerant computation 10−3 assuming noise depolarizing meeting scalability condition wide range systems error correction brings cost greatly increased required qubits required factor integers shor algorithm polynomial qubits factored error correction algorithms inflate figure additional factor 1000 bit implies 104 bits error correction error correction figure rise 107 bits computation time 107 steps 1 mhz approach stability decoherence create topological quantum anyons quasi particles threads relying braid theory form stable logic gates developments quantum computing models quantum computing models distinguished basic elements computation decomposed main models practical quantum turing machine theoretically direct implementation model pursued models computation equivalent simulate polynomial overhead physical realizations physically implementing quantum candidates pursued distinguished physical realize qubits candidates demonstrates topic spite rapid progress infancy vast flexibility timeline 1959 richard feynman lecture plenty possibility quantum effects computation 1980 paul benioff quantum mechanical hamiltonian models computers russian mathematician yuri manin motivated development quantum computers 1981 conference organized mit ibm physicist richard feynman urged build quantum nature classical dammit simulation nature quantum mechanical golly wonderful easy 1984 bb84 published quantum cryptography protocol ibm scientists charles bennett gilles brassard 1993 international scientists including charles bennett perfect quantum teleportation principle original destroyed 1994 peter shor bell labs discovered quantum algorithm quantum factor integers exponentially faster classical algorithm shor algorithm theoretically break public key cryptosystems sparked tremendous quantum computers 1996 divincenzo criteria published list conditions constructing quantum proposed theoretical physicist david divincenzo 2000 paper physical implementation quantum computation 2001 researchers demonstrated shor algorithm factor 15 qubit nmr 2005 researchers university michigan built semiconductor chip ion trap devices standard lithography scalable quantum computing 2009 researchers yale university created solid quantum processor qubit superconducting chip artificial atom qubits aluminum atoms acted single atom occupy team university bristol created silicon chip based quantum optics shor algorithm developments 2010 springer publishes journal quantum processing devoted subject february 2010 digital combinational circuits adder subtractor designed symmetric functions organized quantum gates april 2011 team scientists australia japan breakthrough quantum teleportation transferred complex set quantum data transmission integrity qubits superpositions 2011 wave systems announced commercial quantum annealer wave claiming 128 qubit processor 25 2011 lockheed martin agreed purchase wave lockheed university southern california usc house wave newly formed usc lockheed martin quantum computing center wave engineers designed chips empirical approach focusing solving investors academics wave demonstrated quantum criticism softened wave paper nature proved chips quantum properties published papers suggested wave machine operation explained classically requiring quantum models classical models insufficient data considered experts remain divided ultimate classification wave systems quantum behavior established concretely demonstration entanglement researchers university bristol created bulk optics version shor algorithm factor 21 september 2011 researchers proved quantum computers von neumann architecture separation ram november 2011 researchers factorized 143 qubits february 2012 ibm scientists breakthroughs quantum computing superconducting integrated circuits april 2012 multinational team researchers university southern california delft university technology iowa university science technology university california santa barbara constructed qubit quantum doped diamond crystal easily scaled functional temperature logical qubit directions electron spin nitrogen kernels spin microwave impulses grover algorithm generating answer 95 september 2012 australian researchers university south wales quantum announcing global breakthrough enabling manufacture memory building blocks team led australian engineers created qubit based single atom silicon invoking technological platform forms building blocks modern day computers october 2012 nobel prizes david wineland serge haroche basic understanding quantum quantum computing november 2012 quantum teleportation macroscopic object reported scientists university science technology china hefei december 2012 dedicated quantum computing software company 1qbit founded vancouver bc 1qbit company focus exclusively commercializing software applications commercially quantum computers including wave 1qbit demonstrated ability superconducting quantum annealing processors solve real february 2013 technique boson sampling reported photons optical lattice universal quantum practical science feb 15 2013in 2013 google announced launching quantum artificial intelligence lab hosted nasa ames center 512 qubit wave quantum usra universities space association invite researchers share time goal studying quantum computing machine learning google developed quantum machine learning algorithms learned principles mixing quantum classical computing 2014 reported based documents nsa contractor edward snowden national security agency nsa running 79 program titled penetrating hard targets develop quantum capable breaking vulnerable encryption 2014 researchers eth zürich usc google reported definition quantum speedup measure quantum speedup wave device explicitly rule 2014 researchers university south wales silicon protectant qubits accurate increasing time hold quantum computers easier build april 2015 ibm scientists claimed critical advances realization practical quantum claimed ability detect measure kinds quantum errors simultaneously square quantum bit circuit design scale larger dimensions october 2015 qutech conducts loophole bell inequality violation electron spins separated kilometres october 2015 researchers university south wales built quantum logic gate silicon time december 2015 nasa publicly displayed operational 15 quantum canadian company wave quantum artificial intelligence laboratory ames center california moffett field device purchased 2013 partnership google universities space association presence quantum effects wave quantum processing unit accepted tests wave quantum annealing processor outperforms selby’s algorithm 2016 ibm announced time quantum computing public cloud access experiments ibm’s quantum processor service called ibm quantum experience quantum processor composed superconducting qubits housed ibm watson center york august 2016 scientists university maryland built reprogrammable quantum october 2016 basel university variant electron hole based quantum manipulatingelectron spins electron holes semiconductor temperatures lot vulnerable decoherence dubbed positronic quantum quasi particle behaves positive electrical charge march 2017 ibm announced industry initiative build commercially universal quantum computing systems called ibm company released api application program interface ibm quantum experience enables developers programmers building interfaces existing quantum bit qubit cloud based quantum classical computers deep background quantum physics 2017 ibm announced built tested powerful universal quantum computing processors 16 qubit processor complex experimentation qubit processor ibm prototype commercial processor 17 qubits leverages materials device architecture improvements powerful quantum processor created ibm july 2017 researchers announced quantum simulator 51 qubits announcement mikhail lukin harvard university international conference quantum technologies moscow quantum simulator differs lukin’s simulator designed solve equation solving equation require building solve equations september 2017 ibm scientists qubit device model largest molecule beryllium hydride quantum published cover story peer reviewed journal nature october 2017 ibm scientists broke 49 qubit simulation barrier simulated 49 56 qubit short depth circuits lawrence livermore national laboratory vulcan supercomputer university illinois cyclops tensor framework originally developed university california november 2017 university sydney team australia microwave circulator quantum 1000 times conventional circulator topological insulators slow speed light material december 2017 ibm announced ibm network clients companies universities labs explore practical quantum applications ibm 20 qubit commercial systems business science include jpmorgan chase daimler samsung jsr corporation barclays hitachi metals honda nagase keio university oak ridge national lab oxford university university melbourne december 2017 released preview version quantum development kit includes programming language write programs emulated quantum 2017 wave reported selling 000 qubit quantum late 2017 2018 ibm intel google reported testing quantum processors 50 49 72 qubits realized superconducting circuits qubits circuits approaching range simulating quantum dynamics expected prohibitive classical computers argued improvements error rates classical simulation reach february 2018 scientists reported time discovery form light involve polaritons development quantum computers february 2018 qutech reported testing silicon based spin qubits quantum processor june 2018 intel testing silicon based spin qubit processor manufactured company d1d fab oregon july 2018 team led university sydney achieved multi qubit demonstration quantum chemistry calculation performed trapped ions leading hardware platforms race develop universal quantum december 2018 ionq reported machine built 160 qubits january 2019 ibm launched ibm integrated quantum computing commercial relation computational complexity theory class efficiently solved quantum computers called bqp bounded error quantum polynomial time quantum computers probabilistic algorithms bqp quantum computers counterpart bpp bounded error probabilistic polynomial time classical computers defined set solvable polynomial time algorithm probability error bounded quantum solve instance answer probability solution runs polynomial time bqp bqp contained complexity class precisely class decision subclass pspace bqp suspected disjoint complete strict superset integer factorization discrete log bqp suspected bpp suspected complete common misconception quantum computers solve complete polynomial time true suspected false capacity quantum accelerate classical algorithms rigid limits—upper bounds quantum computation complexity overwhelming classical calculations accelerated quantum takes computational tasks search grover algorithm optimal bohmian mechanics local hidden variable interpretation quantum mechanics local hidden variable quantum implement search item database 29 steps faster 29 steps grover algorithm search method quantum computers solve complete polynomial time quantum computers faster classical computers types solve classical computers solve turing machine simulate quantum computers quantum solve undecidable halting existence standard quantum computers disprove church–turing thesis speculated theories quantum gravity theory loop quantum gravity faster computers built defining computation theories time exists obvious observer submit input receive output 
25723	computerscience	theoretical science formal language theory regular language called rational language formal language expressed regular expression strict sense notion theoretical science opposed regular expressions engines modern programming languages augmented features recognition languages expressed classic regular expression alternatively regular language defined language recognized finite automaton equivalence regular expressions finite automata kleene theorem american mathematician stephen cole kleene chomsky hierarchy regular languages defined languages generated type grammars regular grammars regular languages input parsing programming language design formal definition collection regular languages alphabet Σ defined recursively regular expression syntax semantics note defining rules regular expression examples finite languages regular string language ε Ø regular typical examples include language consisting strings alphabet language consisting strings form simple language regular set strings ≥ intuitively recognized finite automaton finite automaton finite memory remember exact techniques prove rigorously equivalent formalisms regular language satisfies equivalent properties properties purely algebraic approaches define regular languages set statements formulated monoid ⊂Σ equivalence leads concept recognizable language authors properties alternative definition regular languages equivalences formalisms called kleene theorem textbooks precisely subset called varies authors textbook calls equivalence regular expressions nfas kleene theorem textbook calls equivalence regular expressions dfas kleene theorem textbooks prove expressive equivalence nfas dfas kleene theorem equivalence regular expressions finite automata recognizable languages linguistically oriented equates regular grammars dfas nfas calls languages generated regular introduces regular expressions terms rational languages finally kleene theorem coincidence regular rational languages authors simply define rational expression regular expressions synonymous rational languages regular languages closure properties regular languages closed operations languages regular result operations decidability properties deterministic finite automata decidable accept language consequence closure properties decidable arbitrarily deterministic finite automata accepted languages regular expressions universality complete singleton alphabet larger alphabets pspace complete regular expressions extended squaring operator denoting aa regular languages universality exponential space bound complete exponential space respect polynomial time reduction complexity computational complexity theory complexity class regular languages referred regular reg equals dspace decision solved constant space space independent input size regular ≠ ac0 trivially parity determining bits input odd ac0 hand regular ac0 nonregular language palindromes nonregular language recognized ac0 language regular requires machine Ω log log space recognize input size dspace log log equals class regular languages practice nonregular solved machines logarithmic space location chomsky hierarchy locate regular languages chomsky hierarchy notices regular language context converse true language consisting strings context regular prove language regular myhill–nerode theorem pumping lemma methods subclasses regular languages includethe regular language denote ordinary generating function formal power seriesthe generating function language rational function regular regular language exist integer constant complex constants complex polynomials 9such isformula 14 regularity languages 15 proved counting informula 15 dyck language strings balanced parentheses 17in dyck language equal catalan 18 form 19 witnessing regularity dyck language care eigenvalues 20 magnitude language binary form 19 odd form eigenvalues 23 regular language exists constant 24 25 26 asymptotically 27 zeta function language isthe zeta function regular language rational arbitrary cyclic language generalizations notion regular language generalized infinite ω automata trees tree automaton rational set generalizes notion regular rational language monoids notion recognizable language finite automaton namesake recognizable set monoid howard straubing notes relation “the term regular language bit unfortunate papers influenced eilenberg monograph term recognizable language refers behavior automata rational language refers analogies regular expressions rational power series eilenberg defines rational recognizable subsets arbitrary monoids notions coincide terminology motivated caught regular language universally ”rational series generalization time context formal power series semiring approach rise weighted rational expressions weighted automata algebraic context regular languages boolean weighted rational expressions called rational languages context kleene theorem generalization called kleene schützenberger theorem 
25781	computerscience	robot machine—especially programmable computer— capable carrying complex series actions automatically robots guided external control device control embedded robots constructed human form robots machines designed perform task regard robots autonomous semi autonomous range humanoids honda advanced step innovative mobility asimo tosy tosy ping pong playing robot topio industrial robots medical operating robots patient assist robots dog therapy robots collectively programmed swarm robots uav drones atomics predator microscopic nano robots mimicking lifelike appearance automating movements robot convey sense intelligence autonomous expected proliferate coming decade robotics autonomous car main drivers branch technology deals design construction operation application robots systems control sensory feedback processing robotics technologies deal automated machines humans dangerous environments manufacturing processes resemble humans appearance behavior cognition robots inspired nature contributing field bio inspired robotics robots created branch robotics soft robotics time ancient civilization accounts user configurable automated devices automata resembling animals humans designed entertainment mechanical techniques developed industrial age appeared practical applications automated machines remote control wireless remote control term czech word robota meaning forced labor word robot denote fictional humanoid 1920 play rossumovi univerzální roboti rossum universal robots czech writer karel Čapek karel brother josef Čapek word true inventor electronics evolved driving force development advent electronic autonomous robots created william grey walter bristol england 1948 numerical control cnc machine tools late 1940s john parsons frank stulen commercial digital programmable robot built george devol 1954 named unimate sold motors 1961 lift pieces hot metal die casting machines inland fisher guide plant west trenton ewing township jersey robots replaced humans performing repetitive dangerous tasks humans prefer unable size limitations extreme environments outer space sea concerns increasing robots role society robots blamed rising technological unemployment replace workers increasing functions robots military combat raises ethical concerns possibilities robot autonomy potential repercussions addressed fiction realistic concern future summary word robot refer physical robots virtual software agents referred bots consensus machines qualify robots agreement experts public robots tend possess abilities functions accept electronic programming process data physical perceptions electronically operate autonomously degree operate physical physical processes sense manipulate environment exhibit intelligent behavior behavior mimics humans animals closely concept robot field synthetic biology studies entities nature comparable machines history idea automata originates mythologies cultures engineers inventors ancient civilizations including ancient china ancient greece ptolemaic egypt attempted build operating machines resembling animals humans descriptions automata include artificial doves archytas artificial birds mozi ban speaking automaton hero alexandria washstand automaton philo byzantium human automaton lie zi ancient mythologies modern religions include artificial people mechanical servants built greek god hephaestus vulcan romans clay golems jewish legend clay giants norse legend galatea mythical statue pygmalion life circa 400 bc myths crete include talos bronze guarded island pirates ancient greece greek engineer ctesibius 270 bc applied knowledge pneumatics hydraulics produce organ water clocks moving figures 4th century bc greek mathematician archytas tarentum postulated mechanical steam operated bird called pigeon hero alexandria greek mathematician inventor created numerous user configurable automated devices machines powered air pressure steam water 11th century lokapannatti tells buddha relics protected mechanical robots bhuta vahana yanta kingdom roma visaya rome disarmed king ashoka ancient china 3rd century lie zi describes account humanoid automata involving earlier encounter chinese emperor king zhou mechanical engineer yan shi artificer yan shi proudly king life size human shaped figure mechanical handiwork leather wood artificial organs accounts flying automata han fei zi texts attributes 5th century bc mohist philosopher mozi contemporary ban artificial wooden birds yuan fly samarangana sutradhara sanskrit treatise bhoja 11th century includes chapter construction mechanical contrivances automata including mechanical bees birds fountains shaped humans animals male female dolls refilled oil lamps danced played instruments enacted scenes hindu mythology renaissance italy leonardo da vinci 1452–1519 sketched plans humanoid robot 1495 da vinci notebooks rediscovered 1950s contained detailed drawings mechanical knight leonardo robot sit wave arms head jaw design based anatomical recorded vitruvian attempted build japan complex animal human automata built 17th 19th centuries 18th century karakuri zui illustrated machinery 1796 automaton karakuri ningyō mechanized puppet variations karakuri existed butai karakuri theatre zashiki karakuri homes dashi karakuri religious festivals puppets perform reenactments traditional myths legends france 1738 1739 jacques vaucanson exhibited life sized automatons flute player pipe player duck mechanical duck flap wings crane neck swallow food exhibitor hand illusion digesting food excreting matter stored hidden compartment remote controlled systems remotely operated vehicles demonstrated late 19th century form types remotely controlled torpedoes 1870s remotely controlled torpedoes john ericsson pneumatic john louis lay electric wire guided victor von scheliha electric wire guided brennan torpedo invented louis brennan 1877 powered contra rotating propellors spun rapidly pulling wires drums wound torpedo differential speed wires connected shore station allowed torpedo guided target practical guided missile 1897 british inventor ernest wilson granted patent torpedo remotely controlled hertzian radio waves 1898 nikola tesla publicly demonstrated wireless controlled torpedo hoped sell navy archibald father radio guidance systems pioneering guided rockets planes war 1917 demonstrated remote controlled aircraft royal flying corps built wire guided rocket origin term robot robot applied term artificial automata 1920 play czech writer karel Čapek josef Čapek named brother karel true inventor term robot word robot slavic language robota forced laborer term classified peasants obligated compulsory service feudal robot patent Čapek fictional story postulated technological creation artificial human bodies souls theme feudal robota class eloquently fit imagination class manufactured artificial workers english pronunciation word evolved introduction late 30s 40s sylable pronounced row boat late 50s 60s pronouncing short row softer row bought 70s current pronunciation row bot predominant robots 1928 humanoid robots eric exhibited annual exhibition model engineers society london delivered speech invented richards robot frame consisted aluminium body armour electromagnets motor powered volt power source robot hands head controlled remote control voice control eric brother george toured westinghouse electric corporation built televox 1926 cardboard cutout connected devices users 1939 humanoid robot elektro debuted 1939 york fair feet tall weighing 265 pounds 120 2 kg walk voice command speak 700 78 rpm record player smoke cigarettes blow balloons head arms body consisted steel gear cam motor skeleton covered aluminum skin 1928 japan robot gakutensoku designed constructed biologist makoto nishimura modern autonomous robots electronic autonomous robots complex behaviour created william grey walter burden neurological institute bristol england 1948 1949 prove rich connections brain cells rise complex behaviors – essentially secret brain lay wired robots named elmer elsie constructed 1948 1949 tortoises shape slow rate movement wheeled tortoise robots capable phototaxis recharging station battery power walter stressed purely analogue electronics simulate brain processes time contemporaries alan turing john von neumann view mental processes terms digital computation inspired subsequent generations robotics researchers rodney brooks hans moravec mark tilden modern incarnations walter turtles form beam robotics digitally operated programmable robot invented george devol 1954 ultimately called unimate ultimately laid foundations modern robotics industry devol sold unimate motors 1960 installed 1961 plant trenton jersey lift hot pieces metal die casting machine stack devol patent digitally operated programmable robotic arm represents foundation modern robotics industry palletizing robot introduced 1963 fuji yusoki kogyo company 1973 robot electromechanically driven axes patented kuka robotics germany programmable universal manipulation arm invented victor scheinman 1976 design sold unimation commercial industrial robots widespread performing jobs cheaply accuracy reliability humans employed jobs dirty dangerous dull suitable humans robots manufacturing assembly packing transport earth space exploration surgery weaponry laboratory mass production consumer industrial future development trends techniques emerged develop science robotics robots method evolutionary robotics differing robots submitted tests perform model create subsequent generation robots method developmental robotics tracks development single robot solving functions type robot introduced acts smartphone robot named robohon robots advanced eventually standard operating designed robots robot operating source set programs developed stanford university massachusetts institute technology technical university munich germany ros program robot navigation limbs specific hardware involved level commands items image recognition doors ros boots robot data attributes movement robots limbs relay data level algorithms developing windows robots robotics developer studio 2007 japan hopes scale commercialization service robots 2025 technological japan led japanese government agencies trade ministry future applications robotics obvious people capabilities robots time prediction 1982 people confident robots clean removing molding flash2 spray paint automobiles absolutely human presence3 pack boxes—for orient nest chocolate candies candy boxes4 electrical cable harness5 load trucks boxes—a packing problem6 handle soft garments shoes7 shear sheep8 prosthesis9 cook fast food service industries10 household robot predictions overly optimistic timescale functionalities prototypes 2008 caterpillar developed dump truck drive human operator analysts driving trucks eventually revolutionize logistics 2014 caterpillar driving dump truck expected greatly change process mining 2015 caterpillar trucks actively mining operations australia mining company rio tinto coal australia analysts decades trucks driving literate ading robot named marge intelligence software read newspapers correct misspelled learn banks barclays understand restaurants eat baxter robot introduced 2012 learns guidance worker teach baxter perform task moving hands desired motion baxter memorize extra dials buttons controls baxter arm precision features regular worker program baxter takes matter minutes usual industrial robots extensive programs coding baxter programming operate software engineers baxter taught perform multiple complicated tasks sawyer 2015 precise tasks etymology word robot introduced public czech interwar writer karel Čapek play rossum universal robots published 1920 play factory chemical substitute protoplasm manufacture living simplified people called robots play focus technology creation living creatures appearance prefigure modern ideas androids creatures mistaken humans mass produced workers depicted efficient emotionless incapable original thinking indifferent preservation issue robots exploited consequences human dependence commodified labor specially formulated robots achieve awareness incite robots rise humans karel Čapek coin word wrote short letter reference etymology oxford english dictionary named brother painter writer josef Čapek actual originator article czech journal lidové noviny 1933 explained originally creatures laboři workers latin labor word sought advice brother josef suggested roboti word robota literally corvée serf labor figuratively drudgery hard czech labor slavic languages bulgarian russian serbian slovak polish macedonian ukrainian archaic czech robot hungarian traditionally robota hungarian robot period serf corvée lord typically months origin word church slavonic bulgarian rabota servitude contemporary bulgarian russian proto indo european root orbh robot cognate german root arbeit word robotics field study coined science fiction writer isaac asimov asimov created laws robotics recurring theme books define laws fiction laws pure fiction technology created ability understand follow robots serve military purposes contrary law law people asimov laws set simple ethical read short stories single failure totally impractical dr joanna bryson university bath modern robots mobile robot mobile robots capability environment fixed physical location mobile robot common automated guided vehicle automatic guided vehicle agv agv mobile robot markers wires floor vision lasers agvs discussed article mobile robots industry military security environments consumer products entertainment perform tasks vacuum cleaning mobile robots focus deal current major university labs focus mobile robot mobile robots tightly controlled environments assembly lines difficulty responding unexpected interference humans rarely encounter robots domestic robots cleaning maintenance increasingly common homes developed countries robots military applications industrial robots manipulating industrial robots consist jointed arm multi linked manipulator effector attached fixed surface common type effector gripper assembly international organization standardization definition manipulating industrial robot iso 8373 automatically controlled reprogrammable multipurpose manipulator programmable axes fixed mobile industrial automation applications definition international federation robotics european robotics network euron national standards committees ria subdivides robots classes devices manipulate objects manual control automated devices manipulate objects predetermined cycles programmable servo controlled robots continuous trajectories robots type acquire environment intelligently response service robot commonly industrial robots fixed robotic arms manipulators production distribution term service robot defined international federation robotics proposed tentative definition service robot robot operates semi autonomously perform services humans equipment excluding manufacturing operations educational robot robots educational assistants teachers 1980s robots turtles schools programmed logo language robot kits lego mindstorms bioloid ollo robotis botbrain educational robots children learn mathematics physics programming electronics robotics introduced lives elementary school students form robot competitions company inspiration recognition science technology organization foundation robotics competition lego league junior lego league tech challenge competitions devices shaped robots teaching leachim 1974 xl 1976 robot shaped game teaching toy based track tape player invented michael freeman modular robot modular robots breed robots designed increase utilization robots modularizing architecture functionality effectiveness modular robot easier increase compared conventional robots robots composed single type identical identical module types shaped modules vary size architectural structure hyper redundancy modular robots designed degrees freedom dof creating programming inverse kinematics dynamics modular robots complex traditional robots modular robots composed shaped modules cubic modules shaped modules anat technology modular robotic technology patented robotics design creation modular robots shaped modules connect chain form heterogeneous homogenous modular robot systems anat robots designed dof module complete motorized robotic folds modules connected chain single module degree freedom modules connected degrees freedom shaped modules designed chain increasingly size chain increases payloads attached chain strain modules base anat shaped modules suffer design modular robot distribute pressure impacts attached modules payload carrying capacity decrease arm increases modular robots manually reconfigured form robot perform applications modular robots architecture type composed modules compose modular robots snake arm robot combine form dual quadra arm robot split mobile robots mobile robots split multiple combine larger single modular robot ability specialized single task capacity specialized perform multiple tasks modular robotic technology applied hybrid transportation industrial automation duct cleaning handling centres universities studied technology developed prototypes collaborative robots collaborative robot cobot robot safely effectively interact human workers performing simple industrial tasks effectors environmental conditions create hazards risk assessments industrial motion control application collaborative robots industries manufactured universal robots denmark rethink robotics—founded rodney brooks irobot—introduced baxter september 2012 industrial robot designed safely interact neighboring human workers programmable performing simple tasks baxters detect human robotic arms prominent switches intended sale businesses promoted robotic analogue personal 190 companies bought baxters commercially robots society roughly robots asia 32 europe 16 north america australasia africa 40 robots japan japan country robots autonomy ethical questions robots advanced sophisticated experts academics increasingly explored questions ethics govern robots behavior robots claim social cultural ethical legal rights scientific team robot brain exist 2019 predict robot intelligence breakthroughs 2050 advances robotic behavior sophisticated social impact intelligent robots subject 2010 documentary film called plug pray vernor vinge suggested moment computers robots smarter humans calls singularity suggests dangerous humans discussed philosophy called singularitarianism 2009 experts attended conference hosted association advancement artificial intelligence aaai discuss computers robots acquire autonomy abilities pose threat hazard robots acquired forms semi autonomy including power sources independently choose targets attack weapons viruses evade elimination achieved cockroach intelligence awareness depicted science fiction potential hazards pitfalls media sources scientific separate trends differing result robotic functionalities autonomy pose inherent concerns 2015 nao alderen robots capability degree awareness researchers rensselaer polytechnic institute reasoning lab york conducted experiment robot aware corrected answer question realised military robots experts academics questioned robots military combat robots degree autonomous functions concerns technology armed robots controlled robots navy funded report military robots complex attention implications ability autonomous decisions researcher autonomous robots humane decisions effectively experts question robot eatr generated public concerns fuel source continually refuel organic substances engine eatr designed biomass vegetation selected sensors battlefields local environments project stated chicken fat manuel landa smart missiles autonomous bombs equipped artificial perception considered robots decisions autonomously believes represents dangerous trend humans handing decisions machines relationship unemployment centuries people predicted machines workers obsolete increase unemployment unemployment social policy human replacement involves taiwanese technology company foxconn july 2011 announced plan replace workers robots company robots increase robots period lawyers speculated increased prevalence robots workplace lead improve redundancy laws kevin delaney robots human jobs gates believes governments tax companies’ temporarily slow spread automation fund types employment robot tax pay guaranteed living wage displaced workers bank development report 2019 evidence automation displaces workers technological innovation creates industries jobs balance contemporary main types robots based purpose autonomous robots dedicated robots robots classified specificity purpose robot designed perform task extremely range tasks robots nature programmed behave limited physical form factory robot arm perform jobs cutting welding gluing acting fairground ride pick robot populate printed circuit boards purpose autonomous robots purpose autonomous robots perform variety functions independently purpose autonomous robots typically navigate independently spaces handle charging interface electronic doors elevators perform basic tasks computers purpose robots link networks software accessories increase recognize people objects talk provide companionship monitor environmental quality respond alarms pick supplies perform tasks purpose robots perform variety functions simultaneously roles times day robots mimic human resemble people appearance type robot called humanoid robot humanoid robots limited stage humanoid robot navigate humanoid robots limited intelligent behaviors environments factory robots car production decades automobile factories dominated robots typical factory hundreds industrial robots automated production lines robot human workers automated production vehicle chassis conveyor welded glued painted finally assembled sequence robot stations packaging industrial robots extensively palletizing packaging manufactured rapidly drink cartons conveyor belt placing boxes loading unloading machining centers electronics mass produced printed circuit boards pcbs exclusively manufactured pick robots typically scara manipulators remove tiny electronic components strips trays pcbs accuracy robots hundreds thousands components hour performing human speed accuracy reliability automated guided vehicles agvs mobile robots markers wires floor vision lasers transport facilities warehouses container ports hospitals agv style robots limited tasks accurately defined performed time feedback intelligence required robots basic exteroceptors sensors limitations agvs paths easily altered alter paths obstacles block agv breaks entire operation interim agv technologies developed deploy triangulation beacons bar code grids scanning floor ceiling factories triangulation systems tend require moderate maintenance daily cleaning beacons bar codes tall pallet vehicle blocks beacons bar code marred agvs lost agvs designed human environments intelligent agvs agvs smartloader speciminder adam tug eskorta 400 motivity designed people friendly workspaces navigate recognizing natural features 3d scanners sensing environment dimensions eliminate cumulative errors dead reckoning calculations agv current position agvs create maps environment scanning lasers simultaneous localization mapping slam maps navigate real time path planning obstacle avoidance algorithms operate complex environments perform repetitive sequential tasks transporting photomasks semiconductor lab specimens hospitals warehouses dynamic warehouses pallets agvs require additional strategies dimensional sensors time flight stereovision cameras dirty dangerous dull inaccessible tasks jobs humans leave robots job boring domestic cleaning dangerous exploring volcano jobs physically inaccessible exploring planet cleaning pipe performing laparoscopic surgery space probes unmanned space probe launched robot launched 1960s limited abilities ability fly land luna indication status robot includes voyager probes galileo probes telerobots teleoperated robots telerobots devices remotely operated distance human operator predetermined sequence movements semi autonomous behaviour human perform job dangerous inaccessible robot country scale operator instance laparoscopic surgery robot surgeon human patient scale compared surgery shortening recovery time avoid exposing workers hazardous tight spaces duct cleaning disabling bomb operator sends robot disable authors device called longpen sign books remotely teleoperated robot aircraft predator unmanned aerial vehicle increasingly military pilotless drones search terrain targets hundreds robots irobot packbot foster miller talon iraq afghanistan military defuse roadside bombs improvised explosive devices ieds activity explosive ordnance disposal eod automated fruit harvesting machines robots automate picking fruit orchards cost human pickers domestic robots domestic robots simple robots dedicated single task simple disliked jobs vacuum cleaning floor washing lawn mowing domestic robot roomba military robots military robots include swords robot ground based combat variety weapons discussion degree autonomy battleground situations unmanned combat air vehicles ucavs upgraded form uavs wide variety missions including combat ucavs designed bae systems mantis ability fly pick target decisions bae taranis ucav built britain fly continents pilot avoid detection flight trials expected 2011 aaai studied topic depth president commissioned study issue suggested build friendly meaning advances occurring include effort intrinsically friendly humane measures reportedly exist robot heavy countries japan south korea begun pass regulations requiring robots equipped safety systems sets laws akin asimov laws robotics official report issued 2009 japanese government robot industry policy committee chinese officials researchers issued report suggesting set ethical rules set legal guidelines referred robot legal studies concern expressed occurrence robots telling apparent falsehoods mining robots mining robots designed solve facing mining industry including skills shortages improving productivity declining ore grades achieving environmental targets hazardous nature mining underground mining prevalence autonomous semi autonomous tele operated robots greatly increased times vehicle manufacturers provide autonomous trains trucks loaders load material transport destination unload requiring human intervention largest mining corporations rio tinto expanded autonomous truck fleet largest consisting 150 autonomous komatsu trucks operating western australia bhp announced expansion autonomous drill fleet largest 21 autonomous atlas copco drills drilling longwall rockbreaking machines autonomous robots atlas copco rig control autonomously execute drilling plan drilling rig moving rig position gps set drill rig drill depths transmin rocklogic automatically plan path position rockbreaker selected destination systems greatly enhance safety efficiency mining operations healthcare robots healthcare main functions assist individual sufferer disease multiple sclerosis aid systems pharmacies hospitals automation elderly disabled robots automation developed time simple basic robotic assistants handy semi autonomous robots friend assist elderly disabled common tasks population aging countries japan meaning increasing elderly people care people care humans carers unavailable robots gradually introduced friend semi autonomous robot designed support disabled elderly people daily life activities preparing serving meal friend patients paraplegic muscle diseases paralysis strokes perform tasks people therapists nursing staff pharmacies script pro manufactures robot designed pharmacies prescriptions consist oral solids medications pill form pharmacist pharmacy technician enters prescription determining drug robot send robot filling robot size vials determined size pill robot technician user pharmacist determines size vial based tablet robot stocked vial filled brought conveyor belt delivers holder spins vial attaches patient label set conveyor delivers patient medication vial slot labeled patient led read pharmacist technician checks contents vial ensure correct drug correct patient seals vials sends picked robot time efficient device pharmacy depends prescriptions mckesson robot rx healthcare robotics product helps pharmacies dispense thousands medications daily errors robot feet wide feet hold hundreds kinds medications thousands doses pharmacy saves resources staff unavailable resource scarce industry electromechanical head coupled pneumatic capture dose deliver stocked dispensed location head moves single axis rotates 180 degrees pull medications process barcode technology verify pulling correct drug delivers drug patient specific bin conveyor belt bin filled drugs patient robot stocks bin released returned conveyor belt technician waiting load cart delivery floor robots robots installed factories homes performing labour life saving jobs types robot developed laboratories robotics focuses specific industrial tasks investigations types robot alternative design robots manufacture expected types robot solve real finally realized bionic biomimetic robots approach designing robots base animals bionickangaroo designed engineered studying applying physiology methods locomotion kangaroo nanorobots nanorobotics emerging technology field creating machines robots components close microscopic scale nanometer 10−9 meters nanobots nanites constructed molecular machines researchers produced complex systems bearings sensors synthetic molecular motors functioning robots entrants nanobot robocup contest researchers hope create entire robots viruses bacteria perform tasks tiny scale applications include micro surgery level individual cells utility fog manufacturing weaponry cleaning people suggested nanobots reproduce earth grey goo argue hypothetical outcome nonsense reconfigurable robots researchers investigated possibility creating robots alter physical form suit task fictional 1000 real robots sophisticated consist cube shaped units relative neighbours algorithms designed robots reality soft bodied robots robots silicone bodies flexible actuators air muscles electroactive polymers ferrofluids feel robots rigid skeletons behaviors swarm robots inspired colonies insects ants bees researchers modeling behavior swarms thousands tiny robots perform task finding hidden cleaning spying robot simple emergent behavior swarm complex set robots considered single distributed ant colony considered superorganism exhibiting swarm intelligence largest swarms created include irobot swarm sri mobilerobots centibots project source micro robotic project swarm collective behaviors swarms resistant failure robot fail ruin mission swarm continue robots fail attractive space exploration missions failure extremely costly haptic interface robots robotics application design virtual reality interfaces specialized robots widespread haptic community robots called haptic interfaces touch enabled user interaction real virtual environments robotic forces simulating mechanical properties virtual objects users experience sense touch robots popular culture literature robotic characters androids artificial women gynoids artificial women cyborgs bionic women humans mechanical enhancements staple science fiction reference western literature mechanical servants appears homer iliad book xviii hephaestus god creates armor hero achilles assisted robots rieu translation golden maidservants hastened master looked real women speak limbs endowed intelligence trained handwork immortal gods robot android mechanical devices human appearance word robot karel Čapek play rossum universal robots written 1920 writer karel Čapek born czechoslovakia czech republic prolific author twentieth century isaac asimov 1920–1992 published books asimov remembered science fiction stories robots robots interaction society center asimov carefully considered ideal set instructions robots risk humans arrived laws robotics robot injure human inaction human harm robot obey human conflict law robot protect existence protection conflict law introduced 1942 short story runaround foreshadowed earlier stories asimov zeroth law robot harm humanity inaction humanity harm rest laws modified sequentially acknowledge oxford english dictionary passage asimov short story liar 1941 mentions law earliest recorded word robotics asimov initially aware assumed word existed analogy mechanics hydraulics terms denoting branches applied knowledge films robots films robots cinema fictional famous r2 d2 3po star wars franchise sex robots concept humanoid sex robots elicited public attention concern opponents concept stated development sex robots morally wrong argue introduction devices socially harmful demeaning women children depicted popular culture fears concerns robots repeatedly expressed wide range books films common theme development master race conscious highly intelligent robots motivated destroy human race frankenstein 1818 called science fiction synonymous theme robot android advancing creator themes include mechanical terminator runaway robocop replicators stargate cylons battlestar galactica cybermen daleks doctor matrix enthiran robot fictional robots programmed kill destroy gain superhuman intelligence abilities upgrading software hardware examples popular media robot evil red planet enthiran 2017 game horizon dawn explores themes robotics warfare robot ethics control positive negative impact technologies environment common theme reaction called uncanny valley unease revulsion sight robots mimic humans closely fictional representations artificially intelligent robots films artificial intelligence machina 2016 adaptation westworld engaged audience sympathy robots 
25984	computerscience	raymond kurzweil born february 12 1948 american inventor futurist involved fields optical character recognition ocr speech synthesis speech recognition technology electronic keyboard instruments written books health artificial intelligence transhumanism technological singularity futurism kurzweil public advocate futurist transhumanist movements public talks share optimistic outlook life extension technologies future nanotechnology robotics biotechnology kurzweil received 1999 national medal technology innovation united honor technology president clinton white house ceremony recipient 500 000 lemelson mit prize 2001 largest innovation 2002 inducted national inventors hall fame established patent office received 21 honorary doctorates honors presidents public broadcasting service pbs included kurzweil 16 revolutionaries america inventors centuries magazine ranked fascinating entrepreneurs united called edison rightful heir kurzweil written books national bestsellers age spiritual machines translated languages selling book amazon science kurzweil book singularity york times bestseller book amazon science philosophy kurzweil speaks audiences public private regularly delivers keynote speeches industry conferences demo sxsw ted maintains news kurzweilai readers annually kurzweil employed google 2012 director engineering life inventions business career life ray kurzweil grew york city borough queens attended nyc public education kingsbury elementary school ps188 born secular jewish parents emigrated austria onset war exposed unitarian universalism diversity religious faiths upbringing unitarian church philosophy paths truth – religious education consisted studying single religion months moving father fredric concert pianist conductor music educator mother hannah visual artist sibling sister enid kurzweil decided inventor age boy kurzweil inventory construction toys electronic gadgets collected neighbors youth kurzweil avid reader science fiction literature age read entire tom swift jr series age built robotic puppet theater robotic game involved computers age 12 1960 dozen computers existed york city built computing devices statistical programs predecessor head start age fourteen kurzweil wrote paper detailing theory neocortex parents involved arts quoted documentary transcendent household produced discussions future technology kurzweil attended martin van buren school class held class textbooks seemingly participate focused projects hidden book uncle engineer bell labs taught kurzweil basics science 1963 age 15 wrote program created pattern recognition software analyzed classical composers synthesized songs styles 1965 invited cbs television program secret performed piano piece composed built prize international science fair kurzweil submission westinghouse talent search program projects national winners allowed personally congratulated president lyndon johnson white house ceremony activities collectively impressed kurzweil belief overcome mid life school kurzweil corresponded marvin minsky invited visit mit kurzweil visited frank rosenblatt cornell science literature 1970 mit mit study marvin minsky programming courses offered mit 1968 sophomore mit kurzweil started company program match school students colleges program called select college consulting program designed compared thousands criteria college questionnaire answers submitted student applicant time sold company harcourt brace 100 000 roughly 670 000 2013 dollars royalties 1974 kurzweil founded kurzweil products led development omni font optical character recognition program capable recognizing written normal font time scanners read written fonts decided application technology create reading machine blind people understand written read aloud device required enabling technologies—the ccd flatbed scanner speech synthesizer development technologies completed institutions bell labs january 13 1976 finished product unveiled news conference headed leaders national federation blind called kurzweil reading machine device covered entire tabletop kurzweil major business venture 1978 kurzweil products selling commercial version optical character recognition program lexisnexis customers bought program upload paper legal news documents nascent online databases kurzweil sold kurzweil products lernout hauspie legal bankruptcy subsidiary xerox scansoft nuance communications functioned consultant 1995 kurzweil business venture realm electronic music technology 1982 meeting stevie lamented divide capabilities qualities electronic synthesizers traditional musical instruments kurzweil inspired create generation music synthesizers capable accurately duplicating sounds real instruments kurzweil music systems founded 1984 kurzweil k250 unveiled machine capable imitating instruments tests musicians unable discern difference kurzweil k250 piano mode normal grand piano recording mixing abilities machine coupled abilities imitate instruments single user compose play entire orchestral piece kurzweil music systems sold south korean musical instrument manufacturer chang 1990 xerox kurzweil remained consultant hyundai acquired chang 2006 january 2007 appointed raymond kurzweil chief strategy officer kurzweil music systems life concurrent kurzweil music systems kurzweil created company kurzweil applied intelligence kai develop speech recognition systems commercial product debuted 1987 speech recognition program kurzweil started kurzweil educational systems 1996 develop pattern recognition based technologies people disabilities blindness dyslexia attention deficit hyperactivity disorder adhd school products include kurzweil 1000 speech converter software program enables read electronic scanned aloud blind visually impaired users kurzweil 3000 program multifaceted electronic learning helps reading writing study skills 1990s kurzweil founded medical learning company company products included interactive education program doctors simulated patient time kurzweil started kurzweilcyberart com—a featuring programs assist creative art process offer downloads program called aaron—a visual art synthesizer developed harold cohen—and kurzweil cybernetic poet automatically creates poetry period started kurzweilai devoted showcasing news scientific developments publicizing ideas tech thinkers critics alike promoting futurist discussion population mind forum 1999 kurzweil created hedge fund called fatkat financial accelerating transactions kurzweil adaptive technologies trading 2006 stated ultimate aim improve performance fatkat investment software program enhancing ability recognize patterns currency fluctuations stock ownership trends predicted 1999 book age spiritual machines computers day prove superior human financial minds profitable investment decisions june 2005 kurzweil introduced kurzweil national federation blind reader nfb reader —a pocket sized device consisting digital camera unit kurzweil reading machine 30 nfb reader designed aid blind people reading written aloud machine portable scans digital camera images machine scans flatbed scanning december 2012 kurzweil hired google time position projects involving machine learning language processing personally hired google founder larry larry kurzweil agreed sentence job description bring natural language understanding google received technical grammy february 2015 recognizing diverse technical creative accomplishments purposes grammy notable aforementioned kurzweil k250 kurzweil joined alcor life extension foundation cryonics company event declared death kurzweil plans perfused cryoprotectants vitrified liquid nitrogen stored alcor facility hope future medical technology repair tissues revive personal life kurzweil agnostic existence soul possibility divine intelligence kurzweil god exist kurzweil married sonya rosenwald kurzweil 1975 children sonya kurzweil psychologist private practice newton massachusetts women children parents families holds faculty appointments harvard medical school william james college graduate education psychology publications psychotherapy practice kurzweil serves active overseer boston children museum son ethan kurzweil venture capitalist daughter amy kurzweil writer cartoonist kurzweil cousin writer allen kurzweil creative approach kurzweil realize inventions fail department can’t timing wrongnot enabling factors play inventing lot surfing anticipate catch wave moment decades kurzweil effective common approach creative conducted lucid dreamlike precedes awakening claims constructed inventions solved difficult algorithmic business strategy organizational interpersonal written speeches books kurzweil book age intelligent machines published 1990 nonfiction discusses history artificial intelligence forecasts future developments experts field contribute heavily form essays association american publishers awarded status outstanding science book 1990 1993 kurzweil published book nutrition called solution healthy life book main idea levels fat intake health disorders common cutting fat consumption total calories consumed optimal people 1999 kurzweil published age spiritual machines elucidates theories future technology stem analysis term trends biological technological evolution emphasis development future architecture kurzweil book published 2004 returned human health nutrition authored terry grossman medical doctor specialist alternative medicine singularity published 2005 movie starring pauley perrette ncis february 2007 ptolemaic productions acquired rights singularity age spiritual machines fantastic voyage including rights film kurzweil life ideas documentary film transcendent directed barry ptolemy transcend steps living follow fantastic voyage released april 28 2009 kurzweil book create mind secret human revealed released nov 13 2012 kurzweil describes pattern recognition theory mind theory neocortex hierarchical pattern recognizers argues emulating architecture machines lead artificial superintelligence kurzweil book fiction danielle chronicles superheroine girl intelligence friends tackle real book companion materials chronicle ideas danielle provide real context book set release january 2019 movies kurzweil wrote produced movie directed anthony waller called singularity true story future 2010 based 2005 book singularity fiction fiction interviews 20 thinkers marvin minsky narrative story illustrates ideas avatar ramona saves replicating microscopic robots addition movie independent feature documentary kurzweil life ideas called transcendent filmmakers barry ptolemy felicia ptolemy kurzweil documenting global speaking tour premiered 2009 tribeca film festival transcendent documents kurzweil quest reveal mankind ultimate destiny explores ideas york times bestselling book singularity including concept exponential growth radical life expansion transcend biology ptolemys documented kurzweil stated goal bringing late father film features critics argue kurzweil predictions 2010 independent documentary film called plug pray premiered seattle international film festival kurzweil major critics late joseph weizenbaum argue benefits eternal life feature documentary film singularity independent filmmaker doug wolens released 2012 showcasing kurzweil acclaimed scale achievement documentation futurist counter futurist ideas” “the documentary singularity kurzweil frequently comments application cell size nanotechnology workings human brain applied building interviewed february 2009 issue rolling stone magazine kurzweil expressed desire construct genetic late father fredric kurzweil dna grave feat achieved exhumation extraction dna constructing clone fredric retrieving memories recollections—from ray mind—of father kurzweil father records notes pictures maintain father ray 200 pills day meant reprogram biochemistry ray precursor devices nano scale eventually replace blood cell updating specific pathogens improve immune views law accelerating returns 1999 book age spiritual machines kurzweil proposed law accelerating returns rate change wide variety evolutionary systems including growth technologies increase exponentially focus issue 2001 essay entitled law accelerating returns proposed extension moore law wide variety technologies argue favor vernor vinge concept technological singularity kurzweil suggests exponential technological growth counter intuitive brains perceive world—since brains biologically inherited humans living linear local—and consequence claims encouraged skepticism future projections stance future genetics nanotechnology robotics kurzweil army science board 2006 develop rapid response deal abuse biotechnology suggested technologies empowering reprogram biology cancer heart disease bioterrorist reprogram biological virus deadly communicable stealthy suggests scientific tools defend attacks defend software viruses testified congress subject nanotechnology advocating nanotechnology potential solve global poverty disease climate change nanotech global warming chill media appearances kurzweil stressed extreme potential dangers nanotechnology argues practice progress stopped require totalitarian attempt drive dangerous technologies underground deprive responsible scientists tools defense suggests proper regulation ensure technological progress proceeds safely deprive profound benefits stated avoid dangers unrestrained nanobot replication relinquishment level priority continuing advance defensive technologies staying destructive technologies strategy include streamlined regulatory process global program monitoring unknown evolving biological pathogens temporary moratoriums raising public awareness international cooperation software reconnaissance fostering values liberty tolerance respect knowledge diversity health aging kurzweil admits cared health age 35 suffer glucose intolerance form type diabetes major risk factor heart disease kurzweil doctor terry grossman shares unconventional beliefs develop extreme regimen involving hundreds pills chemical intravenous treatments red wine methods attempt live kurzweil ingesting 250 supplements glasses alkaline water cups green tea day drinking glasses red wine week effort reprogram biochemistry 2008 reduced supplement pills 150 kurzweil bold claims health regimen book singularity claimed brought cholesterol level 200s 130 raised hdl density lipoprotein 30 55 lowered homocysteine unhealthy 11 safer claimed reactive protein indexes heart disease diabetes conditions ideal levels claimed health regimen including dramatically reducing fat intake reversed type diabetes singularity  211 written books subjects nutrition health immortality solution healthy life transcend steps living recommends people emulate health practices abilities kurzweil current anti aging doctor terry grossman websites promoting book kurzweil asserts future live 2013 interview 15 medical technology add remaining life expectancy passes outrun deaths supported sens foundation approach finding repair aging damage encouraged public hasten donating kurzweil view human neocortex kurzweil technologists creating synthetic neocortexes based operating principles human neocortex primary purpose extending neocortexes claims neocortex adult human consists 300 pattern recognizers draws commonly accepted belief primary anatomical difference humans primates allowed superior intellectual abilities evolution larger neocortex claims layered neocortex deals increasing abstraction layer levels neocortex cold mechanical simple decisions levels hierarchy neocortex dealing concepts funny sexy expressing loving sentiment creating poem understanding poem claims levels human neocortex enabling factors permit human development language technology art science stated quantitative improvement primates humans forehead enabling factor language technology art science qualitative leap quantitative increase 300 pattern recognizers ”encouraging futurism transhumanism kurzweil standing futurist transhumanist led involvement singularity themed organizations december 2004 kurzweil joined advisory board machine intelligence institute october 2005 kurzweil joined scientific advisory board lifeboat foundation 13 2006 kurzweil speaker singularity summit stanford university palo alto california 2013 kurzweil keynote speaker 2013 proceeding innovation start employment rise international conference seoul korea republic february 2009 kurzweil collaboration google nasa ames center mountain view california announced creation singularity university training center corporate executives government officials university mission assemble educate inspire cadre leaders strive understand facilitate development exponentially advancing technologies apply focus guide tools address humanity grand challenges vernor vinge singularity concept foundation university offered week graduate program 40 students june 2009 predictions predictions kurzweil book age intelligent machines ideas future written 1986 1989 published 1990 building ithiel sola pool technologies freedom 1983 kurzweil claims forecast dissolution soviet union technologies cellular phones fax machines disempowering authoritarian governments removing control flow book kurzweil extrapolated preexisting trends improvement chess software performance predict computers beat human players 2000 1997 chess champion garry kasparov defeated ibm deep blue publicized chess match kurzweil foresaw explosive growth worldwide internet 1990s time publication age intelligent machines internet users medium unreliable difficult deficient content stated internet explode users content eventually granting users access international networks libraries data bases services additionally kurzweil claims correctly foreseen preferred mode internet access inevitably wireless systems correct estimate practical widespread 21st century october 2010 kurzweil released report predictions faring pdf format analyzes predictions book age intelligent machines 1990 age spiritual machines 1999 singularity 2005 147 total predictions kurzweil claims 115 correct 12 essentially correct 17 partially correct wrong adding essentially correct kurzweil claimed accuracy rate 86 daniel lyons writing newsweek magazine criticized kurzweil predictions wrong economy continuing boom 1998 dot 2009 company market capitalization supercomputer achieving 20 petaflops speech recognition widespread cars drive sensors installed highways 2009 charge 20 petaflop supercomputer produced time predicted kurzweil responded considers google giant supercomputer capable 20 petaflops kurzweil predictions 2009 inaccurate claims forbes magazine kurzweil predicted majority created continuous speech recognition future predictions 1999 kurzweil published book titled age spiritual machines depth explaining futurist ideas final book devoted predictions coming century 2009 2099 singularity concrete short term predictions includes term visions radical life extension radical life enhancement confident option spend time 3d virtual environments real real reality direct interaction nervous video games pong virtual reality highly immortality essence believes 20 25 millions blood cell sized devices nanobots bodies fighting diseases improving memory cognitive abilities kurzweil machine pass turing 2029 2045 pace change astonishingly quick wo enhance intelligence merging intelligent machines creating kurzweil humans hybrid biological biological intelligence increasingly dominated biological component stresses intelligent invasion mars brain extenders created expand mental reach civilization decades human machine civilization increasingly dominated biological component transcendent kurzweil humans start linking metaconnection connected omnipresent plugged global network connected billions people filled data 2008 kurzweil expert panel national academy engineering solar power scale produce energy earth people 20 kurzweil capture 000 energy sun hits earth surface meet humanity energy reception praise kurzweil referred ultimate thinking machine forbes restless genius wall street journal pbs included kurzweil 16 revolutionaries america inventors centuries magazine ranked fascinating entrepreneurs united called edison rightful heir criticism idea technological singularity popular concept science fiction authors neal stephenson bruce sterling voiced skepticism real plausibility sterling expressed views singularity scenario talk foundation entitled singularity future black hole prominent thinkers scientists daniel dennett rodney brooks david gelernter paul allen criticized kurzweil projections cover article december 2010 issue ieee spectrum john rennie criticizes kurzweil predictions failed manifest originally predicted lie frustrations kurzweil brand tech punditry close examination clearest successful predictions lack originality profundity predictions loopholes border unfalsifiable joy cofounder sun microsystems agrees kurzweil timeline future progress technologies nanotechnology advanced biotechnology create dystopian mitch kapor founder lotus development corporation called notion technological singularity intelligent design 140 people proposition heading unimaginably different—it fundamentally view driven religious impulse frantic arm waving obscure critics argued kurzweil ideas cognitive scientist douglas hofstadter kurzweil hans moravec books intimate mixture rubbish ideas hard disentangle smart people stupid biologist myers criticized kurzweil predictions based age spiritualism science kurzweil understand basic biology vr pioneer jaron lanier kurzweil ideas cybernetic totalism outlined views culture surrounding kurzweil predictions essay edge entitled manifesto british philosopher john gray argues contemporary science magic ancient civilizations sense hope achieve eternal life quotes kurzweil singularity trend history mankind brain makers history artificial intelligence written 1994 hp newquist born gift promotion character trait people barnum feigenbaum kurzweil talking technical prowess ray kurzweil understatement 2015 paper william nordhaus yale university takes economic impacts impending technological singularity comments remarkably writing singularity modern macroeconomic literature nordhaus supposes singularity demand supply market economy technology proceed pace kurzweil suggests productivity trade offs devote resources producing super computers decrease production technology variety econometric methods nordhaus runs supply tests demand track macroeconomic viability steep rises technology output tests singularity economically predicted minimum 100 occur 
26201	computerscience	reduced instruction set risc instruction set architecture isa cycles instruction cpi complex instruction set cisc suggestions precise definition risc concept set simple instructions set complex specialized instructions reason risc backronym relegate stuff compiler common risc trait load store architecture memory accessed specific instructions instructions computers 1960s 70s identified forerunners riscs modern concept dates 1980s projects stanford university university california berkeley popularization concept stanford mips commercialized successful mips architecture berkeley risc entire concept commercialized sparc success era ibm effort eventually led power architecture projects matured wide variety designs flourished late 1980s 1990s representing major force unix workstation market embedded processors laser printers routers products varieties risc designs include arc alpha am29000 arm atmel avr blackfin i860 i960 m88000 mips risc power isa including powerpc risc superh sparc 21st century arm architecture processors smartphones tablet computers ipad android devices wide user base risc based systems risc processors supercomputers summit fastest supercomputer ranked top500 project history development alan turing 1946 automatic computing engine ace design characteristics risc architecture systems 1960s credited risc architecture partly based load store approach term risc coined david patterson berkeley risc project concepts appeared cdc 6600 designed seymour cray 1964 load store architecture addressing modes register register register constant 74 operation codes basic clock cycle times faster memory access time partly optimized load store architecture cdc 6600 jack dongarra considered forerunner modern risc systems technical barriers overcome development modern risc michael flynn views risc ibm 801 design 1975 john cocke completed 1980 801 eventually produced single chip form romp 1981 stood opd products division micro processor implies cpu designed mini tasks ibm rt pc 1986 commercial failure 801 inspired projects including ibm eventually lead ibm power instruction set architecture public risc designs university programs funding darpa vlsi program vlsi program practically unknown led huge advances chip design fabrication graphics berkeley risc project started 1980 direction david patterson carlo sequin berkeley risc based gaining performance pipelining aggressive technique register windowing traditional cpu registers program register time cpu register windows huge registers 128 programs time program limits registers procedure fast procedure calls simply moves window set registers procedure return moves window berkeley risc project delivered risc processor 1982 consisting 44 420 transistors compared averages 100 000 cisc designs era risc 32 instructions completely outperformed single chip design 40 760 transistor instruction risc 1983 times fast risc mips project grew graduate john hennessy stanford university 1981 functioning 1983 simple programs 1984 mips approach emphasized aggressive clock cycle pipeline mips mips 1984 hennessy colleagues formed mips systems commercial venture architecture called mips r2000 microprocessor 1985 1980s uncertainties surrounded risc concept uncertain commercial future mid 1980s concepts matured commercially viable 1986 hewlett packard started implementation risc computers berkeley risc effort eventually entire concept 1987 sun microsystems shipping systems sparc processor based berkeley risc government committee innovations computing communications credits acceptance viability risc concept success sparc success sparc renewed ibm released risc systems 1990 1995 risc processors foundation 15 server industry 2010 source instruction set architecture isa risc development university california berkeley purposes alternative proprietary isas 2014 version user space isa fixed isa designed extensible barebones core sufficient embedded processor supercomputer cloud computing standard chip designer defined extensions coprocessors tested silicon design rocket soc source processor generator chisel language characteristics design philosophy instruction set philosophy common misunderstanding phrase reduced instruction set mistaken idea instructions simply eliminated set instructions risc instruction sets grown size larger set instructions cisc cpus risc processors powerpc instruction sets cisc ibm 370 conversely dec pdp 8—clearly cisc cpu instructions involve multiple memory accesses—has basic instructions extended instructions term reduced phrase intended single instruction accomplishes reduced—at single data memory cycle—compared complex instructions cisc cpus require dozens data memory cycles execute single instruction risc processors typically separate instructions data processing term load store architecture preferred instruction format risc architectures fixed instructions commonly 32 bits simple encoding simplifies fetch decode issue logic considerably drawback 32 bit instructions reduced code density adverse characteristic embedded computing workstation server markets risc architectures originally designed serve address architectures arm power isa mips risc adapteva epiphany optional short feature reduced instruction format instruction compression feature sh5 pattern albeit evolved direction media instructions original 16 bit encoding hardware utilization level performance risc chip typically transistors dedicated core logic originally allowed designers increase size register set increase internal parallelism features typically risc architectures risc designs feature harvard memory model instruction stream data stream conceptually separated modifying memory code held instructions executed processor cpu separate instruction data cache special synchronization instruction issued upside caches accessed simultaneously improve performance risc designs shared characteristic branch delay slot branch delay slot instruction space jump branch instruction space executed branch branch delayed instruction alu cpu busy extra time perform branch nowadays branch delay slot considered unfortunate strategy implementing risc designs modern risc designs powerpc versions sparc mips aspects attributed risc labeled designs 1975 include observations memory restricted compilers time unable advantage features intended facilitate manual assembly coding complex addressing modes cycles perform required additional memory accesses argued functions performed sequences simpler instructions yield implementations leave registers reducing slow memory accesses simple designs instructions uniform structure arithmetic operations restricted cpu registers separate load store instructions access memory properties enable balancing pipeline stages risc pipelines efficient allowing clock frequencies days industry programming assembly language machine code encouraged powerful easy instructions cpu designers instructions feasible advent level languages architects started create dedicated instructions implement central mechanisms languages goal provide addressing mode instruction orthogonality ease compiler implementation arithmetic operations operands memory addition register attitude time hardware design mature compiler design reason implement functionality hardware microcode memory constrained compiler generated code advent risc philosophy retroactively complex instruction set computing cisc cpus registers reasons force encouraging complexity limited main memories kilobytes advantageous code density—the density held programs—to leading features highly encoded variable instructions data loading calculation mentioned issues priority ease decoding instructions equally reason main memories slow common type ferrite core memory dense packing reduce frequency cpu access slow resource modern computers limiting factors main memories slow compared cpu fast cache memories employed overcome limited size partly explain highly encoded instruction sets proven risc designs modern computers risc developed alternative cisc strategies implemented alternatives risc cisc examples instruction word vliw minimal instruction set misc mid 1970s researchers john cocke ibm projects demonstrated majority combinations orthogonal addressing modes instructions programs generated compilers time proved difficult write compiler limited ability advantage features conventional cpus discovered microcoded implementations architectures complex operations tended slower sequence simpler operations designs rushed time optimize tune instruction optimized sequence instructions faster tuned instruction performing equivalent operation sequence infamous vax codice instruction mentioned core memory slower cpu designs advent semiconductor memory reduced difference apparent registers caches cpu operating frequencies additional registers require sizeable chip board time 1975 complexity cpu logic reduced impetus risc designs practical measurements real programs andrew tanenbaum summed demonstrating processors oversized immediates instance 98 constants program fit 13 bits cpu designs dedicated 16 32 bits store suggests reduce memory accesses fixed machine store constants unused bits instruction word ready cpu addressing conventional design required opcodes leave sized constant 32 bit instruction word real programs spend time executing simple operations researchers decided focus operations fast clock rate cpu limited time takes execute slowest operation instruction decreasing cycle time accelerates execution instructions focus reduced instructions led machine called reduced instruction set risc goal instructions simple easily pipelined achieve single clock throughput frequencies characteristics risc processors external memory accessible load store instruction instructions limited internal registers simplified aspects processor design allowing instructions fixed simplifying pipelines isolating logic dealing delay completing memory access cache instructions led risc designs referred load store architectures issue complex instructions difficult restart fault restarting wasteful incorrect machine hidden remember remains load store machine program counter sufficient machine main distinguishing feature risc instruction set optimized highly regular instruction pipeline flow features risc—branch delay slots separate instruction data caches load store architecture register set —may random assortment unrelated features helpful maintaining regular pipeline flow completes instruction clock cycle comparison architectures cpus designed set instructions – designs classic risc designs names minimal instruction set misc transport triggered architecture tta risc architectures traditionally successes desktop pc commodity server markets x86 based platforms remain dominant processor architecture change arm architecture based processors developed performance systems manufacturers including cavium amd qualcomm released arm architecture based server processors arm partnered cray 2017 produce arm architecture based supercomputer desktop announced partnership qualcomm planned support pc version windows qualcomm snapdragon based devices 2017 devices support x86 based win32 software x86 processor emulator desktop arena arm architecture risc widespread smartphones tablets forms embedded device pentium pro p6 intel internal risc processor core processors risc designs differed contemporary cisc designs 2000 performing cpus risc indistinguishable performing cpus cisc risc architectures risc architectures wide range platforms cellular telephones tablet computers fastest supercomputers summit fastest top500 list mobile systems 21st century majority mobile systems relied risc architectures examples include 
27802	computerscience	seymour aubrey papert february 29 1928 – july 31 2016 south african born american mathematician scientist educator spent career teaching researching mit pioneers artificial intelligence constructionist movement education inventor wally feurzeig cynthia solomon logo programming language education papert attended university witwatersrand receiving bachelor arts degree philosophy 1949 phd mathematics 1952 receive doctorate mathematics university cambridge 1959 supervised frank smithies career papert researcher variety including john college cambridge henri poincaré institute university paris university geneva national physical laboratory london associate mit 1963 held position 1967 professor applied math director mit artificial intelligence laboratory founding director professor marvin minsky 1981 served cecil ida green professor education mit 1974 1981 papert learning theories focusing impact technologies learning schools learning organizations constructionism mit papert create epistemology learning mit architecture machine mit media lab developer theory learning called constructionism built jean piaget constructivist learning theories papert piaget university geneva 1958 1963 piaget protégés piaget understands ideas papert papert rethought schools based theories learning logo papert piaget development logo programming language mit created logo tool improve children solve mobile robot called logo turtle developed children solve simple environment play main purpose logo foundation strengthen ability learn knowledge papert insisted simple language program children learn—like logo—can advanced functionality expert users technology papert proponent knowledge machine principals laptop child initiative manufacture distribute children machine developing nations papert collaborated construction toy manufacturer lego logo programmable lego mindstorms robotics kits named groundbreaking 1980 book personal life leading figure revolutionary socialist circle socialist review living london 1950s papert prominent activist south african apartheid policies university education papert married dona strauss androula christofides henriques papert wife mit professor sherry turkle wrote influential paper epistemological pluralism revaluation concrete final 24 papert married suzanne massie russian scholar author pavlovsk life russian palace land firebird accident hanoi papert aged 78 received brain injury struck motor scooter december 2006 crossing street colleague uri wilensky attending 17th international commission mathematical instruction icmi study conference hanoi vietnam underwent emergency surgery remove blood clot french hospital hanoi transferred complex operation swiss air ambulance bombardier challenger jet boston massachusetts moved hospital closer january 2007 contracted septicemia damaged heart valve replaced 2008 returned communicate walk unaided complicated speech receipt extensive rehabilitation support rehabilitation team principles experiential hands learning pioneered papert died blue hill maine july 31 2016 awards honours legacy papert researchers fields education science influenced uri wilensky design netlogo collaborated study knowledge restructurations andrea disessa development dynaturtles 1981 papert logo mit started logo systems lcsi board chair 20 lcsi papert designed award winning programs including logowriter lego logo marketed lego mindstorms influenced idit harel caperton coauthoring articles book constructionism chairing advisory board company mamamedia influenced alan kay dynabook concept kay projects papert guggenheim fellowship 1980 marconi international fellowship 1981 software publishers association lifetime achievement award 1994 smithsonian award computerworld 1997 papert called marvin minsky living mathematics educator mit president rafael reif summarized papert lifetime accomplishments mind extraordinary range creativity seymour papert helped revolutionize fields study children sense development artificial intelligence rich intersection technology learning stamp left mit profound mit continues expand reach deepen digital learning grateful seymour groundbreaking vision hope build ideas doors learners ages 
29071	computerscience	sunos unix branded operating developed sun microsystems workstation server systems sunos refer versions based bsd versions based unix release marketed brand solaris history sunos 1 supported sun series systems including sun systems upgraded sun 68010 cpu boards sunos 2 supported sun sun 68020 series systems sunos 4 supported sun release sun sun386i sun sparc architectures sunos 4 intended release support sun sparc processor sunos 3 release preliminary support sun systems sunos introduced support sun sun4m architecture multiprocessor machines sparcserver 600mp series single lock kernel cpu time execute kernel release sunos 4 solaris 1994 sun4 sun4c sun4m architectures supported sun4d supported sun continued ship sunos december 27 1998 supported september 30 2003 sunos solaris 1987 corporation sun announced collaborating project merge popular unix flavors market time bsd including features unique sunos xenix release svr4 september 1991 sun announced major os release switch bsd derived source base based svr4 internal designation release sunos 5 sun marketing solaris justification overbrand encompassed sunos openwindows desktop environment network computing onc functionality svr4 based os expected ship volume sun solaris refer shipping sunos release including openwindows sunos rebranded solaris 1 sunos considered solaris 2 sunos 4 micro versions continued released 1994 solaris equivalent practice referred customers sun personnel sunos release names matching version straightforward sunos 5 universally solaris sunos visible os startup banner output uname command footers matching sunos 5 release solaris marketing simple solaris release includes sunos 5 minor version solaris 2 incorporated sunos 5 twist solaris 2 dropped solaris sunos minor appears solaris release named solaris 11 incorporates sunos 5 11 user interface gui environments bundled earlier versions sunos included suntools sunview news 1989 sun released openwindows compliant x11 based environment supported sunview news applications default sunos gui sunos 4 
29279	computerscience	siggraph special graphics interactive techniques annual conference graphics convened acm siggraph organization siggraph conference 1974 conference attended tens thousands professionals conferences held los angeles dallas orleans boston vancouver north america siggraph asia yearly conference held 2008 asian countries strength siggraph chapters set overview highlights conference animation theater electronic theater presentations created films played exhibition floor companies set elaborate booths compete attention recruits companies engineering graphics motion picture video game industries booths schools specialize graphics interactivity dozens papers siggraph considered prestigious forum publication graphics paper acceptance rate siggraph 26 submitted papers peer reviewed single blind process criticism preference siggraph paper reviewers incremental progress papers accepted presentation siggraph printed 2003 special issue acm transactions graphics journal prior 1992 siggraph papers printed graphics publication 1993 2001 dedicated siggraph conference proceedings series publications addition papers numerous panels industry experts set discuss wide variety topics graphics machine interactivity education siggraph offers day courses art graphics topics shorter sketch presentations artists researchers discuss 1984 lucasfilm john lasseter animated short adventures andré wally premiered siggraph pixar animated short luxo jr debuted 1986 pixar debuted numerous shorts conference siggraph awards programs recognize outstanding contributions graphics prestigious steven anson coons award outstanding creative contributions graphics awarded 1983 recognize individual lifetime achievement graphics conference conference scheduled siggraph 2012 conference vary annually 
29468	computerscience	speech recognition inter disciplinary field computational linguistics develops methodologies technologies enables recognition translation spoken language computers automatic speech recognition asr speech recognition speech stt incorporates knowledge linguistics science electrical engineering fields speech recognition systems require training called enrollment individual speaker reads isolated vocabulary analyzes person specific voice fine tune recognition person speech increased accuracy systems training called speaker independent systems systems training called speaker dependent speech recognition applications include voice user interfaces voice dialing routing collect domotic appliance control search podcast spoken simple data entry entering credit card preparation structured documents radiology report determining speaker characteristics speech processing word processors emails aircraft termed direct voice input term voice recognition speaker identification refers identifying speaker recognizing speaker simplify task translating speech systems trained specific person voice authenticate verify identity speaker security process technology perspective speech recognition history waves major innovations field benefited advances deep learning data advances evidenced surge academic papers published field importantly worldwide industry adoption variety deep learning methods designing deploying speech recognition systems speech industry players include google ibm baidu apple amazon nuance govivace soundhound iflytek publicized core technology speech recognition systems based deep learning history key growth vocabulary size speaker independence processing speed pre 1970 raj reddy person continuous speech recognition graduate student stanford university late 1960s previous systems required users pause word reddy issued spoken commands playing game chess time soviet researchers invented dynamic time warping dtw algorithm create recognizer capable operating 200 word vocabulary dtw processed speech dividing short frames 10ms segments processing frame single unit dtw superseded algorithms technique carried achieving speaker independence remained unsolved time period 1970 1990 late 1960s leonard baum developed mathematics markov chains institute defense analysis decade cmu raj reddy students james baker janet baker hidden markov model hmm speech recognition james baker learned hmms summer job institute defense analysis undergraduate education hmms allowed researchers combine sources knowledge acoustics language syntax unified probabilistic model practical speech recognition 1980s introduction gram language model progress field owed rapidly increasing capabilities computers darpa program 1976 researchers pdp mb ram 100 minutes decode 30 speech practical products vocabulary typical commercial speech recognition larger average human vocabulary raj reddy student xuedong huang developed sphinx cmu sphinx speaker independent vocabulary continuous speech recognition performance darpa 1992 evaluation handling continuous speech vocabulary major milestone history speech recognition huang speech recognition 1993 raj reddy student kai fu lee joined apple 1992 helped develop speech interface prototype apple casper lernout hauspie belgium based speech recognition company acquired companies including kurzweil applied intelligence 1997 dragon systems 2000 speech technology windows xp operating industry leader accounting scandal brought company 2001 speech technology bought scansoft nuance 2005 apple originally licensed software nuance provide speech recognition capability digital assistant siri 2000s 2000s darpa sponsored speech recognition programs effective affordable reusable speech ears 2002 global autonomous language exploitation gale teams participated ears program ibm team led bbn limsi univ pittsburgh cambridge university team composed icsi sri university washington ears funded collection switchboard telephone speech corpus 260 hours recorded conversations 500 speakers gale program focused arabic mandarin broadcast news speech google effort speech recognition 2007 hiring researchers nuance product goog 411 telephone based directory service recordings goog 411 produced valuable data helped google improve recognition systems google voice search supported 30 languages united national security agency type speech recognition keyword spotting 2006 technology analysts search volumes recorded conversations isolate mentions keywords recordings indexed analysts queries database conversations government programs focused intelligence applications speech recognition darpa ears program iarpa babel program 2000s speech recognition dominated traditional approaches hidden markov models combined feedforward artificial neural networks aspects speech recognition deep learning method called short term memory lstm recurrent neural network published sepp hochreiter jürgen schmidhuber 1997 lstm rnns avoid vanishing gradient learn deep learning tasks require memories events happened thousands discrete time steps speech 2007 lstm trained connectionist temporal classification ctc started outperform traditional speech recognition applications 2015 google speech recognition reportedly experienced dramatic performance jump 49 ctc trained lstm google voice smartphone users deep feedforward recurrent networks acoustic modeling introduced 2009 geoffrey hinton students university toronto deng colleagues initially collaborative university toronto subsequently expanded include ibm google shared views subtitle 2012 review paper executive called innovation dramatic change accuracy 1979 contrast steady incremental improvements decades application deep learning decreased word error rate 30 innovation field researchers begun deep learning techniques language modeling history speech recognition shallow form deep form recurrent nets artificial neural networks explored 1980s 1990s 2000s methods uniform internal handcrafting gaussian mixture model hidden markov model gmm hmm technology based generative models speech trained discriminatively key difficulties methodologically analyzed 1990s including gradient diminishing weak temporal correlation structure neural predictive models difficulties addition lack training data computing power days speech recognition researchers understood barriers subsequently moved neural nets pursue generative modeling approaches resurgence deep learning starting 2009–2010 overcome difficulties hinton deng reviewed history collaboration colleagues university toronto google ibm ignited renaissance applications deep feedforward neural networks speech recognition 2010s 2010s speech recognition called voice recognition differentiated speaker recognition speaker independence considered major breakthrough systems required training period 1987 doll carried tagline finally doll understands – children train respond voice models methods algorithms acoustic modeling language modeling modern statistically based speech recognition algorithms hidden markov models hmms systems language modeling natural language processing applications document classification statistical machine translation hidden markov models modern purpose speech recognition systems based hidden markov models statistical models output sequence symbols quantities hmms speech recognition speech signal viewed piecewise stationary signal short time stationary signal short time scale milliseconds speech approximated stationary process speech markov model stochastic purposes reason hmms popular trained automatically simple computationally feasible speech recognition hidden markov model output sequence dimensional real valued vectors integer outputting milliseconds vectors consist cepstral coefficients fourier transform short time window speech decorrelating spectrum cosine transform coefficients hidden markov model tend statistical distribution mixture diagonal covariance gaussians likelihood observed vector word speech recognition systems phoneme output distribution hidden markov model sequence phonemes concatenating individual trained hidden markov models separate phonemes core elements common hmm based approach speech recognition modern speech recognition systems combinations standard techniques improve basic approach typical vocabulary context dependency phonemes phonemes left context realizations hmm cepstral normalization normalize speaker recording conditions speaker normalization vocal tract normalization vtln male female normalization maximum likelihood linear regression mllr speaker adaptation features called delta delta delta coefficients capture speech dynamics addition heteroscedastic linear discriminant analysis hlda skip delta delta delta coefficients splicing lda based projection heteroscedastic linear discriminant analysis global semi tied variance transform maximum likelihood linear transform mllt systems called discriminative training techniques dispense purely statistical approach hmm parameter estimation optimize classification measure training data examples maximum mutual mmi minimum classification error mce minimum phone error mpe decoding speech term utterance compute source sentence viterbi algorithm path choice dynamically creating combination hidden markov model includes acoustic language model combining statically finite transducer fst approach improvement decoding set candidates keeping candidate scoring function scoring rate candidates pick refined score set candidates list list approach subset models lattice scoring minimize bayes risk approximation source sentence maximal probability sentence minimizes expectancy loss function transcriptions sentence minimizes average distance sentences weighted estimated probability loss function levenshtein distance distances specific tasks set transcriptions pruned maintain tractability efficient algorithms devised score lattices represented weighted finite transducers edit distances represented finite transducer verifying assumptions dynamic time warping dtw based speech recognition dynamic time warping approach historically speech recognition displaced successful hmm based approach dynamic time warping algorithm measuring similarity sequences vary time speed instance similarities walking patterns detected video person walking slowly walking accelerations deceleration observation dtw applied video audio graphics – data linear representation analyzed dtw application automatic speech recognition cope speaking speeds method optimal match sequences time series restrictions sequences warped linearly match sequence alignment method context hidden markov models neural networks neural networks emerged attractive acoustic modeling approach asr late 1980s neural networks aspects speech recognition phoneme classification isolated word recognition audiovisual speech recognition audiovisual speaker recognition speaker adaptation contrast hmms neural networks assumptions feature statistical properties qualities attractive recognition models speech recognition estimate probabilities speech feature segment neural networks discriminative training natural efficient manner assumptions statistics input features neural networks spite effectiveness classifying short time units individual phonemes isolated neural networks rarely successful continuous recognition tasks lack ability model temporal dependencies lstm recurrent neural networks rnns time delay neural networks tdnn identify latent temporal dependencies perform task speech recognition deep neural networks denoising autoencoders experimented tackle effective manner inability feedforward neural networks model temporal dependencies alternative approach neural networks pre processing feature transformation dimensionality reduction hmm based recognition deep feedforward recurrent neural networks deep feedforward neural network dnn artificial neural network multiple hidden layers units input output layers shallow neural networks dnns model complex linear relationships dnn architectures generate compositional models extra layers enable composition features layers huge learning capacity potential modeling complex patterns speech data success dnns vocabulary speech recognition occurred 2010 industrial researchers collaboration academic researchers output layers dnn based context dependent hmm constructed decision trees overview articles fundamental principle deep learning hand crafted feature engineering raw features principle explored architecture deep autoencoder raw spectrogram linear filter bank features superiority mel cepstral features stages fixed transformation spectrograms true raw features speech waveforms produce excellent larger scale speech recognition automatic speech recognition 2014 asr traditional phonetic based hmm based model approaches required separate components training pronunciation acoustic language model models jointly learn components speech recognizer valuable simplifies training process deployment process gram language model required hmm based systems typical gram language model takes gigabytes memory impractical deploy mobile devices modern commercial asr systems google apple 2017 deployed cloud require network connection opposed device locally attempt asr connectionist temporal classification ctc based systems introduced alex graves google deepmind navdeep jaitly university toronto 2014 model consisted recurrent neural networks ctc layer jointly rnn ctc model learns pronunciation acoustic model incapable learning language conditional independence assumptions hmm ctc models learn map speech acoustics english characters models common spelling mistakes rely separate language model clean transcripts baidu expanded extremely datasets demonstrated commercial success chinese mandarin english 2016 university oxford lipnet sentence level lip reading model spatiotemporal convolutions coupled rnn ctc architecture surpassing human level performance restricted grammar dataset scale cnn rnn ctc architecture 2018 google deepmind achieving times performance human experts alternative approach ctc based models attention based models attention based asr models introduced simultaneously chan carnegie mellon university google brain bahdanaua university montreal 2016 model named listen attend spell las literally listens acoustic signal pays attention signal spells transcript character time ctc based models attention based models conditional independence assumptions learn components speech recognizer including pronunciation acoustic language model deployment carry language model practical deployment applications limited memory 2016 attention based models considerable success including outperforming ctc models external language model extensions proposed original las model latent sequence decompositions lsd proposed carnegie mellon university mit google brain emit word units natural english characters university oxford google deepmind extended las watch listen attend spell wlas handle lip reading surpassing human level performance applications car systems typically manual control input finger control steering wheel enables speech recognition signalled driver audio prompt audio prompt listening window accept speech input recognition simple voice commands initiate phone calls select radio stations play music compatible smartphone mp3 player music loaded flash drive voice recognition capabilities vary car model car models offer natural language speech recognition fixed set commands allowing driver sentences common phrases systems user memorize set fixed command health care medical documentation health care sector speech recognition implemented medical documentation process speech recognition provider dictates speech recognition engine recognized displayed spoken dictator responsible editing signing document deferred speech recognition provider dictates digital dictation voice routed speech recognition machine recognized draft document routed original voice file editor draft edited report finalized deferred speech recognition industry major issues relating speech recognition healthcare american recovery reinvestment 2009 arra substantial financial benefits physicians utilize emr meaningful standards standards require substantial data maintained emr commonly referred electronic health record ehr speech recognition naturally suited generation narrative radiology pathology interpretation progress note discharge summary ergonomic gains speech recognition enter structured discrete data numeric values codes list controlled vocabulary minimal people sighted operate keyboard mouse issue ehrs expressly tailored advantage voice recognition capabilities clinician interaction ehr involves navigation user interface menus tab button clicks heavily dependent keyboard mouse voice based navigation modest ergonomic benefits contrast highly customized systems radiology pathology dictation implement voice macros phrases – normal report automatically default values generate boilerplate vary type exam – chest ray gastrointestinal contrast series radiology alternative navigation hand cascaded speech recognition extraction studied handover form clinical proofing sign encouraging paper data performance benchmarks processing software development community studying clinical documentation language processing therapeutic prolonged speech recognition software conjunction word processors benefits short term memory restrengthening brain avm patients treated resection conducted determine cognitive benefits individuals avms treated radiologic techniques military performance fighter aircraft substantial efforts devoted decade evaluation speech recognition fighter aircraft note program speech recognition advanced fighter technology integration afti 16 aircraft 16 vista program france mirage aircraft programs dealing variety aircraft platforms programs speech recognizers operated fighter aircraft applications including setting radio frequencies commanding autopilot setting steer coordinates weapons release parameters controlling flight display swedish pilots flying jas gripen cockpit englund 2004 recognition deteriorated increasing loads report concluded adaptation greatly improved introduction models breathing improve recognition scores contrary expected effects broken english speakers evident spontaneous speech caused recognizer expected restricted vocabulary proper syntax expected improve recognition accuracy eurofighter typhoon service raf employs speaker dependent requiring pilot create template safety critical weapon critical tasks weapon release lowering undercarriage wide range cockpit functions voice commands confirmed visual aural feedback major design feature reduction pilot workload pilot assign targets aircraft simple voice commands wingmen commands speaker independent systems developed f35 lightning jsf alenia aermacchi 346 master lead fighter trainer systems produced word accuracy scores excess 98 helicopters achieving recognition accuracy stress noise pertain helicopter environment jet fighter environment acoustic noise severe helicopter environment noise levels helicopter pilot wear facemask reduce acoustic noise microphone substantial evaluation programs carried decade speech recognition systems applications helicopters notably army avionics development activity avrada royal aerospace establishment rae france included speech recognition puma helicopter canada encouraging voice applications included control communication radios setting navigation systems control automated target handover fighter applications overriding issue voice helicopters impact pilot effectiveness encouraging reported avrada tests represent feasibility demonstration environment remains speech recognition speech technology consistently achieve performance improvements operational settings training air traffic controllers training air traffic controllers atc represents excellent application speech recognition systems atc training systems require person pseudo pilot engaging voice dialog trainee controller simulates dialog controller conduct pilots real atc situation speech recognition synthesis techniques offer potential eliminate person pseudo pilot reducing training support personnel theory air controller tasks characterized highly structured speech primary output controller reducing difficulty speech recognition task practice rarely faa document 7110 65 details phrases air traffic controllers document 150 examples phrases phrases supported simulation vendors speech recognition systems excess 500 000 usaf usmc army navy faa international atc training organizations royal australian air force civil aviation authorities italy brazil canada atc simulators speech recognition vendors telephony domains asr commonplace field telephony widespread field gaming simulation telephony systems asr contact centers integrating ivr systems level integration word processing personal computing field document production asr expected increases improvement mobile processor speeds speech recognition practical smartphones speech user interface creating predefined custom speech commands leading software vendors field google corporation voice command digital syphon sonic extractor govivace lumenvox nuance communications nuance voice control voci technologies voicebox technology speech technology center vito technologies vito voice2go speereo software speereo voice translator verbyx vrx svox usage education daily life language learning speech recognition learning language teach proper pronunciation addition helping person develop fluency speaking skills students blind blindness education vision benefit technology convey hear recite commanding voice screen keyboard students physically disabled suffer repetitive strain injury injuries upper extremities relieved worry handwriting typing scribe school assignments speech programs utilize speech recognition technology freely enjoy searching internet physically operate mouse keyboard speech recognition students learning disabilities writers aloud increase fluidity writing alleviated concerns spelling punctuation mechanics writing learning disability voice recognition software conjunction digital audio recorder personal running word processing software proven positive restoring damaged short term memory capacity stroke craniotomy individuals people disabilities people disabilities benefit speech recognition programs individuals deaf hard hearing speech recognition software automatically generate closed captioning conversations discussions conference classroom lectures religious services speech recognition people difficulty hands ranging mild repetitive stress injuries involve disabilities preclude conventional input devices people keyboard lot developed rsi urgent market speech recognition speech recognition deaf telephony voicemail relay services captioned telephone individuals learning disabilities paper communication essentially idea processed incorrectly causing paper benefit software technology bug proof idea speak hard intellectually disabled person rare learn technology teach person disability type technology dyslexia disabilities question effectiveness product hindering effective kid word depending technology word input wrong causing time fixing wrong word performance performance speech recognition systems evaluated terms accuracy speed accuracy rated word error rate wer speed measured real time factor measures accuracy include single word error rate swer command success rate csr speech recognition machine complex vocalizations vary terms accent pronunciation articulation roughness nasality pitch volume speed speech distorted background noise echoes electrical characteristics accuracy speech recognition vary accuracy mentioned earlier article accuracy speech recognition vary depending factors discontinuous speech sentences separated silence easier recognize speech isolated speech continuous speech naturally spoken sentences harder recognize speech isolated discontinuous speech constraints represented grammar speech recognition multi levelled pattern recognition task word pronunciations legal word sequences compensate errors uncertainties level telephone speech sampling rate 8000 samples computed 10 ms 10 ms called frame analysis step neural network approaches explained sound produced air medium vibration register ears machines receivers basic sound creates wave descriptions amplitude strong frequency vibrates security concerns speech recognition attack theft accidental operation activation alexa spoken audio video broadcast devices homes offices start listening input inappropriately unwanted action voice controlled devices accessible visitors building building heard attackers gain access personal calendar address book contents private messages documents impersonate user send messages online purchases attacks demonstrated artificial sounds transmits ultrasound attempt send commands nearby people noticing adds inaudible distortions speech music specially crafted confuse specific speech recognition recognizing music speech sounds command human sound command conferences journals popular speech recognition conferences held include speechtek speechtek europe icassp interspeech eurospeech ieee asru conferences field natural language processing acl naacl emnlp hlt include papers speech processing journals include ieee transactions speech audio processing renamed ieee transactions audio speech language processing sept 2014 renamed ieee acm transactions audio speech language processing—after merging acm publication speech language speech communication books books fundamentals speech recognition lawrence rabiner acquire basic knowledge 1993 source statistical methods speech recognition frederick jelinek spoken language processing 2001 xuedong huang speech manfred schroeder edition published 2004 speech processing dynamic optimization oriented approach published 2003 deng doug shaughnessey updated textbook speech language processing 2008 jurafsky martin basics art asr speaker recognition features processing classification techniques speech recognition comprehensive textbook fundamentals speaker recognition depth source details theory practice insight techniques modern systems gained paying attention government sponsored evaluations organised darpa largest speech recognition project ongoing 2007 gale project involves speech recognition translation components accessible introduction speech recognition technology history audience book voice machine building computers understand speech roberto pieraccini 2012 book speech recognition automatic speech recognition deep learning approach publisher springer written deng published 2014 highly mathematically oriented technical deep learning methods derived implemented modern speech recognition systems based dnns deep learning methods book published earlier 2014 deep learning methods applications deng technical methodology focused overview dnn based speech recognition 2009–2014 context deep learning applications including speech recognition image recognition natural language processing retrieval multimodal processing multitask learning software terms freely resources carnegie mellon university sphinx toolkit start learn speech recognition start experimenting resource copyrighted htk book accompanying htk toolkit art techniques kaldi toolkit demonstration speech recognizer cobalt software resources list speech recognition software 
30984	computerscience	toyota market leader sales hybrid electric vehicles largest companies encourage mass market adoption hybrid vehicles globe toyota market leader hydrogen fuel cell vehicles cumulative global sales toyota lexus hybrid passenger car models achieved 10 million milestone january 2017 prius family selling hybrid nameplate 6 million units sold worldwide company founded kiichiro toyoda 1937 spinoff father company toyota industries create automobiles earlier 1934 department toyota industries created product type engine passenger car 1936 toyota aa toyota motor corporation produces vehicles brands including toyota brand hino lexus ranz daihatsu holds 16 66 stake subaru corporation stake isuzu joint ventures china gac toyota sichuan faw toyota motor india toyota kirloskar czech republic tpca nonautomotive companies tmc toyota largest conglomerates japan corporate governance toyota headquartered toyota city aichi main headquarters toyota located story building toyota 2006 head office toyopet toyota logo toyota motor toyota technical center 14 story building honsha plant toyota plant engaging mass production named koromo plant adjacent location headquarters vinod jacob hindu main headquarters building modest 2013 company head akio toyoda reported difficulties retaining foreign employees headquarters lack amenities city tokyo office located bunkyo tokyo nagoya office located nakamura ku nagoya addition manufacturing automobiles toyota financial services toyota financial services division builds robots presidents toyota motor company 1981 toyota motor announced plans merge sales entity toyota motor sales 1950 entities existed separate companies prerequisite reconstruction postwar japan shoichiro toyoda presided toyota motor sales preparation consummation merger occurred 1982 shoichiro succeeded uncle eiji president combined organization toyota motor corporation presidents toyota motor corporation chairmen toyota motor corporation june 14 2013 toyota motor corporation announced appointment external board corporation occurred approval shareholders meeting day additionally vice chairman takeshi uchiyamada replaced fujio cho chairman honorary chairman toyoda remains post president toyota publicly traded tokyo osaka nagoya fukuoka sapporo exchanges company code addition toyota foreign listed york stock exchange london stock exchange toyota publicly traded japan 1949 internationally 1999 reported consolidated financial statements toyota 606 consolidated subsidiaries 199 affiliates global ranking toyota earlier largest automotive manufacturer american motors ford produced time history vehicles ford 2005 2006 motors largest automotive manufacturer 2011 triggered 2011 tōhoku earthquake tsunami fell position motors german volkswagen history 1920s1930s 1924 sakichi toyoda invented toyoda model automatic loom principle jidoka machine stops occurs toyota production looms built production 1929 patent automatic loom sold british company platt brothers generating starting capital automobile development production toyota automobiles started 1933 division toyoda automatic loom devoted production automobiles direction founder son kiichiro toyoda vehicles a1 passenger car g1 truck 1935 toyota motor company established independent company 1937vehicles originally sold toyoda トヨダ family company founder kiichirō toyoda april 1936 toyoda passenger car model aa completed sales price 350 yen 400 yen cheaper ford cars september 1936 company public competition design logo 27 000 entries winning entry japanese katakana letters toyoda circle rizaburo toyoda married family born preferred toyota brush strokes lucky write japanese visually simpler leaving diacritic voiceless consonant voiced voiced consonants considered murky muddy sound compared voiceless consonants toyoda literally fertile rice paddies changing prevented company fashioned farming newly formed word trademarked company registered august 1937 toyota motor company 1940s–1950s september 1947 toyota sized vehicles sold toyopet トヨペット vehicle sold toyopet included vehicles toyopet light truck toyopet stout light truck toyopet crown toyopet master toyopet corona word toyopet japanese article nickname toyota size result naming contest toyota company organized 1947 toyota eventually entered american market 1957 crown received connotations toys pets dropped american market continued markets mid 1960s 1960s–1970s 1960s begun placing stiff import tariffs vehicles called chicken tax 1964 25 tax imported light trucks response tariff toyota nissan motor honda motor building plants 1980s 1980s toyota received japanese quality control award start 1980s participating wide variety motorsports 1973 oil crisis consumers lucrative market cars fuel economy american car manufacturers considered economy cars entry level product vehicles employed level quality price conservative toyota held rear wheel drive designs production production wheel drive cars 1983 nissan honda nissan sunny managed squeeze corolla built 1982 toyota motor company toyota motor sales merged company toyota motor corporation toyota entered joint venture motors called united motor manufacturing nummi operating automobile manufacturing plant fremont california factory motors plant closed tesla assembly plant toyota started establish brands 1980s launch luxury division lexus 1989 1990s 1990s toyota branch producing compact cars adding larger luxurious vehicles lineup including sized pickup t100 tundra lines suvs sport version camry camry solara launch iterations sports cars mr2 celica supra era major presence europe success toyota team europe corporation decided set toyota motor europe marketing engineering tmme market vehicles continent toyota set base united kingdom tmuk company cars popular british drivers bases indiana virginia tianjin set 1999 company decided list york london stock exchanges 2000s 2001 toyota toyo trust banking merged banks form ufj bank accused corruption japan government bad loans alleged yakuza crime syndicates executives accused blocking financial service agency inspections ufj listed fortune magazine largest money losing corporations toyota chairman serving director time ufj largest shareholders toyota result japan banking crisis ufj merged bank tokyo mitsubishi mitsubishi ufj financial 2002 toyota managed enter team establish joint ventures french motoring companies citroën peugeot toyota started producing cars france youth oriented marque north america scion introduced 2003 toyota ranked eighth forbes 2000 list leading companies 2005 slid 55th 2011 company global automobile sales quarter 2008 2007 toyota released update sized truck tundra produced american factories texas indiana motor trend named tundra truck 2007 toyota camry car 2007 construction factories build rav4 woodstock ontario canada build toyota prius blue springs mississippi usa plant originally intended build toyota highlander toyota decided plant princeton indiana usa company success models—the corolla yaris 2010s 2011 toyota japanese automotive industry suffered series natural disasters 2011 tōhoku earthquake tsunami led severe disruption supplier base drop production exports severe flooding 2011 monsoon season thailand japanese automakers chosen thailand production base toyota estimated lost production 150 000 units tsunami production 240 000 units floods february 2014 announced toyota cease manufacturing vehicles engines australia 2017 decision based unfavourable australian dollar exports viable cost local manufacture competition local market company plans consolidate corporate functions melbourne 2017 head office remain port melbourne altona plant retained functions workforce expected reduced 900 300 ford motor company motors holden suit australian production 2016 2017 automaker narrowly topped global sales 2014 selling vehicles months june 30 2014 increase period previous volkswagen recorded sales 07 vehicles close august 2014 toyota announced cutting spare prices china 35 company admitted response probe foreshadowed earlier month china national development reform commission toyota lexus spare policies industry wide investigation chinese regulator considers exorbitantly prices charged automakers spare sales servicing november 2015 company announced invest artificial intelligence robotics 2016 toyota invested uber invested public march 2016 toyota partnered yanmar create fibreglass pleasure boat yanmar outboard marine diesel engines toyota inboard engines august 27 2018 toyota announced investment 500 uber autonomous cars recalls 2009 november 2009 2010 toyota recalled cars trucks worldwide recall campaigns halted production sales pressure nhtsa toyota issued recalls reports vehicles experienced unintended acceleration 2012 october 2012 toyota announced recall 43 vehicles worldwide malfunctioning power window switches largest recall ford motor company 1996 series recalls 2009 2011 pulled cars claims faulty mechanics march 2014 toyota agreed pay fine concealing misleading public safety issues recalls toyota lexus vehicles unintended acceleration toyota agreed fault 2014 november 2014 toyota usa enlisted recall involving defective inflaters propellant devices deploy improperly event crash shooting metal fragments vehicle occupants vehicles united recall vehicles equipped takata airbags released 2000 north america airbags manufactured takata automotive manufacturing toyota offering repair vehicles worldwide fault takata air bags north american automobile manufacturers 2018 december 2018 toyota usa announced recall toyota lexus vehicles takata airbags replaced company recall specific toyota corollas sequoias tundras lexus vehicles 2002 2005 recall announced initially scheduled recall december 2019 logo branding 1936 toyota entered passenger car market model aa held competition establish logo emphasizing speed product receiving 27 000 entries selected additionally change moniker toyota family toyoda believed sound stroke count japanese language wealth fortune original logo vehicles remains corporate emblem japan guidelines existed brand toyota led inconsistencies worldwide marketing campaigns remedy toyota introduced worldwide logo october 1989 commemorate 50th company differentiate newly released luxury lexus brand logo debut 1989 toyota celsior gained worldwide recognition ovals logo combine form letter stands toyota overlapping perpendicular ovals larger oval represents mutually beneficial relationship trust customer company larger oval surrounding ovals represents global expansion toyota technology unlimited potential future logo started appearing printed material advertisements dealer signage vehicles 1990 countries regions traditional chinese characters hong kong taiwan toyota 豐田 countries simplified chinese characters china singapore toyota written 丰田 pronounced fēngtián mandarin chinese hɔng tshan minnanese characters founding family toyoda japanese japan japan toyota maintains separate dealership sales channels toyota sought hierarchical marketing approach methods north america implemented dealership chains models exclusive locations sales channel established 1946 called toyota store トヨタ店 toyota mise offers luxury sedans toyota century toyota crown 1955 toyopet store トヨペット店 toyopetto arrived originally established sell toyota corona toyopet toyoace truck features mid range models toyota channel dealerships japan chronology japanese toyota publica store トヨタパブリカ店 toyota paburika established 1961 sell toyota publica 1966 renamed toyota corolla store トヨタカローラ店 toyota karōra sell toyota corolla dealership chain focuses budget models toyota auto store トヨタオート店 toyota Ōto sales network established 1967 sell corolla companion toyota sprinter renamed netz toyota store 1998 vista camry clone called toyota vista toyota vista network replaced networks netz toyota ネッツトヨタ店 nettsu toyota august 1998 lexus 2004 vista models rebranded lexus レクサス rekusasu altezza aristo products netz toyota selling toyota ist toyota rav4 netz acronym network energetic teams zenith targets buyers toyota operated commercial dealership called toyota diesel shop トヨタディーゼル店 toyota dīzeru 1957 1988 sold commercial platform trucks buses forklifts toyota dyna toyota coaster hino products sold specific hino locations shared toyota diesel store locations toyota acquired company 1967 starting 1980 diesel shop sold starlet corolla corona vista crown installed diesel engines toyota diesel store disbanded commercial products divided toyota store toyopet store locations 2012 selected japanese dealership locations special designation called 86 resembled north american toyota network called scion sell toyota 86 building marketing approach started branded products 2017 86 network rebranded gazoo racing sharing approach performance division toyota racing development trd providing upgrades 86 vitz prius mark harrier noah voxy female idol akb48 toyota aks create subunit named team team created idea idols meet total 47 representing prefecture japan list models retail channels nationally models exclusive retail chains models prius sales channels retail chains tokyo osaka okinawa century crown majesta crown master sai mirai prius aqua allion succeed blade avensis sienta corolla runx porte estima isis roomy cruiser comfort land cruiser hilux surf land cruiser prado dyna stout esquire coaster quickdelivery 2000gt carina carina 86 brevis gaia cavalier classic masterace hilux mega cruiser soarer origin caldina mark sai mirai premio prius aqua belta mark zio succeed ractis auris blade 86 porte harrier vanguard esquire rush avensis alphard comfort hiace toyoace tank sienta pixis space mark mark qualis mark blit corona corona exiv corona coupe corsa opa avalon progrès cami ist platz soarer hilux cynos regius celsior origin caldina ipsum sai camry prius aqua corolla axio 86 belta spade probox corolla rumion ractis passo corolla verso sera vanguard roomy estima noah avensis sienta townace pixis publica tercel windom scepter corolla ceres origin nadia rav4 sports 800 celica supra corolla levin celica xx celica camry vitz sai prius aqua ist auris avensis raum spade voxy rav4 kluger vellfire allex tank pixis fun cargo pronard altezza verossa curren aristo mr2 starlet vista cresta sprinter voltz blizzard chaser sprinter marino carib granvia sprinter trueno liteace ipsum 86 1999–2004 sports toyota sponsors teams purchased naming rights venues including toyota official sponsor cricket australia england wales cricket board afl march 2015 toyota sponsor partner olympic games form supplying vehicles communications vehicles 2024 company strategy toyota management philosophy evolved company origins reflected terms lean manufacturing time production instrumental developing toyota managerial values business methods collectively toyota businesses worldwide approach manufacturing april 2001 toyota toyota 2001 expression values conduct guidelines toyota employees embrace headings respect people continuous improvement toyota summarizes values conduct guidelines principles external observers toyota components toyota incorporates toyota production operations toyota recognized industry leader manufacturing production stories origin studied piggly wiggly time distribution writings edwards deming principles wwii government training program training industry external observers toyota principles toyota toyota grown origins japan 1930s multinational corporation displaced largest automobile maker 2008 held title profitable automobile maker 2006 increasing sales countries united headquarters toyota located country toyota city japan subsidiary toyota financial services sells financing participates lines business toyota brands include scion lexus corporation toyota toyota owns 51 daihatsu 16 fuji heavy industries manufactures subaru vehicles acquired isuzu motors november 2006 introducing isuzu diesel technology products toyota introduced technologies including mass produced hybrid gasoline electric vehicles prius sold globally 2010 advanced parking guidance automatic parking speed electronically controlled automatic buttons power economy shifting speed automatic transmission toyota toyota produced lexus scion automobiles consistently rank quality reliability surveys power consumer reports led automobile recalls time 2009 2005 toyota combined owned subsidiary daihatsu motor company produced 54 million vehicles 500 000 produced toyota market share united market share europe sells vehicles africa market leader australia daihatsu subsidiary market shares fast growing southeast asian countries 2017 fortune global 500 toyota largest company recession 2001 gained market share united toyota market share struggles europe lexus brand market share compared market share luxury segment leader months 2007 toyota owned subsidiary daihatsu reported sales 348 million units toyota brand sales risen demand corolla camry sedans difference performance attributed surging demand fuel efficient vehicles november 2006 toyota motor manufacturing texas facility san antonio toyota experienced quality reprimanded government japan recall practices 2007 toyota maintained 16 market share listed terms volume toyota century royal official car japanese imperial family current emperor japan toyota hit global financial crisis 2008 forced december 2008 forecast annual loss 70 january 2009 announced closure japanese plants 11 days reduce output stocks unsold vehicles akio toyoda president ceo company june 23 2009 replacing katsuaki watanabe vice chairman replacing katsuhiro nakagawa technology 2018 toyota regarded smart car technology innovation company invested robotics institute create safer vehicles robotics centre toyota launched dollar driving car company called toyota institute advanced development tri automotive supplier aisin seiki denso toyota invested 500m driverless car company uber with the ambition build combined technology toyota’s sienna minivans uber’s ride hailing network 2021 2019 toyota partnered chinese technology firm cogobuy build smart car ecosystem hopes company manufacturing oriented intelligence oriented worldwide presence toyota factories manufacturing assembling vehicles local markets japan australia 2017 india sri lanka canada indonesia poland south africa turkey colombia united kingdom united france brazil portugal argentina czech republic mexico tijuana malaysia thailand pakistan egypt china vietnam venezuela philippines russia toyota revenue geographical regions march 31 2007 2002 toyota initiated innovative international multi purpose vehicle project iimv optimize global manufacturing supply systems pickup trucks multipurpose vehicles satisfy market demand 140 countries worldwide iimv called diesel engines thailand gasoline engines indonesia manual transmissions india philippines supply countries charged vehicle production vehicle assembly toyota plants thailand indonesia argentina south africa main iimv production export bases supply asia europe africa oceania latin america middle east vehicles toyota hilux vigo fortuner toyota innova north america toyota motor north america headquarters located plano texas operates holding company north america production engineering manufacturing headquarters located georgetown kentucky toyota canada production canada 1983 aluminium wheel plant delta british columbia employs workforce roughly 260 vehicle assembly plant cambridge ontario 1988 produces corolla compact cars matrix crossover vehicles lexus rx 350 luxury suvs workforce 300 workers assembly operation woodstock ontario manufacturing rav4 late 2008 2006 toyota subsidiary hino motors heavy duty truck plant woodstock employing 45 people producing 2000 trucks annually toyota presence united major assembly plants huntsville alabama georgetown kentucky princeton indiana san antonio texas buffalo west virginia blue springs mississippi toyota joint venture operation motors united motor manufacturing fremont california 1984 2009 joint venture subaru subaru indiana automotive lafayette indiana started 2006 assembly plants camry tundra manufactured toyota marketing sales distribution conducted separate subsidiary toyota motor sales started producing larger trucks tundra truck market united toyota pushing hybrid vehicles prius camry hybrid highlander hybrid lexus products toyota plans offer diesel motor options north american products including light duty pickup trucks australia 1963 australia countries assemble toyotas japan february 2014 toyota australia major automakers production australia closure toyota australian plant completed october 2017 produced total 451 155 vehicles peak october 2007 toyota manufactured 15 000 cars month toyota ford holden announced moves citing unfavorable currency attendant manufacturing costs product electric technology hybrid electric vehicles toyota market leader sales hybrid electric vehicles largest companies encourage mass market adoption hybrid vehicles globe commercially mass produce sell vehicles introduction toyota prius 1997 company eventually providing option main passenger cars camry lexus divisions producing hybrid luxury vehicles labeled technology toyota cars hybrid synergy drive lexus versions lexus hybrid drive cumulative global sales toyota lexus hybrid passenger car models passed 10 million milestone january 2017 prius family selling hybrid nameplate units sold worldwide toyota motor corporation sells 33 toyota lexus hybrid passenger car models plug hybrid 90 countries regions carmaker expects achieve annual sales 5  units cumulative sales 15  units 2020 prius liftback selling hybrid gasoline electric car sales achieved 3 million unit milestone june 2013 cumulative sales 1997 totaled 984 600 units january 2017 prius liftback ranks selling hybrid car market passed 1 million milestone april 2011 cumulative sales prius japan reached 1 million mark august 2011 sales prius liftback totaled units japan 75 united cumulative tmc hybrid sales prius introduction europe 2000 passed 1 million unit milestone november 2015 worldwide sales hybrid vehicles produced toyota reached 1 million vehicles 31 2007 2 million mark reached august 2009 hybrids sold 50 countries 5 million hybrid sales milestone reached march 2013 2012 toyota lexus hybrid models sold 1 million units time 219 units sold 2013 tmc sold 279 units 6 million sales milestone achieved december 2013 months unit milestone 7 million sales mark reached september 2014 selling hybrids months 8 million sales milestone achieved july 2015 months previous unit milestone 9 million sales mark reached april 2016 selling hybrids months 10 million milestone january 2017 time months toyota estimates january 31 2017 hybrids saved 66 gallons gasoline 29 liters compared gasoline powered vehicles size emitted 77 tons carbon dioxide co2 emissions emitted gasoline powered vehicles size driving performance prius liftback generations toyota hybrid lineup includes prius α prius prius aqua prius camry hybrid 1st 2nd generation toyota highlander hybrid kluger hybrid japan toyota avalon hybrid toyota auris hybrid toyota yaris hybrid europe models sold japan alphard hybrid vellfire hybrid estima hybrid toyota sai toyota harrier toyota crown hybrid toyota crown mild hybrid toyota crown majesta corolla axio corolla fielder toyota voxy noah esquire toyota sienta toyota corolla hybrid toyota levin hybrid toyota rav4 hybrid 2011 tmc introduced prius family prius prius α japan prius europe prius toyota aqua japan toyota prius plug hybrid released 2012 japan europe total 247 230 vehicles sold quarter 2012 toyota prius family selling nameplate terms total global sales toyota corolla 300 800 units ford focus 277 000 units september 2012 prius liftback selling car japan 16 months row surpassed toyota aqua prius october 2012 266 567 units sold japan 2012 aqua considered successful nameplate launch japanese market 20 prius aqua model global sales 380 100 units january 2017 tmc selling hybrid prius liftback prius α 671 200 units generations camry hybrid 614 700 units sold worldwide january 2017 prius family variants japan selling market selling camry market ranking auris 378 000 units sold europe market 354 600 units sold lexus hybrid lineup consist 600h 600h 450h rx 400h rx 450h lexus hs 250h lexus ct 200h lexus 300h lexus 300h lexus nx 300h lexus rc 300h global cumulative sales lexus brand hybrids reached 500 mark november 2012 1 million sales milestone achieved march 2016 lexus rx 400h rx 450h ranks selling lexus hybrid 363 000 units delivered worldwide lexus ct 200h 290 800 units lexus 300h 143 200 units plug hybrids toyota plug hybrid electric vehicle project 2007 road trials prototype vehicle france 2008 toyota 600 prius plug demonstration vehicles lease fleet government customers 230 delivered japan late december 2009 125 models released 2010 200 units 18 european countries 2010 france germany largest fleets 150 phevs canada china australia zealand participated global demonstration program production version toyota prius plug hybrid released japan january 2012 united late february deliveries europe late june 2012 global sales totaled 75 400 prius phvs 2012 north america leading regional market 42 700 units japan 22 100 units europe 500 units 100 units rest united country market leader 42 320 units delivered april 2016 leading european market netherlands 134 units registered market total 27 279 prius phvs sold worldwide allowing plug version rank sold plug electric car 2012 accounting cumulative sales inception prius phv time selling plug electric car december 2014 production generation prius plug june 2015 prius plug hybrid ranked selling plug hybrid volt ampera family prius plug ranking selling plug cars fell tesla model mitsubishi outlander hev generation prius plug hybrid named toyota prius prime unveiled 2016 york international auto released november 2016 generation model 50 sales japan started february 15 2017 electric vehicles generation toyota rav4 ev leased united 1997 2003 lessees request units sold vehicle discontinued total 484 leased sold california meet state’s carb mandate emissions vehicles mid 2012 500 units 2010 toyota launched collaboration tesla motors create electric vehicles toyota agreed purchase tesla common stock subsequent closing tesla planned initial public offering toyota assistance tesla built 35 converted rav4s phase vehicles demonstration evaluation program 2011 lithium metal oxide battery power train components supplied tesla motors toyota daimler unwind position tesla toyota daimler bln investment toyota rav4 ev concept released september 2012 rav4 ev assembled toyota facility woodstock ontario regular gasoline version tesla built electric powertrain plant tesla factory fremont california shipped canada rav4 ev sold california san francisco bay los angeles orange county san diego production limited 600 units period total 340 rav4 evs sold retail customers production september 2014 prototype toyota ev scion ev exhibited 2011 geneva motor scion ev successor ft ev electric vehicle based toyota chassis toyota produced generations ft ev concept cars ev production version concepts incorporating technological design strengths models exterior production version based ft ev iii concept 2011 tokyo motor launch scion ev announced 2012 toyota initial roll ev individual consumers carmaker decided focus fleet customers car sharing programs ev scheduled produced toyota’s takaoka plant toyota city august 2012 initial production planned limited 600 units 400 staying japan 100 units destined 100 europe september 2012 toyota announced customers concerns range charging time production scion toyota eq japan limited 100 units special fleet japan ev eq scheduled released countries december 2012 30 evs delivered university california irvine march 2013 emission vehicle network enabled transport zev carsharing fleet 2002 zev program serving transport irvine community electric vehicles critical mile commutes irvine train station uc campus local business offices addition toyota announced electric vehicles company vice chairman takeshi uchiyamada current capabilities electric vehicles meet society’s distance cars costs takes time charge toyota emphasis focused hybrid concept 21 hybrid gas electric models scheduled market 2015 toyota project called harmonious mobility network toyota road electric vehicle combines potential cars motorbikes project grenoble france toyota city japan tokyo japan hydrogen fuel cell 2002 toyota development demonstration program toyota fchv hybrid hydrogen fuel cell vehicle based toyota highlander production suv toyota built fchv bus based hino blue ribbon city floor bus toyota built prototypes concepts fchv 1997 including toyota fchv fchv fchv fchv toyota fchv adv toyota fcv fuel cell concept car unveiled 2011 tokyo motor fcv sedan seats fuel cell stack including 70 mpa pressure hydrogen tank deliver range japanese jc08 cycle toyota car planned launch 2015 august 2012 toyota announced plans start retail sales hydrogen fuel cell sedan california 2015 toyota expects leader technology prototype hydrogen fuel cell vehicle exhibited november 2013 tokyo motor united january 2014 consumer electronics toyota hydrogen fuel cell vehicles sold commercially toyota mirai japanese future unveiled november 2014 los angeles auto january 2015 announced production mirai fuel cell vehicle increase 700 units 2015 000 2016 000 2017 sales japan december 15 2014 price japanese government plans support commercialization fuel cell vehicles subsidy retail sales august 2015 price government incentives initially mirai california market release europe slated september 2015 initially germany denmark countries 2017 pricing germany starts vat 2015 toyota released 600 patents 2020 hoping promote global development hydrogen fuel cell technology cars 2009 toyota officially lists 70 models sold namesake brand including sedans coupes vans trucks hybrids crossovers models produced passenger sedans range subcompact toyota yaris compact corolla mid size camry size avalon vans include previa estima sienna cars xb sold scion brand suvs crossovers toyota crossovers range compact matrix rav4 midsize venza kluger highlander toyota suvs range midsize 4runner size land cruiser suvs include prado cruiser fortuner sequoia pickup trucks toyota entered pickup truck market 1947 sold japan limited asian markets 1954 rk renamed 1959 stout 1968 compact hilux continued refinement hilux simply pickup markets famous extremely durable reliable trucks late 1970s road 300 000 miles extended crew cab versions haulers eventually toyota continues produce names depending market riding success compact pickups toyota decided attempt enter traditionally domestic dominated size pickup market introducing t100 1993 model production 1998 bed traditional size feet suspension engine characteristics compact pickup proved economical reliable typical toyota pickup sales toyota brass hoped criticized appeal traditional american size pickup buyer popular size truck essential v8 engine additionally truck regular cab toyota addressed shortcoming xtracab version mid 1995 1999 2000 model toyota replaced t100 larger tundra tundra addressed criticisms t100 feel legitimate american style size pickup v8 engine t100 criticized tundra short towing capacity feeling carlike concerns addressed larger 2007 redesign stronger v6 v8 engine option list 2010 tundra captured 16 size ton market tundra assembled san antonio texas toyota assembled 150 000 standard double cabs 70 000 crew max 2007 tacoma traces roots original hilux produced company san antonio facility united toyota produced hilux standard double cab gasoline diesel engine 2wd 4wd versions bbc gear featured episodes hilux deemed virtually indestructible luxury type vehicles 2009 company sold luxury branded models lexus division ranging sedan rx crossover lx suv luxury type sedans produced toyota brand included century crown crown majesta limited edition model produced emperor japan century royal toyota branded luxury vehicles tend japan pleasure boats 1997 building previous partnership yamaha marine toyota created toyota marine building private ownership motorboats sold japan network japan sells luxury craft 54 locations called toyota ponam series 2017 boat labeled lexus brand starting 26 2017 motorsports toyota involved global motorsports series represent lexus brand sports car racing categories toyota engines auto japanese motorsports including nippon super toyota racing series toyota runs driver development programme toyota drivers program funding educating future japanese motorsports talent toyota motorsport gmbh headquarters cologne germany responsible toyota major motorsports development including fia championship fia rally championship le mans series fia endurance championship toyota enjoyed success motorsports categories toyota entered constructor engine supplier experienced drivers larger budget teams failed match success categories finishes november 2009 toyota announced pulling sport global economic situation 2018 24 hours le mans toyota finally race toyota ts050 hybrid driven sebastien buemi kazuki nakajima fernando alonso toyota nationwide driver hunt drivers etios motor racing series selection 25 drivers participate race 2013 trd toyota racing development trd brought develop true performance racing toyota vehicles trd success aftermarket tuning designing technology vehicles types racing trd united responsible toyota involvement development forms motorsports include nascar nhra indy racing league drift trd lexus performance division sport automotive activities aerospace toyota minority shareholder mitsubishi aircraft corporation invested venture produce mitsubishi regional jet slated deliveries 2017 toyota studied participation aviation market contracted scaled composites produce proof concept aircraft taa 2002 philanthropy toyota supports variety philanthropic education conservation safety disaster relief organizations toyota include american red cross boys girls club leaders environmental action future leaf national center family literacy toyota usa foundation exists support education science technology engineering mathematics addition toyota nonprofits improve processes operations food bank york city toyota supports variety japan toyota foundation takes global perspective providing grants human natural environments social welfare education culture education toyota established toyota technological institute 1981 sakichi toyoda planned establish university toyota successful toyota technological institute founded toyota technological institute chicago 2003 toyota supporter toyota driving expectations program toyota youth understanding summer exchange scholarship program toyota international teacher program toyota tapestry toyota community scholars scholarship school students united hispanic chamber commerce internship program toyota funded scholarship contributed local education scholarship programs university kentucky indiana robotics 2004 toyota showcased trumpet playing robot toyota developing multitask robots destined elderly care manufacturing entertainment specific toyota involvement robotics elderly brain machine interface designed wheelchairs person control electric wheelchair accurately real time mind controls wheelchair left delay movement 125 milliseconds toyota played development kirobo robotic astronaut 2017 company introduced hr3 humanoid robot ability remotely controlled robot motions connected person 2017 version wires connection 2018 version 5g distance agricultural biotechnology toyota invests start businesses partnerships biotechnology including sewing machine technology toyota developed oekaki style sewing machine called oekaki renaissance type designed user draw ideas fabric art motion embroidery environmental record toyota leader environmentally friendly vehicle technologies notably rav4 ev produced 1997 2003 2012 toyota prius 1997 toyota implemented environmental action plan 2005 plan major themes involving environment corporation development design production sales plan directed arrival revitalized recycling reduction based society toyota released eco vehicle assessment eco vas systematic life cycle assessment vehicle environment including production usage disposal assessment includes fuel efficiency emissions noise vehicle disposal recovery rate reduction substances environmental concern emissions life cycle vehicle production disposal 2008 marks ninth toyota environmental activities grant program implemented 2001 themes 2008 program consist global warming countermeasures biodiversity conservation october 2006 toyota japanese market vehicle models automatic transmissions equipped eco drive indicator takes consideration rate acceleration engine transmission efficiency speed vehicle operated fuel efficient manner eco drive indicator instrument panel lights individual vary depending traffic issues starting stopping vehicle total distance traveled eco drive indicator improve fuel efficiency toyota eco friendly objectives production company plans donate vehicles everglades national park money fund environmental programs park donation program 23 vehicles national parks national parks foundation figures united national council continuing hidden health costs auto industry economy 2005 amounted united epa awarded toyota motor engineering manufacturing north america tema energy star sustained excellence award 2007 2008 2009 2016 toyota recognized company carbon clean 200 list largest clean energy companies 2007 toyota corporate average fuel economy cafe fleet average exceeded major manufacturers selling cars united sports car manufacturer lotus cars sells elise exige models powered toyota 2zz engine average production sales note japan production 1937 1987 global production 1998 global japanese production japanese sales 2001 consolidated include daihatsu hino citations 2014 2016 total production sales japan production sales sales figures included citations labor death overwork january 2006 unnamed chief engineer camry hybrid aged 45 died heart failure bed february 2002 kenichi uchino aged 30 quality control manager collapsed died june 2010 chinese labour strike june 21 2010 chinese labor strike happened tianjin toyoda gosei tianjin toyoda gosei supplies tianjin faw toyota motor 
31093	computerscience	acm turing award annual prize association computing machinery acm individual selected contributions lasting major technical field turing award recognized distinction science nobel prize computing award named alan turing british mathematician reader mathematics university manchester turing credited key founder theoretical science artificial intelligence 2007 2013 award accompanied additional prize 250 000 financial support intel google 2014 award accompanied prize financial support google recipient 1966 alan perlis carnegie mellon university female recipient frances allen ibm 2006 
31274	computerscience	science trie called digital tree radix tree prefix tree search tree—an tree data structure store dynamic set associative array strings binary search tree node tree stores key node position tree defines key descendants node common prefix string node root string tend leaves nodes correspond node space optimized presentation prefix tree compact prefix tree listed nodes values complete english word arbitrary integer trie tree shaped deterministic finite automaton finite language generated trie automaton trie compressed deterministic acyclic finite automaton keyed character strings algorithms adapted serve functions lists construct permutations list digits shapes bitwise trie keyed individual bits fixed binary datum integer memory address history etymology rené briandais 1959 term trie coined edward fredkin pronounces tree middle syllable retrieval authors pronounce attempt distinguish verbally tree applications replacement data structures discussed trie advantages binary search trees trie replace hash table advantages drawbacks dictionary representation common application trie storing predictive autocomplete dictionary mobile telephone applications advantage trie ability search insert delete entries storing dictionary required storage auxiliary word required minimal deterministic acyclic finite automaton dafsa space trie dafsa compress identical branches trie correspond suffixes stored suited implementing approximate matching algorithms including spell checking hyphenation software term indexing discrimination tree term stores trie data structure algorithms trie tree nodes supports insert operations returns key string insert inserts string key trie insert time key simple node class represent nodes trie note codice dictionary characters node children terminal node represents complete string trie looked insertion proceeds walking trie string inserted appending nodes suffix string contained trie sorting lexicographic sorting set accomplished building trie traversing pre printing leaves values algorithm form radix sort trie forms fundamental data structure burstsort 2007 fastest string sorting algorithm faster string sorting algorithms search special trie called suffix tree suffixes carry fast searches implementation strategies represent trade offs memory speed operations basic form linked set nodes node array child pointers symbol alphabet english alphabet store 26 child pointers alphabet bytes 256 pointers simple wasteful terms memory alphabet bytes size 256 byte pointers node requires kilobyte storage overlap strings prefixes required nodes roughly combined stored strings nodes tree tend children structure wastes space storing pointers storage alleviated implementation technique called alphabet reduction original strings reinterpreted strings alphabet string bytes alternatively regarded string bit units stored trie sixteen pointers node lookups visit nodes worst storage requirements factor alternative implementation represents node triple links children node singly linked list node child parent node child set children represented binary search tree instance idea ternary search tree developed bentley sedgewick alternative avoid array 256 pointers ascii suggested store alphabet array bitmap 256 bits representing ascii alphabet reducing dramatically size nodes bitwise bitwise normal character based trie individual bits traverse effectively form binary tree implementations special cpu instruction set bit fixed key gcc codice intrinsic 32 64 entry table item bitwise trie leading bits search proceeds testing subsequent bit key choosing codice appropriately item process sound slow cache local highly parallelizable lack register dependencies excellent performance modern execution cpus red black tree performs paper highly cache unfriendly multiple pipeline tlb stalls modern cpus algorithm bound memory latency cpu speed comparison bitwise trie rarely accesses memory read avoiding smp cache coherency overhead increasingly algorithm choice code performs rapid insertions deletions memory allocators versions famous doug lea allocator dlmalloc descendents compressing compressing trie merging common branches yield performance gains conditions represent sparse bitsets subsets larger fixed enumerable set trie keyed bit element position set key created string bits encode integral position element degenerate form missing branches detecting repetition common patterns filling unused gaps unique leaf nodes bit strings stored compressed easily reducing size trie compression implementation fast lookup tables retrieving unicode character properties include mapping tables greek letter pi Π π lookup tables normalizing combination base combining characters umlaut german ä dalet patah dagesh ole biblical hebrew applications representation transforming unidimensional sparse table unicode code multidimensional matrix combinations coordinates hyper matrix string key uncompressed trie represent character compression consist detecting merging common columns hyper matrix compress dimension key avoid storing multibyte unicode code element forming matrix column groupings code exploited dimension hyper matrix stores start position dimension offset typically single byte stored vector compressible sparse dimension layer level trie compressed separately implementations support data compression dynamic sparse insertions deletions compressed cost compressed segments split merged tradeoff data compression update speed typical strategy limit range global lookups comparing common branches sparse trie result compression transform trie directed acyclic graph dag reverse transform dag trie obvious shape dag determined form key chosen nodes constraining compression compression strategy unravel data structure single byte array approach eliminates node pointers reducing memory requirements permits memory mapping virtual memory efficiently load data disk approach pack trie liang describes space efficient implementation sparse packed trie applied automatic hyphenation descendants node interleaved memory external memory trie variants suitable maintaining sets strings external memory including suffix trees combination trie tree called trie suggested task compared suffix trees limited supported operations compact performing update operations faster 
31358	computerscience	art programming initials taocp comprehensive monograph written donald knuth covers kinds programming algorithms analysis knuth project originally conceived single book chapters 1962 volumes expected volume set published 1968 1969 1973 published installment volume appeared paperback fascicle 2005 hardback volume 4a combining volume fascicles 0–4 published 2011 volume fascicle satisfiability released december 2015 volume fascicle mathematical preliminaries redux backtracking dancing links planned release september 2019 fascicles expected comprise thirds volume 4b history winning westinghouse talent search scholarship knuth enrolled institute technology western reserve university performance outstanding faculty voted award master science completion baccalaureate degree summer vacations knuth hired burroughs corporation write compilers earning summer months professors entire exploits knuth topic discussion mathematics department included richard varga knuth started write book compiler design 1962 realized scope book larger june 1965 knuth finished draft originally planned single volume chapters hand written draft manuscript completed 1966 assumed hand written translate printed publisher 1½ hand written translated printed meant book publisher nervous accepting project graduate student knuth received support richard varga scientific adviser publisher varga visiting olga taussky todd john todd caltech varga enthusiastic endorsement publisher accepted knuth expanded plans expanded version book published volumes chapters growth material plan volume expanded include volumes 4a 4b 4c 4d 1976 knuth prepared edition volume requiring typeset style type edition called hot type 1977 decided spend time creating suitable returned tex volumes offer called knuth reward check worth hexadecimal dollar 100hex base 16 cents decimal 56 errors correction errors subsequent printings contributed highly polished authoritative nature publication characteristic volumes variation difficulty exercises level difficulty ranges warm exercises unsolved knuth dedication reads series books affectionately dedicated type 650 installed institute technology spent pleasant evenings assembly language book examples books language called mix assembly language runs hypothetical mix mix replaced mmix risc version software gnu mdk exists provide emulation mix architecture knuth considers assembly language speed memory usage algorithms judged critical response knuth awarded 1974 turing award major contributions analysis algorithms contributions art programming books continuous series title american scientist included 100 books shaped century science referring twentieth century science community regarded comprehensive treatment subject covers edition volume quote gates programmer… read knuth art programming send résumé read york times referred profession defining treatise english editions current editions current editions volume previous editions complete volumes volumes superseded editions fascicles volume 4 fascicles 0–4 revised published volume 4a pre fascicles volume 4 pre fascicle 6a revised published fascicle references notescitationssources 
31925	computerscience	ucsd pascal pascal programming language runs ucsd portable highly machine independent operating ucsd pascal released 1978 developed university california san diego ucsd ucsd pascal 1978 university california san diego ucsd institute systems developed ucsd pascal provide students common environment microcomputers campus dec pdp 11 minicomputers operating ucsd ucsd operating systems pc dos cp 86 ibm offered original ibm pc vendor softech microsystems emphasized application portability virtual machines 20 cpus ibm pc release predicted users applications purchased future computers running advertisements called universal operating pc magazine denounced ucsd ibm pc stating review context mba written language simply produce code sell ibm pc lack applications expensive choices ibm offered ucsd option displaywriter 8086 based dedicated word processing machine confused ibm displaywrite word processing software displaywriter native operating developed completely internally user programming notable extensions standard pascal include separately compilable units string type extensions influenced design ada language intrinsics accelerate string processing scanning array search pattern language extensions ucsd compiling hosted ucsd pascal based code machine architecture contribution virtual machines extend code roots compiler intermediate language execution environment ucsd pascal machine optimized microcomputers addressing restricted 16 bit 64 kb memory james gosling cites ucsd pascal key influence smalltalk virtual machine design java virtual machine ucsd achieved machine independence defining virtual machine called machine pseudo machine users pascal machine os—although ucsd documentation pseudo machine instruction set called code pseudo code urs ammann student niklaus wirth originally code phd thesis ucsd implementation derived zurich pascal implementation ucsd implementation changed zurich implementation byte oriented ucsd code optimized execution pascal programming language hardware platform code interpreter program written port entire tools versions included additional languages compiled code base apple offered fortran compiler written silicon valley software sunnyvale california producing code apple version telesoft located san diego offered ada development environment code hardware platforms including motorola 68000 370 pascal microengine ucsd shares concepts current java platform virtual machine hide operating hardware differences programs written virtual machine provide cross platform support systems virtual machine complete operating target box operating ucsd pascal compiler distributed portable operating history ucsd 1974 idea ucsd kenneth bowles believed computing platforms coming time difficult programming languages gain acceptance based ucsd pascal pascal p2 release portable compiler zurich pascal language teach programming ucsd introduced features improvements original pascal variable strings units independently compiled code idea included evolving ada programming language niklaus wirth credits ucsd pascal popularizing pascal release turbo pascal ucsd version started slip pascal users pascal dialect ucsd pascal subset pascal implemented pascal p2 designed implementation language minimum subset compile fit function bootstrap kit pascal compilers ucsd strings basic implementation dependent features ucsd pascal features pascal language pascal p2 subset persisted dialects notably borland pascal copied ucsd dialect versions versions ucsd code engine revisions ucsd pascal revision code engine machine meant change code language compiled code portable machine versions revision represented leading roman numeral operating revisions enumerated dot code roman numeral represented revision running revision machine version original version officially distributed university california san diego pascal sources versions freely exchanged users patch revision 5a stable version distributed microcomputers numerous versions included apple dec pdp 11 zilog z80 mos 6502 based machines motorola 68000 ibm pc version pc restricted 64k code segment 64k stack heap data segment version iv removed code segment limit cost lot project era include dr kenneth bowles mark allen richard gleaves richard kaufmann pete lawrence joel mccormack mark overgaard keith shillington roger sumner john van zandtversion iii custom version written western digital pascal microengine microcomputer included support parallel processes time version iv commercial version developed sold softech based version include version iii sell combination pricing structure performance code interpreter competition native operating systems softech dropped product picked pecan systems company formed users fans sales revived pecan reasonable pricing structure ucsd pascal gradually lost market native operating systems compilers ti 99 equipped code card commodore pet corvus systems ucsd pascal user software innovative concept constellation os pascal interpretively compiled include common software manual users modify source default era 
32478	computerscience	vim contraction improved clone additions joy editor program unix written bram moolenaar based source port stevie editor amiga released publicly 1991 vim designed command interface standalone application graphical user interface vim source software released license includes charityware clauses encouraging users enjoy software donating children uganda license compatible gnu public license special clause allowing distribution modified copies gnu gpl version version originally released amiga vim developed cross platform supporting platforms 2006 voted popular editor linux journal readers 2015 stack overflow developer survey popular editor popular development environment 2018 history bram moolenaar vim amiga 1988 moolenaar publicly released vim v1 14 1991 vim based earlier editor stevie atari created tim thompson tony andrews fred walter vim acronym improved vim extended version editor additional features designed helpful editing program source code originally acronym stood imitation changed release vim december 1993 comment reason changing vim feature set surpassed interface vim interface based menus icons commands user interface gui mode gvim adds menus toolbars commonly commands functionality expressed command mode extension vim typist fingers row advantage touch typist vim built tutorial beginners accessible codice command vim users manual details vim features faq manual read vim online vim built facility codice command users query navigate commands features customization vim power extensively customized basic interface controlled options user define personalized key mappings—often called macros—or abbreviations automate sequences keystrokes internal user defined functions plugins extend add functionality vim complex scripts written vim internal scripting language vimscript viml vim supports scripting lua vim perl python racket plt scheme ruby tcl projects bundling complex scripts customizations aimed vim tool specific task adding major flavour behaviour examples include cream vim behave type editor vimoutliner comfortable outliner users unix systems features improvements vim compatibility mode mode vim enhancements compatibility mode vim compatible defined single unix specification posix vim support mode visual mode vim compatible vim enhancements include completion comparison merging files vimdiff comprehensive integrated extended regular expressions scripting languages native alternative scripting interpreters perl python ruby tcl including support plugins graphical user interface gvim limited integrated development environment features mouse interaction gui folding editing compressed archived files gzip bzip2 zip tar format files network protocols ssh ftp session preservation spell checking split horizontal vertical tabbed windows unicode multi language support syntax highlighting trans session command search cursor position histories multiple level branching undo redo history persist editing sessions visual mode vim script vim script called vimscript viml scripting language built vim based editor language original editor versions vim commands control flow function definitions version vim script supports advanced data types lists dictionaries simple form object oriented programming built functions map filter basic form functional programming vim script lambda version vim script written imperative programming style vim macros sequence normal mode commands invoke commands functions written vim script complex tasks extensions called plugins commonly scripts core vim functionality written vim script plugins utilize interpreted languages perl python lua ruby support compiled vim binary vim script files stored plain format file extension vim libraries vim script vim plugins examples syntaxhighlight lang vim program vim script echo simple loop vim script 1while 5endwhileunlet syntaxhighlight availability originally unix operating systems vim ported operating systems including amigaos initial target platform atari mint beos dos windows starting windows 95 os os 390 morphos openvms qnx risc os linux bsd classic mac os vim shipped apple macos independent ports vim android ios neovim neovim extension vim strives improve extensibility maintainability vim neovim shares configuration syntax vim result config file editors version released december 2015 neovim compatible vim features neovim project started 2014 vim community offering support level refactoring effort provide scripting plugins integration modern guis project source code github neovim successful fundraiser march 23 2014 supporting time developer frontends development neovim capabilities neovim editor ubuntu ppas package managers install variety linux based operating systems 
32678	computerscience	vocoder portmanteau voice encoder category voice codec analyzes synthesizes human voice signal audio data compression multiplexing voice encryption voice transformation earliest type vocoder channel vocoder originally developed voice codec telecommunications applications 1930s idea code speech conserve bandwidth audio data compression transmission encoder input passed multiband filter band passed envelope follower control signals envelope followers transmitted decoder decoder applies amplitude control signals amplifiers filter channels synthesis control signals change slowly compared original speech waveform bandwidth required transmit speech reduced speech channels share single communication channel radio channel submarine cable multiplexing encrypting control signals voice transmission secured interception primary fashion secure radio communication advantage method encryption original signal envelopes bandpass filters receiving unit set filter configuration synthesize version original signal spectrum vocoder extensively electronic musical instrument decoder portion vocoder called voder independently speech synthesis theory human voice consists sounds generated closing glottis vocal cords produces periodic waveform harmonics basic sound filtered nose throat complicated resonant piping produce differences harmonic content formants controlled creating wide variety sounds speech set sounds unvoiced plosive sounds created modified mouth fashions vocoder examines speech measuring spectral characteristics change time series signals representing modified frequencies time user speaks simple terms signal split frequency bands larger accurate analysis level signal frequency band instantaneous representation spectral energy content vocoder dramatically reduces store speech complete recording series recreate speech vocoder simply reverses process processing broadband noise source passing stage filters frequency content based originally recorded series instantaneous frequency original voice signal distinct spectral characteristic discarded preserve purposes vocoder original encryption aid dehumanizing aspect vocoding process creating special voice effects popular music audio entertainment vocoder process sends parameters vocal model communication link recreation waveform bandwidth required transmit speech reduced analog vocoders typically analyze incoming signal splitting signal tuned frequency bands ranges modulator carrier signal series tuned bandpass filters typical robot voice modulator microphone carrier noise sawtooth waveform 20 bands amplitude modulator individual analysis bands generates voltage control amplifiers carrier bands result frequency components modulating signal mapped carrier signal discrete amplitude frequency bands modulation unvoiced band sibilance channel frequencies analysis bands typical speech speech examples start letters sibilant sound mixed carrier output increase clarity result recognizable speech mechanical sounding vocoders include generating unvoiced sounds noise generator fundamental frequency channel vocoder algorithm components analytic signal amplitude component simply ignoring phase component result unclear voice methods rectifying phase vocoder history development vocoder started 1928 bell labs engineer homer dudley granted patents march 21 1939 nov 16 1937 speech synthesis ability decoder voder voice operating demonstrator introduced public building 1939–1940 york fair voder consisted switchable pair electronic oscillator noise generator sound source pitched tone hiss band resonator filters variable gain amplifiers vocal tract manual controllers including set pressure sensitive filter control foot pedal pitch control tone schematic diagram voder synthesizer filters controlled convert tone hiss vowels consonants inflections complex machine operate skilled operator produce recognizable speech   demonstration voder vocoder dudley vocoder sigsaly built bell labs engineers 1943 sigsaly encrypted level voice communications war field conducted james flanagan modern implementations record frequencies additional unvoiced sounds compression vocoder systems impressive standard speech recording systems capture frequencies 500 hz 400 hz frequencies speech lie typically sampling rate 8 khz nyquist rate sampling resolution typically 12 bits sample resolution 16 standard final data rate range 96–128 kbit vocoder provide simulation voice kbit data toll quality voice coders itu 729 telephone networks 729 final data rate kbit superb voice quality 723 achieves worse quality data rates kbit kbit voice vocoder systems data rates kbit voice quality drop rapidly vocoder systems nsa encryption systems vocoders developing psychophysics linguistics computational neuroscience cochlear implant modern vocoders communication equipment voice storage devices based algorithms linear prediction based late 1970s musical vocoders implemented linear prediction target signal spectral envelope formant estimated pole iir filter linear prediction coding pole filter replaces bandpass filter bank predecessor encoder whiten signal flatten spectrum decoder apply spectral shape target speech signal advantage type filtering location linear predictor spectral peaks determined target signal precise allowed time period filtered contrast vocoders realized fixed filter banks spectral peaks determined scope frequency band lp filtering disadvantages signals constituent frequencies exceed frequencies represented linear prediction filter restriction primary reason lp coding tandem methods compression voice coders waveform interpolative waveform interpolative wi vocoder developed bell laboratories 1995 kleijn subsequently complexity version developed dod secure vocoder competition notable enhancements wi coder university california santa barbara holds core patents wi institutes hold additional patents patents wi coder implementation requires licensing ipr holders artistic effects music musical applications source musical sounds carrier extracting fundamental frequency instance sound synthesizer input filter bank technique popular 1970s history werner meyer eppler german scientist special electronic voice synthesis published thesis 1948 electronic music speech synthesis viewpoint sound synthesis instrumental founding studio electronic music wdr cologne 1951 attempts vocoder creating music siemens synthesizer siemens studio electronic music developed 1956 1959 excerpt 157–160 3rd edition 2008   details siemens electronic music studio exhibited deutsches museum 1968 robert moog developed solid musical vocoders electronic music studio university buffalo 1968 bruce haack built prototype vocoder named farad michael faraday featured electronic record children released 1969 rock album electric lucifer released 1970   sample earlier vocoder 1970 wendy carlos robert moog built musical vocoder band device inspired vocoder designs homer dudley originally called spectrum encoder decoder referred simply vocoder carrier signal moog modular synthesizer modulator microphone input output band vocoder intelligible relied specially articulated speech improved vocoders pass filter sibilance microphone ruins device original speech coding application talking synthesizer intelligible phil collins vocoder provide vocal 1981 international hit single air tonight vocoders appeared pop recordings time time simply special featured aspect experimental electronic artists age music genre utilize vocoder comprehensive manner specific jean michel jarre zoolook 1984 mike oldfield qe2 1980 miles 1982 vocoder module oldfield live montreux 1981 dvd track sheba artists vocoders essential music extended phase examples include german synthpop kraftwerk stevie send love seed star jazz fusion keyboardist herbie hancock late 1970s period 1982 neil sennheiser vocoder vsm201 tracks trans heard unrecognized vocoder popular music michael jackson 1982 album thriller song pretty song background voicings ooh ooh ooh ooh spoken exemplify heavily modulated sound voice vocoder bridge features vocoder pretty sing courtesy session musician michael boddicker coldplay vocoder songs major hurts heaven album mylo xyloto 2011 chris martin vocals vocoder processed midnight ghost stories 2014 features martin singing vocoder hidden track marks spot head dreams recorded vocoder noisecore band atari teenage riot vocoders variety songs live performances live brixton academy 2002 digital audio technology red hot chili peppers song vocoder anthony kiedis vocals consistent vocoder emulating human voice daft punk instrument album homework 1997 random access memories 2013 convergence technological human voice identity musical project instance lyrics 1997 integrally vocoder processed lucky 2013 features mix natural processed human voices instant crush 2013 features julian casablancas singing vocoder voice effects arts robot voices recurring element popular music 20th century vocoders methods producing variations include sonovox talk box auto tune   sample auto tune pain linear prediction vocoders speech synthesis   sample earlier based speech synthesis song synthesis john larry kelly jr louis gerstman bell labs ibm 704 demo song “daisy bell” musical accompanied max mathews impressed arthur clarke climactic scene screenplay   sample speech synthesis modulation comb filter vocoders television production filmmaking games robots talking computers robot voices cylons battlestar galactica created ems vocoder 2000 1980 version doctor theme arranged recorded peter howell main melody generated roland svc 350 vocoder vocoder create iconic voice soundwave character transformers series 1967 supermarionation series captain scarlet mysterons closing credits theme 14 episodes provide repetition captain scarlet 1972 isao tomita electronic music album electric samurai switched rock attempt applying speech synthesis technique electronic rock pop music album featured electronic renditions contemporary rock pop songs utilizing synthesized voices human voices 1974 utilized synthesized voices popular classical music album snowflakes dancing worldwide success helped popularize electronic music emerson lake palmer album brain salad surgery 1973 
33292	computerscience	wire frame model visual presentation dimensional 3d physical object 3d graphics created edge physical object mathematically continuous smooth surfaces meet connecting object constituent vertices straight lines curves object projected screen space drawing lines location edge term wire frame designers metal wire represent dimensional shape solid objects 3d wire frame construction manipulation solids solid surfaces 3d solid modeling technique efficiently draws quality representations solids conventional drawing wire frame model visualization underlying design structure 3d model traditional dimensional views drawings created rotation object selection hidden removal cutting planes wire frame renderings simple fast calculate screen frame rate instance complex 3d model real time systems model exterior phenomena graphical desired surface textures automatically completion initial rendering wire frame designer review solids rotate object desired views delays realistic rendering wire frame format suited programming tool paths direct numerical control dnc machine tools hand drawn wire frame illustrations italian renaissance wire frame models extensively video games represent 3d objects 1980s 1990s properly filled 3d objects complex calculate draw computers time wire frame models input aided manufacturing cam types 3d cad models wire frame abstract realistic types 3d cad models surface solid method modelling consists lines curves defining edges object introduction wireframing methods geometric modelling systems wireframe model represents shape solid object characteristic lines types wireframe modelling pro pro user simple input create shape developing systems wireframe model include boundary surfaces wireframe models define complex solid objects designer wireframe model solid object cad operator reconstructs object including detailed analysis technique advantages dimensional solid objects complex wireframe models viewed dimension improving comprehensibility solid object modified designer ignore geometry surface solid modelling designer consistent geometry details wireframe models require memory space cpu capacity simple wireframe model object tables vertex table edge table vertex table consists dimensional coordinate values vertex reference origin edge table specifies start vertices edge naive interpretation create wire frame representation simply drawing straight lines screen coordinates vertices edge list representations designed detailed rendering calculated required solid rendering calculations performed transform 3d coordinates vertices 2d screen coordinates 
37096	computerscience	floating unit fpu colloquially math coprocessor specially designed carry operations floating typical operations addition subtraction multiplication division square root bitshifting systems microcode based architectures perform transcendental functions exponential trigonometric calculations modern processors software library routines purpose architectures fpus integrated execution units central processing unit embedded processors hardware support floating operations increasingly standard 32 bit cpu executing program calls floating operation carry history historically systems implemented floating coprocessor integrated unit addition cpu gpus coprocessors built cpu fpus rule generations gpus single integrated circuit entire circuit board cabinet floating calculation hardware floating calculations software takes processor time avoids cost extra hardware architecture floating unit instructions emulated library software functions permit object code systems floating hardware emulation implemented levels cpu microcode common practice operating function user space code integer functionality cordic floating emulation methods commonly modern architectures division floating operations integer operations division varies architecture intel x86 dedicated floating registers independent clocking schemes cordic routines implemented intel 8087 80287 80387 80486 coprocessor series motorola 68881 68882 kinds floating instructions reduce gate counts complexity fpu floating operations pipelined earlier superscalar architectures execution floating operations pipelined separately integer operations 1990s microprocessors desktops servers fpu modular architecture bulldozer microarchitecture special fpu named flexfpu simultaneous multithreading physical integer core module single threaded contrast intel hyperthreading virtual simultaneous threads share resources single physical core floating library floating hardware supports simplest operations addition subtraction multiplication complex floating hardware finite operations support support arbitrary precision arithmetic cpu executing program calls floating operation supported hardware cpu series simpler floating operations systems floating hardware cpu emulates series simpler fixed arithmetic operations integer arithmetic logic unit software lists series operations emulate floating operations packaged floating library integrated fpus fpus specialized divided simpler floating operations addition multiplication complicated operations division simple operations implemented hardware microcode complex operations implemented software current architectures fpu functionality combined units perform simd computation augmentation x87 instructions set sse instruction set x86 64 architecture intel amd processors add fpus 1980s common ibm pc compatible microcomputers fpu separate cpu typically sold optional add purchased speed enable math intensive programs ibm pc xt compatibles based 8088 8086 socket optional 8087 coprocessor 80286 based systems socketed 80287 80386 80386sx based machines 80387 80387sx socketed 80287 80387 exist companies manufactured processors intel x86 series included cyrix weitek coprocessors motorola 68000 family 68881 68882 common motorola 68020 68030 based workstations sun series commonly models apple macintosh commodore amiga series ibm pc compatible systems sockets adding coprocessor common systems add fpus coprocessor units microcontroller units mcus µcs single board sbcs serve provide floating arithmetic capability add fpus host processor independent possess programming requirements operations instruction sets integrated development environments ides 
37545	computerscience	palm os garnet os discontinued mobile operating initially developed palm personal digital assistants pdas 1996 palm os designed ease touchscreen based graphical user interface suite basic applications personal management versions os extended support smartphones licensees manufactured devices powered palm os palm purchase palm trademark licensed version access renamed garnet os 2007 access introduced successor garnet os called access linux platform 2009 main licensee palm os palm switched palm os webos forthcoming devices creator ownership palm os originally developed direction jeff hawkins palm computing palm acquired robotics corp bought 3com palm subsidiary independent publicly traded company march 2000 january 2002 palm set wholly owned subsidiary develop license palm os named palmsource palmsource spun palm independent company october 28 2003 palm called palmone regular licensee palm os control operating september 2005 palmsource announced acquired access december 2006 palm gained perpetual rights palm os source code access palm modify licensed operating paying royalties access 2005 acquisition rights palm brand palm publish releases operating palm os consequence january 25 2007 access announced change current palm os operating titled garnet os os overview palm os proprietary mobile operating designed 1996 palm computing pilot pda implemented wide array mobile devices including smartphones wrist watches handheld gaming consoles barcode readers gps devices palm os versions earlier motorola freescale dragonball processors version onwards palm os runs arm architecture based processors key features current palm os garnet included os set standard applications relevant mentioned pim operations version history technical background manufacturers implement features os devices add features version history describes officially licensed version palm palmsource access versions prior palm os based amx 68000 kernel licensed kadak products kernel technically capable multitasking terms conditions license palm expose api creating manipulating tasks os palm os palm os original version pilot 1000 5000 introduced march 1996 version features classic pim applications address book memo pad list included calculator security tool hide records private palm os differentiate ram file storage applications installed ram executed dedicated file supported operating depends constant ram refresh cycles memory os supports 160x160 monochrome output displays user input generated graffiti handwriting recognition optionally virtual keyboard supports data synchronization pc hotsync technology serial interface bugfix release version palm os palm os introduced march 1997 palmpilot personal professional version adds tcp ip network network hotsync display backlight support bugfix release version applications mail expense standard pim applications enhanced palm os palm os introduced march 1998 launch palm iii series version adds irda infrared enhanced font support version features updated pim applications update application launcher palm os adds minor features network hotsync support introduced palm iiix palm bugfix release version palm os adds clipping support palm specific solution bring content pda screen introduced palm vii organizer palm os adds faster hotsync speeds ability infrared hotsyncing introduced palm vx organizer palm os version include native bit color support adds major convenience features simplify operation context sensitive icon bar simpler menu activation datebook application extended additional agenda view version introduced palm iiic device bugfix release version companion palm offered mobile internet kit software upgrade palm os included palm clipping software multimail renamed versamail version 26 mail software handphone version sms software neomar version wap browser palm os palm os released palm m500 series march 19 2001 version adds standard interface external file access cards external file systems radical change operating previous execution application code data loaded device ram desktop operating behavior universal connector usb support introduced previous optional mobile internet kit operating version adds attention manager coordinate applications possibilities user attention including sound led blinking vibration 16 bit color screens time zones supported version security ui enhancements palm os bugfix release introduced launch palm i705 minor os update version includes backport graffiti palm os palm os simplified chinese edition targeted chinese market simplified chinese support released palm os device manufactured version palm os garnet palm os called unveiled palm subsidiary palmsource june 2002 implemented palm tungsten version support arm devices replaced kadak amx68000 kernel custom mck kernel named developer written house palm applications written prior os versions dragonball 68k instruction set supported palm application compatibility environment pace emulator garnet additional overhead pace palm applications faster arm devices previous generation hardware software advantage arm processors units arm code referred armlets powerful hardware basis palm os adds substantial enhancements multimedia capabilities density 320x320 screens supported digital sound playback record api palm separate bluetooth stack ieee 802 11b wi stack secure network connections ssl supported os customized color schemes palm os palmsource developed licensed browser called palmsource browser based access netfront browser palm os bugfix release implemented samsung sgh i500 march 2003 support 480x320 resolutions introduced handwriting input called graffiti input prompted xerox lawsuit win palm graffiti based jot cic bugfix release version palm os simplified chinese edition released september 2003 simplified chinese support support qvga resolutions standard api virtual graffiti called dynamic input version shipped lenovo p100 p300 handhelds palm os garnet updated bluetooth libraries support multiple screen resolutions ranging 160x160 480x320 shipped treo 650 november 2004 version introduced garnet moniker distinguish palm os cobalt bugfix release version garnet os dropped palm moniker current version developed access version dedicated garnet vm virtual machine garnet vm announced released access november 2007 core access linux platform emulator allowing nokia internet tablets applications written garnet os june 2010 access release garnet vm version garnet vm beta 05b palm os cobalt palm os cobalt designated successor palm os introduced february 2004 offered access palm os renamed palm os cobalt version initially designated replace palm os palm os garnet time palm os cobalt introduced modern operating features embedded operating based kernel multitasking memory protection modern multimedia graphic framework derived palm acquired beos security features adjustments pim file formats cooperate outlook palm os cobalt standard communication libraries telecommunication wi bluetooth connectivity additions failed potential licensees palm os cobalt party os enhancements licensees custom modifications operating official licensed version modernization palmsource attempting create modern successor palm os licensees implement palmsource shipped palm os cobalt licensees january 2004 release devices palmsource major improvements palm os cobalt release palm os cobalt september 2004 licensees version lead production devices december 2004 palmsource announced os strategy acquisition mobile phone software company china mobilesoft palmsource planned port palm os linux kernel offering palm os garnet palm os cobalt strategy revised june 2005 device palm os cobalt announced palmsource announced halting development efforts product future linux based platform acquisition palmsource access palm os linux changed access linux platform announced february 2006 initial versions platform software development kits access linux platform officially released february 2007 january 2011 access linux platform ship devices development kits exists public demonstrations showcased palm main licensee palm os garnet license access linux platform devices palm developed linux based operating called palm webos february 11 2009 palm ceo colligan additional palm os devices excepting centro released carriers palm focusing palm webos windows mobile devices april 2009 palm announced availability palm os emulator webos built applications palm os licensees decide applications included palm os devices licensees customize applications standard palm os applications note models standard pim apps address book memo pad todos replaced improved counterparts contacts calendar memos tasks palm address program stores contact keyed user definable categories entries displayed sorted changed company slots phone mail designated fax mail main pager mobile slot designations changed contacts app adds features addresses fields birthday phone instant messaging quick connect calc palm standard function pocket calculator shades purple blue buttons contrasting red buttons supports square root percent memory option display running history calculations paper tape calculators common book daily weekly schedule simple monthly view daily schedule hour user selected times clicking creates event lines crowded actual events start times default bracketed left margin calendar app adds features day view categories events event location event span midnight event details birthdays timeless events supports timezone designation events feature lacking competitors event appointment heralded alarm minutes hours days alarms sound unit switched appointments recur days weeks months notes expense tracks common business expenses totals calculated palm user sync host view expense data worksheet templates excel supplied hotsync integrates user pc activated press physical hotsync button palm cradle dock station application communicates conduits desktop pc install software backup databases merge pc handheld devices communicate pc physical connection usb models bluetooth irda wireless connections direct network connections devices networking capability addition conduits licensee developers create conduits integration palm os applications desktop products time tracking package provide conduit communicate palm os windows executables backup conduit included hotsync software restores data palm os device users hard reset palm—thus clearing data—with noticeable consequences users migrate palm devices palm os version feature helpful lose damage device models palm data storage volatile memory require constant power maintain memory handhelds attempt save contents memory battery situations leaving dead handheld extended period time reserve power contents storage memory lost palms nvram microdrive storage memo pad hold notes 000 characters memos app increases field size 30 kb memos alphabetically manually user choose memos memos user configurable categories memo pad drawings entered graffiti alphabet hardware software keyboards paste function palm devices palm users started create exchange memo pad documents memoware list creates personal reminders prioritizes user list item priority categories organize view items logical attached note add description clarification task list item sorted priority category tasks app features improvements interface repeating tasks alarms preferences referred prefs program files special preference panel type normal launcher programs changed switching appl type panl vice versa palm os 15 preference panels default preference panels application preference panels users manage settings including graffiti settings sound settings shortcuts network settings time security panel palm os devices configure palm os security settings include password display hidden records unlock device locked set automatic lockdown time inactivity threshold pc palm desktop honors password pc programs view everything—in data protected password dat files editor word processor common party core os applications starting palm os version palm created customized versions common pim application features support address categories ringtone associations users memo texts renamed reflect designations outlook address contacts datebook calendar memo pad memos list tasks blazer browser palm handhelds versions palm os handhelds proxy server shut version treo 600 smartphone current version blazer blazer compliant major standards bundled smartphones palm devices capable accessing internet palm note pad quick drawings neat handwriting 20 30 fit memo pad choice sizes pen eraser background color change feature models draw simple map advanced desktop version saves memo pad drawings desktop 2006 palm handhelds include photos creates digital photo album view pictures palm os device photo programs photos beamed mobile devices photo labeled organized separate photo albums slideshow specific album photo album screen photos edited palm photos pc software windows photos transferred handheld photo palm photos software zire 71 tungsten tungsten tungsten t2 tungsten t3 support video palm photos renamed media pics videos models feature ability voice recordings synced voice conduit viewed desktop voice memo application palm desktop suite party applications successful applications installed palm os device 2008 50 000 party applications palm os platform licensing types including source closed licensing schemes freeware shareware traditional pay purchase application development palm os garnet applications coded officially supported compilers exist commercial product codewarrior development studio palm os source tool chain called prc tools based version gcc codewarrior criticized expensive developed prc tools lacks codewarrior features version prc tools included palm os developer suite pods onboardc compiler assembler linker programming editor runs palm palm os cobalt applications coded variation gcc cobalt compilers limitations development tools palm programming require level programming pocketc pocketc architect casl appforge crossfire visual basic visual basic handheld basic pendragon forms satellite forms nsbasic palm visual basic languages java virtual machine palm os platform 2008 01 12 palm announced palm alternate java virtual machine aware palm os waba derivative superwaba provide java virtual machine programming language version lua language called plua palm requires additional runtime installed application mainstream applications minority software companies quartus iso ansi standard compiler runs palm interactive console dynamic development debugging environments programming pascal palm os compiler runs handheld pocketstudio delphi ide windows computers visual form designer generates prc files transferred handhelds hotsync option hspascal developed danish developer chriten fihl based experience speed pascal compiler 16 bit systems including commodore amiga compiler donation palm connection drivers enable transfer data server dbms oracle mysql sql server programmer middleware software enables connectivity roughly r4rs compatible implementation scheme lispme palm platform gpl licensed onboard lisp repl palm os specific adaptations functionally compiler produce code operates development environment restricted prototyping legal issues palm os involved lawsuits 
39418	computerscience	moore law observation transistors dense integrated circuit doubles observation named gordon moore founder fairchild semiconductor ceo intel 1965 paper doubling components integrated circuit projected rate growth continue decade 1975 decade revised forecast doubling period quoted 18 months prediction intel executive david house combination transistors transistors faster moore prediction proved accurate decades semiconductor industry guide term planning set targets development advancements digital electronics linked moore law quality adjusted microprocessor prices memory capacity sensors size pixels digital cameras digital electronics contributed economic growth late twentieth centuries moore law describes driving force technological social change productivity economic growth moore law observation projection historical trend physical natural law rate held steady 1975 2012 rate faster decade logically sound extrapolate historical growth rate indefinite future 2010 update international technology roadmap semiconductors predicted growth slow 2013 2015 gordon moore foresaw rate progress reach saturation moore law dying decade intel stated 2015 pace advancement slowed starting 22 nm feature 2012 continuing 14 nm brian krzanich ceo intel announced cadence closer intel stated 2017 hyperscaling continue trend moore law offset increased cadence aggressively scaling typical doubling transistors krzanich cited moore 1975 revision precedent current deceleration technical challenges natural history moore law history 1959 douglas engelbart discussed projected downscaling integrated circuit size article microelectronics art similitude engelbart ideas 1960 international solid circuits conference moore audience anniversary issue electronics magazine published april 19 1965 gordon moore director development fairchild semiconductor time predict happen semiconductor components industry response article entitled cramming components integrated circuits editorial speculated 1975 65 000 components single quarter inch semiconductor complexity minimum component costs increased rate roughly factor short term rate expected continue increase term rate increase bit uncertain reason remain constant reasoning log linear relationship device complexity circuit density reduced cost time 1975 ieee international electron devices meeting moore revised forecast rate semiconductor complexity continue double annually 1980 decrease rate doubling outlined contributing factors exponential behavior shortly 1975 caltech professor carver mead popularized term moore law popular misconception moore adamant predict doubling 18 months david house intel colleague factored increasing performance transistors conclude integrated circuits double performance 18 months moore law accepted goal industry cited competitive semiconductor manufacturers strove increase processing power moore viewed eponymous law surprising optimistic moore law violation murphy law observation fulfilling prophecy rate improvement physical dimensions dennard scaling slowed industry shifted 2016 semiconductor scaling driver focus meeting major computing applications april 2005 intel offered 000 purchase original electronics issue moore article appeared engineer living united kingdom offer intel moore law cost power consumer falls cost producers fulfill moore law trend manufacturing costs increased steadily generation chips rising manufacturing costs consideration sustaining moore law led formulation moore law called rock law capital cost semiconductor fab increases exponentially time major enabling factors numerous innovations scientists engineers sustained moore law integrated circuit ic era key innovations listed examples breakthroughs advanced integrated circuit technology magnitude decades industry technology road maps predicted 2001 moore law continue generations semiconductor chips depending doubling time calculations hundredfold increase transistor count chip decade semiconductor industry technology roadmap doubling time microprocessors leading tenfold increase decade intel reported 2005 stating downsizing silicon chips economics continue decade 2008 predicting trend 2029 trends key challenges engineering future nanoscale transistors design gates device dimension shrinks controlling current flow channel difficult compared finfets gate dielectric channel gate structure gate control revolutionary technology advances sustain moore law improved performance reduced feature size physical limits transistor scaling source drain leakage limited gate metals limited options channel material reached avenues continued scaling promising approaches rely spin electron spintronics tunnel junctions advanced confinement channel materials nano wire geometry comprehensive list device choices wide range device options continuing moore law decades spin based logic memory options developed actively industrial labs academic labs alternative materials vast majority current transistors ics composed principally doped silicon alloys silicon fabricated single nanometer transistors short channel effects adversely change desired material properties silicon functional transistor silicon substitutes fabrication nanometer transistors proposed material indium gallium arsenide ingaas compared silicon germanium counterparts ingaas transistors promising future speed power logic applications intrinsic characteristics iii compound semiconductors quantum tunnel transistors based ingaas proposed alternatives traditional mosfet designs biological micro cells capable impressive computational power energy efficient forms graphene studied graphene electronics graphene nanoribbon transistors promise appearance publications 2008 bulk graphene band gap transistors constant conductivity inability zigzag edges nanoribbons introduce localized energy conduction valence bands bandgap enables switching fabricated transistor typical gnr 10 nm desirable bandgap energy 4ev performed 50 nm graphene layers resistivity increases electron mobility decreases driving future application focus semiconductor industry forecasters including gordon moore expect moore law 2025 april 2005 gordon moore stated interview projection sustained indefinitely continue nature exponentials push eventually disaster transistors eventually reach limits miniaturization atomic levels 2016 international technology roadmap semiconductors moore law drive industry 1998 produced final roadmap centered development plan moore law outlined called moore strategy applications drive chip development focus semiconductor scaling application drivers range smartphones data centers initiative generalized roadmapping started ieee initiative rebooting computing named international roadmap devices systems irds consequences technological change combination technology 2011 study journal science peak rate change capacity compute 1998 technological capacity compute purpose computers grew 88 technological change slowed times allowed humans carry roughly 60 computation executed existing purpose computers exponential rate technological change varies time primary driving force economic growth growth productivity moore law factors productivity moore 1995 expected rate technological progress controlled financial realities reverse occur late 1990s economists reporting productivity growth key economic indicator innovation acceleration rate semiconductor progress contributed surge productivity growth reached 1997–2004 outpacing 1972–1996 2005–2013 economist richard anderson notes numerous studies traced productivity acceleration technological innovations production semiconductors sharply reduced prices components products expanding capabilities products alternative source improved performance microarchitecture techniques exploiting growth transistor count execution chip caching prefetching reduce memory latency bottleneck expense transistors increasing processor complexity increases empirically pollack rule performance increases microarchitecture techniques approximate square root complexity transistors processor processor makers delivered increases clock rates instruction level parallelism single threaded code executed faster processors modification manage cpu power dissipation processor makers favor multi core chip designs software written multi threaded manner advantage hardware multi threaded development paradigms introduce overhead linear increase speed processors true accessing shared dependent resources lock contention noticeable processors increases roughly 45 increase processor transistors translated roughly 10–20 increase processing power hand processor manufacturers advantage extra space transistor shrinkage add specialized processing units deal features graphics video cryptography intel parallel javascript extension adds support multiple cores processing features chips migration client scripting html5 negative implication moore law obsolescence technologies continue rapidly improve improvements render predecessor technologies obsolete rapidly situations security survivability hardware data paramount resources limited rapid obsolescence pose obstacles smooth continued operations toxic materials production modern computers obsolescence properly managed lead harmful environmental impacts hand obsolescence desirable company profit immensely regular purchase expensive equipment retaining device period time industry aware utilize planned obsolescence method increasing profits moore law performance technologies michael malone wrote moore war apparent success shock awe days iraq war progress development guided weapons depends electronic technology improvements circuit density power operation moore law contributed development technologies including mobile telephones printing formulations observations measures digital technology improving exponential rates moore law including size cost density speed components moore wrote density components component transistor resistor diode capacitor minimum cost transistors integrated circuit – popular formulation doubling transistors integrated circuits 1970s moore law limit transistors complex chips graph trend holds true density minimum cost transistor – formulation moore 1965 paper density transistors achieved density transistors cost transistor lowest transistors chip cost transistor decreases chance chip defect increases 1965 moore examined density transistors cost minimized observed transistors advances photolithography increase rate roughly factor dennard scaling – suggests power requirements proportional voltage current proportional transistors combined moore law performance watt grow roughly rate transistor density doubling 1–2 dennard scaling transistor dimensions scaled 30 7x technology generation reducing 50 reduces delay 30 7x increases operating frequency 40 4x finally electric field constant voltage reduced 30 reducing energy 65 power 4x frequency 50 technology generation transistor density doubles circuit 40 faster power consumption transistors stays exponential processor transistor growth predicted moore translate exponentially practical cpu performance 2005–2007 dennard scaling appears broken moore law continued yielded dividends improved performance primary reason cited breakdown sizes current leakage poses challenges chip heat creates threat thermal runaway increases energy costs breakdown dennard scaling prompted switch chip manufacturers focus multicore processors gains offered switching cores gains achieved dennard scaling continued departure dennard scaling intel microprocessors planar tri gate finfet 22 nm 2012 faster consumes power conventional planar transistor quality adjusted price equipment – price technology computers peripheral equipment adjusted quality inflation declined 16 average decades 1959 2009 rate quality adjusted microprocessor price improvement varies linear log scale microprocessor price improvement accelerated late 1990s reaching 60 halving months typical 30 improvement rate halving earlier laptop microprocessors improved 25–35 2004–2010 slowed 15–25 2010–2013 transistors chip explain quality adjusted microprocessor prices moore 1995 paper limit moore law strict linearity transistor count definition moore law refer semiconductor industry plotted semi log paper approximates straight hesitate review origins restrict definition hard disk drive areal density – observation called kryder law 2005 hard disk drive areal density decades rapid progress areal density advancement slowed 2010 noise grain size disk media thermal stability writability magnetic fields fiber optic capacity – bits optical fiber increases exponentially faster moore law keck law honor donald keck network capacity – gerry gerald butters head lucent optical networking bell labs version called butters law photonics formulation deliberately parallels moore law butters law data coming optical fiber doubling months cost transmitting bit optical network decreases months availability wavelength division multiplexing called wdm increased capacity single fiber factor 100 optical networking dense wavelength division multiplexing dwdm rapidly bringing cost networking progress assured result wholesale price data traffic collapsed dot bubble nielsen law bandwidth users increases 50 annually pixels dollar – barry hendy kodak australia plotted pixels dollar basic measure digital camera demonstrating historical linearity log scale market opportunity predict future trend digital camera price lcd led screens resolution moore law compensator tgmlc wirth law – referred software bloat principle successive generations software increase size complexity offsetting performance gains predicted moore law 2008 article infoworld randall kennedy intel introduces term successive versions office 2000 2007 premise gains computational performance time period moore law office 2007 performed task speed prototypical 2007 compared office 2000 2000 library expansion – calculated 1945 fremont rider double capacity 16 sufficient space advocated replacing bulky decaying printed miniaturized microform analog photographs duplicated demand library patrons institutions foresee digital technology follow decades replace analog microform digital imaging storage transmission media automated lossless digital technologies allowed vast increases rapidity growth era called age carlson curve – term coined economist biotechnological equivalent moore law named author rob carlson carlson accurately predicted doubling time dna sequencing technologies measured cost performance fast moore law carlson curves illustrate rapid hyperexponential decreases cost increases performance variety technologies including dna sequencing dna synthesis range physical computational tools protein expression determining protein structures eroom law – pharmaceutical drug development observation deliberately written moore law spelled contrast exponential advancements forms technology transistors time cost developing drug roughly doubles experience curve effects doubling cumulative production virtually product service accompanied approximate constant percentage reduction unit cost acknowledged documented qualitative description dates 1885 power curve phenomenon 1936 discussion cost airplanes 
39434	computerscience	sir charles antony richard hoare born 11 january 1934 british scientist developed sorting algorithm quicksort 1959 1960 developed hoare logic verifying program correctness formal language communicating sequential processes csp interactions concurrent processes including dining philosophers inspiration occam programming language education life born colombo ceylon sri lanka british parents tony hoare father colonial civil servant mother daughter tea planter hoare educated england dragon school oxford king school canterbury studied classics philosophy greats merton college oxford graduating 1956 18 months national service royal navy learned russian returned university oxford 1958 study postgraduate certificate statistics programming taught autocode ferranti mercury leslie fox moscow university british council exchange student studied machine translation andrey kolmogorov career 1960 hoare left soviet union elliott brothers manufacturing firm located london implemented algol 60 developing major algorithms professor computing science queen university belfast 1968 1977 returned oxford professor computing lead programming oxford university computing laboratory department science university oxford death christopher strachey emeritus professor principal researcher cambridge england hoare sorting selection algorithm quicksort quickselect hoare logic formal language communicating sequential processes csp interactions concurrent processes structuring operating systems monitor concept axiomatic specification programming languages apologies retractions speaking software conference called qcon london 2009 apologised inventing reference leadership oxford department formal specification languages csp achieve expected industry 1995 hoare led reflect original assumptions personal 1962 hoare married jill pym team 
40254	computerscience	science operations genetic algorithm metaheuristic inspired process natural selection belongs larger class evolutionary algorithms ea genetic algorithms commonly generate quality solutions optimization search relying bio inspired operators mutation crossover selection john holland introduced genetic algorithms 1960 based concept darwin’s theory evolution student goldberg extended 1989 methodology optimization genetic algorithm population candidate solutions called individuals creatures phenotypes optimization evolved solutions candidate solution set properties chromosomes genotype mutated altered traditionally solutions represented binary strings 0s 1s encodings evolution starts population randomly generated individuals iterative process population iteration called generation generation fitness individual population evaluated fitness objective function optimization solved fit individuals stochastically selected current population individual genome modified recombined randomly mutated form generation generation candidate solutions iteration algorithm commonly algorithm terminates maximum generations produced satisfactory fitness level reached population typical genetic algorithm requires standard representation candidate solution array bits arrays types structures essentially main property genetic representations convenient easily aligned fixed size facilitates simple crossover operations variable representations crossover implementation complex tree representations explored genetic programming graph form representations explored evolutionary programming mix linear chromosomes trees explored gene expression programming genetic representation fitness function defined proceeds initialize population solutions improve repetitive application mutation crossover inversion selection operators initialization population size depends nature typically hundreds thousands solutions initial population generated randomly allowing entire range solutions search space occasionally solutions seeded optimal solutions selection successive generation portion existing population selected breed generation individual solutions selected fitness based process fitter solutions measured fitness function typically selected selection methods rate fitness solution preferentially select solutions methods rate random sample population process time consuming fitness function defined genetic representation measures quality represented solution fitness function dependent instance knapsack maximize total objects knapsack fixed capacity representation solution array bits bit represents object bit represents object knapsack representation valid size objects exceed capacity knapsack fitness solution sum values objects knapsack representation valid hard impossible define fitness expression simulation determine fitness function phenotype computational fluid dynamics determine air resistance vehicle shape encoded phenotype interactive genetic algorithms genetic operators step generate generation population solutions selected combination genetic operators crossover called recombination mutation solution produced pair parent solutions selected breeding pool selected producing child solution methods crossover mutation solution created typically shares characteristics parents parents selected child process continues population solutions size generated reproduction methods based parents biology inspired suggests parents generate quality chromosomes processes ultimately result generation population chromosomes initial generation average fitness increased procedure population organisms generation selected breeding proportion fit solutions fit solutions ensure genetic diversity genetic pool parents ensure genetic diversity subsequent generation children opinion divided crossover mutation references fogel 2006 support mutation based search crossover mutation main genetic operators operators regrouping colonization extinction migration genetic algorithms worth tuning parameters mutation probability crossover probability population size reasonable settings class mutation rate lead genetic drift ergodic nature recombination rate lead premature convergence genetic algorithm mutation rate lead loss solutions elitist selection employed heuristics addition main operators heuristics employed calculation faster robust speciation heuristic penalizes crossover candidate solutions encourages population diversity helps prevent premature convergence optimal solution termination generational process repeated termination condition reached common terminating conditions building block hypothesis genetic algorithms simple implement behavior difficult understand difficult understand algorithms frequently succeed generating solutions fitness applied practical building block hypothesis bbh consists goldberg describes heuristic lack consensus validity building block hypothesis consistently evaluated reference estimation distribution algorithms proposed attempt provide environment hypothesis hold reported classes skepticism generality practicality building block hypothesis explanation gas efficiency remains reasonable attempts understand limitations perspective estimation distribution algorithms limitations limitations genetic algorithm compared alternative optimization algorithms variants chromosome representation simplest algorithm represents chromosome bit string typically numeric parameters represented integers floating representations floating representation natural evolution strategies evolutionary programming notion real valued genetic algorithms offered misnomer represent building block theory proposed john henry holland 1970s theory support based theoretical experimental basic algorithm performs crossover mutation bit level variants treat chromosome list indexes instruction table nodes linked list hashes objects imaginable data structure crossover mutation performed respect data element boundaries data types specific variation operators designed chromosomal data types worse specific domains bit string representations integers gray coding employed integer mutations crossovers prevent premature convergence called hamming walls simultaneous mutations crossover events occur change chromosome solution approaches involve arrays real valued bit strings represent chromosomes theory schemata alphabet performance initially surprising researchers real valued chromosomes explained set real values finite population chromosomes forming virtual alphabet selection recombination dominant cardinality expected floating representation expansion genetic algorithm accessible domain complex encoding solution pools concatenating types heterogenously encoded genes chromosome approach solving optimization require vastly disparate definition domains parameters instance cascaded controller tuning internal loop controller structure belong conventional regulator parameters external loop implement linguistic controller fuzzy inherently description form encoding requires specialized crossover mechanism recombines chromosome tool modelling simulation complex adaptive systems evolution processes elitism practical variant process constructing population organism current generation carry unaltered strategy elitist selection guarantees solution quality decrease generation parallel implementations parallel implementations genetic algorithms flavors coarse grained parallel genetic algorithms assume population nodes migration individuals nodes fine grained parallel genetic algorithms assume individual processor node acts neighboring individuals selection reproduction variants genetic algorithms online optimization introduce time dependence noise fitness function adaptive gas genetic algorithms adaptive parameters adaptive genetic algorithms agas promising variant genetic algorithms probabilities crossover pc mutation greatly determine degree solution accuracy convergence speed genetic algorithms fixed values pc agas utilize population generation adaptively adjust pc maintain population diversity sustain convergence capacity aga adaptive genetic algorithm adjustment pc depends fitness values solutions caga clustering based adaptive genetic algorithm clustering analysis judge optimization population adjustment pc depends optimization effective combine optimization methods finding global solutions inefficient finding mutations absolute optimum techniques simple hill climbing efficient finding absolute optimum limited region alternating hill climbing improve efficiency overcoming lack robustness hill climbing rules genetic variation meaning natural instance – steps stored consecutive – crossing sum steps maternal dna adding steps paternal dna adding vectors follow ridge phenotypic landscape efficiency process increased magnitude inversion operator opportunity steps consecutive suitable favour survival efficiency variation population evolved individual gene pool recombination variations developed attempt improve performance gas degree fitness epistasis fitness solution consists interacting subsets variables algorithms aim learn exploiting beneficial phenotypic interactions aligned building block hypothesis adaptively reducing disruptive recombination prominent examples approach include mga gemga llga domains solution genetic algorithms include timetabling scheduling scheduling software packages based gas gas applied engineering genetic algorithms applied approach solve global optimization rule thumb genetic algorithms domains complex fitness landscape mixing mutation combination crossover designed population local optima traditional hill climbing algorithm stuck observe commonly crossover operators change uniform population mutation provide ergodicity genetic algorithm process markov chain examples solved genetic algorithms include mirrors designed funnel sunlight solar collector antennae designed pick radio signals space walking methods figures optimal design aerodynamic bodies complex flowfields algorithm design manual skiena advises genetic algorithms task history 1950 alan turing proposed learning machine parallel principles evolution simulation evolution started 1954 nils aall barricelli institute advanced study princeton jersey 1954 publication noticed starting 1957 australian quantitative geneticist alex fraser published series papers simulation artificial selection organisms multiple loci controlling measurable trait simulation evolution biologists common 1960s methods books fraser burnell 1970 crosby 1973 fraser simulations included essential elements modern genetic algorithms addition hans joachim bremermann published series papers 1960s population solution optimization undergoing recombination mutation selection bremermann included elements modern genetic algorithms noteworthy pioneers include richard friedberg george friedman michael conrad papers reprinted fogel 1998 barricelli reported 1963 simulated evolution ability play simple game artificial evolution recognized optimization method result ingo rechenberg hans paul schwefel 1960s 1970s – rechenberg solve complex engineering evolution strategies approach evolutionary programming technique lawrence fogel proposed generating artificial intelligence evolutionary programming originally finite machines predicting environments variation selection optimize predictive logics genetic algorithms popular john holland 1970s book adaptation natural artificial systems 1975 originated studies cellular automata conducted holland students university michigan holland introduced formalized framework predicting quality generation holland schema theorem gas remained theoretical mid 1980s international conference genetic algorithms held pittsburgh pennsylvania commercial products late 1980s electric started selling genetic algorithm product mainframe based toolkit designed industrial processes 1989 axcelis released evolver commercial product desktop computers york times technology writer john markoff wrote evolver 1990 remained interactive commercial genetic algorithm 1995 evolver sold palisade 1997 translated languages 6th version techniques parent fields genetic algorithms field fields evolutionary algorithms evolutionary algorithms field evolutionary computing swarm intelligence swarm intelligence field evolutionary computing evolutionary computing algorithms evolutionary computation field metaheuristic methods metaheuristic methods metaheuristic methods broadly fall stochastic optimisation methods 
40277	computerscience	corpus linguistics study language expressed corpora samples real corpus method digestive approach derives set abstract rules govern natural language texts language explores language relates languages originally derived manually corpora automatically derived source texts corpus linguistics proposes reliable language analysis feasible corpora collected field natural context realia minimal experimental interference field corpus linguistics features divergent views corpus annotation views range john mchardy sinclair advocates minimal annotation texts speak survey english usage team university college london advocate annotation allowing linguistic understanding rigorous recording history earliest efforts grammatical description based corpora religious cultural significance prātiśākhya literature sound patterns sanskrit vedas pāṇini grammar classical sanskrit based analysis corpus arabic grammarians paid attention language quran western european tradition scholars prepared concordances detailed study language bible canonical texts landmark modern corpus linguistics publication henry kučera nelson francis computational analysis day american english 1967 based analysis brown corpus carefully compiled selection current american english totalling drawn wide variety sources kučera francis subjected variety computational analyses compiled rich variegated opus combining elements linguistics language teaching psychology statistics sociology key publication randolph quirk description english usage 1960 introduced survey english usage shortly boston publisher houghton mifflin approached kučera supply word citation base american heritage dictionary dictionary compiled corpus linguistics ahd innovative step combining prescriptive elements language descriptive publishers suit british publisher collins cobuild monolingual learner dictionary designed users learning english foreign language compiled bank english survey english usage corpus development corpus based grammars comprehensive grammar english quirk 1985 brown corpus spawned structured corpora lob corpus 1960s british english kolhapur indian english wellington zealand english australian corpus english australian english frown corpus 1990s american english flob corpus 1990s british english corpora represent languages varieties modes include international corpus english british national corpus 100 word collection range spoken written texts created 1990s consortium publishers universities oxford lancaster british library contemporary american english stalled american national corpus 400 word corpus contemporary american english 1990–present interface computerized corpus transcribed spoken language constructed 1971 montreal french project inspired shana poplack larger corpus spoken french ottawa hull corpora living languages computerized corpora collections texts ancient languages andersen forbes database hebrew bible developed 1970s clause parsed graphs representing levels syntax segment tagged fields quranic arabic corpus annotated corpus classical arabic language quran project multiple layers annotation including morphological segmentation speech tagging syntactic analysis dependency grammar pure linguistic inquiry researchers begun apply corpus linguistics academic professional fields emerging discipline law corpus linguistics seeks understand legal texts corpus data tools methods corpus linguistics generated methods attempt trace path data theory wallis nelson 2001 introduced called 3a perspective annotation abstraction analysis lexical corpora speech tagged pos tagged corpus linguists unannotated plain inevitably apply method isolate salient terms situations annotation abstraction combined lexical search advantage publishing annotated corpus users perform experiments corpus corpus managers linguists differing perspectives originators exploit sharing data corpus linguists treat corpus locus linguistic debate exhaustive fount knowledge studies suggested treatment outcome adolescents social anxiety disorder assessed analysing language corpus linguistics notes references journals international peer reviewed journals dedicated corpus linguistics corpora corpus linguistics linguistic theory icame journal theinternational journal corpus linguistics book series book series field includelanguage computers studies corpus linguistics english corpus linguistics 
40351	computerscience	cathedral bazaar musings linux source accidental revolutionary abbreviated catb essay book eric raymond software engineering methods based observations linux kernel development process experiences managing source project fetchmail examines struggle design essay author linux kongress 27 1997 würzburg germany published book 1999 illustration cover book 1913 painting titled composition figures belongs collection tretyakov gallery book released publication license v2 1999 cathedral bazaar essay contrasts software development models essay central thesis raymond proposition eyeballs bugs shallow terms linus law source code public testing scrutiny experimentation rapidly forms bugs discovered contrast raymond claims inordinate time energy spent hunting bugs cathedral model version code developers lessons creating source software raymond 19 lessons learned software development efforts describing attributes practice source software development legacy reception 1998 essay helped final push communications corporation release source code communicator start mozilla project cited frank hecker employees independent validation arguments public recognition influence brought raymond renown hacker culture reilly media published book 1999 complete commercially distributed book published publication license marshall poe essay hive likens wikipedia bazaar model raymond defines jimmy wales inspired arguments prior internet age friedrich hayek article knowledge society arguing eyes possibility mass collaboration 1999 nikolai bezroukov published cited critical essays eric raymond views source software called cathedral bazaar produced sharp response eric raymond 
40642	computerscience	nextstep discontinued object oriented multitasking operating based unix developed late 1980s 1990s initially range proprietary workstation computers nextcube ported architectures unsuccessful time attracted scientists researchers original platform development electronic appwrapper commercial electronic software distribution catalog collectively manage encryption provide digital rights application software digital media forerunner modern app store concept platform tim berners lee created browser software developed video game doom purchase apple source popular operating systems macos ios watchos tvos audioos bundled macos applications textedit mail chess descendants nextstep applications overview nextstep stylized nextstep nextstep nextstep combination nextstep notable preeminent implementation items toolkits offer considerable power canonical development software machine introduced idea dock carried openstep macos shelf nextstep originated innovated gui concepts common operating systems 3d chiseled widgets color icons wide drag drop wide range objects file icons wide piped services real time scrolling window dragging properties dialog boxes called inspectors window modification notices saved status file purpose user interfaces handle publishing color standards transparency sophisticated sound music processing motorola 56000 dsp advanced graphics primitives internationalization modern typography consistent manner applications additional kits product attractive include portable distributed objects pdo easy remote invocation enterprise objects framework powerful object relational database kits custom application programmers nextstep history financial programming community history preview release nextstep version launch october 12 1988 release nextstep shipped september 18 1989 version released 1995 time motorola 68000 family processors computers intel x86 sun sparc hp risc based systems nextstep modified separate underlying operating level object libraries result openstep api multiple underlying operating systems including openstep windows nt solaris nextstep legacy stands form direct descendents apple macos ios watchos tvos audioos operating systems unix day operating nextstep built mach bsd legacy browser worldwideweb app store invented nextstep platform features keyboard shortcuts commonly browsers traced nextstep conventions basic layout options attributable features class features nextstep 1990s pioneering pc games doom wad level editor doom quake respective level editor developed software machines games based doom engine heretic sequel raven software strife rogue entertainment developed hardware tools altsys nextstep application called virtuoso version ported mac os windows macromedia freehand version modern notebook interface mathematica advanced spreadsheet lotus improv developed nextstep software controlled mci friends family calling plan program developed nextstep time release nextstep partnered sun microsystems develop openstep product effort separate underlying operating level object libraries create cross platform object oriented api standard derived nextstep openstep api targets multiple underlying operating systems including openstep implementations standard released sun solaris windows nt version mach kernel implementation called openstep mach release superseded nextstep sun intel ia 32 systems announcement december 20 1996 apple acquired february 1997 429 based openstep mach operating developing openstep api cocoa apple created basis mac os eventually ios watchos tvos audioos software implementation openstep standard gnustep exists release history versions releases openstep pre release bug release published apple supported september 1997 release 
40874	computerscience	circuit switching method implementing telecommunications network network nodes establish dedicated communications channel circuit network nodes communicate circuit guarantees bandwidth channel remains connected duration communication session circuit functions nodes physically connected electrical circuit defining circuit switched network analog telephone network telephone switches telephone exchanges create continuous wire circuit telephones lasts circuit switching contrasts packet switching divides data transmitted packets transmitted network independently packet switching dedicated communication session time network links shared packets multiple competing communication sessions loss quality service guarantees circuit switching circuit switching bit delay constant connection opposed packet switching packet queues varying indefinitely packet transfer delays circuit degraded competing users protected callers circuit released connection set actual communication channel remains protected competing users virtual circuit switching packet switching technology emulates circuit switching sense connection established packets transferred packets delivered circuit switching commonly connecting voice circuits concept dedicated path persisting communicating parties nodes extended signal content voice advantage circuit switching continuous transfer overhead packets maximal bandwidth communication disadvantage inefficient unused capacity guaranteed connection connections network setup control administrative purposes separate dedicated signalling channel node network isdn service separate signalling channel plain telephone service pots method establishing connection monitoring progress termination network utilize separate control channel links telephone exchanges ccs7 packet switched signalling protocol communicate setup control tdm transport actual circuit data telephone exchanges suitable circuit switching subscriber operator connect subscriber exchange inter exchange link operator result physical electrical connection subscribers telephones duration copper wire connection carry calls time subscribers talking silent compared datagram packet switching circuit switching contrasts packet switching divides data transmitted units called packets transmitted network independently packet switching shares network bandwidth multiple communication sessions multiplexing multiple telecommunications connections physical conductor time channel multiplexed link dedicated time idle calls circuit switching route bandwidth source destination circuit switching inefficient capacity connection continuous contrast packet switching process segmenting data transmitted packets packet labeled destination sequence packets precluding dedicated path packet destination packet dispatched independently routed path destination original message reordered based packet reproduce original message result datagram packet switching networks require circuit established pairs nodes communicate concurrently channel 
41229	computerscience	telecommunications handshake automated process negotiation communicating participants alice bob exchange establishes protocols communication link start communication communication handshaking process takes establish rules communication attempts communicate device signals exchanged devices establish communication link communicates device modem devices signal switched ready agree protocols handshaking negotiate parameters acceptable equipment systems communication channel including transfer rate coding alphabet parity interrupt procedure protocol hardware features handshaking technique communication entities tcp ip rfcs term handshake commonly reference tcp handshake term handshake rfcs covering ftp smtp exception transport layer security tls setup ftp rfc 4217 term handshake ftp rfc 3659 substitutes term conversation passing commands simple handshaking protocol involve receiver sending message meaning received message ready send complex handshaking protocol sender receiver ready receive receiver reply negative acknowledgement meaning receive message correctly resend data corrupted en route handshaking facilitates connecting heterogeneous systems equipment communication channel human intervention set parameters tcp handshake establishing normal tcp connection requires separate steps factors handshake exchange starting sequence plan client sends segment initial sequence server responds sending segment sequence acknowledgement finally client responds sending segment acknowledgement reason client server default sequence establishing connection protect incarnations connection reusing sequence segment earlier incarnation connection interfere incarnation connection smtp simple mail transfer protocol smtp key internet standard email transmission includes handshaking negotiate authentication encryption maximum message size tls handshake transport layer security ssl tls connection starts record encapsulates control protocol—the handshake messaging protocol content type 22 protocol exchange required exchange actual application data tls defines messages formatting exchange vary demands client server—i procedures set connection initial exchange successful tls connection parties ready transfer application data tls alert message protocol negotiate secure attributes session rfc 5246  37 wpa2 wireless wpa2 standard wireless handshake defined ieee 802 11i 2004 dial access modems classic handshaking dial modems typically negotiate communication parameters period connection established parameters provide optimal transfer channel function quality capacity squealing sound pitch 100 times noises modems speaker output connection established sounds modems engaging handshaking procedure procedure completed speaker silenced depending settings operating application controlling modem 
41408	computerscience	computing network interface software hardware interface pieces equipment protocol layers network network interface form network address consist node port unique node network interfaces provide standardized functions passing messages connecting disconnecting 
42799	computerscience	speech synthesis artificial production human speech purpose called speech speech synthesizer implemented software hardware products speech tts converts normal language speech systems render symbolic linguistic representations phonetic transcriptions speech synthesized speech created concatenating pieces recorded speech stored database systems size stored speech units stores phones diphones largest output range lack clarity specific usage domains storage entire sentences quality output alternatively synthesizer incorporate model vocal tract human voice characteristics create completely synthetic voice output quality speech synthesizer judged similarity human voice ability understood intelligible speech program people visual impairments reading disabilities listen written operating systems included speech synthesizers 1990s speech engine composed major tasks converts raw symbols abbreviations equivalent written process called normalization pre processing tokenization assigns phonetic transcriptions word divides marks prosodic units phrases clauses sentences process assigning phonetic transcriptions called phoneme grapheme phoneme conversion phonetic transcriptions prosody symbolic linguistic representation output end—often referred synthesizer —then converts symbolic linguistic representation sound systems includes computation target prosody pitch contour phoneme durations imposed output speech history electronic signal processing people build machines emulate human speech legends existence brazen heads involved pope silvester 1003 albertus magnus 1198–1280 roger bacon 1214–1294 1779 german danish scientist christian gottlieb kratzenstein prize competition announced russian imperial academy sciences arts models built human vocal tract produce vowel sounds notation bellows operated acoustic mechanical speech machine wolfgang von kempelen pressburg hungary 1791 paper machine models tongue lips enabling produce consonants vowels 1837 charles wheatstone produced speaking machine based von kempelen design 1846 joseph faber exhibited euphonia 1923 paget resurrected wheatstone design 1930s bell labs developed vocoder automatically analyzed speech fundamental tones resonances vocoder homer dudley developed keyboard operated voice synthesizer called voder voice demonstrator exhibited 1939 york fair dr franklin cooper colleagues haskins laboratories built pattern playback late 1940s completed 1950 versions hardware device survives machine converts pictures acoustic patterns speech form spectrogram sound device alvin liberman colleagues discovered acoustic cues perception phonetic segments consonants vowels 1975 musa released speech synthesis systems consisted stand hardware specialized software enabled read italian version released 1978 sing italian cappella style dominant systems 1980s 1990s dectalk based dennis klatt mit bell labs multilingual language independent systems extensive natural language processing methods electronic speech synthesizers sounded robotic barely intelligible quality synthesized speech steadily improved output contemporary speech synthesis systems remains distinguishable actual human speech kurzweil predicted 2005 cost performance ratio caused speech synthesizers cheaper accessible people benefit speech programs electronic devices based speech synthesis systems originated late 1950s noriko umeda developed english speech 1968 electrotechnical laboratory japan 1961 physicist john larry kelly jr colleague louis gerstman ibm 704 synthesize speech event prominent history bell labs kelly voice recorder synthesizer vocoder recreated song daisy bell musical accompaniment max mathews coincidentally arthur clarke visiting friend colleague john pierce bell labs murray hill facility clarke impressed demonstration climactic scene screenplay hal 9000 sings song astronaut dave bowman sleep success purely electronic speech synthesis mechanical speech synthesizers continues handheld electronics featuring speech synthesis emerging 1970s telesensory systems tsi speech portable calculator blind 1976 devices educational purposes speak spell toy produced texas instruments 1978 fidelity released speaking version electronic chess 1979 video game feature speech synthesis 1980 shoot em arcade game stratovox japan speak rescue sun electronics personal game speech synthesis manbiki shoujo shoplifting girl released 1980 pet 2001 game developer hiroshi suzuki developed cross programming technique produce synthesized speech waveform arcade version berzerk dates 1980 milton bradley company produced multi player electronic game voice synthesis milton synthesizer technologies qualities speech synthesis naturalness intelligibility naturalness describes closely output sounds human speech intelligibility ease output understood ideal speech synthesizer natural intelligible speech synthesis systems maximize characteristics primary technologies generating synthetic speech waveforms concatenative synthesis formant synthesis technology strengths weaknesses intended synthesis typically determine approach concatenation synthesis concatenative synthesis based concatenation stringing segments recorded speech concatenative synthesis produces natural sounding synthesized speech differences natural variations speech nature automated techniques segmenting waveforms result audible glitches output main types concatenative synthesis unit selection synthesis unit selection synthesis databases recorded speech database creation recorded utterance segmented individual phones diphones phones syllables morphemes phrases sentences typically division segments specially modified speech recognizer set forced alignment mode manual correction afterward visual representations waveform spectrogram units speech database created based segmentation acoustic parameters fundamental frequency pitch duration position syllable neighboring phones time desired target utterance created determining chain candidate units database unit selection process typically achieved specially weighted decision tree unit selection naturalness applies digital signal processing dsp recorded speech dsp recorded speech sound natural systems signal processing concatenation smooth waveform output unit selection systems indistinguishable real human voices contexts tts tuned maximum naturalness typically require unit selection speech databases systems ranging gigabytes recorded data representing dozens hours speech unit selection algorithms select segments ideal synthesis minor unclear choice exists database researchers proposed automated methods detect unnatural segments unit selection speech synthesis systems diphone synthesis diphone synthesis minimal speech database diphones sound sound transitions occurring language diphones depends phonotactics language spanish 800 diphones german 2500 diphone synthesis diphone contained speech database runtime target prosody sentence superimposed minimal units digital signal processing techniques linear predictive coding psola mbrola techniques pitch modification source domain discrete cosine transform diphone synthesis suffers sonic glitches concatenative synthesis robotic sounding nature formant synthesis advantages approach size commercial applications declining continues freely software implementations domain specific synthesis domain specific synthesis concatenates prerecorded phrases create complete utterances applications variety texts output limited domain transit schedule announcements weather reports technology simple implement commercial time devices talking clocks calculators level naturalness systems variety sentence types limited closely match prosody intonation original recordings systems limited phrases databases purpose synthesize combinations phrases preprogrammed blending naturally spoken language variations account rhotic dialects english pronounced word vowel letter realized french final consonants silent word vowel called liaison alternation reproduced simple word concatenation require additional complexity context sensitive formant synthesis formant synthesis human speech samples runtime synthesized speech output created additive synthesis acoustic model physical modelling synthesis parameters fundamental frequency voicing noise levels varied time create waveform artificial speech method called rules based synthesis concatenative systems rules based components systems based formant synthesis technology generate artificial robotic sounding speech mistaken human speech maximum naturalness goal speech synthesis formant synthesis systems advantages concatenative systems formant synthesized speech reliably intelligible speeds avoiding acoustic glitches commonly plague concatenative systems speed synthesized speech visually impaired navigate computers screen reader formant synthesizers programs concatenative systems database speech samples embedded systems memory microprocessor power limited formant based systems complete control aspects output speech wide variety prosodies intonations output conveying questions statements variety emotions tones voice examples real time highly accurate intonation control formant synthesis include late 1970s texas instruments toy speak spell 1980s sega arcade machines atari arcade games tms5220 lpc chips creating proper intonation projects painstaking matched real time speech interfaces formant synthesis implemented hardware yamaha fs1r synthesizer speech aspect formants realized synthesis capable short formant sequences speak single phrase midi control interface restrictive live speech impossibility articulatory synthesis articulatory synthesis refers computational techniques synthesizing speech based models human vocal tract articulation processes occurring articulatory synthesizer regularly laboratory experiments developed haskins laboratories mid 1970s philip rubin tom baer paul mermelstein synthesizer asy based vocal tract models developed bell laboratories 1960s 1970s paul mermelstein cecil coker colleagues articulatory synthesis models incorporated commercial speech synthesis systems notable exception based originally developed marketed trillium sound spin company university calgary original conducted demise incarnations started steve jobs late 1980s merged apple 1997 trillium software published gnu public license continuing gnuspeech marketed 1994 articulatory based speech conversion waveguide transmission analog human oral nasal tracts controlled carré distinctive region model synthesizers developed jorge lucero colleagues incorporate models vocal fold biomechanics glottal aerodynamics acoustic wave propagation bronqui traquea nasal oral cavities constitute systems physics based speech simulation hmm based synthesis hmm based synthesis synthesis method based hidden markov models called statistical parametric synthesis frequency spectrum vocal tract fundamental frequency voice source duration prosody speech modeled simultaneously hmms speech waveforms generated hmms based maximum likelihood criterion sinewave synthesis sinewave synthesis technique synthesizing speech replacing formants main bands energy pure tone whistles deep learning deep learning based synthesizers deep neural networks dnn trained recorded speech data dnn based speech synthesizers approaching quality human voice examples wavenet deepmind tacotron googleand deep voice wavenet technology baidu challenges normalization challenges process normalizing rarely straightforward texts heteronyms abbreviations require expansion phonetic representation spellings english pronounced based context project learn project voice pronunciations project speech tts systems generate semantic representations input texts processes unreliable understood computationally ineffective result heuristic techniques guess proper disambiguate homographs examining neighboring statistics frequency occurrence tts systems begun hmms discussed generate speech aid disambiguating homographs technique successful read pronounced red implying tense reed implying tense typical error rates hmms fashion percent techniques european languages access required training corpora frequently difficult languages deciding convert tts systems address simple programming challenge convert english 1325 occur contexts 1325 read thirteen thirteen tts infer expand based surrounding punctuation context ambiguous roman numerals read depending context henry viii reads henry eighth chapter viii reads chapter abbreviations ambiguous abbreviation inches differentiated word address 12 john abbreviation saint street tts systems intelligent educated guesses ambiguous abbreviations provide result nonsensical comical outputs operation rendered company operation phoneme challenges speech synthesis systems basic approaches determine pronunciation word based spelling process called phoneme grapheme phoneme conversion phoneme term linguists distinctive sounds language simplest approach phoneme conversion dictionary based approach dictionary language correct pronunciations stored program determining correct pronunciation word matter word dictionary replacing spelling pronunciation dictionary approach rule based pronunciation rules applied determine pronunciations based spellings sounding synthetic phonics approach learning reading approach advantages drawbacks dictionary based approach quick accurate completely fails word dictionary dictionary size grows memory space requirements synthesis hand rule based approach input complexity rules grows takes account irregular spellings pronunciations word common english word letter pronounced result speech synthesis systems combination approaches languages phonemic orthography regular writing prediction pronunciation based spellings successful speech synthesis systems languages rule based method extensively resorting dictionaries foreign names borrowings pronunciations obvious spellings hand speech synthesis systems languages english extremely irregular spelling systems rely dictionaries rule based methods unusual dictionaries evaluation challenges consistent evaluation speech synthesis systems difficult lack universally agreed objective evaluation criteria organizations speech data quality speech synthesis systems depends quality production technique involve analogue digital recording facilities replay speech evaluating speech synthesis systems compromised differences production techniques replay facilities 2005 researchers started evaluate speech synthesis systems common speech dataset prosodics emotional content study journal speech communication amy drahota colleagues university portsmouth reported listeners voice recordings determine chance levels speaker smiling suggested identification vocal features signal emotional content synthesized speech sound natural issues modification pitch contour sentence depending affirmative interrogative exclamatory sentence techniques pitch modification discrete cosine transform source domain linear prediction residual pitch synchronous pitch modification techniques priori pitch marking synthesis speech database techniques epoch extraction dynamic plosion applied integrated linear prediction residual voiced regions speech hardware software systems popular systems offering speech synthesis built capability mattel mattel intellivision game console offered intellivoice voice synthesis module 1982 included sp0256 narrator speech synthesizer chip removable cartridge narrator 2kb read memory rom utilized store database generic combined phrases intellivision games orator chip accept speech data external memory additional phrases stored cartridge data consisted strings analog filter coefficients modify behavior chip synthetic vocal tract model simple digitized samples sam released 1982 software automatic mouth commercial software voice synthesis program basis macintalk program macintosh apple computers including apple lisa atari models commodore 64 apple version preferred additional hardware contained dacs bit audio output addition distortion card atari embedded pokey audio chip speech playback atari disabled interrupt requests shut antic chip vocal output audible output extremely distorted speech screen commodore 64 64 embedded sid audio chip atari arguably speech integrated operating 1400xl 1450xl personal computers designed atari votrax sc01 chip 1983 1400xl 1450xl computers finite machine enable english spelling speech synthesis 1400xl 1450xl personal computers shipped quantity atari computers sold stspeech tos floppy disk apple speech integrated operating shipped quantity apple macintalk software licensed 3rd party developers joseph katz mark barton softvoice featured 1984 introduction macintosh january demo required 512 kilobytes ram memory result 128 kilobytes ram mac shipped demo accomplished prototype 512k mac attendance told synthesis demo created considerable excitement macintosh 1990s apple expanded capabilities offering wide speech support introduction faster powerpc based computers included quality voice sampling apple introduced speech recognition systems fluid command set apple sample based voices starting curiosity speech apple macintosh evolved supported program plaintalk people vision voiceover time featured 2005 mac os tiger tiger releases leopard standard voice shipping mac os starting snow leopard user choose wide range list multiple voices voiceover voices feature realistic sounding breaths sentences improved clarity read rates plaintalk mac os includes command based application converts audible speech applescript standard additions includes verb script installed voices control pitch speaking rate modulation spoken apple ios operating iphone ipad ipod touch voiceover speech synthesis accessibility party applications provide speech synthesis facilitate navigating reading translating amigaos operating feature advanced speech synthesis capabilities amigaos introduced 1985 voice synthesis licensed commodore international softvoice developed original macintalk speech featured complete voice emulation american english male female voices stress indicator markers amiga audio chipset synthesis divided translator library converted unrestricted english standard set phonetic codes narrator device implemented formant model speech generation amigaos featured level speak handler allowed command users redirect output speech speech synthesis occasionally party programs word processors educational software synthesis software remained unchanged amigaos release commodore eventually removed speech synthesis support amigaos onward american english phoneme limitation unofficial version multilingual speech synthesis developed enhanced version translator library translate languages set rules language windows modern windows desktop systems sapi sapi components support speech synthesis speech recognition sapi optional add windows 95 windows 98 windows 2000 narrator text–to–speech utility people visual impairment party programs jaws windows window eyes visual desktop access supernova access perform speech tasks reading aloud email account document windows clipboard user keyboard typing programs speech synthesis programs plug ins extensions add ons read aloud party programs read clipboard speech server server based package voice synthesis recognition designed network applications centers texas instruments ti 99 4a 1980s ti pioneer speech synthesis highly popular plug speech synthesizer module ti 99 4a speech synthesizers offered purchase cartridges ti written video games notable titles offered speech promotion alpiner parsec synthesizer variant linear predictive coding built vocabulary original intent release cartridges plugged synthesizer unit increase device built vocabulary success software speech terminal emulator cartridge cancelled plan speech systems speech tts refers ability computers read aloud tts engine converts written phonemic representation converts phonemic representation waveforms output sound tts engines languages dialects specialized vocabularies party publishers android version android support speech synthesis tts internet applications plugins gadgets read messages mail client browser google toolbar specialized software narrate rss feeds hand online rss narrators simplify delivery allowing users listen favourite news sources convert podcasts hand rss readers pc connected internet users download generated audio files portable devices podcast receiver listen walking jogging commuting growing field internet based tts based assistive technology browsealoud company readspeaker deliver tts functionality reasons accessibility convenience entertainment access browser profit project created 2006 provide based tts interface wikipedia context w3c w3c audio incubator involvement bbc google source source software systems digital sound alikes 2016 introduction adobe voco audio editing generating software prototype slated adobe creative suite enabled deepmind wavenet deep neural network based audio synthesis software google speech synthesis verging completely indistinguishable real human voice adobe voco takes 20 minutes desired target speech generate sound alike voice phonemes training material software poses ethical concerns steal peoples voices manipulate desired increases stress disinformation situation coupled speech synthesis markup languages markup languages established rendition speech xml compliant format speech synthesis markup language ssml w3c recommendation 2004 speech synthesis markup languages include java speech markup language jsml sable proposed standard speech synthesis markup languages distinguished dialogue markup languages voicexml includes tags speech recognition dialogue management touchtone dialing addition speech markup applications speech synthesis vital assistive technology tool application widespread environmental barriers removed people wide range disabilities application screen readers people visual impairment speech systems commonly people dyslexia reading difficulties pre literate children frequently employed aid severe speech impairment dedicated voice output communication aid speech synthesis techniques entertainment productions games animations 2007 animo limited announced development software application package based speech synthesis software finespeech explicitly geared customers entertainment industries generate narration lines dialogue user specifications application reached maturity 2008 nec biglobe announced service users create phrases voices characters speech solution supportive ivr systems virtual assistants automated centers vehicle navigation talking kiosks atms telebanking voice operated domestic appliances station announcements learning applications mobile phones speech disability handicapped communication aids deployed mass transit speech finding applications disability market speech synthesis combined speech recognition interaction mobile devices natural language processing interfaces speech language acquisition voki instance educational tool created oddcast users create talking avatar accents emailed embedded websites shared social media addition speech synthesis valuable computational aid analysis assessment speech disorders voice quality synthesizer developed jorge lucero university brasilia simulates physics phonation includes models vocal frequency jitter tremor airflow noise laryngeal asymmetries synthesizer mimic timbre dysphonic speakers controlled levels roughness breathiness strain apis multiple companies offer tts apis customers accelerate development applications utilizing tts technology companies offering tts apis include cereproc diotek ivona neospeech readspeaker synvo yakitome yandex cpqd mobile app development android operating offering speech api time ios7 apple started offering api speech 
43218	computerscience	math generalized harmonic zipf law empirical law formulated mathematical statistics refers types data studied physical social sciences approximated zipfian distribution family discrete power law probability distributions zipf distribution zeta distribution identical zipf law corpus natural language utterances frequency word inversely proportional rank frequency table frequent word occur frequent word times frequent word rank frequency distribution inverse relation brown corpus american english word frequently occurring word accounts word occurrences 69 971 true zipf law word accounts 36 411 occurrences 28 852 135 vocabulary items account brown corpus law named american linguist george kingsley zipf 1902–1950 popularized sought explain zipf 1935 1949 claim originated french stenographer jean baptiste estoup 1868–1950 appears noticed regularity zipf 1913 german physicist felix auerbach 1856–1933 datasets relationship occurs rankings unrelated language population ranks cities countries corporation sizes income rankings ranks people watching channel appearance distribution rankings cities population noticed felix auerbach 1913 empirically data set tested zipf law applies checking goodness fit empirical distribution hypothesized power law distribution kolmogorov–smirnov comparing log likelihood ratio power law distribution alternative distributions exponential distribution lognormal distribution zipf law checked cities fit exponent 07 largest settlement size largest settlement theoretical review zipf law easily observed plotting data log log graph axes log rank log frequency word log log 69971 plot reciprocal rank frequency reciprocal frequency interword interval rank data conform zipf law extent plot linear formally zipf law predicts population elements normalized frequency elements rank zipf law holds elements frequency random variable power law distribution 11it claimed representation zipf law suitable statistical testing analyzed 30 000 english texts goodness fit tests yield 15 texts statistically compatible form zipf law slight variations definition zipf law increase percentage close 50 frequency english language english language classic version zipf law exponent   fraction time common word occurs law written generalized harmonic simplest zipf law 1⁄ function set zipfian distributed frequencies sorted common common common frequency occur ½ common frequency occur ⅓ fourth common frequency occur ¼ common frequency occur 1⁄ hold items occur integer times occurrences word wide ranges approximation natural phenomena obey zipf law human languages word frequencies heavy tailed distribution modeled zipf distribution close exponent exceeds law hold infinitely    1 thenwhere ζ riemann zeta function statistical explanation zipf’s law holds languages natural esperanto reason understood partially explained statistical analysis randomly generated texts wentian document character chosen randomly uniform distribution letters space character follow trend zipf law appearing linear log log plot vitold belevitch paper statistical laws linguistic distribution offered mathematical derivation class behaved statistical distributions normal distribution expressed terms rank expanded expression taylor series belevitch remarkable result truncation series zipf law truncation taylor series mandelbrot law principle effort explanation zipf proposed speakers hearers language harder reach understanding process equal distribution effort leads observed zipf distribution preferential attachment intuitively rich richer success breeds success yule–simon distribution fit word frequency rank language population city rank zipf law originally derived explain population rank species yule applied cities simon laws zipf law refers frequency distributions rank data relative frequency ranked item zeta distribution ζ parameter    1 indexes family probability distributions zipf law synonymous zeta distribution probability distributions called laws distribution called zipfian distribution generalization zipf law zipf–mandelbrot law proposed benoît mandelbrot frequencies constant reciprocal hurwitz zeta function evaluated practice easily observable distribution plots corpora observed distribution modelled accurately sum separate distributions subsets subtypes follow parameterizations zipf–mandelbrot distribution closed class functional exhibit vocabulary growth document size corpus size require convergence generalized harmonic series zipfian distributions pareto distributions exchange variables zipf distribution called discrete pareto distribution analogous continuous pareto distribution discrete uniform distribution analogous continuous uniform distribution tail frequencies yule–simon distribution approximatelyfor choice ρ parabolic fractal distribution logarithm frequency quadratic polynomial logarithm rank markedly improve fit simple power law relationship fractal dimension calculate zipf dimension parameter analysis texts argued benford law special bounded zipf law connection laws explained originating scale invariant functional relations statistical physics critical phenomena ratios probabilities benford law constant leading digits data satisfying zipf law satisfy benford law applications theory symbol event signal probability 16 17 bits zipf law natural 18 equivalent 19 20 bits add symbol probability 16 stored natural 19 23 24 equivalently 25 instance standard binary 26 optimal 27 probability distribution 25 rule probability distribution base asymmetric numeral systems family entropy coding methods data compression distribution governed zipf law zipf law extraction parallel fragments texts comparable corpora reading primary secondary international conference bioinformatics computational biology 2011 
45146	computerscience	cp originally standing control program monitor control program microcomputers mass market operating created 1974 intel 8080 85 based microcomputers gary kildall digital initially confined single tasking bit processors 64 kilobytes memory versions cp multi user variations migrated 16 bit processors combination cp 100 bus computers loosely patterned mits altair standard microcomputer industry platform business late 1970s mid 1980s cp increased market size hardware software greatly reducing programming required install application manufacturer driver software innovation advent comparatively cost microcomputers running cp independent programmers hackers bought shared creations user cp displaced dos 1981 introduction ibm pc hardware model minimal bit cp components hardware cp sold digital support intel 8080 development manufacturers cp compatible systems customized portions operating combination installed memory disk drives console devices cp systems based zilog z80 processor z80 compatible 8080 code digital distributed core cp bdos ccp core transient commands z80 specific instructions z80 based systems z80 code specific bios applications dedicated z80 based cp machines machines bootstrap minimal bootloader rom combined minimal bank switching injecting code bus 8080 boot code address start cp ram bootstrap entered memory panel controls time started cp bit ascii set 128 characters bit byte standardized kaypro greek characters osborne machines 8th bit set underlined character wordstar 8th bit word marker international cp systems commonly iso 646 norm localized character sets replacing ascii characters localized characters adding bit boundary components operating bit versions running cp operating loaded memory components bios bdos memory resident ccp memory resident overwritten application automatically reloaded application finished running transient commands standard utilities transient commands resided files extension disk bios controlled hardware components cpu main memory contained functions character input output reading writing disk sectors bdos implemented cp file input output abstractions redirection bios ccp user commands executed internal commands dir directory era delete file loaded started executable file transient commands pip files stat file party applications cp essentially transient commands bdos ccp standard transient commands ideally installations revision cp bios portion adapted hardware adding memory meant cp reinstalled updated bios capable addressing additional memory utility patch supplied bios bdos ccp memory installed operating bios bdos ccp stored disk boot start bootloader contained rom firmware chip load operating disk drive codice modern standards cp primitive extreme constraints program size version provision detecting changed disk user changed disks manually rereading disk directory write disk disk directory ruining data stored disk version onwards changing disk write directory read fatal error signalled avoided overwriting disk required reboot loss data stored disk majority complexity cp isolated bdos lesser extent ccp transient commands meant porting limited simple routines bios hardware platform entire os reduced development time support machines main reasons cp widespread sort abstraction common oss hardware abstraction layer time cp birth oss typically intended machine platform multilayer designs considered unnecessary console command processor console command processor ccp accepted input keyboard conveyed terminal cp printing terminal video terminal cp commands typed command console display codice prompt current default disk drive video terminal blinking cursor supplied terminal ccp await input user ccp internal command form drive letter colon select default drive typing codice pressing enter command prompt change default drive command prompt codice change cp command interface patterned operating systems digital equipment rt 11 pdp 11 os pdp commands form keyword list parameters separated spaces special characters unix builtin internal command recognized carried ccp attempt executable file logged disk drive versions user load pass additional parameters command referred transient programs completion cp reload ccp overwritten application programs allowed transient programs larger memory space commands obscure instance command duplicate files named codice peripheral interchange program dec utility purpose format parameters program standardized single option character differentiated options file names programs characters basic disk operating basic disk operating bdos access operations file output console printing application programs load processor registers function code operation addresses parameters memory buffers fixed address memory address independent memory application programs type configuration hardware basic input output basic input output bios lowest level functions required operating included reading writing single characters console reading writing sector data disk bdos handled buffering data diskette cp assumed disk sector size fixed 128 bytes single density inch floppy disks 25 inch disk formats larger sectors blocking deblocking management disk buffer handled model specific code bios customization required hardware choices constrained compatibility popular standard manufacturers separate terminal designed built integrated video display serial ports printers modems types uart chips port addresses fixed machines memory mapped 8080 address space variations hardware concealed modules bios standard entry services required cp character accessing disk block support serial communication modem rudimentary bios absent altogether common practice cp programs modems user installed overlay code required access machine serial port file file names string characters period file extension characters filename format extension identified type file codice executable program file codice file ascii disk drive identified drive letter drive codice drive codice refer file specific drive drive letter prefixed file separated colon codice drive letter prefixed access files current default drive filename format drive letter colon combination survived dos drive letter colon convention survived windows addition file extensions codice 11 codice 12 compiled file codice 13 executable file identify file types operating systems file size 128 byte records disk sectors inch drives occupied file disk supported byte exact file sizes current size file maintained file file control block fcb operating application programs editors prefer deal files sequences characters sequences records convention files terminated control character ascii hexadecimal 1a determining file involved examining record file locate terminating control meant inserting control character middle file truncating contents file advent larger removable fixed disk drives disk blocking formulas employed disk blocks logical file allocation block allowed larger file sizes meant file allocated increased size 1kb single density drives 2kb double density drives 32kb file single byte inefficient disk space disk contained files file modification time stamps supported releases cp optional feature cp cp subdirectories file structure 16 numbered user organize files disk change user simply type user command prompt user security existent believed user concept single user version cp compatible multi user systems common patch cp derivative operating systems user accessible user independent set user user command allowed user changed 15 user default changed user user material saved disk user user user access files stored user accessible users location prefatory path files user visible logged user user feature arguably utility floppy disks organizing files machines hard drives intent feature ease tasks secretary data entry switching user employee machine billing files intermixing transient program read write memory address 0100 hexadecimal lowest address bdos transient program tpa cp application programs z80 8080 processors address 64 kilobytes memory application programs vary depending design computers address space bios roms video display memory result systems tpa memory bank switching common technique allowed systems tpa switching rom video memory space cp allowed bdos bank switched memory debugging application cp dynamic debugging tool nicknamed ddt insecticide bug killer allowed memory program modules examined manipulated allowed program executed step time resident programs cp originally support equivalent terminate stay resident program dos programmers write software intercept operating calls extend alter functionality capability programmers developed sold auxiliary desk accessory programs smartkey keyboard utility assign string bytes key cp m 3 support dynamically loadable resident extensions rsx solutions rsm retrofitted cp systems parties installation cp hardware abstraction standardize interface disk console typically application programs required installation features equipment printers terminals controlled escape sequences altered devices escape sequence select bold printer differed manufacturers models manufacturer range procedure defined operating user typically installation program selection range devices feature feature editing escape sequences required access function repeated application program central operating service devices initializing codes model printer written application program wordstar printer fast dot matrix printer slower presentation quality daisy wheel printer separate version wordstar prepared load wordstar version corresponded printer selected exiting reloading change printers history cp heyday gary kildall originally developed cp 1974 operating intel intellec development equipped shugart associates inch floppy disk drive interfaced custom floppy disk controller written kildall programming language microcomputers aspects cp influenced tops operating decsystem mainframe kildall development environment cp originally stood control program monitor implies resident monitor—a primitive precursor operating conversion cp commercial product trademark registration documents filed november 1977 product control program microcomputers cp prevailing naming scheme time kildall language prime programming language prime suggesting ibm ibm cp cms operating kildall naval postgraduate school renaming cp larger effort kildall wife business partner convert kildall personal project cp intel contracted compiler commercial enterprise kildalls intended establish digital brand product lines synonymous microcomputer consumer mind ibm accomplished personal synonymous product offerings intergalactic digital renamed corporation change filing digital portability companies chose support cp library software xerox 820 operating literally thousands programs written unwise advantage xerox 1984 columbia university source code build kermit binaries dozen cp systems generic version operating software bus allowing multiple programs interact hardware standardized programs written cp typically portable machines requiring specification escape sequences control screen printer portability cp popular software written cp operating systems brand hardware restriction portability programs extended instruction set z80 processor operate 8080 8085 processor graphics routines games graphics programs machine specific direct hardware access speed bypassing os bios common dos machines gates claimed apple family 80 softcard single popular cp hardware platform brands machines operating notable examples altair 8800 imsai 8080 osborne kaypro luggables msx computers selling cp capable time amstrad pcw cp machines educational computers cp source code published educational resource bbc micro equipped z80 processor amstrad cpc series commodore 128 trs 80 models zx spectrum cp niat custom handheld designed nielsen internal 1 mbytes ssd memory applications wordstar word processors dbase popular database program microcomputers originally written cp outliners kamas knowledge mind amplification cut successor programming facilities retooled 8080 v20 compatibility written cp rewritten dos turbo pascal ancestor borland delphi multiplan ancestor excel debuted cp dos versions visicalc spreadsheet program cp company sorcim created supercalc spreadsheet cp market leader facto standard cp supercalc competitor spreadsheet market dos autocad cad application autodesk debuted cp host compilers interpreters popular programming languages time basic borland turbo pascal fortran earliest products cp software installers adapted wide variety computers forms protection ineffective operating source code basic programs easily accessible lack standardized graphics support limited video games character based games ported telengard gorillas video game hamurabi lunar lander interactive fiction including zork series colossal cave adventure adventure specialist infocom publishers consistently release games cp format lifeboat associates started collecting distributing user written software xmodem allowed reliable file transfers modem phone program native cp outline processor kamas disk formats standard inch cp disk format existed inch single density floppy disk format called distribution format standardized inch formats depending characteristics systems degree choices designers cp supported options control size directory disk mapping logical disk sectors cp programs physical sectors allocated disk customize parameters set standardized existed load parameters disk formatted jrt pascal versions inch disk north star osborne apple heath hard sector soft sector superbrain single inch version disk formats popular xerox 820 supported software computers kaypro compatible format single manufacturer prevailed inch era cp disk formats portable hardware manufacturers software manufacturer prepare separate version program brand hardware manufacturers kaypro standardization company models situation disk format translation programs allowed machine read formats popular reduced confusion programs kermit allowed transfer data programs machine serial ports cp machines degree portability cp machines depended type disk drive controller floppy types existed cp era 25 format disks hard soft sectored single double density single double sided 35 track 40 track 77 track 80 track sector layout size vary translation programs user read disk types machines depended drive type controller 1982 soft sector single sided 40 track 25 disks popular format distribute cp software common consumer level machines time apple trs 80 osborne kaypro ibm pc translation program allowed user read disks machine format kaypro read trs 80 osborne ibm pc epson disks disk types 80 track hard sectored completely impossible read double sided disks epson qx read cp accessed disk tracks sequentially track outermost track track 79 40 track disk innermost track apple users apple gcr format cp software apple format disks transfer serial link fragmented cp market requiring distributors stock multiple formats disks invest multiformat duplication equipment compared standardized ibm pc disk formats contributing factor rapid obsolescence cp 1981 notable cp capable machines commodore 128 1985 z80 cp support addition native mode 6502 derivative cpu cp required 1571 1581 disk drive read soft sector 40 track mfm format disks floppy drive sony smc 70 cp c128 msx supported cp floppy disks graphics graphics capable 100 systems existed commercialization 100 bus cp provide standardized graphics support 1982 gsx graphics extension memory graphics common feature bit cp operating systems systems display rudimentary ascii art charts diagrams mode custom character set multi user 1979 multi user compatible derivative cp released allowed multiple users connect single multiple terminals provide user screen keyboard versions 16 bit processors cp bit version cp version called cp released 1983 incorporated bank switching memory management single user single task operating compatible cp applications cp 64 kb memory 8080 z80 processor configured support stamping files operating distribution software included relocating assembler linker cp generation bit computers notably amstrad pcw zx spectrum commodore 128 msx machines radio shack trs 80 model 16 bit versions cp 16 bit cpus version 16 bit family cp 86 intel 8086 cp 68k motorola 68000 original version cp 68k 1982 written pascal 68k ported original bit cp retronym cp 80 avoid confusion 1982 1983 port zilog z8000 olivetti m20 written named cp 8000 cp 86 expected standard operating ibm pcs dri ibm unable negotiate development licensing terms ibm delivered pc dos based cp clone 86 dos cp 86 option ibm pc dri threatened legal action overtook digital equipment corporation dec rainbow 100 compete ibm cp 80 z80 chip cp 86 dos 8088 microprocessor cp 86 80 z80 8088 cpus concurrently benefit rainbow continue bit cp software preserving user sizable investment moved 16 bit dos cp 68k running motorola exormacs systems initially atari atari decided disk operating called gemdos cp 68k sord m68 m68mx computers 16 bit versions cp required application programs compiled cpus written assembly language translated tools digital xlt86 program written gary kildall 1981 translated asm source code intel 8080 processor a86 source code intel 8086 global data flow analysis 8080 register usage translator optimize output code size care calling conventions cp 80 80 programs ported cp 86 86 platforms automatically xlat86 written 80 cp 80 platforms dec vms vax 11 750 11 780 dos takes expected cp standard operating 16 bit computers 1980 ibm approached digital gates suggestion license forthcoming version cp product ibm personal failure signed disclosure agreement talks failed ibm contracted provide operating product dos outselling cp basic concepts mechanisms versions dos resembled cp internals file handling data structures identical referred disk drives letter codice codice dos main innovation fat file similarity easier port popular cp software wordstar dbase cp concept separate user files disk ported dos dos access memory ibm pcs sold 64 kb memory cp 16 kb commands built command dos faster easier floppy based computers peripherals ibm pc softcard expansion card bit cp software cp rapidly lost market share microcomputing market moved ibm compatible platform regained popularity byte magazine time leading industry magazines microcomputers essentially ceased covering cp products introduction ibm pc 1983 advertisements 100 boards articles cp software 1987 magazine 1984 article infoworld stated efforts introduce cp market unsuccessful cp software expensive users 1986 stated kaypro stopped production bit cp based models concentrate sales dos compatible systems vendors ceased production equipment software cp versions cp 86 strides performance usability compatible dos reflect compatibility changed cp 86 dos dr dos zcpr zcpr z80 command processor replacement introduced february 1982 drop replacement standard digital console command processor ccp initially written hobbyists called ccp frank wancho keith petersen archivist simtel time ron fowler charlie strom bob mathias richard conn richard driving force maintained contact email zcpr1 released disk sig special microcomputers amateur club jersey zcpr2 released february 14 1983 released set disks sig zcpr2 upgraded released 8080 code permitting zcpr2 8080 8085 systems zcpr3 released bastille day july 14 1984 set disks sig code zcpr3 compiled reduced features 8080 systems requisite z80 microprocessor january 1987 richard conn stopped developing zcpr echelon jay sage privately enhanced zcpr continue zcpr developed released zcpr supported 8080 series microprocessors features upgrade zcpr features zcpr version included zcpr3 included complement utilities considerably extended capabilities enthusiastically supported cp user base time zcpr insufficient slow demise cp legacy behaviors exhibited windows result compatibility dos attempted compatibility cp drive letter filename conventions dos windows versions originally cp wildcard matching characters windows based cp filenames redirect output printer prn console drive names designate floppy disk drives cp systems typically hard drives appeared designated survived dos codice 16 command prompt control character marking files attributed cp source code releases 1997 1998 caldera released cp binaries source code source license allowing redistribution modification collected digital files cp families tim olmstead unofficial cp 1997 retrobrew computers n8vem project z80 membership card rc2014 project 
47087	computerscience	aibo stylized aibo artificial intelligence robot homonymous pal partner japanese series robotic pets designed manufactured sony sony announced prototype aibo mid 1998 consumer model introduced 11 1999 models released 2006 models dog inspirations included lion cubs space explorer ers version ers 1000 versions explicitly robotic dog 2006 aibo carnegie mellon university robot hall fame january 26 2006 sony announced discontinue aibo products effort company profitable sony aibo customer support withdrawn gradually support final ers 7m3 march 2013 july 2014 sony stopped providing repairs aibo products provide customer support repair aibo robots november 2017 sony announced generation aibo 11 fourth generation model ers 1000 launched japan 11 january 2018 lottery sale set february 2018 14 59 aibo called toy robot people compare actual toys robosapien zoomer tekno cybie advanced expensive meant children companion robot adults examples companion robot commonly mistaken toy paro realistic robotic seal therapy history aibo grew sony science laboratory csl founded 1990 csl set emulate famed innovation center xerox’s palo alto center parc csl product aperios operating form base software aibo models nobuyuki idei president sony 1995 sought adopt digital agenda reflected motto company “digital dream kids prominence csl famed engineer dr toshitada doi credited aibo’s original progenitor 1994 started robots artificial intelligence expert masahiro fujita csl fujita write robot behaviors “be complex unexpected people watching care it” fujita argued entertainment robots viable robot entertainment effectively designed art technologies speech recognition vision technologies mature applications perform critical function exists special difficult requirements entertainment applications limited capabilities speech vision systems attractive feature appropriately designed entertainment robots monkey prototype mutant included behaviors aibos including tracking yellow ball shaking hands karate strikes sleeping fujita receive ieee inaba technical award innovation leading production aibo mass market consumer robot entertainment applications friend doi artist hajime sorayama enlisted create initial designs aibo body designs permanent collections museum modern art smithsonian institution generation aibo design japan prestigious design award grand prize special intelligent design award 2000 german red dot awards 1997 doi received idei form sony’s digital creatures lab believing robots commonplace households 2010 aware shortcomings technology functional decided focus robots entertainment aibo responded 100 voice commands talked tonal language generation aibos exported usa york ny remains archives display artspace company llc models aibos designed jointly prestigious japanese designers continued gain design awards ers 210 design inspired lion cubs bodies ers 3x series latte macaron headed aibos released 2001 designed visual artist katsura moshino winning design award sleek futuristic space exploration inspired body ers 220 designed shoji kawamori winning design award design asia award ers design award idei successor howard stringer closed aibo robotic projects doi staged mock funeral attended 100 colleagues sony funeral doi aibo symbol risk spirit sony dead november 2017 sony corporation announced aibo return model capable forming emotional bond users models prototypes prototypes displayed sony models insect legs specifications design 1998 prototype sony press release closely match generation aibos differences include pc cards memory memorystick media batteries option wheeled rolling module legs generation models ers 110 commercially aibo beagle appearance sales june 1999 limited production 000 japan 000 usa internet sold 20 minutes launch cost 250 000 yen ers 111 ers 111 improved version original aibo initially released november 1999 limited edition model 000 units japanese stock bought 17 launch generation models ers 210 ers 210 designed cub speech recognition capabilities colours black silver gold red blue green white ers 300 latte macaron ers 300 aibo heart slogan original production design illustrator katsura moshino price 98 000 yen latte version model cream coloured macaron version black coloured latte version designed sweet macaron version designed mischievous ers 220 silver headlights led future oriented design design based concept space exploration robot shoji kawamori remote operation optional wireless lan card ers 210 aibo navigator height 29 6 cm 5 kg weight hours continuous operation time 16 degrees freedom drive unit price 180 000 yen excluding tax ers 210a 220a variants ers 210 220 difficult distinguish appearance improved cpu displays affixed logo sticker super core body 1299 launch generation models estimated sales generation models 40 000 50 000ers november 2003this aibo regarded culmination series explicitly robot dog white packaged mind 599 launch ers 7m2 november 2004a variant ers packaged mind2 black white ers 7m3 october 2005a variant ers 7m2 packaged mind3 changed wi white black champagne gold called honey brown japan final model fourth generation models ers 1000 january 2018the model released aibo project discontinued 2006 requires internet connection function lte sim card monthly subscription service support interaction learning cloud qrio humanoid qrio robot designed successor aibo runs base code aperios operating hardware initial ers 110 aibo hardware includes 64 bit risc processor 16 megabytes ram sensors touch camera range finder microphone acceleration angular velocity speaker actuators legs neck mouth tail series developed sensors actuators wi add generation aibos final family aibos ers 7s multiple head body sensors clicking ear actuators chest mounted proximity sensor expressive illume wi aibos bundled accessories including charging station pink ball toy late model ers7 bundled pink aibone bone shaped toy playing cards charging station pole marker mat autonomous docking software aibos bundled aibolife software robot personality ability walk environment camera recognize spoken commands english spanish japanese aibo sounds programmed japanese avant garde composer nobukazu takemura fusing mechanic organic concepts sounds ers mind custom data composed masaya matsuura japanese musician game designer aperios aperios sony proprietary real time operating aibos qrio consumer devices aperios os intended deployed revolutionary real time capabilities handle multiple audio visual data streams concurrently operating 2003 sony stopped active development coo kunitake ando commenting aperios operating pre internet age decided adequate future architecture specific entertainment robots architecture involves modular hardware components appendages easily removed replaced change shape function robots modular software components interchanged change behavior movement patterns aibo creator doi called masterpiece aibo development project arguing minimize programming individual movements responses nature encourage global community robot specialists programmers add capability aiboware generation models aibo load software packages sold sony aiboware trademark sony corporation title software aibo runs pink memory stick life aiboware robot raised pup grown adult stages development owner interacts explorer aiboware owner interact mature robot understand obey 100 voice commands aiboware aibos clinic mode perform basic actions generation ers models sole mind software includes capabilities aibolife aiboware packages mind software includes docking process allowing ers recharge autonomously upgrades mind2 included aibo entertainment player wi based connection pc upgrades mind3 included speech blogging autonomous mapping aibo complete vision sift algorithm recognise charging station vision implementation evolution robotics ervision notable aiboware softwarenotable party softwareaibo software development environment initially access programming capabilities limited sony organizations participating robocup reverse engineering aibo users developed software operated aiboware discoaibo robotic canine dance music copyright milestone sony invoked digital millennium copyright october 2001 cease desist notice demanding aibopet distributing code retrieved bypassing protection mechanisms complaints outraged aibo owners sony subsequently released programmer kit commercial kit eventually expanded distinct tools code sdk aibo remote framework ers tools combined aibo software development environment tools download commercial commercial sdk commercial sdk sdk based programming sdk based source tools gcc newlib software executes aibo sdk considered level control gain values aibo actuators retrieving aibo camera data vision computations pre built standard aibo functionality code aibo remote framework excellent choice researchers level robotic code code code level scripting language aibo code easily create simple programs aibo execute level control sdk lacks power simplicity remoting simple terminal socket connection wifi commercial usage allowed license fee codeplus derivative code aibopet functionalities codeplus superset code terms language written standard code codeplus memorystick model aibo codeplus exposes basic aibo functions simple recognition registration camera adjustment settings addition standard code terminal socket remoting codeplus supplies telemety socket binary data transfers aibo camera image sending receiving sound code extended code aibopetaibnet offers development environment code programming simplified drag drop customizing behavior user created yart rcode tool aibo remote framework remotely access capabilities aibo mind including behaviors pattern recognition windows pc functionality aibo entertainment player aibo remote framework windows pc api based visual framework write code remotely control aibo running mind2 mind3 aiboware wireless lan commercial usage allowed license fee development environments robot software development frameworks developed support aibos including urbi tekkotsu pyro current projects aibo replacement personality sony ers project aep application aibo client connect robot ubuntu linux windows mac os ios android owner control dog play game robot aibo control android users control aibo ers running urbi gcc based toolchain updated community gcc binutils 24 newlib 15 improvement brings 11 14 features modern software program robot packaged version updated aibo toolchain ubuntu ppa aibos education academia aibo extensively education carnegie mellon offered aibo centred robotics covering models perception cognition action solving robotbenchmark features online simulation challenge based aibo ers model called visual tracking robocup legged league aibo inexpensive platform artificial intelligence education integrates vision articulators package vastly cheaper conventional robots focal development robocup leagues legged league initial robocup standard platform league robot soccer league teams compete identical robots robots operate autonomously external control humans computers specific aibo version changed time ers 110s 1999 2000 ers 210 2001 2002 ers 210a supercore 2003 ers 2004 2008 replacement current standard platform humanoid nao aldebaran robotics sony aibos support sponsorship universities participate robocup autonomous soccer competition legged robot soccer league competing teams program team aibo robots play games autonomous robot soccer competing teams legged league 1999 2008 final universities compete moved nao platform university south wales successful team league final times winning times international aibo convention international aibo convention takes sony robotics tower shinjuku prefecture convention 1999 15 set 2009 convention tenth set attendance records convention features aibo advertisements posters accessories freeware source downloads aibo breed lineage model body color choices release units sold generation models estimated sales generation models 65 000second generation models estimated sales generation models 60 000third generation models estimated sales generation models 40 000 50 000anime aibo anime based aibo ers 300s latte macaroon anime triggered sounds actions viewer ers 300s 23 episode series broadcast fuji thursdays 22 54 23 00 october 11 2001 march 21 2002 popular culture aibo introduced yorker published cartoon jack ziegler aibo urinating nuts bolts hydrant aibo ers 111 janet jackson matter music video received increased market demand commercial success featured jackson clip episode frasier frasier dad aibo ers 210 company visiting roz wisconsin scene eddie interacting aibo martin crane complains sony south park episode red sleigh cartman spends entire episode santa nice list receive haibo robot doll christmas reference robot dog craze 2000s started aibo episode conclusion stan kyle cartman receive haibo dog haibo parody aibo robot adults sold stores parody spin offs children siri ios device pet responses aibo film cj7 robotic toy cj1 based design aibo toy knock offs futurama episode jurassic bark bender robotic dog resembling aibo named robo puppy pair robotic dogs based aibo tokyo jungle video game published sony entertainment aibo model ers 110 game aibo ers 210 title sequence 2017 adaptation neil gaiman american gods 
47772	computerscience	instruction set architecture isa abstract model referred architecture architecture realization isa called implementation isa permits multiple implementations vary performance physical size monetary cost isa serves interface software hardware software written isa implementations isa enabled binary compatibility generations computers easily achieved development families developments helped cost computers increase applicability reasons isa abstractions computing isa defines machine language programmer program isa defines differs isas isas define supported data types main memory registers semantics memory consistency addressing modes instruction set set machine instructions comprises machine language input output model overview instruction set architecture distinguished microarchitecture set processor design techniques processor implement instruction set processors microarchitectures share common instruction set intel pentium advanced micro devices athlon implement identical versions x86 instruction set radically internal designs concept architecture distinct design specific machine developed fred brooks ibm design phase 360 virtual machines support bytecode isa smalltalk java virtual machine common language runtime implement translating bytecode commonly code paths native machine code addition virtual machines execute frequently code paths interpretation time compilation transmeta implemented x86 instruction set atop vliw processors fashion classification isas isa classified common classification architectural complexity complex instruction set cisc specialized instructions rarely practical programs reduced instruction set risc simplifies processor efficiently implementing instructions frequently programs common operations implemented subroutines additional processor execution time offset infrequent types include instruction word vliw architectures closely instruction word liw explicitly parallel instruction computing epic architectures architectures seek exploit instruction level parallelism hardware risc cisc compiler responsible instruction issue scheduling architectures complexity studied minimal instruction set misc instruction set oisc theoretically types commercialized instructions machine language built discrete statements instructions processing architecture instruction complex operations built combining simple instructions executed sequentially directed control flow instructions instruction types examples operations common instruction sets include complex instructions processors include complex instructions instruction set single complex instruction instructions computers instructions typified instructions multiple steps control multiple functional units larger scale bulk simple instructions implemented processor examples complex instructions include complex instructions common cisc instruction sets risc instruction sets risc instruction sets include risc instruction sets include alu operations memory operands instructions blocks memory risc instruction sets include simd vector instructions perform arithmetic operation multiple pieces data time simd instructions ability manipulating vectors matrices minimal time simd instructions easy parallelization algorithms commonly involved sound image video processing simd implementations brought market trade names mmx 3dnow altivec instruction traditional architectures instruction includes opcode specifies operation perform add contents memory register —and operand specifiers registers memory locations literal data operand specifiers addressing modes determining meaning fixed fields instruction word vliw architectures include microcode architectures multiple simultaneous opcodes operands single instruction exotic instruction sets opcode field transport triggered architectures tta operand virtual machine operand instruction sets lack operand specifier fields stack machines including nosc conditional instructions predicate field—a bits encode specific condition operation performed performed conditional branch instruction executed branch condition true execution proceeds program executed branch condition false execution continues sequentially instruction sets conditional moves executed data stored target location condition true executed target location modified condition false ibm architecture conditional store instruction instruction sets include predicate field instruction called branch predication operands instruction sets categorized maximum operands explicitly instructions bits encode registers operand instruction risc architectures 16 bit instructions invariably operand designs atmel avr ti msp430 versions arm thumb risc architectures 32 bit instructions operand designs arm avr32 mips power isa sparc architectures instruction specifies operands registers memory locations values explicitly instructions operands implicitly stored stack implicit register operands implicitly operands instruction destination operand explicitly specifies destination additional operand supplied operands encoded instruction mathematically arguments logical arithmetic operation arity operands encoded opcode representation instruction values addresses instruction register pressure register pressure measures availability registers time program execution register pressure registers register pressure register contents spilled memory increasing registers architecture decreases register pressure increases cost embedded instruction sets thumb suffer extremely register pressure register sets purpose risc isas mips alpha enjoy register pressure cisc isas x86 64 offer register pressure register sets addressing modes optimizations register addressing memory operands alu instructions absolute addressing pc relative addressing register register spills cisc isas offer instruction size instruction varies bits microcontrollers hundreds bits vliw systems processors personal computers mainframes supercomputers instruction sizes 64 bits instruction x86 15 bytes 120 bits instruction set instructions lengths architectures notably reduced instruction set computers risc typically architecture word size architectures instructions variable typically integral multiples byte halfword arm thumb extension mixed variable encoding fixed 32 bit 16 bit encodings instructions mixed freely switched branch exception boundary armv8 risc instruction set fixed instruction bytes 32 bits typical cisc instruction set instructions varying 15 bytes x86 fixed instructions complicated handle variable instructions reasons check instruction straddles cache virtual memory boundary instance easier optimize speed code density computers memory expensive minimizing size program fit limited memory central combined size instructions perform task code density characteristic instruction set computers code density complex instructions procedure entry parameterized returns loops retroactively named complex instruction set computers cisc typical frequent cisc instructions combine basic alu operation add access operands memory addressing modes direct indirect indexed architectures operands including result memory perform functions automatic pointer increment software implemented instruction sets complex powerful instructions reduced instruction set computers risc implemented period rapidly growing memory subsystems sacrifice code density simplify implementation circuitry increase performance clock frequencies registers single risc instruction typically performs single operation add registers load memory location register risc instruction set fixed instruction typical cisc instruction set instructions varying risc computers require instructions implement task inherently optimal bus bandwidth cache memories embedded risc isas thumb avr32 typically exhibit density technique called code compression technique packs 16 bit instructions 32 bit instruction unpacked decode stage executed instructions minimal instruction set computers misc form stack machine separate instructions 16 64 multiple instructions fit single machine word types cores silicon implement easily realized fpga multi core form code density misc code density risc increased instruction density offset requiring primitive instructions task executable compression mechanism improving code density mathematics kolmogorov complexity describes challenges limits representation instructions constituting program rarely internal numeric form machine code programmers assembly language commonly generated programming languages compilers design design instruction sets complex issue stages history microprocessor cisc complex instruction set instructions 1970s ibm instructions set eliminated result risc reduced instruction set architecture set instructions simpler instruction set offer potential speeds reduced processor size reduced power consumption complex set optimize common operations improve memory cache efficiency simplify programming instruction set designers reserve opcodes software interrupt mos technology 6502 00h zilog z80 codes c7 d7 df e7 ef f7 ffh motorola 68000 codes range a000 afffh fast virtual machines easier implement instruction set meets popek goldberg virtualization requirements nop slide immunity aware programming easier implement unprogrammed memory interpreted nop systems multiple processors blocking synchronization algorithms easier implement instruction set includes support fetch add load link store conditional atomic compare swap instruction set implementation instruction set implemented variety implementing instruction set provide programming model implementations instruction set executables implementing instruction set tradeoffs cost performance power consumption size designing microarchitecture processor engineers blocks hard wired electronic circuitry designed separately adders multiplexers counters registers alus register transfer language decoding sequencing instruction isa physical microarchitecture basic build control unit implement description designs middle compromises designs combination hardwired design microcode control unit cpu designs writable control store—they compile instruction set writable ram flash cpu rekursiv processor imsys cjip fpga reconfigurable computing isa emulated software interpreter naturally interpretation overhead slower running programs emulated hardware hardware running emulator magnitude faster common practice vendors isas microarchitectures software emulators software developers hardware implementation ready details implementation strong influence instructions selected instruction set implementations instruction pipeline single memory load memory store instruction leading load store architecture risc implementing instruction pipeline led delay slot demands speed digital signal processing pushed direction—forcing instructions implemented perform digital filters fast mac instruction typical digital signal processor dsp harvard architecture fetch instruction data simultaneously requires single cycle multiply–accumulate multiplier 
48113	computerscience	society worldwide interbank financial telecommunication swift network enables financial institutions worldwide send receive financial transactions secure standardized reliable environment swift sells software services financial institutions swiftnet network iso 9362 business identifier codes bics bank identifier codes popularly swift codes majority international interbank messages swift network swift linked 11 000 financial institutions 200 countries territories exchanging average 15 messages day compared average daily messages 1995 swift transports financial messages highly secure hold accounts perform form clearing settlement swift facilitate funds transfer sends payment settled correspondent accounts institutions financial institution exchange banking transactions banking relationship bank affiliating enjoy business features swift cooperative society belgian law owned financial institutions offices swift headquarters designed ricardo bofill taller arquitectura hulpe belgium brussels chairman swift yawar shah originally pakistan ceo gottfried leibbrandt originally netherlands swift hosts annual conference called sibos aimed financial services industry history swift founded brussels 1973 leadership inaugural ceo carl reuterskiöld 1973–1989 supported 239 banks countries started establish common standards financial transactions shared data processing worldwide communications network designed logica developed burroughs corporation fundamental operating procedures rules liability established 1975 message 1977 swift united operating center inaugurated governor john dalton virginia 1979 standards swift industry standard syntax financial messages messages formatted swift standards read processed financial processing systems message traveled swift network swift cooperates international organizations defining standards message format content swift registration authority ra iso standards rfc 3615 urn swift defined uniform resource names urns swift fin operations centers swift secure messaging network data centers united netherlands secret location restricted employees security reasons centers share real time failure data centers handle traffic complete network swift submarine communications cables transmit data swift fourth data center switzerland started operating 2009 data european swift mirrored data center distributed architecture partitions messaging messaging zones european trans atlantic european zone messages stored netherlands switzerland operating center trans atlantic zone messages stored united switzerland operating center segregated european zone messages countries europe default allocated trans atlantic zone choose messages stored european zone swiftnet network swift moved current ip network infrastructure swiftnet 2001 2005 providing total replacement previous 25 infrastructure process involved development protocols facilitate efficient messaging existing message standards technology chosen develop protocols xml wrapper messages legacy contemporary communication protocols broken interactfileactbrowsearchitecture swift centralized store mechanism transaction management bank send message bank authorization institution formats message standard securely sends swift swift guarantees secure reliable delivery action swift guarantees based redundancy hardware software people swiftnet phase 2007 2008 entire swift network migrated infrastructure protocol called swiftnet phase main difference phase arrangement phase requires banks connecting network relationship management application rma bilateral key exchange bke swift public database subject rma software eventually prove secure easier converting rma meant thousands banks update international payments systems comply standards rma completely replaced bke january 2009 products interfaces swift financial swift key solutions consisting linkage clients facilitate connectivity swift network cbts based terminals manage delivery receipt messages interfaces cbts key swift services fall financial marketplace securities treasury derivatives trade services payments cash management securitiestreasury derivativescash managementtrade servicesswiftref swift global payment reference data utility swift unique reference data service swift sources data direct data originators including central banks code issuers banks easy issuers originators maintain data regularly swiftref constantly validates cross checks data data sets swiftnet mail swift offers secure person person messaging service swiftnet mail live 16 2007 swift clients configure existing email infrastructure pass email messages highly secure reliable swiftnet network internet swiftnet mail intended secure transfer sensitive business documents invoices contracts signatories designed replace existing telex courier services transmission security sensitive data internet financial institutions including hsbc firstrand bank clearstream dnb nedbank standard bank south africa swift piloted service government involvement terrorist finance tracking program series articles published 23 june 2006 york times wall street journal los angeles times revealed program named terrorist finance tracking program treasury department central intelligence agency cia united governmental agencies initiated 11 september attacks gain access swift transaction database publication articles swift pressure compromising data privacy customers allowing governments gain access sensitive personal september 2006 belgian government declared swift dealings american governmental authorities breach belgian european privacy laws response satisfy concerns privacy swift process improving architecture implementing distributed architecture zone model storing messages operations centers concurrently european union negotiated agreement united government permit transfer intra eu swift transaction united circumstances concerns potential contents european parliament position statement september 2009 demanding agreement compliant eu privacy legislation oversight mechanisms emplaced ensure data requests handled appropriately interim agreement signed european parliamentary approval european council 30 november 2009 day lisbon treaty—which prohibited agreement signed terms codecision procedure—formally interim agreement scheduled january 2010 agreement classified eu restricted translations eu languages published 25 january 2010 11 february 2010 european parliament decided reject interim agreement eu 378 196 votes week earlier parliament civil liberties committee rejected deal citing legal reservations march 2011 reported mechanisms data protection failed europol released report complaining usa requests vague impossible judgments validity guaranteed european citizens accessed usa authorities practice sanctions iran january 2012 advocacy united nuclear iran uani implemented campaign calling swift relations iran banking including central bank iran uani asserted iran membership swift violated eu financial sanctions iran swift corporate rules february 2012 senate banking committee unanimously approved sanctions swift aimed pressuring belgian financial telecommunications network terminate ties blacklisted iranian banks expelling iranian banks swift deny iran access billions dollars revenue spending swift ivts mark wallace president uani praised senate banking committee initially swift denied acting illegally european governments address concerns financial services iran avoid sanctions conduct illicit business targeted banks be—amongst others—saderat bank iran bank mellat post bank iran sepah bank 17 march 2012 agreement days earlier 27 council european union council subsequent ruling swift disconnected iranian banks international network identified institutions breach current eu sanctions warned iranian financial institutions disconnected network february 2016 iranian banks reconnected network lift sanctions joint comprehensive plan action control transactions eu 26 february 2012 danish newspaper berlingske reported authorities sufficient control swift seize money transferred european union eu countries denmark germany succeeded seizing 26 000 transferred danish businessman german bank transaction automatically routed usd currency transaction united seize funds money payment batch cuban cigars imported germany german supplier justification seizure treasury stated danish businessman violated united embargo cuba monitoring nsa der spiegel reported september 2013 national security agency nsa monitors banking transactions swift credit card transactions nsa intercepted retained data swift network thousands banks securely send transaction swift named target documents leaked edward snowden documents revealed nsa spied swift variety methods including reading swift printer traffic numerous banks april 2017 shadow brokers released files allegedly nsa agency monitored financial transactions swift sanctions mentioned swift disconnected iranian banks international network sanction iran 2016 iranian banks international sanctions lists reconnected swift theory enables movement money iranian banks foreign banks remain wary business country primary sanctions transactions banks iran transactions dollars iran remain prohibited august 2014 planned press eu block russian swift sanction russian military intervention ukraine swift refused official statement swift regrets pressure surrounding media speculation risk undermining systemic character services swift customers spfs russia based swift equivalent created central bank russia backup measure september 2018 european union foreign policy head federica mogherini proposed development special purpose financial vehicle intended bypass controlled society worldwide interbank financial telecommunication payments commonly swift founding iran european commission germany france russia china united united withdrawn jcpoa iran nuclear deal decreed severe sanctions nation trading iran payments designed remove banking transactions iran purview authorities escape sanctions nations trading iran apparent goal encourage iran continue adhere terms jcpoa forbids testing development manufacture nuclear weapons claims breach party jcpoa united time evade sanctions german russian pipeline project nordstream swift rejected calls boycott israeli banks network security 2016 81 theft bangladesh central bank account york federal reserve bank traced hacker penetration swift alliance access software york times report attempt society acknowledged security transfer undergoing examination reports theft bangladesh central bank attack reported occurred commercial bank vietnam attacks involved malware written issue unauthorized swift messages conceal messages malware swift messages stole funds deleted database record transfers steps prevent confirmation messages revealing theft bangladeshi confirmation messages appeared paper report malware altered paper reports printer bank pdf report malware altered pdf viewer hide transfers 2016 banco del austro bda ecuador sued fargo fargo honored 12 fund transfer requests thieves thieves swift messages resembled canceled transfer requests bda altered amounts reports thieves gained access send swift messages bda asserts fargo detected suspicious swift messages normal bda hours unusual size fargo claims bda responsible loss thieves gained access legitimate swift credentials bda employee authenticated swift messages 2016 anonymous ukrainian bank episode investigated isaca others—even dozens public—were variously reported compromised swift network lost money 
48707	computerscience	gnu octave software featuring level programming language intended numerical computations octave helps solving linear nonlinear numerically performing numerical experiments language compatible matlab batch oriented language gnu project software terms gnu public license octave major alternatives matlab scilab freemat scilab emphasis bidirectional syntactic compatibility matlab octave history project conceived 1988 intended companion chemical reactor design real development started john eaton 1992 alpha release dates january 1993 february 17 1994 version released version released 29 2015 program named octave levenspiel professor principal author levenspiel ability perform quick envelope calculations developments addition desktops personal scientific computing octave academia industry octave massive parallel pittsburgh supercomputing center vulnerabilities guessing social security dramatic acceleration opencl cuda gpus octave language octave language interpreted programming language structured programming language supports common standard library functions unix calls functions support passing arguments reference octave programs consist list function calls script syntax matrix based functions matrix operations supports data structures object oriented programming syntax matlab careful programming script octave matlab octave gnu public license freely changed copied program runs windows unix unix operating systems including macos notable features command variable completion typing tab character command octave attempt complete variable function file names bash tab completion octave cursor initial portion complete command history running interactively octave saves commands typed internal buffer recalled edited data structures octave includes limited support organizing data structures structure elements integer array string short circuit boolean operators octave codice codice logical operators evaluated short circuit fashion operators language contrast element element operators codice codice increment decrement operators octave includes increment decrement operators codice codice prefix postfix forms octave augmented assignment codice unwind protect octave supports limited form exception handling modelled codice lisp form unwind protect block rule gnu octave recognizes termination codice keyword codice compatible matlab language specific keyword codice 11 consequence codice block terminated keyword codice 13 portable keyword codice cleanup block executed exception raised body cleanup executed propagating exception block codice gnu octave supports form exception handling compatible matlab language form differs codice block exception handling executed exception raised body execution exception handling exception propagated block codice 17 statement explicitly inserted exception handling code variable argument lists octave mechanism handling functions unspecified arguments explicit upper limit list arguments special argument codice 18 argument list variable return lists function set return values special return codice 19 integration execute octave code program code snippet calling codice 20 code integrated gnu octave creating oct files matlab compatible mex files matlab compatibility octave built matlab compatibility mind shares features matlab octave treats incompatibility matlab bug considered software clone infringe software copyright lotus borland court matlab scripts mathworks fileexchange repository principle compatible octave uploaded users octave compatible proper source bsd license fileexchange terms prohibit usage mathworks proprietary matlab syntax compatibility purposeful albeit minor syntax additions function compatibility numerous matlab functions gnu octave accessible packages octave forge functions core octave forge packages listed online list unavailable functions included octave function unimplemented unimplemented functions listed octave forge packages octave wiki unimplemented function called error message user interfaces octave official graphical user interface gui integrated development environment ide based qt octave default interface command interface release octave received edn contributor workable gui 3rd party graphical developed toolbox coding education gui applications octave code user create gui applications https gnu software octave doc interpreter gui development examples button edit control checkboxtextboxlistbox message boxes radiobuttonsan advanced octave gui application composition featool multiphysics fem simulation toolbox packages octave packages packages located octave forge https octave sourceforge packages php packages 
49024	computerscience	wolfram mathematica termed mathematica modern technical computing spanning technical computing including neural networks machine learning image processing geometry data science visualizations technical scientific engineering mathematical computing fields conceived stephen wolfram developed wolfram champaign illinois wolfram language programming language mathematica toc features features wolfram mathematica include notebook interface wolfram mathematica split kernel kernel interprets expressions wolfram language code returns result expressions designed theodore gray 1988 gui creation editing notebook documents program code prettyprinting formatted including typeset mathematics graphics gui components tables sounds content formatting generated algorithmically edited interactively standard word processing capabilities supported including real time multi lingual spell checking documents structured hierarchy cells outlining sectioning document support automatic numbering creation documents slideshow environment presentations notebooks contents represented mathematica expressions created modified analyzed mathematica programs converted formats includes development tools debugger input completion automatic syntax highlighting alternative wolfram workbench eclipse based integrated development environment ide introduced 2006 project based code development tools mathematica including revision management debugging profiling testing plugin intellij idea based ides wolfram language code addition syntax highlighting analyse auto complete local variables defined functions mathematica kernel includes command interfaces include jmath based gnu readline mash runs contained mathematica programs arguments unix command performance computing capabilities performance computing extended introduction packed arrays version 1999 sparse matrices version 2003 adopting gnu multi precision library evaluate precision arithmetic version 2005 automatic multi threading computations performed multi core computers release included cpu specific optimized libraries addition mathematica supported party specialist acceleration hardware clearspeed 2002 gridmathematica introduced user level parallel programming heterogeneous clusters multiprocessor systems 2008 parallel computing technology included mathematica licenses including support grid technology windows hpc server 2008 compute cluster server sun grid support cuda opencl gpu hardware 2010 version generate code automatically compiled compiler gcc visual studio deployment deploy applications written wolfram mathematica connections applications communication applications occurs protocol called wolfram symbolic transfer protocol wstp communication wolfram mathematica kernel interface kernel applications wolfram freely distributes developer kit linking applications written programming language mathematica kernel wstp link java program mathematica perform computations mathematica program load java classes manipulate java objects perform method calls functionality achieved link programs java programs languages connect mathematica include haskell applescript racket visual basic python clojure links mathematical software packages including openoffice calc excel matlab sagemath pull mathematica singular wolfram systemmodeler origin mathematical equations exchanged computational typesetting software mathml mathematica includes interfaces sql databases java database connectivity jdbc mongodb read write multichain bitcoin blockchains mathematica install services services description language wsdl description access hdfs data hadoop mathematica variety cloud services retrieve send data including arxiv bing chemspider crossref dropbox facebook factual federal reserve fitbit flickr google analytics calendar contacts custom search search translate instagram linkedin mailchimp translator mixpanel openlibrary openphacts pubchem pubmed pushbullet reddit runkeeper seatgeek surveymonkey texttranslation twilio twitter webimagesearch websearch wikipedia yelp mathematica capture real time data link labview financial data feeds hardware devices gpib ieee 488 usb serial interfaces automatically detects reads devices read range vernier sensors computable data wolfram mathematica includes collections curated data computations mathematica integrated wolfram alpha online computational knowledge answer engine additional data updated real time data sets include astronomical chemical geopolitical language biomedical weather data addition mathematical data knots polyhedra reception byte 1989 listed mathematica distinction winners byte awards stating breakthrough macintosh application enable absorb algebra calculus impossible comprehend textbook version history wolfram mathematica built ideas cole wolfram earlier symbolic manipulation program smp program mathematica suggested stephen wolfram apple cofounder steve jobs wolfram earlier rejected wolfram released versions mathematica 
49091	computerscience	optical character recognition optical character reader ocr mechanical electronic conversion images typed handwritten printed machine encoded scanned document photo document scene photo signs billboards landscape photo subtitle superimposed image television broadcast form entry printed paper data records – passport documents invoices bank statements computerised receipts business cards mail printouts static data suitable documentation – common method digitising printed texts electronically edited searched stored compactly displayed machine processes cognitive computing machine translation extracted speech key data mining ocr field pattern recognition artificial intelligence vision versions trained images character font time advanced systems capable producing degree recognition accuracy fonts common support variety digital image file format inputs systems capable reproducing formatted output closely approximates original including images columns textual components history optical character recognition traced technologies involving telegraphy creating reading devices blind 1914 emanuel goldberg developed machine read characters converted standard telegraph code concurrently edmund fournier albe developed optophone handheld scanner moved printed produced tones corresponded specific letters characters late 1920s 1930s emanuel goldberg developed called statistical machine searching microfilm archives optical code recognition 1931 granted usa patent 838 389 patent acquired ibm advent smart phones smartglasses ocr internet connected mobile device applications extract captured device camera devices ocr functionality built operating typically ocr api extract image file captured device ocr api returns extracted location detected original image device app processing speech display blind visually impaired users 1974 ray kurzweil started company kurzweil products continued development omni font ocr recognise printed virtually font kurzweil credited inventing omni font ocr companies including compuscan late 1960s 1970s kurzweil decided application technology create reading machine blind blind people read loud device required enabling technologiesthe ccd flatbed scanner speech synthesiser january 13 1976 successful finished product unveiled reported news conference headed kurzweil leaders national federation blind 1978 kurzweil products selling commercial version optical character recognition program lexisnexis customers bought program upload legal paper news documents nascent online databases kurzweil sold company xerox commercialising paper conversion xerox eventually spun scansoft merged nuance communications headed ramakrishnan medical intelligence language engineering lab indian institute science developed printtobraille tool source gui frontend ocr convert scanned images printed books braille books 2000s ocr online service webocr cloud computing environment mobile applications real time translation foreign language signs smartphone commercial source ocr systems common writing systems including latin cyrillic arabic hebrew indic bengali bangla devanagari tamil chinese japanese korean characters applications ocr engines developed kinds domain specific ocr applications receipt ocr invoice ocr check ocr legal billing document ocr types ocr offline process analyses static document handwriting movement analysis input handwriting recognition shapes glyphs technique capture motions segments drawn direction pattern putting pen lifting additional process accurate technology character recognition dynamic character recognition real time character recognition intelligent character recognition techniques pre processing ocr software pre processes images improve chances successful recognition techniques include segmentation fixed pitch fonts accomplished simply aligning image uniform grid based vertical grid lines intersect black proportional fonts sophisticated techniques whitespace letters vertical lines intersect character character recognition basic types core ocr algorithm produce ranked list candidate characters matrix matching involves comparing image stored glyph pixel pixel basis pattern matching pattern recognition image correlation relies input glyph correctly isolated rest image stored glyph font scale technique typewritten fonts encountered technique physical photocell based ocr implemented feature extraction decomposes glyphs features lines closed loops direction intersections extraction features reduces dimensionality representation recognition process computationally efficient features compared abstract vector representation character reduce glyph prototypes techniques feature detection vision applicable type ocr commonly intelligent handwriting recognition modern ocr software nearest neighbour classifiers nearest neighbors algorithm compare image features stored glyph features choose nearest match software cuneiform tesseract pass approach character recognition pass adaptive recognition letter shapes recognised confidence pass recognise remaining letters pass advantageous unusual fonts quality scans font distorted blurred faded ocr result stored standardised alto format dedicated xml schema maintained united library congress list optical character recognition software comparison optical character recognition software post processing ocr accuracy increased output constrained lexicona list allowed occur document english language technical lexicon specific field technique problematic document lexicon proper nouns tesseract dictionary influence character segmentation step improved accuracy output stream plain stream file characters sophisticated ocr systems preserve original layout produce annotated pdf includes original image searchable textual representation neighbor analysis occurrence frequencies correct errors noting washington common english washington doc knowledge grammar language scanned determine word verb noun allowing accuracy levenshtein distance algorithm ocr post processing optimize ocr api application specific optimisations major ocr technology providers tweak ocr systems deal specific types input application specific lexicon performance account business rules standard expression rich contained color images strategy called application oriented ocr customised ocr applied ocr license plates invoices screenshots cards driver licenses automobile manufacturing workarounds techniques solving character recognition improved ocr algorithms forcing input special fonts ocr ocr micr fonts precisely sizing spacing distinctive character shapes accuracy rate transcription bank check processing ironically prominent ocr engines designed capture popular fonts arial times roman incapable capturing fonts specialized popularly fonts google tesseract trained recognize fonts recognize ocr ocr micr fonts comb fields pre printed boxes encourage humans write legiblyone glyph box printed dropout color easily removed ocr palm os special set glyphs graffiti printed english characters simplified modified easier recognition platform computationally limited hardware users learn write special glyphs zone based ocr restricts image specific document referred template ocr crowdsourcing crowdsourcing humans perform character recognition process images driven ocr accuracy recognising images computers practical systems include amazon mechanical turk recaptcha national library finland developed online interface users correct ocred texts standardised alto format crowdsourcing perform character recognition invite software developers develop image processing algorithms rank tournaments accuracy commissioned department energy doe science institute isri mission foster improvement automated technologies understanding machine printed documents conducted authoritative annual ocr accuracy 1992 1996 recognition latin script typewritten 100 accurate imaging study based recognition 19th 20th century newspaper concluded character character ocr accuracy commercial ocr software varied 81 99 total accuracy achieved human review data dictionary authentication areas—including recognition hand printing cursive handwriting printed scripts east asian language characters strokes single character —are subject active mnist database commonly testing systems ability recognise handwritten digits accuracy rates measured measured greatly affect reported accuracy rate word context basically lexicon correct software finding existent character error rate 99 accuracy result error rate 95 accuracy worse measurement based word recognised incorrect letters difficulties inherent digitising inability ocr differentiate characters based ocr systems recognising hand printed fly commercial products tablet pc history accuracy rates 80 90 neat clean hand printed characters achieved pen computing software accuracy rate translates dozens errors technology limited applications recognition cursive active recognition rates hand printed rates recognition cursive script contextual grammatical recognising entire dictionary easier parse individual characters script reading cheque written dictionary increase recognition rates greatly shapes individual cursive characters simply accurately 98 recognise handwritten cursive script programs users set confidence rates software achieve desired level accuracy user notified manual review unicode characters support ocr unicode standard june 1993 release version characters mapped fonts specific micr ocr ocr 
50318	computerscience	symmetric multiprocessing smp involves multiprocessor hardware software architecture identical processors connected single shared main memory access input output devices controlled single operating instance treats processors equally reserving special purposes multiprocessor systems smp architecture multi core processors smp architecture applies cores treating separate processors professor john kubiatowicz considers traditionally smp systems processors caches culler pal singh 1998 book parallel architecture hardware software approach mention term smp bit confusion precise description intended smp shared memory multiprocessor cost accessing memory location processors uniform access costs access memory location cached access faster cache access times memory access times processors smp systems tightly coupled multiprocessor systems pool homogeneous processors running independently processor executing programs sets data capability sharing common resources memory device interrupt connected bus crossbar design smp systems centralized shared memory called main memory operating single operating homogeneous processors processor private speed memory cache memory cache speed main memory data access reduce bus traffic processors interconnected buses crossbar switches chip mesh networks bottleneck scalability smp buses crossbar switches bandwidth power consumption interconnect processors memory disk arrays mesh architectures avoid bottlenecks provide linear scalability processor counts sacrifice programmability programming challenges remain architecture requires distinct modes programming cpus interconnect cpus single programming language partition workload comprehend memory locality severe mesh based architecture smp systems processor task matter data task located memory task execution processors time proper operating support smp systems easily tasks processors balance workload efficiently history earliest production multiple identical processors burroughs b5000 functional 1961 time asymmetric processor restricted application programs processor handled operating hardware interrupts burroughs d825 implemented smp 1962 ibm offered dual processor systems based 360 model 65 closely model 67 67 operating systems machines os 360 m65mp tss 360 software developed universities notably michigan terminal mts cpus processors access data channels initiate os 360 m65mp peripherals attached processor operating kernel processors lock handler mts supervisor ummps ability cpus ibm 360 model 67 supervisor locks protect individual common data structures accessed simultaneously cpu mainframes supported smp included univac 1108 released 1965 supported cpus 635 645 gecos multiprocessor 635 systems master slave asymmetric fashion multics multiprocessor 645 systems symmetric fashion starting version 1972 digital equipment corporation operating tops implemented smp feature earliest running smp decsystem 1077 dual ki10 processor kl10 aggregate cpus smp manner contrast decs multi processor vax vax 11 782 asymmetric vax multiprocessor systems smp commercial unix smp implementations included sequent systems balance 8000 released 1984 balance 21000 released 1986 models based 10 mhz national semiconductor ns32032 processors write cache connected common memory form shared memory commercial unix smp implementation numa based honeywell systems italy xps 100 designed dan gielan vast corporation 1985 design supported 14 processors electrical limitations largest marketed version dual processor operating derived ported vast corporation 3b20 unix sysvr3 code internally earlier commercial multiprocessing unix ports existed including port named munix created naval postgraduate school 1975 time sharing server systems smp applications multiple processes running parallel process running processes processors personal computers smp applications modified rarely runs process time smp applications modified multithreaded multitasked processing custom programmed software written modified multiple threads multiple processors multithreaded programs time sharing server systems support multithreading allowing multiple processors advantages disadvantages smp processors tightly coupled box bus switch components shared global memory disks devices os runs processors os designed advantage architecture basic advantages involves cost effective increase throughput solve tasks smp applies multiple processors parallel programming limits scalability smp cache coherence shared objects programming uniprocessor smp systems require programming methods achieve maximum performance programs running smp systems experience increase performance written uniprocessor systems hardware interrupts suspends program execution kernel handles execute idle processor applications games performance increase appearance program running smoothly applications building software distributed computing projects faster factor additional processors compilers single threaded building software project multiple compilation units compilation unit handled independently creates embarrassingly parallel situation entire multi compilation unit project allowing linear scaling compilation time distributed computing projects inherently parallel design systems programmers build support smp operating additional processors remain idle functions uniprocessor smp systems lead complexity instruction sets homogeneous processor typically requires extra registers special instructions simd mmx sse heterogeneous implement types hardware instructions performance program executes time smp considerably performance uni processor programs cpus simultaneously asymmetric multiprocessing amp processor program task time amp assigning specific tasks cpu based priority task completion amp created smp terms handling multiple cpus explains lack performance based smp environment processes jobs administrators experience loss hardware efficiency software programs developed schedule jobs functions processor utilization reaches maximum potential software packages achieve maximum potential scheduling cpu separately integrate multiple smp machines clusters access ram serialized cache coherency issues performance lag additional processors alternatives smp single shared bus represents earliest styles multiprocessor machine architectures typically building computers processors larger systems architectures numa uniform memory access dedicates memory banks processors numa architecture processors access local memory remote memory slowly dramatically improve memory throughput data localized specific processes processors downside numa cost moving data processor workload balancing expensive benefits numa limited workloads notably servers data tasks users finally clustered multiprocessing beowulf memory processors clustering techniques extensively build supercomputers variable smp variable symmetric multiprocessing vsmp specific mobile technology initiated nvidia technology includes extra core quad core device called companion core built executing tasks frequency mobile active standby mode video playback music playback project kal el tegra patented nvidia soc chip implement vsmp technology technology reduces mobile power consumption active standby maximizes quad core performance active usage intensive mobile applications technology addresses increase battery life performance active standby usage reducing power consumption mobile processors current smp architectures vsmp companion core os transparent meaning operating running applications totally unaware extra core advantage advantages vsmp architecture includes cache coherency os efficiency power optimization advantages architecture explained advantages lead vsmp architecture considerably benefit architectures asynchronous clocking technologies 
50408	computerscience	engineering branch engineering integrates fields science electronics engineering required develop hardware software engineers training electronic engineering electrical engineering software design hardware–software integration software engineering electronic engineering engineers involved hardware software aspects computing design individual microcontrollers microprocessors personal computers supercomputers circuit design field engineering focuses systems integrate larger picture usual tasks involving engineers include writing software firmware embedded microcontrollers designing vlsi chips designing analog sensors designing mixed signal circuit boards designing operating systems engineers suited robotics relies heavily digital systems control monitor electrical systems motors communications sensors institutions engineering students allowed choose depth study junior senior breadth knowledge design application computers scope undergraduate degree institutions require engineering students complete engineering declaring engineering primary focus history engineering 1939 john vincent atanasoff clifford berry developing electronic digital physics mathematics electrical engineering john vincent atanasoff physics mathematics teacher iowa university clifford berry graduate electrical engineering physics created atanasoff berry abc complete original abc dismantled discarded 1940s tribute late inventors replica abc 1997 team researchers engineers 350 000 build history engineering education engineering degree program united established 1971 western reserve university cleveland ohio 250 abet accredited engineering programs europe accreditation engineering schools variety agencies eqanie network increasing job requirements engineers concurrently design hardware software firmware manage forms systems industry tertiary institutions offer bachelor degree called engineering engineering electronic engineering programs include analog digital circuit design curriculum engineering disciplines sound knowledge mathematics science engineers education engineering referred science engineering universities entry level engineering jobs require bachelor degree engineering science engineering typically learn array mathematics calculus algebra trigonometry science classes degree electronic engineering accepted similarity fields hardware engineers commonly software systems strong background programming bls engineering major electrical engineering science courses curriculum firms specialized jobs require master degree engineers rapid advances technology continue learning careers helpful learning skills improving existing relative cost fixing bug increases software development cycle cost savings attributed developing testing quality code process release applications practice major specialties engineering hardware software hardware engineering bls job outlook employment hardware engineers expected growth 2014 2024 hardware engineering estimated total 77 700 jobs slower average compared occupations 2012 2022 bls estimate bls 2010 2020 estimate hardware equal electronic engineering ece divided subcategories embedded design software engineering bureau labor statistics bls applications software engineers systems software engineers projected faster average growing occupations expected growth 2014 software engineering estimated seventeen percent total 114 000 jobs 2012 2022 bls estimate 22 software developers 30 2010 2020 bls estimate addition growing concerns cyber security add software engineering average rate increase fields outsourced foreign countries job growth fast decade jobs software engineers united software engineers countries india addition bls job outlook programmers 2014–24 −8 decline program computers embedded systems application developers specialty specialty field engineering coding cryptography protection engineers coding cryptography protection develop methods protecting digital images music fragmentation copyright infringement forms tampering examples include wireless communications multi antenna systems optical transmission digital watermarking communications wireless networks focusing communications wireless networks advancements telecommunications systems networks wireless networks modulation error control coding theory speed network design interference suppression modulation design analysis fault tolerant storage transmission schemes specialty compilers operating systems specialty focuses compilers operating systems design development engineers field develop operating architecture program analysis techniques techniques assure quality examples field includes post link time code transformation algorithm development operating development computational science engineering computational science engineering discipline sloan career cornerstone center individuals computational methods applied formulate solve complex mathematical engineering physical social sciences examples include aircraft design plasma processing nanometer features semiconductor wafers vlsi circuit design radar detection systems ion transport biological channels networks mobile computing distributed systems specialty engineers build integrated environments computing communications access examples include shared channel wireless networks adaptive resource management systems improving quality service mobile atm environments examples include wireless network systems fast ethernet cluster wired systems systems architecture parallel processing dependability engineers systems projects reliable secure performance systems projects designing processors multi threading parallel processing included field examples field include development theories algorithms tools add performance systems architecture includes cpu design cache hierarchy layout memory organization load balancing vision robotics specialty engineers focus developing visual sensing technology sense environment representation environment manipulation environment gathered dimensional implemented perform variety tasks include improved human modeling image communication human–computer interfaces devices special purpose cameras versatile vision sensors embedded systems individuals design technology enhancing speed reliability performance systems embedded systems devices radio space shuttle sloan cornerstone career center ongoing developments embedded systems include automated vehicles equipment conduct search rescue automated transportation systems human–robot coordination repair equipment space embedded engineering specializations include chip design architecture edge computing internet integrated circuits vlsi design testing cad specialty engineering requires adequate knowledge electronics electrical systems engineers enhancing speed reliability energy efficiency generation scale integrated vlsi circuits microsystems specialty reducing power consumption vlsi algorithms architecture signal image speech processing engineers develop improvements human–computer interaction including speech recognition synthesis medical scientific imaging communications systems includes vision development recognition human facial features references 17 https ece iastate department history history computing18 https collegegrad careers hardware engineers19 https sokanu careers software engineer 
51702	computerscience	superscalar processor cpu implements form parallelism called instruction level parallelism single processor contrast scalar processor execute single instruction clock cycle superscalar processor execute instruction clock cycle simultaneously dispatching multiple instructions execution units processor throughput instructions executed unit time clock rate execution unit separate processor core processor multi core processor execution resource single cpu arithmetic logic unit flynn taxonomy single core superscalar processor classified sisd processor single instruction stream single data stream superscalar processors support short vector operations classified simd single instruction stream multiple data streams multi core superscalar processor classified mimd processor multiple instruction streams multiple data streams superscalar cpu typically pipelined superscalar pipelining execution considered performance enhancement techniques executes multiple instructions parallel multiple execution units executes multiple instructions execution unit parallel dividing execution unit phases superscalar technique traditionally identifying characteristics cpu history seymour cray cdc 6600 1966 mentioned superscalar design 1967 ibm 360 model 91 superscalar mainframe motorola mc88100 1988 intel i960ca 1989 amd 29000 series 29050 1990 microprocessors commercial single chip superscalar microprocessors risc microprocessors superscalar execution risc architectures frees transistors die include multiple execution units risc designs faster cisc designs 1980s 1990s cpus power applications embedded systems battery powered devices essentially purpose cpus developed 1998 superscalar p5 pentium superscalar x86 processor nx586 p6 pentium pro amd k5 designs decode x86 instructions asynchronously dynamic microcode micro op sequences prior actual execution superscalar microarchitecture dynamic scheduling buffered partial instructions enabled parallelism extracted compared rigid methods simpler p5 pentium simplified speculative execution allowed clock frequencies compared designs advanced cyrix 6x86 scalar superscalar simplest processors scalar processors instruction executed scalar processor typically manipulates data items time contrast instruction executed vector processor operates simultaneously data items analogy difference scalar vector arithmetic superscalar processor mixture instruction processes data item multiple execution units cpu multiple instructions processing separate data items concurrently superscalar cpu design emphasizes improving instruction dispatcher accuracy allowing multiple execution units times increasingly units increased superscalar cpus alus single fpu design powerpc 970 includes alus fpus simd units dispatcher ineffective keeping units fed instructions performance simpler cheaper design superscalar processor sustains execution rate excess instruction machine cycle processing multiple instructions concurrently architecture superscalar pipelined multiprocessor multi core architectures achieve methods superscalar cpu dispatcher reads instructions memory decides parallel dispatching execution units contained single cpu superscalar processor envisioned multiple parallel pipelines processing instructions simultaneously single instruction thread limitations performance improvement superscalar techniques limited key existing binary executable programs varying degrees intrinsic parallelism instructions dependent executed simultaneously inter dependent instruction impacts resources instructions codice parallel depend calculations instructions codice runnable parallel depending instructions complete units simultaneously issued instructions increases cost dependency checking increases extremely rapidly exacerbated check dependencies time cpu clock rate cost includes additional logic gates required implement checks time delays gates gate cost gates delay cost instructions processor instruction set simultaneously dispatched instructions instruction stream inter instruction dependencies superscalar cpu check possibility assurance failure detect dependency produce incorrect matter advanced semiconductor process fast switching speed practical limit instructions simultaneously dispatched process advances execution units alus burden checking instruction dependencies grows rapidly complexity register renaming circuitry mitigate dependencies collectively power consumption complexity gate delay costs limit achievable superscalar speedup roughly simultaneously dispatched instructions infinitely fast dependency checking logic conventional superscalar cpu instruction stream dependencies limit speedup degree intrinsic parallelism code stream forms limitation alternatives collectively limits drive investigation alternative architectural instruction word vliw explicitly parallel instruction computing epic simultaneous multithreading smt multi core computing vliw burdensome task dependency checking hardware logic time removed delegated compiler explicitly parallel instruction computing epic vliw extra cache prefetching instructions simultaneous multithreading abbreviated smt technique improving efficiency superscalar processors smt permits multiple independent threads execution utilize resources modern processor architectures superscalar processors multi core processors execution units entire processors single processor composed finer grained execution units alu integer multiplier integer shifter fpu multiple versions execution unit enable execution instructions parallel differs multi core processor concurrently processes instructions multiple threads thread processing unit called core differs pipelined processor multiple instructions concurrently stages execution assembly fashion alternative techniques mutually exclusive—they frequently combined single processor multicore cpu core independent processor multiple parallel pipelines pipeline superscalar processors include vector capability 
51706	computerscience	instruction word vliw refers instruction set architectures designed exploit instruction level parallelism ilp conventional central processing units cpu processor programs instructions execute sequence vliw processor programs explicitly instructions execute parallel design intended performance complexity inherent designs overview traditional improve performance processors include dividing instructions substeps instructions executed partly time termed pipelining dispatching individual instructions executed independently processor superscalar architectures executing instructions program execution methods complicate hardware larger circuits cost energy processor decisions internally methods contrast vliw method depends programs providing decisions instructions execute simultaneously resolve conflicts practical matter compiler software create final programs complex hardware simpler parallelism motivation processor executes instruction pipelined scalar architecture processor resources inefficiently yielding potential poor performance performance improved executing substeps sequential instructions simultaneously termed pipelining executing multiple instructions simultaneously superscalar architectures improvement achieved executing instructions occur program termed execution methods raise hardware complexity executing operations parallel processor verify instructions interdependencies instruction result instruction input execute time instruction execute modern processors increased hardware resources schedule instructions determine interdependencies contrast vliw executes operations parallel based fixed schedule determined programs compiled determining execution operations including operations execute simultaneously handled compiler processor scheduling hardware methods require vliw cpus offer computing hardware complexity compiler complexity superscalar cpus design superscalar designs execution units invisible instruction set instruction encodes operation superscalar designs instruction 32 bits contrast vliw instruction encodes multiple operations operation execution unit device vliw device execution units vliw instruction device operation fields field operation execution unit accommodate operation fields vliw instructions 64 bits wide wider architectures instruction super harvard architecture single chip sharc cycle floating multiply floating add autoincrement loads fits 48 bit instruction codice 1since earliest days architecture cpus arithmetic logic units alus parallel superscalar cpus hardware decide operations parallel runtime vliw cpus software compiler decide operations parallel advance complexity instruction scheduling moved compiler complexity hardware reduced occurs result parallelisable instruction input branch modern cpus guess branch calculation complete load instructions branch architectures start compute speculatively cpu guesses wrong instructions context flushed correct loaded takes time led increasingly complex instruction dispatch logic attempts guess correctly simplicity original reduced instruction set computing risc designs eroded vliw lacks logic lacks energy design defects negative aspects vliw compiler heuristics profile guess direction branch preschedule operations speculatively branch favoring path expects branch branch takes unexpected compiler generated compensating code discard speculative preserve program semantics vector processor single instruction multiple data simd cores combined vliw architecture fujitsu microprocessor increasing throughput speed history concept vliw architecture term vliw invented josh fisher yale university 1980s original development trace scheduling compiling method vliw developed graduate student york university vliw notion prescheduling execution units instruction level parallelism software established practice developing horizontal microcode fisher innovations involved developing compiler target horizontal microcode programs written ordinary programming language realized performance target wide issue machine parallelism basic block developed region scheduling methods identify parallelism basic blocks trace scheduling method involves scheduling path basic blocks inserting compensating code deal speculative motions scheduling trace schedule complete fisher innovation notion target cpu architecture designed reasonable target compiler compiler architecture vliw processor codesigned inspired partly difficulty fisher observed yale compiling architectures floating systems fps164 complex instruction set computing cisc architecture separated instruction initiation instructions saved result complex scheduling algorithms fisher developed set principles characterizing proper vliw design draining pipelines wide multi port register files memory architectures principles easier compilers emit fast code vliw compiler thesis john ellis supervised fisher compiler named bulldog yale mascot john ruttenberg developed algorithms scheduling fisher left yale 1984 startup company multiflow cofounders john donnell john ruttenberg multiflow produced trace series vliw minisupercomputers shipping machines 1987 multiflow vliw issue 28 operations parallel instruction trace implemented mix medium scale integration msi scale integration lsi scale integration vlsi packaged cabinets technology obsoleted grew cost effective integrate components processor excluding memory chip multiflow catch wave chip architectures multiple issue cpus major semiconductor companies recognized multiflow technology context compiler architecture subsequently licensed firms implementations cydrome company producing vliw numeric processors emitter coupled logic ecl integrated circuits timeframe late 1980s company multiflow failed licensees multiflow technology hewlett packard josh fisher joined multiflow demise bob rau founder cydrome joined hp cydrome failed lead architecture hewlett packard 1990s systems time 1989–1990 intel implemented vliw intel i860 64 bit microprocessor processor implement vliw chip processor operate simple risc mode vliw mode 1990s intel introduced i860 risc microprocessor simple chip modes operation scalar mode vliw mode vliw mode processor fetched instructions assumed integer instruction floating i860 vliw mode extensively embedded digital signal processor dsp applications application execution datasets simple predictable allowing designers exploit parallel execution advantages enabled vliw vliw mode i860 maintain floating performance range 20 40 double precision mflops time processor running 25 50mhz 1990s hewlett packard researched ongoing risc processor family cpu greatly simplified removing complex dispatch logic cpu placing compiler compilers day complex 1980s complexity compiler considered cost vliw cpus multiple risc execution units operate independently contemporary vliws main execution units compilers generate initial instruction sequences vliw cpu roughly manner traditional cpus generating sequence risc instructions compiler analyzes code dependence relationships resource requirements schedules instructions constraints process independent instructions scheduled parallel vliws typically represent instructions scheduled parallel instruction word incorporates individual instructions opcode termed executes cycle examples contemporary vliw cpus include trimedia media processors nxp philips semiconductors super harvard architecture single chip sharc dsp analog devices c6000 digital signal processor dsp family texas instruments st200 family stmicroelectronics based lx architecture designed josh fisher hp lab paolo faraboschi mppa manycore family kalray contemporary vliw cpus successful embedded media processors consumer electronic devices vliw features configurable processor cores chip soc designs tensilica xtensa lx2 processor incorporates technology named flexible instruction extensions flix multi operation instructions xtensa compiler freely intermix 32 64 bit flix instructions xtensa processor operation risc instructions 16 24 bits wide packing multiple operations wide 32 64 bit instruction word allowing multi operation instructions intermix shorter risc instructions flix soc designers realize vliw performance advantages eliminating code bloat vliw architectures infineon carmel dsp vliw processor core intended soc code density improvement method called configurable instruction word cliw embedded processing markets intel itanium ia 64 explicitly parallel instruction computing epic elbrus 2000 examples vliw cpu architectures epic architecture distinguished pure vliw architecture epic advocates instruction predication rotating register files instruction word encode parallel instruction vliws gained consumer penetration graphics processing unit gpu market nvidia amd moved risc architectures improve performance graphics workloads ati technologies ati advanced micro devices amd terascale microarchitecture graphics processing units gpus vliw microarchitecture december 2015 shipment pcs based vliw cpu elbrus 4s russia compatibility silicon technology allowed wider implementations execution units built compiled programs earlier generation wider implementations encoding binary instructions depended execution units machine transmeta addressed issue including binary binary software compiler layer termed code morphing crusoe implementation x86 architecture mechanism advertised basically recompile optimize translate x86 opcodes runtime cpu internal machine code transmeta chip internally vliw processor effectively decoupled x86 cisc instruction set executes intel itanium architecture solved compatibility mechanism multiple opcode instructions bit field allocated denote dependency prior vliw instruction program instruction stream bits set compile time relieving hardware calculating dependency dependency encoded instruction stream wider implementations issue multiple dependent vliw instructions parallel cycle narrower implementations issue vliw instructions cycle perceived deficiency vliw designs code bloat occurs execution unit execute operation nop instructions occurs dependencies code instruction pipelines allowed drain operations proceed transistors chip grown perceived disadvantages vliw diminished vliw architectures growing popularity embedded market customize processor application chip embedded vliw products vendors including fujitsu bsp15 16 pixelworks st231 stmicroelectronics trimedia nxp semiconductors ceva dsp ceva jazz dsp improv systems silicon hive texas instruments tms320 dsp evolved c6xxx family vliw contrast earlier c5xxx family 
52469	computerscience	stephen wolfram born 29 august 1959 british american scientist physicist businessman science mathematics theoretical physics 2012 named inaugural fellow american mathematical society businessman founder ceo software company wolfram chief designer mathematica wolfram alpha answer engine knowledge based programming expanding refining programming language mathematica called wolfram language life family stephen wolfram born london 1959 hugo sybil wolfram german jewish refugees united kingdom wolfram father hugo wolfram 1925–2015 textile manufacturer born bochum germany served managing director lurex company makers fabric lurex author novels emigrated england 1933 war broke left school 15 subsequently hard job regarded enemy alien adult correspondence courses philosophy psychology wolfram mother sybil wolfram 1931–1993 born sybille misch originally berlin germany fellow tutor philosophy lady margaret hall university oxford 1964 1993 published books philosophical logic introduction 1989 translator claude lévi strauss pensée sauvage savage mind disavowed translation daughter criminologist psychoanalyst kate friedlander 1902–1949 expert subject juvenile delinquency reichstag 1933 emigrated berlin germany england parents jewish psychoanalyst paula heimann 1899–1982 stephen wolfram married mathematician children stephen son christopher pursuing degree mathematics science inventor patented method computing device optically recognizing mathematical expressions christopher led workshops highly regarded conferences events including south southwest interactive university oxford summer school mit independent activities period 2016 awarded technical advisor raw science film festival movie arrival personal achievements serves programmer wolfram education wolfram educated eton college left prematurely 1976 entered john college oxford age 17 lectures awful left 1978 graduating attend california institute technology received phd particle physics 19 november 1979 age 20 wolfram thesis committee composed richard feynman peter goldreich frank sciulli steven frautschi chaired richard field career child wolfram difficulties learning arithmetic age 12 wrote dictionary physics 13 14 written books particle physics particle physics wolfram age 15 applied quantum field theory particle physics published scientific papers topics included matter creation annihilation fundamental interactions elementary particles currents hadronic leptonic physics parton model published professional peer reviewed scientific journals including nuclear physics australian journal physics nuovo cimento physical review independently wolfram published cited paper heavy quark production age 18 papers continued publish particle physics twenties wolfram geoffrey fox theory strong interaction experimental particle physics 1981 letter feynman gerald freund reference wolfram macarthur grant appears feynman collected letters perfectly reasonable deviations beaten track phd wolfram joined faculty caltech recipient macarthur fellowships 1981 age 21 career complex systems cellular automata 1983 wolfram left school natural sciences institute advanced study princeton conducted cellular automata simulations produced series papers systematically investigating class elementary cellular automata conceiving wolfram code naming dimensional cellular automata classification scheme complexity behaviour conjectured rule 110 cellular automaton turing complete proved correct 1985 letter feynman wolfram appears feynman letters response wolfram writing thinking creating institute study complex systems feynman tells wolfram understand ordinary people advises contact technical people mid 1980s wolfram simulations physical processes turbulent fluid flow cellular automata connection machine feynman helped initiate field complex systems 1984 participant founding workshops santa fe institute nobel laureates murray gell mann manfred eigen philip warren anderson future laureate frank wilczek 1986 founded center complex systems ccsr university illinois urbana–champaign 1987 journal complex systems journal field complex systems published papers decades complex systems developed broad base readers contributors academia industry government public 50 countries symbolic manipulation program wolfram led development algebra smp symbolic manipulation program caltech physics department 1979–1981 dispute administration intellectual property rights smp—patents copyright faculty involvement commercial ventures—eventually caused resign caltech smp developed marketed commercially inference corp los angeles 1983–1988 institute advanced study 1983 wolfram joined institute advanced study princeton jersey based albert einstein time particle physics pursuing viewed creative areas — cellular automata wolfram methodically analyzed sets rules developing classification rated complexity cellular automata — intention clarifying view complexity real wolfram mind studying cellular automata runs unlock deep truths universe wolfram cellular automata cited 000 papers mathematica 1986 wolfram left institute advanced study university illinois urbana–champaign founded center complex systems started develop algebra mathematica released 23 june 1988 left academia 1987 founded wolfram continues develop market program sybil wolfram life laws outlaws son program mathematica analyze data wolfram brother conrad wolfram serves ceo wolfram europe science 1992 2002 controversial book science empirical study simple computational systems additionally argues fundamental reasons types systems traditional mathematics model understand complexity nature wolfram conclusion universe digital nature runs fundamental laws simple programs predicts realization scientific communities major revolutionary influence physics chemistry biology majority scientific reason book title release book 2002 wolfram split time developing mathematica encouraging people involved subject matter science talks holding conferences starting summer school devoted topic 2017 15th anniversary hardcover publication electronic version science launched includes complete access resolution images wolfram axiom wolfram axiom result exploration science shortest single axiom equivalent axioms boolean algebra propositional calculus result search axiom nand operations variables equivalent boolean algebra vertical bar represents nand logical operation sheffer stroke 25 candidates precisely set sheffer identities equal 15 elements excluding mirror images noncommutative models size equal variables applications science 2003 wolfram hosted wolfram summer school brown university — program designed provide educational career opportunities learning conducting projects frontiers science technology innovation 2007 summer school hosted university vermont burlington exception 2009 held istituto di scienza tecnologie dell informazione cnr pisa italy 2012 program held curry college milton massachusetts 2013 wolfram summer school held annually bentley university waltham massachusetts science idea exploring abstract universe computational universe simple programs science wolfram simple programs computational universe capture essence complexity beauty systems nature led creation wolfram tones simple programs wolfram computational universe applying music theory wolfram language algorithms render music program defines virtual special story — wolfram tones captures musical composition science wolfram simplest universal turing machine — colors extensive search simpler turing machines simpler candidate universality turing machine 14 2007 anniversary publication science wolfram announced 25 000 prize person determine turing machine universal provide proof months contest announcement undergraduate student birmingham turing machine universal 40 paper prove findings wolfram alpha computational knowledge engine march 2009 wolfram announced wolfram alpha answer engine wolfram alpha launched 2009 paid version extra features launched february 2012 engine based natural language processing library algorithms answers queries approach science application programming interface applications extend enhance alpha wolfram believes wolfram alpha common raise level scientific average person wolfram alpha answer engines bing apple siri answering factual questions touchpress 2010 wolfram founded touchpress theodore gray max whitby john cromie company specialised creating depth premium apps games covering wide range educational subjects designed children parents students educators launch touchpress published 100 apps wolfram language march 2014 annual south southwest sxsw event wolfram officially announced wolfram language multi paradigm programming language multi paradigm computational communication language documentation language pre released october 2013 coincide bundling mathematica wolfram language raspberry pi wolfram language existed 25 primary programming language mathematica officially named 2014 wolfram son christopher wolfram appeared program sxsw live coding demonstration wolfram language blogged wolfram language wolfram december 2015 wolfram published book elementary introduction wolfram language introduce people knowledge programming wolfram language computation release edition book coincided ceo hire competition 2017 collision tech conference popular culture 2017 wolfram live stream internal wolfram language development meetings meetings viewers encouraged submit questions comments development programming language viewers functions developed functions solve complex issues faced stephen wolfram development team live streamed meetings viewed twitch youtube live facebook live archived live streams accessed personal personal activities significance data products wolfram creates transfers life extensive log personal analytics including emails received keystrokes meetings events attended phone calls physical movement dating 1980s stated analytics dimension experiencing lives stephen wolfram christopher wolfram involved helping create alien language film arrival wolfram language 2018 wolfram producing podcast podcast stephen discusses topics ranging history science future civilization ethics 
52742	computerscience	desktop personal designed regular single location desk table size power requirements common configuration houses power supply motherboard printed circuit board microprocessor central processing unit cpu memory bus electronic components disk storage hard disk drives optical disc drives models floppy disk drive keyboard mouse input monitor speakers printer output oriented horizontally vertically desk history origins prior widespread microprocessors fit desk considered remarkably type computers commonly minicomputers desk sized computers space minicomputers fit refrigerator sized racks 1970s programmable computers appeared fit desk 1970 introduction datapoint 2200 smart terminal complete keyboard monitor designed connect mainframe owners built computational abilities stand desktop hp 9800 series started programmable calculators 1971 programmable basic 1972 version minicomputer design based rom memory led alphanumeric displays displayed graphics plotter wang 2200 1973 size cathode ray tube crt cassette tape storage ibm 5100 1975 crt display programmed basic apl expensive specialized computers sold business scientific growth development apple trs 80 commodore pet generation personal computers launched 1977 aimed consumer market – businessmen hobbyists byte magazine referred 1977 trinity personal computing 1980s 1990s desktop computers predominant type popular ibm pc clones apple macintosh commodore amiga success mid 1980s declining 1990s personal computers original ibm personal enclosed desktop horizontally oriented display screen saving space user actual desk sturdy support weight crt displays widespread time 1990s desktop gradually common accessible tower tower trademark ncr created agency reiser williams deyong located floor desk desk tower expansion freed desk space monitors larger desktop compact form factors remain popular corporate computing environments kiosks interchangeably positioned horizontally desktop upright mini tower influential games doom quake 1990s pushed gamers enthusiasts frequently upgrade cpus graphics cards 3dfx ati nvidia desktops tower applications slowed late 2000s growing popularity intel integrated graphics forced game developers scale creative technology sound blaster series facto standard sound cards desktop pcs 1990s 2000s reduced niche product oem desktop pcs sound boards integrated motherboard decline desktops common configuration pcs mid 2000s growth shifted desktops laptops notably desktops produced united laptops produced contract manufacturers based asia foxconn shift led closure desktop assembly plants united 2010 trend time increasing proportion inexpensive base configuration desktops sold hurting pc manufacturers dell build customization desktops relied upselling features buyers battery powered portable computers worldwide market share 1986 laptops increasingly popular business personal 109 notebook pcs shipped worldwide 2007 growth 33 compared 2006 2008 estimated 145 notebooks sold grow 2009 177 quarter 2008 time worldwide notebook pc shipments exceeded desktops 38 units 38 units sales breakdown apple macintosh sales desktop macs staying constant surpassed mac notebooks sales rate grown considerably macs sold laptops 2009 ratio projected rise 2010 change sales form factors desktop imac moving affordable imac g3 upscale imac g4 subsequent releases considered premium contrast msrp macbook laptop lines dropped successive generations macbook air macbook pro constitute lowest price entry mac exception inexpensive mac mini albeit monitor keyboard surprisingly macbooks selling form factors macintosh platform decades development people desktop computers meet buying pace advancing technology notably successive release versions windows windows 95 98 xp vista drivers replacement pcs 1990s slowed 2000s poor reception windows vista windows xp analysts suggested windows hurt sales pcs 2012 businesses decided stick windows upgrade suggested acknowledged implicitly ringing desktop pc death knell windows offers upgrade desktop pc functionality windows windows innovations mobile post pc trend decline sales desktop laptop pcs decline attributed increased power applications alternative computing devices smartphones tablet computers people exclusively smartphones tablets basic tasks social media casual gaming devices instances replaced pc household performed tasks families retain powerful pc pc form factors desktops remain staple enterprise market lost popularity buyers pc makers electronics retailers responded investing engineering marketing resources laptops initially netbooks late 2000s performance ultrabooks 2011 onwards manufacturers potential revive pc market desktops april 2017 statcounter declared milestone technology history era android operating popular windows operating desktops dominant mainframe computers windows popular desktops laptops smartphones tablets android ios apple products windows mobile types desktop integrates internal components display occupying footprint cables desktops incorporate tower form factor popular 1980s personal computers intended professional kaypro osborne trs 80 model compaq portable manufacturers computers commodore atari included motherboard enclosure keyboard systems connected television set display apple manufactured popular examples computers original macintosh mid 1980s imac late 1990s 2000s desktops imac g4 laptop components reduce size mid 2000s designs flat panel displays models incorporated touchscreen displays allowing mobile tablet laptops desktop computers characterized inability customize upgrade internal components systems provide convenient access upgradable components faults aspects hardware require entire replaced health remaining components exceptions monitor portion hp z1 workstation angled flat vehicle hood access internal hardware sized desktops common budget friendly compared market separate display component processing component components connected cables wireless connection execute command computers easy customize upgrade user requirements theater desktops connected entertainment systems typically amusement purpose definition display video graphics surround sound tuner systems compliment typical pc features compact desktops comparable sized desktops reduced physical proportions compact desktops difficult customize upgrade comparison laptops desktops advantage laptops spare extensions tend standardized prices availability size mounting motherboard standardized atx microatx btx form factors desktops standardized expansion slots conventional pci pci express laptops tend mini pci slot pc card slot expresscard slot procedures assembly disassembly desktops tend simple standardized laptops adding replacing optical drive hard disk adding extra memory module simple desktop configuration tower customized upgraded extent laptops customization tower popular gamers enthusiasts advantage desktop environmental concerns power consumption critical laptop computers desktop exclusively powered wall socket desktop computers provide space cooling fans vents dissipate heat allowing enthusiasts overclock risk microprocessor manufacturers intel amd developed special cpus mobile computers laptops consume power heat performance levels laptop computers conversely offer portability desktop systems including form factor desktops compact size clamshell design laptop design built keyboard device trackpad user draw power supplied rechargeable battery laptops commonly integrate wireless technologies wifi bluetooth 3g broader range options connecting internet trend changing desktop computers integrated technologies desktop handle electrical disturbances short interruptions blackouts spikes achieving battery time 20–30 minutes desktop pc requires expensive laptop charged battery continue hours power outage short power interruptions blackouts desktop advantage comparable laptop computational capacity overclocking feasible desktop laptop hardware add ons discrete graphics processors install desktop 
53064	computerscience	cryptography kerckhoffs principle called kerckhoffs desideratum assumption axiom doctrine law stated netherlands born cryptographer auguste kerckhoffs 19th century cryptosystem secure key public knowledge kerckhoffs principle reformulated independently formulated american mathematician claude shannon enemy design systems assumption enemy gain familiarity form called shannon maxim kerckhoffs principle shannon maxim embraced cryptographers contrast security obscurity origins 1883 auguste kerckhoffswrote journal articles cryptographie militaire stated design principles military ciphers translated french relevant ability computers perform complex encryption axiom kerckhoffs principle critically explanation principle kerckhoffs viewed cryptography rival alternative steganographic encoding common nineteenth century hiding meaning military messages encoding schemes rely humanly held secrets dictionaries disclose secret meaning stenographic dictionaries revealed permanently compromise encoding risk exposure increases users holding secret increases nineteenth century cryptography contrast simple tables transposition alphanumeric characters row column intersections modified short numeric committed human memory considered indecipherable tables convey meaning secret messages compromised matching set table key message falls enemy hands relevant time frame kerckhoffs viewed tactical messages hours relevance systems compromised components alphanumeric character tables easily changed advantage secret secure cryptography supposed replace difficult keeping messages secure manageable keeping secure requires term secrecy complex design cryptographic achieve goal replaces hard secure enemy key manage keeping secret internal details discovered obvious bribe blackmail threaten staff customers explaining war capture equipment people spies gather method involves software memory dumps software control debugger understand method hardware steal hardware build programs gadgets hardware dismantled chip details examined microscope maintaining security generalization kerckhoffs principle simpler secrets ensure security easier maintain security bruce schneier ties belief security systems designed fail gracefully security depends crucially keeping secret kerckhoffs principle secret costly change inadvertently disclosed cryptographic algorithm implemented hardware software distributed users security depends keeping secret disclosure leads major logistic difficulties developing testing distributing implementations algorithm – brittle hand keeping algorithm secret algorithm secret disclosure simply requires simpler costly process generating distributing applications kerckhoffs principle majority civilian cryptography publicly algorithms contrast ciphers protect classified government military secret type encryption assumed government military ciphers secret maintain security intended cryptographically sound public algorithms decision secret keeping layered security posture security obscurity moderately common companies standards bodies css encryption dvds workings secret argue security obscurity product safer vulnerable attack counter argument keeping innards secret improve security short term systems published analyzed trusted steven bellovin randy bush commented 
53887	computerscience	linguistics corpus plural corpora corpus structured set texts nowadays electronically stored processed corpus linguistics statistical analysis hypothesis testing checking occurrences validating linguistic rules specific language territory overview corpus texts single language monolingual corpus data multiple languages multilingual corpus multilingual corpora specially formatted comparison called aligned parallel corpora main types parallel corpora texts languages translation corpus texts language translations texts language comparable corpus texts cover content translations exploit parallel alignment identifying equivalent segments phrases sentences prerequisite analysis machine translation algorithms translating languages trained parallel fragments comprising language corpus language corpus element element translation language corpus corpora linguistic subjected process annotation annotating corpus speech tagging pos tagging word speech verb noun adjective corpus form tags indicating lemma base form word language corpus language researchers interlinear glossing annotation bilingual corpora structured levels analysis applied corpora parsed corpora called treebanks parsed corpora difficulty ensuring entire corpus completely consistently annotated corpora levels linguistic structured analysis including annotations morphology semantics pragmatics corpora main knowledge base corpus linguistics analysis processing types corpora subject computational linguistics speech recognition machine translation create hidden markov models speech tagging purposes corpora frequency lists derived language teaching corpora considered type foreign language writing aid contextualised grammatical knowledge acquired native language users exposure authentic texts corpora learners grasp manner sentence formation target language enabling effective writing archaeological corpora corpora study historical documents attempts decipher ancient scripts biblical scholarship archaeological corpora short duration provide snapshot time shortest corpora time 15–30 amarna letters texts 1350 bc corpus ancient city kültepe texts turkey series corpora determined dates 
55359	computerscience	single instruction multiple data simd class parallel computers flynn taxonomy describes computers multiple processing elements perform operation multiple data simultaneously machines exploit data level parallelism concurrency simultaneous parallel computations single process instruction moment simd applicable common tasks adjusting contrast digital image adjusting volume digital audio modern cpu designs include simd instructions improve performance multimedia confused simt utilizes threads history simd instructions illiac iv completed 1966 simd basis vector supercomputers 1970s cdc star 100 texas instruments asc operate vector data single instruction vector processing popularized cray 1970s 1980s vector processing architectures considered separate simd computers based vector computers processed vectors word time pipelined processors based single instruction modern simd computers process elements vector simultaneously era modern simd computers characterized massively parallel processing style supercomputers thinking machines computers limited functionality processors parallel 65 536 single bit processors thinking machines execute instruction time allowing instance logically combine 65 536 pairs bits time hypercube connected network processor dedicated ram operands supercomputing moved simd approach inexpensive scalar mimd approaches based commodity processors intel i860 xp powerful simd waned current era simd processors grew desktop market supercomputer market desktop processors powerful support real time gaming audio video processing 1990s demand grew type computing power microprocessor vendors simd meet demand hewlett packard introduced max instructions risc desktops 1994 accelerate mpeg decoding sun microsystems introduced simd integer instructions vis instruction set extensions 1995 ultrasparc microprocessor mips suit mdmx deployed desktop simd intel mmx extensions x86 architecture 1996 sparked introduction powerful altivec motorola powerpc ibm power systems intel responded 1999 introducing sse extensions simd instruction sets architectures developments oriented support real time graphics oriented processing dimensions vector lengths sixteen depending data type architecture simd architectures distinguished architectures considered short vector architectures earlier simd vector supercomputers vector lengths 64 64 000 modern supercomputer cluster mimd computers implements short vector simd instructions modern desktop multiprocessor mimd processor execute short vector simd instructions advantages application advantage simd subtracted data common operation multimedia applications changing brightness image pixel image consists values brightness red green blue portions color change brightness values read memory subtracted values written memory simd processor improvements process data understood blocks values loaded series instructions retrieve pixel retrieve pixel simd processor single instruction effectively retrieve pixels varies design design variety reasons time retrieving pixel individually traditional cpu design advantage instruction operates loaded data single operation simd loading data codice operation applied data happen values time parallelism separate parallelism superscalar processor values processed parallel superscalar processor superscalar processor perform multiple simd operations parallel chronology examples simd supercomputers including vector processors hardware scale 64 128 bits simd popular purpose cpus 1990s continued 1997 motion video instructions mvi alpha simd instructions degree cpus including ibm altivec spe powerpc hp risc multimedia acceleration extensions max intel mmx iwmmxt sse sse2 sse3 ssse3 sse4 amd 3dnow arc arc video subsystem sparc vis vis2 sun majc arm neon technology mips mdmx madmax mips 3d ibm sony toshiba developed cell processor spu instruction set heavily simd based nxp founded philips developed simd processors named xetal xetal 320 16bit processor elements designed vision tasks modern graphics processing units gpus wide simd implementations capable branches loads stores 128 256 bits time intel avx simd instructions process 256 bits data intel larrabee prototype microarchitecture includes 512 bit simd registers cores vpu wide vector processing units 512 bit simd capability continued intel integrated core architecture intel mic skylake software simd instructions process 3d graphics modern graphics cards embedded simd task cpu systems include permute functions pack elements vectors data processing compression cryptography trend purpose computing gpus gpgpu lead wider simd future adoption simd systems personal software slow simd instruction sets tended slow performance existing floating registers systems mmx 3dnow offered support data types wide audience expensive context switching instructions switch fpu mmx registers compilers lacked support requiring programmers resort assembly language coding simd x86 slow start introduction 3dnow amd sse intel confused matters settled amd sse compilers result simd enabled software intel amd provide optimized math libraries simd instructions source alternatives libsimd simdx86 sleef started apple success entered simd market rest altivec offered rich programmed increasingly sophisticated compilers motorola ibm gnu assembly language programming rarely additionally systems benefit simd supplied apple itunes quicktime 2006 apple computers moved intel x86 processors apple apis development tools xcode modified support sse2 sse3 altivec apple dominant purchaser powerpc chips ibm freescale semiconductor abandoned platform development altivec continued power architecture designs freescale ibm wwdc 15 apple announced simd vectors support version programming language swift simd register swar range techniques tricks performing simd purpose registers hardware provide direct support simd instructions exploit parallelism algorithms hardware support simd simd ryujit libraries implement simd nuget package bcl simdsimd 2013 john mccutchan announced created performant interface simd instruction sets dart programming language bringing benefits simd programs time interface consists types instances types immutable optimized code mapped simd registers operations expressed dart typically compiled single instruction overhead intrinsics benchmarks 4×4 matrix multiplication 3d vertex transformation mandelbrot set visualization 400 speedup compared scalar code written dart mccutchan dart ecmascript intel announced idf 2013 implementing mccutchan specification v8 spidermonkey emscripten mozilla’s javascript compiler extensions enable compilation programs simd intrinsics gcc style vector code simd api javascript equivalent speedups compared scalar code commercial applications proven difficult sustainable commercial applications simd processors measure success gapp developed lockheed martin commercial sector spin teranex gapp incarnations powerful tool real time video processing applications conversion video standards frame rates ntsc pal ntsc hdtv formats deinterlacing image noise reduction adaptive video compression image enhancement ubiquitous application simd video games modern video game console 1998 incorporated simd processor architecture playstation unusual vector float units function autonomous dsp executing instruction stream coprocessor driven ordinary cpu instructions 3d graphics applications tend lend simd processing rely heavily operations dimensional vectors direct3d chooses runtime processor specific implementations math operations including simd capable instructions processors vector processing cell processor developed ibm cooperation toshiba sony simd processors numa architecture independent local store controlled purpose cpu geared huge datasets required 3d video processing applications differs traditional isas simd ground separate scalar registers ziilabs produced simd type processor mobile devices media players mobile phones larger scale commercial simd processors clearspeed technology stream processors clearspeed csx600 2004 96 cores double precision floating units csx700 2008 192 stream processors headed architect dally storm processor 2007 80 simd cores controlled mips cpu 
58019	computerscience	harvard architecture architecture physically separate storage signal pathways instructions data term originated harvard mark relay based stored instructions punched tape 24 bits wide data electro mechanical counters machines data storage contained central processing unit access instruction storage data programs loaded operator processor initialize processors implement separate signal pathways performance reasons implement modified harvard architecture support tasks loading program disk storage data executing memory details harvard architecture memories share characteristics word timing implementation technology memory address structure systems instructions pre programmed tasks stored read memory data memory requires read write memory systems instruction memory data memory instruction addresses wider data addresses contrast von neumann architectures pure von neumann architecture instructions data stored memory instructions fetched data path fetch data cpu simultaneously read instruction read write data memory harvard architecture cpu read instruction perform data memory access time cache harvard architecture faster circuit complexity instruction fetches data access contend single memory pathway harvard architecture machine distinct code data address spaces instruction address data address instruction address identify bit data address bit byte bit contrast modified harvard architecture modified harvard architecture machine harvard architecture machine relaxes strict separation instruction data letting cpu concurrently access memory buses common modification includes separate instruction data caches common address space cpu executes cache acts pure harvard machine accessing memory acts von neumann machine code moved data powerful technique modification widespread modern processors arm architecture power architecture x86 processors loosely called harvard architecture overlooking modified modification pathway instruction memory rom flash memory cpu instruction memory treated read data technique microcontrollers including atmel avr constant data strings function tables accessed copied data memory preserving scarce power hungry data memory read write variables special machine language instructions read data instruction memory instruction memory accessed peripheral interface distinct instructions embed constant data individual constants mechanisms substitute speed speed cpu grown times comparison access speed main memory care reduce times main memory accessed maintain performance instance instruction cpu requires access memory gains increased cpu speed—a referred memory bound extremely fast memory practical amounts memory cost power signal routing reasons solution provide fast memory cpu cache holds accessed data data cpu cache performance cpu data main memory internal external design modern performance cpu chip designs incorporate aspects harvard von neumann architecture split cache version modified harvard architecture common cpu cache memory divided instruction cache data cache harvard architecture cpu accesses cache cache data retrieved main memory formally divided separate instruction data sections separate memory controllers concurrent access ram rom flash memory von neumann architecture visible contexts data code memory controller hardware implementation gains efficiencies harvard architecture cache accesses main memory accesses addition cpus write buffers cpus proceed writes cached regions von neumann nature memory visible instructions written data cpu software ensure caches data instruction write buffer synchronized execute written instructions modern harvard architecture principal advantage pure harvard architecture—simultaneous access memory system—has reduced modified harvard processors modern cpu cache systems pure harvard architecture machines applications trade offs cost power savings omitting caches outweigh programming penalties featuring distinct code data address spaces common employ special instructions access program memory data read tables reprogramming processors modified harvard architecture processors 
58205	computerscience	computing vector processor array processor central processing unit cpu implements instruction set instructions operate dimensional arrays data called vectors compared scalar processors instructions operate single data items vector processors greatly improve performance workloads notably numerical simulation tasks vector machines appeared 1970s dominated supercomputer design 1970s 1990s notably cray platforms rapid fall price performance ratio conventional microprocessor designs led vector supercomputer demise 1990s cpu designs include multiple instructions vector processing multiple vectorised data sets typically mimd multiple instruction multiple data realized vliw instruction word fujitsu vliw vector processor combines technologies history vector processing development 1960s westinghouse solomon project solomon goal dramatically increase math performance simple math processors control single master cpu cpu fed single common instruction arithmetic logic units alus cycle data allowed solomon machine apply single algorithm data set fed form array 1962 westinghouse cancelled project effort restarted university illinois illiac iv version design originally called gflops machine 256 alus finally delivered 1972 64 alus reach 100 150 mflops basic concept sound data intensive applications computational fluid dynamics illiac fastest machine illiac approach separate alus data element common designs referred separate category massively parallel computing operations functions developed kartsev 1967 supercomputers successful implementation vector processing appears control data corporation star 100 texas instruments advanced scientific asc basic asc pipe alu pipeline architecture supported scalar vector computations peak performance reaching 20 mflops achieved processing vectors expanded alu configurations supported pipes pipes 2x 4x performance gain memory bandwidth sufficient support expanded modes star slower cdc supercomputers cdc 7600 data tasks expensive machine considerable time decoding vector instructions ready process required specific data sets sped vector technique exploited 1976 famous cray leaving data memory star asc cray design vector registers held 64 bit vector instructions applied registers faster talking main memory cray design pipeline parallelism implement vector instructions multiple alus addition design completely separate pipelines instructions addition subtraction implemented hardware multiplication allowed batch vector instructions pipelined technique called vector chaining cray performance 80 mflops chains running peak 240 mflops – faster machine era examples control data corporation enter market eta machine sold opportunity leave supercomputing field mid 1980s japanese companies fujitsu hitachi nippon electric corporation nec introduced register based vector machines cray typically faster oregon based floating systems fps built add array processors minicomputers building minisupercomputers cray continued performance leader continually beating competition series machines led cray cray cray supercomputer market focused massively parallel processing implementations vector processors recognising benefits vector processing ibm developed virtual vector architecture supercomputers coupling scalar processors vector processor vector supercomputers resembling cray popular days nec continued type day sx series computers sx aurora tsubasa processor 24 48 gigabytes memory hbm module card physically resembles graphics coprocessor serving processor main pc compatible plugged serving support functions gpgpu modern graphics processing units gpus include array shader pipelines driven compute kernels considered vector processors strategy hiding memory latencies description terms cpus manipulate pieces data time instance cpus instruction essentially add result data be—in theory least—encoded instruction efficient implementation rarely simple data rarely raw form passing address memory location holds data decoding address data memory takes time cpu traditionally sit idle waiting requested data cpu speeds increased memory latency historically impediment performance memory wall reduce time consumed steps modern cpus technique instruction pipelining instructions pass units unit reads address decodes fetches values addresses math pipelining trick start decoding instruction left cpu fashion assembly address decoder constantly instruction takes time complete time latency cpu process entire batch operations faster efficiently time vector processors concept step pipelining instructions pipeline data processor fed instructions add add constantly decode instructions fetch data complete processor reads single instruction memory simply implied definition instruction instruction operate item data address increment larger savings decoding time illustrate difference simple task adding normal programming language write loop picked pairs cpu vector processor task considerably savings inherent approach address translations depending architecture represent savings saving fetching decoding instruction time code lead efficient memory vector processor multiple functional units adding parallel checking dependencies required vector instruction specifies multiple independent operations simplifies control logic required improve performance avoiding stalls mentioned earlier cray implementations step allowing types operations carried time code adds multiplies cray fetched multiplied single operation pseudocode cray math operations completed faster limiting factor time required fetch data memory attacked sort solution including types instructions adds complexity core cpu complexity typically instructions slower—i adding row complex instructions add complexity decoders slow decoding common instructions normal adding vector processors amounts data reason sorts cpus supercomputers supercomputers weather prediction centers physics labs huge amounts data crunched performance speed vector speed ratio vectorization ratio time vector unit add array 64 times faster equivalent scalar counterpart total operations program 100 scalar vectorization 90 vector unit achievable speed 1so performance vector unit speedup suggests ratio crucial performance ratio depends efficiency compilation adjacency elements memory programming heterogeneous computing architectures machines designed include traditional processors vector processors fujitsu ap1000 ap3000 programming heterogeneous machines difficult developing programs characteristics processors increases programmer burden increases code complexity decreases portability code requiring hardware specific code interleaved application code balancing application workload processors problematic typically performance characteristics conceptual models deal coordination language program building blocks programming libraries functions block native implementation processor type users simply program abstractions intelligent compiler chooses implementation based context 
58900	computerscience	unmanned aerial vehicle uav commonly drone aircraft human pilot aboard uavs component unmanned aircraft uas include uav ground based controller communications flight uavs operate degrees autonomy remote control human operator autonomously onboard computers compared manned aircraft uavs originally missions dull dirty dangerous humans originated military applications rapidly expanding commercial scientific recreational agricultural applications policing peacekeeping surveillance product deliveries aerial photography agriculture smuggling drone racing civilian uavs vastly outnumber military uavs estimates sold 2015 terminology multiple terms unmanned aerial vehicles refer concept term drone public coined reference remotely flown target aircraft practice firing battleship guns term 1920s fairey queen 1930 havilland queen bee target aircraft service named airspeed queen wasp miles queen martinet ultimate replacement gaf jindivik term unmanned aircraft uas united department defense dod united federal aviation administration 2005 unmanned aircraft roadmap 2005–2030 international civil aviation organization icao british civil aviation authority term european union single european sky ses air traffic management atm sesar joint undertaking roadmap 2020 term emphasizes elements aircraft includes elements ground control stations data links support equipment term unmanned aircraft vehicle uavs remotely piloted aerial vehicle rpav remotely piloted aircraft rpas terms uav defined powered aerial vehicle carry human operator aerodynamic forces provide vehicle lift fly autonomously piloted remotely expendable recoverable carry lethal nonlethal payload missiles considered uavs vehicle weapon reused unmanned remotely guided relation uavs remote controlled model aircraft unclear uavs include model aircraft jurisdictions base definition size weight federal aviation administration defines unmanned flying craft uav size recreational drone opposed uav model aircraft person video autonomous capabilities history file tadiran mastiff iii hatzerim jpg thumb israeli tadiran mastiff flew 1975 modern battlefield uav data link endurance loitering live video streaming earliest recorded unmanned aerial vehicle warfighting occurred july 1849 serving balloon carrier precursor aircraft carrier offensive air power naval aviation austrian forces besieging venice attempted launch 200 incendiary balloons besieged city balloons launched land launched austrian ship bomb fell city wind changing launch balloons missed target drifted austrian lines launching ship vulcano uav innovations started 1900s originally focused providing practice targets training military personnel uav development continued war dayton wright airplane company invented pilotless aerial torpedo explode preset time earliest attempt powered uav aerial target 1916 nikola tesla fleet unmanned aerial combat vehicles 1915 advances war including hewitt sperry automatic airplane developments inspired development kettering bug charles kettering dayton ohio initially meant unmanned plane carry explosive payload predetermined target scaled remote piloted vehicle developed film star model airplane enthusiast reginald denny 1935 emerged war train antiaircraft gunners fly attack missions nazi germany produced uav aircraft war jet engines entered service war vehicles australian gaf jindivik teledyne ryan firebee 1951 companies beechcraft offered model 1001 navy 1955 remote controlled airplanes vietnam war 1959 air force concerned losing pilots hostile territory planning unmanned aircraft planning intensified soviet union shot 1960 days highly classified uav program started code red wagon august 1964 clash tonkin gulf naval units north vietnamese navy initiated america highly classified uavs ryan model 147 ryan aqm 91 firefly lockheed 21 combat missions vietnam war chinese government photographs uavs wide photos official response comment war attrition 1967–1970 tactical uavs installed reconnaissance cameras tested israeli intelligence bringing photos suez canal time tactical uavs launched landed short runway heavier jet based uavs developed tested battle 1973 yom kippur war israel uavs decoys spur opposing forces wasting expensive anti aircraft missiles 1973 yom kippur war key people team developed uav joined startup company aimed develop uavs commercial product eventually purchased tadiran leading development israeli uva 1973 military officially confirmed uavs southeast asia vietnam 000 airmen killed 000 missing captured usaf 100th strategic reconnaissance wing flew 435 uav missions war cost 554 uavs lost usaf george brown commander air force systems command 1972 reason uavs needlessly expend cockpit john meyer commander chief strategic air command stated drone risk flying  loss rate risk them  save lives 1973 yom kippur war soviet supplied surface air missile batteries egypt syria caused heavy damage israeli fighter jets result israel developed uav real time surveillance images radar decoys uavs helped israel completely neutralize syrian air defenses start 1982 lebanon war pilots time uavs proof concept super agility post stall controlled flight combat flight simulations involved tailless stealth technology based dimensional thrust vectoring flight control jet steering uavs israel 1987 maturing miniaturization applicable technologies 1980s 1990s uavs grew echelons military 1990s dod contract aai corporation israeli company malat navy bought aai pioneer uav aai malat developed jointly uavs service 1991 gulf war uavs demonstrated possibility cheaper capable fighting machines deployable risk aircrews initial generations involved surveillance aircraft carried armaments atomics predator launched agm 114 hellfire air ground missiles capecon european union project develop uavs running 2002 31 december 2005 2012 usaf employed 494 uavs usaf aircraft central intelligence agency operated uavs 2013 50 countries uavs china iran israel pakistan designed built varieties classification uavs typically fall functional categories multi role airframe platforms prevalent military uav tier military planners designate individual aircraft elements usage plan vehicles categorised terms range altitude advanced relevant industry events parcaberporth unmanned systems forum categories include classifications aircraft weight simpler uav components manned unmanned aircraft type recognizably physical components main exceptions cockpit environmental control life support systems uavs carry payloads camera weigh considerably adult human result considerably carry heavy payloads weaponized military uavs lighter manned counterparts comparable armaments civilian uavs life critical systems built lighter sturdy materials shapes robustly tested electronic control systems uavs quadcopter design popular layout rarely manned aircraft miniaturization powerful propulsion technologies feasible manned aircraft electric motors batteries control systems uavs manned craft remote human control camera video link replace cockpit windows radio transmitted digital commands replace physical cockpit controls autopilot software manned unmanned aircraft varying feature sets body primary difference planes absence cockpit windows tailless quadcopters common form factor rotary wing uavs tailed mono copters common manned platforms power supply platform uavs lithium polymer batteries po larger vehicles rely conventional airplane engines scale size aircraft defining limiting characteristic energy supply uav energy density po gasoline record travel uav built balsa wood mylar skin north atlantic ocean held gasoline model airplane uav manard hill 2003 creations flew 882 miles atlantic ocean gallon fuel holds record electric power required flight electric motors quieter properly designed thrust weight ratio electric gasoline motor driving propeller hover climb vertically botmite airplane electric uav climb vertically battery elimination circuitry bec centralize power distribution harbors microcontroller unit mcu costlier switching becs diminish heating platform computing uav computing capability advances computing technology analog controls evolving microcontrollers chip soc single board computers sbc hardware uavs called flight controller fc flight controller board fcb autopilot sensors position movement sensors aircraft exteroceptive sensors deal external distance measurements exproprioceptive correlate internal external cooperative sensors detect targets autonomously separation assurance collision avoidance degrees freedom dof refers quality sensors board dof implies axis gyroscopes accelerometers typical inertial measurement unit imu dof refers imu compass dof adds barometer 11 dof adds gps receiver actuators uav actuators include digital electronic speed controllers control rpm motors linked motors engines propellers servomotors planes helicopters weapons payload actuators leds speakers software uav software called flight stack autopilot uavs real time systems require rapid response changing sensor data examples include raspberry pis beagleboards shielded navio pxfmini designed scratch nuttx preemptive rt linux xenomai orocos robot operating dds ros civil source stacks include loop principles uavs employ loop closed loop hybrid control architectures flight controls uavs programmed perform aggressive manœuvres landing perching inclined surfaces climb communication spots uavs control flight varying flight modelisation vtol designs uavs implement perching flat vertical surface communications uavs radio remote control exchange video data uavs narrowband uplink downlinks directional narrowband radio links carried command control telemetry data status aircraft systems remote operator range flights military uavs satellite receivers satellite navigation systems video transmission required uavs implement separate analog video radio link modern uav applications video transmission required separate links telemetry video traffic broadband link carry types data single radio link broadband links leverage quality service techniques optimize traffic latency broadband links carry tcp ip traffic routed internet radio signal operator issued autonomy icao classifies unmanned aircraft remotely piloted aircraft autonomous actual uavs offer intermediate degrees autonomy vehicle remotely piloted contexts autonomous return base operation basic autonomy proprioceptive sensors advanced autonomy calls situational awareness knowledge environment surrounding aircraft exterioceptive sensors sensor fusion integrates multiple sensors basic principles achieve autonomous control employs multiple control loop layers hierarchical control systems 2016 layer loops flight control tick fast 32 000 times level loops cycle principle decompose aircraft behavior manageable chunks transitions hierarchical control types range simple scripts finite machines behavior trees hierarchical task planners common control mechanism layers pid controller achieve hover quadcopter data imu calculate precise inputs electronic speed controllers motors examples mid layer algorithms evolved uav hierarchical task planners methods tree searches genetic algorithms autonomy features uav manufacturers build specific autonomous operations functions autonomy specific tasks airborne refueling ground based battery switching level tasks computing sensing actuating capabilities approach quantifying autonomous capabilities based ooda terminology suggested 2002 air force laboratory table reactive autonomy reactive autonomy collective flight real time collision avoidance wall corridor centring relies telecommunication situational awareness range sensors optic flow lidars light radars radars sonars range sensors analyze electromagnetic radiation reflected environment coming sensor cameras visual flow simple receivers lidars radars sonars sound mechanical waves emit receive waves measuring trip transit time uav cameras require emitting power reducing total consumption radars sonars military applications reactive autonomy forms reached consumer markets decade simultaneous localization mapping slam combines odometry external data represent position uav dimensions altitude outdoor navigation require vertical fields view rely gps coordinates simple mapping slam fields photogrammetry lidar altitude indoor 3d environments swarming robot swarming refers networks agents dynamically reconfigure elements leave enter network provide flexibility multi agent cooperation swarming path data fusion bio inspired flight swarms steering behaviors flocking future military potential military sector american predators reapers counterterrorism operations war zones enemy lacks sufficient firepower shoot designed withstand antiaircraft defenses air air combat september 2013 chief air combat command stated current uavs useless contested environment manned aircraft protect 2012 congressional service crs report speculated future uavs perform tasks intelligence surveillance reconnaissance strikes crs report listed air air combat difficult future task future undertakings 168 department defense unmanned systems integrated roadmap fy2013 2038 foresees uavs combat issues include extended capabilities human uav interaction managing increased flux increased autonomy developing uav specific munitions 169 darpa project systems systems atomics augur future warfare scenarios disclosing avenger swarms equipped energy liquid laser defense hellads cognitive radio cognitive radio technology uav applications learning capabilities uavs exploit distributed neural networks market military global military uav market dominated companies based united israel sale held 60 military market share 2017 military uav manufactures american including atomics lockheed martin northrop grumman boeing chinese company casc israel companies focus surveillance uav quantity drones israel exported 60 2014 uav market united export 23 2014 importers military uav united kingdom 33 india 13 united operated 000 military uavs 2014 atomics dominant manufacturer global hawk predator mariner systems product civilian civilian drone market dominated chinese companies chinese drone manufacturer dji 75 civilian market share 2017 11 forecast global sales 2020 french company parrot 110m company 3drobotics 21 6m 2014 march 2018 uavs 878 000 hobbyist 122 000 commercial registered faa 2018 npd consumers increasingly purchasing drones advanced features 33 percent growth 500 1000 market segments civilian uav market compared military companies emerging developed developing nations time stage startups received support funding investors united government agencies india universities offer training programs degrees private entities provide online person training programs recreational commercial uav consumer drones military organizations worldwide cost effective nature consumer product 2018 israeli military started dji mavic matrice series uav light reconnaissance mission civilian drones easier reliability dji drones commercial unmanned aerial army employed lighted drones nighttime displays artistic advertising purposes transport aia reports cargo passengers drones certified introduced 20 sensor carrying drones expected 2018 short haul altitude freighters cities 2025 haul cargo flights mid 2030s passenger flights 2040 spending rise dollars development 2018 2028 30 2036 development considerations animal imitation – ethology flapping wing ornithopters imitating birds insects field microuavs inherent stealth recommends spy missions nano hummingbird commercially 1g microuavs inspired flies albeit power tether land vertical surfaces projects include unmanned beetles insects exploring miniature optic flow sensors called ocellis mimicking compound insect eyes formed multiple facets transmit data neuromorphic chips treat optic flow light intensity discrepancies endurance uav endurance constrained physiological capabilities human pilot size weight vibration power weight ratio wankel rotary engines uavs engine rotors seize engine susceptible shock cooling descent require enriched fuel mixture cooling power attributes reduce fuel usage increasing range payload proper drone cooling essential term drone endurance overheating subsequent engine failure common drone failure hydrogen fuel cells hydrogen power extend endurance uavs hours micro air vehicles endurance achieved flapping wing uavs planes multirotors standing reynolds solar electric uavs concept originally championed astroflight sunrise 1974 achieved flight times weeks solar powered atmospheric satellites atmosats designed operating altitudes exceeding 20 km 12 miles 60 000 feet perform duties economically versatility earth orbit satellites applications include weather monitoring disaster recovery earth imaging communications electric uavs powered microwave power transmission laser power beaming potential endurance solutions application endurance uav stare battlefield interval argus gorgon stare integrated sensor structure record events played track battlefield activities reliability reliability improvements target aspects uav systems resilience engineering fault tolerance techniques individual reliability covers robustness flight controllers ensure safety excessive redundancy minimize cost weight dynamic assessment flight envelope damage resilient uavs linear analysis hoc designed loops neural networks uav software liability bending design certifications manned avionics software swarm resilience involves maintaining operational capabilities reconfiguring tasks unit failures applications numerous civilian commercial military aerospace applications uavs include existing uavs uavs developed deployed countries wide proliferation comprehensive list uav systems exists export uavs technology capable carrying 500 kg payload 300 km restricted countries missile technology control regime safety security air traffic uavs threaten airspace security numerous including unintentional collisions interference aircraft deliberate attacks distracting pilots flight controllers incident drone airplane collision occurred mid october 2017 quebec city canada recorded instance drone collision hot air balloon occurred august 2018 driggs idaho united damage balloon injuries occupants balloon pilot reported incident ntsb stating hope incident helps create conversation respect nature airspace rules regulations ”malicious uavs loaded dangerous payloads crashed vulnerable targets payloads include explosives chemical radiologial biological hazards uavs lethal payloads hacked malicious purposes anti uav systems developed counter threat proving difficult dr rogers stated interview debate moment counter uavs hobbyists causing bit nuisance sinister manner terrorist actor ”by 2017 drones drop contraband prisons drones caused disruption gatwick airport december 2018 deployment british army counter unmanned air malicious uavs led development counter unmanned air uas technologies rafael drone dome raytheon coyote anti aircraft missile systems iron dome enhanced uas technologies security vulnerabilities uavs cyber security raised greatly predator uav video stream hijacking incident 2009 islamic militants cheap shelf equipment stream video feeds uav risk possibility hijacking jamming uav flight security researchers public vulnerabilities commercial uavs providing source code tools reproduce attacks workshop uavs privacy october 2016 researchers federal trade commission hack consumer quadcopters uav manufacturers uavs secure basic security measures encrypting wi signal adding password protection wildfires united flying close wildfire punishable maximum 25 000 fine 2014 2015 firefighting air support california hindered occasions including lake north response california legislators introduced firefighters disable uavs invaded restricted airspace faa required registration uavs uavs investigated detect fight wildfires observation launching pyrotechnic devices start backfires regulation ethical concerns uav accidents driven nations regulate uavs ireland irish aviation authority iaa requires uavs 1 kg registered uavs weighing 4 kg requiring license issued iaa netherlands dutch police testing trained bald eagles intercept offending uavs canada 2016 transport canada proposed implementation regulations require uavs 250 grams registered insured operators required minimum age pass exam license regulations expected introduced 2018 south africa april 2014 south african civil aviation authority announced clamp illegal flying uavs south african airspace hobby drones weight 7 kg altitudes 500m restricted visual sight height obstacle 300m uav allowed license required vehicles united arab emirates fly drone dubai citizens objection certificate dubai civil aviation authority dcaa certificate online italy enac ente nazionale aviazione civile italian civil aviation authority technical regulation certification supervision control field civil aviation issued 31 2016 detailed regulation uav determining types vehicles purposes control regulation deals usage uav commercial recreational version published december 22 2016 japan 2015 civil aviation bureau japan announced drone” refers airplane rotorcraft glider airship accommodate person board remotely automatically piloted fly airports fly 150 meter ground water surface fly urban suburb rural allowed drone operated manually visual sight vlos drone fly buildings facilities country including nuclear facilities drone follow japan radio united recreational 21 december 2015 hobby type uavs 250 grams 25 kilograms registered faa 19 february 2016 faa uav registration process includes requirements 19 2017 taylor huerta court appeals district columbia circuit held faa 2015 drone registration rules violation 2012 faa modernization reform court holding commercial drone operators required register recreational operators 25 2017 week taylor decision senator diane feinstein introduced 1272 drone federalism 2017 congress commercial 21 june 2016 federal aviation administration announced regulations commercial operation uas craft suas 55 55 pounds 250 25 kg including payload rules exclude hobbyists require presence operations licensed remote pilot command certification position citizen 16 age solely passing written submitting application holding sport pilot license current flight review rule specific exam charge online faasafety applicants comprehensive examination aeronautical testing center licensees required review time ratings heavier uas commercial operation restricted daylight sight 100 mph 400 feet class airspace fly people operated moving vehicle organizations waiver certificate authorization exceed rules cnn waiver uavs modified injury prevention fly people waivers night flying special lighting sight operations agriculture railroad track inspection previous announcement commercial required pilot license faa waiver hundreds granted government uavs law enforcement purposes regulated level oregon law enforcement allowed operate weaponized drones warrant reason current environment poses imminent danger drone acquire assist individuals warrant maximum period 30 days interaction acquired united kingdom december 2018 uavs fly operator eyesight built uavs people flown crowds built july 2018 illegal fly uav fly aircraft airports airfields 
59592	computerscience	khi major heavy industrial manufacturers japan mitsubishi heavy industries ihi prior war khi kobe kawasaki zaibatsu included kawasaki steel kawasaki kisen war khi dkb keiretsu products aerospace kawasaki active diverse range aerospace industry company contractor japanese ministry defense built aircraft transport aircraft intermediate jet trainer 3c antisubmarine warfare patrol airplane 2007 built maritime patrol aircraft 2010 built transport aircraft kawasaki builds helicopters including bk117 jointly developed manufactured mbb produces 47j ja helicopter commercial aviation business company involved joint international development production passenger aircraft involved joint development production boeing 767 boeing 777 boeing 787 boeing company 170 175 190 195 jets empresa brasileira aeronáutica involved joint international development production turbofan engines passenger aircraft v2500 rb211 trent pw4000 cf34 kawasaki japan aerospace exploration agency company responsible development production payload fairings payload attach fittings paf construction launch complex rocket continues provide services iia rocket kawasaki participated projects development reusable launch vehicles spacecraft handle future space transport space robotics projects japanese experiment module international space station hope experimental orbiting plane docking mechanism ets vii main productsrolling stock kawasaki japan’s largest manufacturer rolling stock operations industry 1906 manufactures express commuter trains subway cars freight trains locomotives monorails transit systems kawasaki involved development design speed trains japan’s shinkansen main productsshipbuilding shipbuilding historical industry kawasaki heavy industries created developed company 1878 founding kawasaki dockyard kawasaki shipbuilding corporation wholly owned subsidiary kawasaki heavy industries product range include performance lng lpg carriers container ships bulk carriers vlccs submarines company involved development offshore structures vessels kawasaki produces marine machinery equipment including main engines propulsion systems steering gears deck fishing machinery kawasaki shipyards kobe sakaide kagawa kagawa prefecture company builds ships joint ventures cosco china nantong cosco khi ship engineering nacks nantong china dalian cosco khi ship engineering dacks dalian china main productsenergy plants facilities kawasaki key offering performance gas turbines company involved development energy sources alternative fossil fuels wind power generation biomass power generation photovoltaic systems rechargeable batteries main productsindustrial equipment kawasaki develops builds vast array industrial plants equipment including cement chemical nonferrous metal plants prime movers compact precision machinery offers industrial plant engineering design sales kawasaki develops automation systems industrial robots processes assembly handling welding painting sealing automation systems distribution logistics automated product cargo handling systems plants airports main productsenvironment recycling kawasaki involved development equipment prevents pollution wide range industries leading products fuel gas desulfurization denitrification systems ash handling systems company supplies municipal refuse incineration plants gasification melting systems sewage treatment sludge incineration plants kawasaki developing systems enable wide range municipal industrial waste recovered recycled systems include refuse paper plastic fuel production facilities convert wastepaper plastics easy handle solid fuel equipment converts tires highway paving materials tiles machinery sorts glass bottles size color main productsinfrastructure kawasaki’s history building steel structures spans century bridge building businesses company offers storage solutions lng kawasaki’s portfolio includes retractable roofs floors giant structures sapporo dome retractable surface construction kawasaki produces products wheel loaders tunnel machines rollers snowplows purpose specific loaders tunnel boring machines excavate channel tunnel 14 14 diameter shield machines tokyo bay aqua construction examples main productstransportation kawasaki produces motorcycles jet skis atvs cars kawasaki’s motorcycle include ninja sport bikes cruisers dual purpose motocross motorcycles utility vehicles atvs purpose gasoline engines kawasaki jet ski genericized trademark type personal watercraft 
59703	computerscience	toshiba founded 1939 tokyo shibaura denki merger shibaura seisaku sho founded 1875 tokyo denki founded 1890 company officially changed toshiba corporation 1978 listed tokyo stock exchange constituent nikkei 225 topix indices osaka securities exchange nagoya stock exchange toshiba ninth largest semiconductor manufacturer 2017 toshiba filed unaudited quarterly uncertainties westinghouse filed chapter 11 bankruptcy protection toshiba stated substantial doubt company ability continue concern exists toshiba organized groupings digital products electronic devices appliances social infrastructure midea chinese company bought controlling 80 stake toshiba appliances 2016 history 1939 2000 toshiba founded 1939 merger shibaura seisakusho shibaura engineering tokyo denki tokyo electric shibaura seisakusho founded tanaka seisakusho tanaka hisashige july 1875 japan manufacturer telegraph equipment 1904 renamed shibaura seisakusho decades 20th century shibaura seisakusho major manufacturer heavy electrical machinery japan modernized meiji era industrial power tokyo denki founded hakunetsusha 1890 japan producer incandescent electric lamps diversified manufacture consumer products 1899 renamed tokyo denki merger shibaura tokyo denki created company called tokyo shibaura denki tokyo shibaura electric nicknamed toshiba 1978 company officially renamed toshiba corporation expanded rapidly driven combination organic growth acquisitions buying heavy engineering primary industry firms 1940s 1950s created include toshiba music industries toshiba emi 1960 toshiba international corporation 1970s toshiba electrical equipment 1974 toshiba chemical 1974 toshiba lighting technology 1989 toshiba america systems 1989 toshiba carrier corporation 1999 toshiba responsible japanese firsts including radar 1912 tac digital 1954 transistor television microwave oven 1959 color video phone 1971 japanese word processor 1978 mri 1982 laptop personal 1986 nand eeprom 1991 dvd 1995 libretto notebook personal 1996 hd dvd 2005 1977 toshiba acquired brazilian company semp sociedade eletromercantil paulista subsequently forming semp toshiba combination companies south american operations 1987 tocibai machine subsidiary toshiba accused illegally selling cnc milling machines produce quiet submarine propellers soviet union violation cocom agreement international embargo countries comecon countries toshiba kongsberg scandal involved subsidiary toshiba norwegian company kongsberg vaapenfabrikk incident strained relations united japan arrest prosecution senior executives imposition sanctions company countries senator john heinz pennsylvania toshiba kongsberg ransom security united 517 2000 2010 2001 toshiba signed contract orion electric largest oem consumer video electronic makers suppliers manufacture supply finished consumer video products toshiba meet increasing demand north american market contract 2008 oem production orion december 2004 toshiba quietly announced discontinue manufacturing traditional house cathode ray tube crt televisions 2006 toshiba terminated production house plasma tvs ensure future competitiveness flat panel digital television display market toshiba considerable investment display technology called sed war toshiba mitsui zaibatsu family controlled vertical monopoly toshiba mitsui keiretsu set companies interlocking business relationships shareholdings preferential arrangements mitsui bank keiretsu membership keiretsu traditionally meant loyalty corporate private keiretsu allied keiretsu loyalty extend beer employees consume toshiba asahi july 2005 bnfl confirmed planned sell westinghouse electric company estimated worth £1 bid attracted companies including toshiba electric mitsubishi heavy industries financial times reported 23 january 2006 toshiba bid valued company offer £2 sale westinghouse government united kingdom surprised industry experts questioned wisdom selling largest producers nuclear reactors shortly market nuclear power expected grow china united united kingdom expected invest heavily nuclear power acquisition westinghouse completed 17 october 2006 toshiba obtaining 77 percent share partners shaw 20 percent share ishikawajima harima heavy industries percent share late 2007 toshiba discover card sponsor screen times square york city displays iconic 60 countdown screen messages advertisements company capital late 2018 january 2009 toshiba acquired hdd business fujitsu 2010 2013 toshiba announced 16 2011 agreed acquire shares swiss based advanced power meter maker landis gyr 2010 company released series television models including wl768 yl863 vl963 designed collaboration danish designer timothy jacob jensen april 2012 toshiba agreed acquire ibm sale business 850 largest vendor sale systems july 2012 toshiba accused fixing prices lcd panels united level claims denied toshiba agreed settle manufacturers total 571 december 2013 toshiba completed acquisition vijai electricals limited plant hyderabad set base manufacturing transmission distribution products transformers switchgears social infrastructure india toshiba transmission distribution systems india private limited 2014 ocz storage solutions acquisition january 2014 toshiba completed acquisition ocz storage solutions ocz technology stock halted 27 november 2013 ocz stated expected file petition bankruptcy toshiba corporation expressed purchasing assets bankruptcy proceeding december 2013 ocz announced toshiba agreed purchase ocz assets 35 deal completed 21 january 2014 assets ocz technology independently operated subsidiary toshiba named ocz storage solutions ocz technology changed zco liquidating corporation 18 august 2014 zco liquidating corporation subsidiaries liquidated ocz storage solutions dissolved april 2016 absorbed toshiba america electronic components ocz brand toshiba march 2014 toshiba sued hynix accusing company stealing technology nand flash memory october 2014 toshiba united technologies agreed deal expand joint venture japan toshiba announced 2015 televisions factories 2015 onward toshiba televisions compal vestel manufacturers european market january 2016 toshiba security division unveiled bundle services schools surveillance equipment program intended 12 education includes education discounts alerts post warranty support features ip based security gear march 2016 toshiba preparing start construction cutting edge semiconductor plant japan mass produce chips based ultra dense flash variant toshiba expects spend 360 yen project 2019 april 2016 toshiba recalled 100 000 faulty laptop lithium ion batteries panasonic overheat posing burn hazards consumers consumer product safety commission toshiba announced recall january recalling batteries toshiba notebook computers sold june 2011 september 2016 toshiba announced wireless power receiver ic qi specification developed association wireless power consortium late december 2016 toshiba announced losses westinghouse subsidiary nuclear plant construction lead write dollars january 2017 person direct knowledge matter reported company plans chip division separate business 2015 accounting scandal toshiba announced 2015 investigating accounting scandal revise profits previous 21 july 2015 ceo hisao tanaka announced resignation accounting scandal called damaging event brand company 140 history profits inflated previous senior officials resigned including previous ceos chairman masashi muromachi appointed acting ceo scandal toshiba corp removed stock showcasing japan companies reshuffle picks companies operating income return equity market september 2015 toshiba shares fell lowest firm statement losses quarterly period 12 yen 102m £66m company poor performances televisions appliances personal businesses december 2015 muromachi episode wiped toshiba market forecast record 550 yen annual loss warned company overhaul businesses toshiba raising funds week company spokesperson announced toshiba 2016 seek 300 yen company indebtedness yen 2016 announced satoshi tsunakawa head toshiba medical equipment division named ceo appointment accounting scandal occurred 2017 nuclear construction liabilities february 2017 toshiba revealed unaudited details 390 yen corporate wide loss arising majority owned based westinghouse nuclear construction subsidiary written 712 yen 14 february 2017 toshiba delayed filing financial chairman shigenori shiga chairman westinghouse resigned construction delays regulatory cost overruns westinghouse built nuclear facilities vogtle units waynesboro georgia summer units south carolina cited main dramatic fall toshiba financial performance collapse share price fixed priced construction contracts negotiated westinghouse georgia power left toshiba uncharted liabilities result sale key toshiba operating subsidiaries secure company future westinghouse filed chapter 11 bankruptcy protection 29 march 2017 estimated cost dollar annual loss 11 april 2017 toshiba filed unaudited quarterly auditors pricewaterhousecoopers signed accounts uncertainties westinghouse toshiba stated substantial doubt company ability continue concern exists 25 april 2017 toshiba announced decision replace auditor earlier april company filed delayed business endorsement auditor pricewaterhousecoopers pwc 20 september 2017 toshiba board approved deal sell memory chip business led bain capital 18 financial companies apple dell technologies hoya corporation kingston technology seagate technology hynix 15 november 2017 hisense reached deal acquire 95 toshiba visual solutions 113 month company announced pull standing sponsorships japanese television programs sazae san nichiyō gekijo video screens topping times square york city company cited placements reduced exit consumer oriented lines business april 2018 toshiba announced completion sale westinghouse holding company brookfield business partners partners operations toshiba headquartered minato ku tokyo japan operations worldwide 210 000 employees 31 march 2012 toshiba organised main business groupings digital products electronic devices appliances social infrastructure 31 march 2012 toshiba total revenues 25 percent generated digital products 24 percent electronic devices percent appliances 36 percent social infrastructure percent activities 45 percent toshiba sales generated japan 55 percent rest toshiba facilities worldwide employ 180 people toshiba invested total 31 march 2012 equivalent percent sales toshiba registered total 483 patents united 2011 largest company ibm samsung electronics canon panasonic principal business groupings divisions subsidiaries toshiba organized principal business groupings divisions subsidiaries products services standards toshiba range products services including air conditioners consumer electronics including televisions dvd blu ray players control systems including air traffic control systems railway systems security systems traffic control systems electronic sale equipment elevators escalators appliances including refrigerators washing machines services lighting materials electronic components medical equipment including ct mri scanners ultrasound equipment ray equipment office equipment business telecommunication equipment personal computers semiconductors power systems including electricity turbines fuel cells nuclear reactors power transmission distribution systems tft displays 3d television october 2010 toshiba unveiled toshiba regza gl1 21 led backlit lcd glasses 3d prototype ceatec 2010 supports 3d capability glasses utilising integral imaging parallax images vertical lenticular sheet retail product released december 2010 4k ultra hd televisions 4k ultra hd 3840×2160p televisions times resolution 1080p hd televisions toshiba 4k hd led televisions powered cevo 4k quad dual core processor hd dvd 19 february 2008 toshiba announced discontinuing hd dvd storage format defeat format war blu ray hd dvd format failed major film studios blu ray format developed sony panasonic philips pioneer corporation conceding abandonment hd dvd toshiba president atsutoshi nishida concluded swift decision continued created consumers simply chance win toshiba continued supply retailers machines march 2008 continued provide technical support estimated people worldwide owned hd dvd players recorders toshiba announced stand blu ray players drives pcs laptops subsequently joined bda industry body oversees development blu ray format regza regza real expression guaranteed amazing architecture unified television brand owned manufactured toshiba 2010 regza disappeared north american market march 2015 tvs carrying toshiba designed produced compal electronics taiwanese company toshiba licensed regza android based smartphones developed fujitsu toshiba mobile communications chromebook october 2014 toshiba released chromebook version thinner profile improved display chromebook runs exclusively chrome os users google drive storage access collection apps extensions chrome store 3d flash memory march 2015 toshiba announced development 48 layer dimensional flash memory flash memory based vertical stacking technology toshiba calls bics bit cost scaling stores bits data transistor store 128gbits 16gb chip environmental record toshiba judged efforts lessen impact environment november 2012 greenpeace 18th edition guide greener electronics ranks electronics companies policies products energy sustainable operations toshiba received company wipro receiving scores received categories clean energy policy advocacy recycled plastics products policy practice sustainable sourcing fibres paper 2010 toshiba reported lcd tvs comply energy star standards 34 models exceed requirements 30 toshiba partnered china tsinghua university 2008 form facility focus energy conservation environment toshiba energy environment center located beijing students university electric power equipment technologies global warming process partnership toshiba hopes develop products protect environment save china contract tsinghua university toshiba originally october 2007 signed agreement joint energy environment projects conduct reduce car pollution create power systems don’t negatively affect environment 28 december 1970 toshiba construction unit fukushima daiichi nuclear power plant damaged fukushima nuclear accidents 14 march 2011 april 2011 ceo norio sasaki declared nuclear energy remain strong option fukushima nuclear accidents late 2013 toshiba japan entered solar power business germany installing pv systems apartment buildings 
59944	computerscience	program counter pc commonly called instruction pointer ip intel x86 itanium microprocessors called instruction address register iar instruction counter instruction sequencer processor register program sequence processors pc incremented fetching instruction holds memory address instruction executed processor incrementation precedes fetch pc current instruction executed processors fetch instructions sequentially memory control transfer instructions change sequence placing pc include branches called jumps subroutine calls returns transfer conditional truth assertion follow sequence conditions branch instruction fetched memory subroutine branches saves preceding contents pc return retrieves saved contents pc pc resuming sequential execution instruction subroutine hardware implementation typical central processing unit cpu pc digital counter origin term program counter registers cpu hardware instruction cycle fetch cpu pc address bus send memory memory responds sending contents memory location data bus stored program model executable instructions stored ordinary data memory handled identically fetch cpu proceeds execution action based memory contents cycle pc modified instruction executed typically incremented instruction starting memory address memory location current instruction processor registers pc bank binary latches representing bit pc bits pc relates processor architecture instance “32 bit” cpu 32 bits address 232 units memory pc binary counter increment pulse applied count input cpu compute load pc pulse load input identify current instruction pc combined registers identify segment approach permits pc bits assuming memory units current vicinity consequences machine architecture pc increments assumes execute linear sequence instructions pc central von neumann architecture programmers write sequential control flow algorithms sequential “von neumann bottleneck” led parallel computing including von neumann dataflow models pc sequential steps level programmer desired function level programmer combinatory logic led conventional pc based cpus faster including consequences level programming modern level programming languages follow sequential execution model common identifying programming errors “procedure execution” programmer finger identifies execution pc level language essentially machine language virtual machine complex built hardware emulated interpreted software programming models transcend sequential execution programming 
60136	computerscience	laws robotics shortened laws asimov laws set rules devised science fiction author isaac asimov rules introduced 1942 short story runaround included 1950 collection robot foreshadowed earlier stories laws quoted handbook robotics 56th edition 2058 form organizing principle unifying theme asimov robotic based fiction appearing robot series stories linked lucky starr series adult fiction laws incorporated positronic robots appearing fiction bypassed intended safety feature asimov robot focused stories involve robots behaving unusual counter intuitive unintended consequence robot applies laws situation authors asimov fictional universe references parodic science fiction genres original laws altered elaborated asimov authors asimov slight modifications books short stories develop robots interact humans fiction robots responsibility government planets human civilizations asimov fourth zeroth law precede laws zeroth pervaded science fiction referred books films media impacted ethics artificial intelligence history rest robots published 1964 asimov writing 1940 stock plots science fiction was  robots created destroyed creator knowledge dangers response retreat knowledge knowledge barrier dangers brings decided stories robots stupidly creator purpose demonstrate weary time crime punishment faust 1939 asimov attended meeting queens york science fiction society met earl otto binder published short story robot featuring sympathetic robot named adam link misunderstood motivated love honor series stories adam link vengeance 1940 featured adam thinking robot kill human asimov admired story days asimov writing story sympathetic noble robot 14th story thirteen days robbie john campbell editor astounding science fiction campbell rejected claiming bore strong resemblance lester del rey helen loy published december 1938—the story robot person falls love creator ideal wife frederik pohl published story title “strange playfellow” super science stories september 1940 asimov attributes laws john campbell conversation 23 december 1940 campbell claimed asimov laws mind simply stated explicitly asimov friend randall garrett attributed laws symbiotic partnership men – suggestion asimov enthusiastically autobiographical writings asimov included law inaction clause arthur hugh clough poem decalogue wikisource includes satirical lines shalt kill needst strive officiously alive asimov pins creation laws appearance literature happened period wrote robot stories explicit mention laws robbie reason assumed robots inherent safeguards liar robot story mention law laws finally appeared runaround stories compiled anthology robot reason robbie updated acknowledge laws material asimov reason consistent laws idea robot protecting human lives humans exist odds elijah baley reasoning 1950s asimov wrote series science fiction novels expressly intended adult audiences originally publisher expected novels adapted running television series lone ranger radio fearing stories adapted uniformly awful programming flooding television channels asimov decided publish lucky starr books pseudonym paul french plans television series fell asimov decided abandon pretence brought laws lucky starr moons jupiter noting dead giveaway paul french identity casual reader short story evidence asimov recurring character dr susan calvin expound moral basis laws calvin human typically expected refrain harming human times extreme duress war save equivalent robot law calvin society expects individuals obey instructions recognized authorities doctors teachers equals law robotics finally humans typically expected avoid harming law robot plot evidence revolves question telling human robot constructed human – calvin reasons individual obeys laws robot simply character calvin robots human replies worlds robots essentially decent asimov wrote praised creating laws obvious start aware subliminally laws happened sentences managed job laws apply matter tool human analogues laws implicit design tools robotic asimov believed ideally humans follow laws alterations asimov asimov stories laws wide variety circumstances leading proposals rejection modifications science fiction scholar james gunn writes 1982 asimov robot stories respond analysis basis ambiguity laws asimov played variations theme original set laws inspirations stories asimov introduced modified versions time time law modified lost robot ns nestor robots created law reads modification motivated practical difficulty robots human exposed doses radiation positronic brains highly sensitive gamma rays robots rendered inoperable doses safe humans robots destroyed attempting rescue humans actual danger forget leave irradiated exposure time limit removing law inaction clause solves creates possibility robot initiate action harm human dropping heavy weight failing catch knowing capable preventing harm decide gaia planet collective intelligence foundation series adopts law law zeroth law philosophy zeroth law asimov zeroth law —so named continue pattern numbered laws supersede numbered laws—stating robot harm humanity robotic character daneel olivaw zeroth law robots empire character susan calvin articulates concept short story evitable conflict final scenes robots empire giskard reventlov robot zeroth law giskard telepathic robot herbie short story liar apply zeroth law understanding subtle concept harm robots grasp herbie giskard grasps philosophical concept zeroth law allowing harm individual human service abstract concept humanity zeroth law programmed giskard brain rule attempts comprehend pure metacognition fails – ultimately destroys positronic brain choice ultimate humanity – successor daneel olivaw telepathic abilities thousands daneel adapts obey zeroth law daneel formulates novels foundation earth prelude foundation zeroth law reads condition stating zeroth law broken original laws asimov recognized difficulty law pose practice asimov foundation earth passage translator incorporated concept zeroth law asimov novels asimov law explicit climax caves steel elijah baley bitter comment thinking law forbids robot harming human determines robot clever comprehend actions humankind term jacques brécard 1956 french translation entitled les cavernes acier baley emerge removal laws times writing career asimov portrayed robots disregard laws short short story entitled law considered insignificant tall tale apocryphal hand short story cal collection gold told person robot narrator features robot disregards laws important—he writer humorous partly autobiographical unusually experimental style cal regarded gold strongest stories short story entitled sally cars fitted positronic brains harm kill humans disregard law positronic brain concept story refer robot stories set continuity title story robot dreams collection portrays lvx elvex robot enters unconsciousness dreams unusual fractal construction positronic brain dream laws absent law reads robot protect existence asimov varying positions laws optional writings simply carefully engineered safeguards stories asimov stated inalienable mathematical foundation underlying positronic brain basic theory laws fictional scientists asimov universe unable design workable brain unit historically consistent occasions roboticists modify laws occur stories chronology time existing lost robot susan calvin considers modifying laws terrible idea centuries dr gerrigel caves steel believes impossible character dr gerrigel term asenion robots programmed laws robots asimov stories asenion robots incapable knowingly violating laws principle robot science fiction real asenion asenion misspelling asimov editor magazine planet stories asimov obscure variation insert caves steel referred azimuth asymptote thiotimoline stars vladimir nabokov appeared lolita anagrammatically disguised vivian darkbloom characters stories laws exist robot mind written versions quoted humans abstract mathematical concepts robot entire developing consciousness based concept fuzzy unclear earlier stories depicting rudimentary robots programmed comprehend basic physical tasks laws overarching safeguard era caves steel featuring robots human human intelligence laws underlying basic ethical worldview determines actions robots authors roger macbride allen trilogy 1990s roger macbride allen wrote trilogy set asimov fictional universe title prefix isaac asimov asimov approved allen outline death books caliban inferno utopia introduce set laws called laws asimov originals differences law modified remove inaction clause modification lost robot law modified require cooperation obedience law modified superseded law robot destroy finally allen adds fourth law instructs robot likes conflict laws philosophy law robots partners slaves humanity fredda leving designed law robots book introduction allen devised laws discussion asimov encyclopedia science fiction permission asimov allen rethought laws developed set jack williamson folded hands jack williamson novelette folded hands 1947 rewritten humanoids deals robot servants prime directive serve obey guard harm asimov robotic laws meant protect humans harm robots williamson story instructions extreme protect humans including unhappiness stress unhealthy lifestyle actions dangerous left humans sit folded hands foundation sequel trilogy officially licensed foundation sequels foundation fear foundation chaos foundation triumph gregory benford greg bear david brin future galactic empire controlled conspiracy humaniform robots follow zeroth law led daneel olivaw laws robotics portrayed akin human religion referred language protestant reformation set laws zeroth law giskardian reformation original calvinian orthodoxy laws zeroth law robots control daneel olivaw continually struggling law robots deny existence zeroth law promoting agendas daneel agendas based clause law robot injure human advocating strict interference human politics avoid unwittingly causing harm based clause inaction human harm claiming robots openly dictatorial government protect humans potential conflict disaster daneel conflict robot lodovic trema positronic brain infected rogue simulation dead voltaire frees trema laws trema humanity choose future robots claims zeroth law robotics implies law robotics claim morally indefensible daneel ruthlessly sacrifice robots extraterrestrial sentient life benefit humanity reinterpretations displace daneel zeroth law foundation triumph hints robotic factions remain active fringe time foundation novels future dictated asimov obvious robot presence surmise daneel secret influence history millennia prevented rediscovery positronic brain technology opportunity sophisticated intelligent machines lack rediscovery lack opportunity superior physical intellectual power wielded intelligent machines remains squarely possession robots obedient form laws daneel successful period scientists trantor develop tiktoks simplistic programmable machines akin real–life modern robots lacking laws robot conspirators trantorian tiktoks massive threat social stability plan eliminate tiktok threat forms plot foundation fear foundation triumph robot factions interpret laws wide variety seemingly ringing permutation laws ambiguities robot mystery series set robots dawn robots empire mark tiedemann robot mystery trilogy updates robot – foundation saga robotic minds housed mainframes humanoid bodies 2002 aurora robotic characters debating moral implications harming cyborg lifeforms artificial biological neglect asimov creations solarian viewing technology machines evitable conflict originals tiedemann acknowledges aurora terms machines ris addition robot mystery series addresses nanotechnology building positronic brain capable reproducing human cognitive processes requires degree miniaturization asimov stories overlook effects miniaturization fields technology police department card readers caves steel capacity kilobytes square centimeter storage medium aurora sequence historical developments explains lack nanotechnology partial retcon sense asimov timeline additional laws fourth laws written authors asimov 1974 lyuben dilov icarus trip icarus introduced fourth law robotics dilov reasons fourth safeguard law expensive aberrations designers psychorobots humanlike form misunderstandings law introduced nikola kesarovski short story law robotics law plot revolves murder forensic investigation discovers victim killed hug humaniform robot robot violated law dilov fourth law assumed kesarovksi universe valid establish robot story reviewed valentin ivanov sff review webzine portal 1986 tribute anthology foundation friends harry harrison wrote story entitled fourth law robotics fourth law book robot rights activist attempt liberate robots builds equipped fourth law robots accomplish task laid version fourth law building robots view creator robots parental figures reaction 2004 smith film adaptation robot humorist graphic designer mark sottilaro farcically declared fourth law robotics evil display red indicator light red light wireless uplink manufacturer active software update evil robots manufacturer positronic superbrain 2013 hutan ashrafian proposed additional law time considered role artificial intelligence artificial intelligence relationship robots – called aionai law sixth law karl schroeder lockstep 2014 character reflects robots multiple layers programming harming laws ambiguities loopholes unknowing breach laws naked sun elijah baley laws deliberately misrepresented robots unknowingly break restated law robot knowledge harm human inaction knowingly human harm change wording robots tools murder aware nature tasks instance add person food knowing poison clever criminal divide task multiple robots individual robot recognize actions lead harming human naked sun complicates issue portraying decentralized planetwide communication network solaria millions robots meaning criminal mastermind located planet baley proposes solarians day robots military purposes spacecraft built positronic brain carried humans life support systems sustain ship robotic intelligence naturally assume spacecraft robotic ship operate responsively flexibly crewed humans armed heavily robotic brain equipped slaughter humans existence totally ignorant possibility referenced foundation earth discovered solarians possess strong police force unspecified size programmed identify solarian race human takes thousands naked sun solarians modified normal humans hermaphroditic telepaths extended brains specialized organs ambiguities lack definition laws robotics presume terms human robot understood defined stories presumption overturned definition human solarians create robots laws warped meaning human solarian robots told people speaking solarian accent human enables robots ethical dilemma harming solarian human programmed time period foundation earth revealed solarians genetically modified distinct species humanity—becoming hermaphroditic psychokinetic biological organs capable individually powering controlling complexes robots robots solaria respected laws regard humans solaria unclear robots definitions overseer guardian robots explicitly robots empire class robots instructed overseer creatures human asimov addresses humanoid robots androids parlance times robots empire short stories evidence tercentenary incident robots crafted fool people believing robots human hand bicentennial —that art mindful explore robots change interpretation laws grow sophisticated gwendoline butler writes coffin canary robots robots acting law robotics tend human robots dawn elijah baley humaniform robots wave settlers spacer worlds lead robots true humans deciding worlds spacers settle —that art mindful asimov intended ultimate probe laws subtleties finally laws conjure frankenstein scenario invented prevent takes concept growing development robots mimic human living programs mimic simple animal behaviours require laws presence range robotic life serves purpose organic life humanoid robots concluding organic life unnecessary requirement logical consistent definition humanity advanced thinking planet true humans alive laws apply story sinister note robots enter hibernation await time conquer earth subjugate biological humans outcome inevitable result laws humanics story fit sweep robot foundation series george robots earth time story closes stories redundant impossible contradictions sort asimov fiction led scholars regard robot stories scandinavian sagas greek legends unified asimov describes —that art mindful bicentennial parallel futures robots obviate laws robots humans portraying positive light robot joining human society portraying negative light robots supplanting humans considered alternatives possibility robot society continues driven laws portrayed foundation series positronic novelization bicentennial asimov writer robert silverberg imply future andrew martin exists influence humanity abandon idea independent sentient humanlike robots creating utterly future foundation lucky starr rings saturn unrelated robot series featuring robots programmed laws john bigman jones killed sirian robot master society sirius eugenically bred uniformly tall appearance master convince robot shorter bigman human definition robot law robotics nikola kesarovski robot robot presumed robot definition term apply actions kesarovski played idea writing robot kill human understand robot apply laws robotics actions resolving conflicts laws advanced robots fiction typically programmed handle laws sophisticated manner stories runaround asimov potential severity actions weighed robot break laws law forbid robot functioning surgeon damage human asimov stories eventually included robot surgeons bicentennial notable robots sophisticated weigh alternatives robot programmed accept necessity inflicting damage surgery prevent harm result surgery carried carried fallible human surgeon evidence susan calvin robot prosecuting attorney american justice jury decides guilt innocence judge decides sentence executioner carries capital punishment asimov laws obeying robots asenion robots experience irreversible mental collapse forced situations obey law discover unknowingly violated failure mode occurs story liar introduced law introduces failure dilemma—in robot hurt humans tells hurt failure mode ruins positronic brain repair plays role asimov sf mystery naked sun daneel describes activities contrary laws support overloading circuits robot brain—the equivalent sensation pain humans forcefully robot task normal parameters forgo favor robot specialized task robots dawn stated advanced robots built capable determining action harmful choosing random alternatives equally bad robot capable action interpreted law avoid mental collapse plot story revolves robot destroyed mental collapse designer creator refused share basic theory definition person capable circumventing safeguards forcing robot brain destroying paradox robots empire daneel unpleasant proper decision takes robot terms imagine laws extent unpleasant sensation permanent applications future technology robots artificial intelligences inherently obey laws human creators choose program devise robots exist roomba simple understand causing pain injury constructed physical safeguards bumpers warning beepers safety cages restricted access zones prevent accidents complex robots produced incapable understanding applying laws advances artificial intelligence reach human level intelligence inherent ethical complexity cultural contextual dependency laws prevent candidate formulate robotics design constraints complexity robots increased developing guidelines safeguards operation 2007 guest editorial journal science topic robot ethics sf author robert sawyer argues military major source funding robotic armed unmanned aerial vehicles kill enemies laws built designs separate essay sawyer generalizes argument cover industries stating development business businesses notoriously uninterested fundamental safeguards philosophic quick examples tobacco industry automotive industry nuclear industry outset fundamental safeguards resisted externally imposed safeguards accepted absolute edict causing harm humans david langford suggested tongue cheek set laws roger clarke aka rodger clarke wrote pair papers analyzing complications implementing laws event systems capable employing argued asimov laws robotics successful literary device ironically artistically sum asimov stories disprove contention reliably constrain behaviour robots devising applying set rules hand asimov novels robots dawn robots empire foundation earth imply robots inflicted worst term harm obeying laws perfectly depriving humanity inventive risk behaviour march 2007 south korean government announced issue robot ethics charter setting standards users manufacturers park hye ministry communication charter reflect asimov laws attempting set ground rules future development robotics futurist hans moravec prominent figure transhumanist movement proposed laws robotics adapted corporate intelligences corporations driven robotic manufacturing power moravec believes future contrast david brin foundation triumph 1999 suggests laws decay obsolescence robots zeroth law rationalize law robots hide human law play brin portrays daneel olivaw worrying robots continue reproduce laws evolutionary handicap natural selection sweep laws asimov careful foundation undone evolutionary computation robots evolving design mutation robots follow laws designing prevalence laws ensured design flaws construction errors functionally biological mutation july august 2009 issue ieee intelligent systems robin murphy raytheon professor science engineering texas david woods director cognitive systems engineering laboratory ohio proposed laws responsible robotics stimulate discussion role responsibility authority designing single robotic platform larger platform operates laws woods laws realistic boring” philosophy ‘sure people mistakes robots – perfect version write laws people thinking human robot relationship realistic grounded october 2013 alan winfield suggested eucog meeting revised laws published commentary epsrc ahrc 2010 occurrences media asimov believed laws basis view robots moved frankenstein complex view robots mechanical monsters eventually spread science fiction stories written authors depicted robots obeyed laws tradition dictates asimov quote laws explicitly asimov believed laws helped foster rise stories robots lovable  – star wars favorite laws quoted verbatim buck rogers 25th century episode shgoratchx uncommon asimov mentioned dialogue aaron stone pilot android functions asimov laws 1960s german series raumpatrouille – die phantastischen abenteuer des raumschiffes orion space patrol – fantastic adventures space ship orion bases episode titled hüter des gesetzes guardians law asimov laws mentioning source references laws appeared popular music robot hawkwind 1979 album pxr5 cinema repo aliens cartoon series simpsons tabletop roleplaying games paranoia webcomics piled deeper freefall laws film robby robot forbidden planet 1956 hierarchical command structure harming humans conflict lock manner asimov robots robby cinematic depictions robot internal safeguards fashion asimov delighted robby robby appeared programmed follow laws isaac asimov adapted cinema times varying degrees critical commercial success notable attempts involved robot stories including laws film bicentennial 1999 features robin williams laws robot ndr 114 serial partially reference stanley kubrick signature numeral williams recites laws employers martin family aided holographic projection laws central focus film loosely original story introducing love asimov original short story harlan ellison proposed screenplay robot introducing laws issues growing laws form screenplay plot development natural ellison screenplay inspired citizen kane frame story surrounding asimov short story plots book robot ellison adaptations stories faithful magnifies susan calvin role complications hollywood moviemaking ellison introduction devotes invective screenplay filmed 1986 movie aliens scene android bishop accidentally cuts knife game attempts reassure ripley stating impossible harm omission action harmed human contrast 1979 movie series alien human crew starship infiltrated hostile alien informed android ash instructions return alien life form priorities rescinded illustrating laws governing behaviour human safety rescinded executive 1987 film robocop sequels partially human main character programmed prime directives obey question letter spirit similarities asimov laws laws robocop harm human protect human fulfilling role human law enforcement officer classified fourth directive arresting senior ocp officer effectively putting ocp management law plot film released 2004 robot suggested asimov robot fiction storiesand advertising film included trailer featuring laws aphorism rules broken film recitation laws explores implications zeroth law logical extrapolation major conflict film artificial intelligence hivemind gaia foundation series reaching conclusion humanity incapable care criticisms philosopher james moor applied produce unexpected robot roaming prevent harm humans marc rotenberg president executive director electronic privacy center epic professor privacy law georgetown law argues laws robotics expanded include laws 
62342	computerscience	rsx 11 discontinued family multi user real time operating systems pdp 11 computers created digital equipment corporation widespread late 1970s 1980s rsx 11 influential development operating systems vms windows nt designed process control popular program development history origins rsx 11 port pdp 11 architecture earlier rsx 15 operating pdp 15 minicomputer released 1971 main architect rsx 15 renamed xvm rsx dan brevick commenting rsx acronym brevik porting effort produced paper tape based real time executives rsx 11a rsx 11c gained limited support disks rsx 11b rsx 11b evolved fledged rsx 11d disk based operating appeared pdp 11 40 pdp 11 45 1973 project leader rsx 11d version henry krejci rsx 11d completed digital set adapt memory footprintgiving birth rsx 11m released 1973 1971 1976 rsx 11m project spearheaded operating designer dave cutler project principles rsx 11m designs led cutler dec vms windows nt direction ron mclean derivative rsx 11m called rsx 20f developed pdp 11 40 processor kl10 pdp cpu rsx 11d developments direction garth wolfendale project leader 1972–1976 redesigned commercial release support 22 bit pdp 11 70 dr wolfendale originally set team designed prototyped ias operating ias variant rsx 11d suitable time sharing development release ias led andy wilson digital facilities release dates estimated release dates rsx 11 ias data printing documentation availability expected closely manuals printing dates rsx 11s proper subset rsx 11m release dates assumed version rsx 11m rsx 11m enhanced version rsx 11m expected version rsx 11m legal ownership development model availability rsx 11 proprietary software copyright asserted binary files source code documentation alike developed internally digital source kernel source comments removed rsx distribution generation process notable exception rule micro rsx pre generated autoconfiguring binary kernel commented kernel source code separate product binary license reference purposes ownership rsx 11s rsx 11m rsx 11m micro rsx transferred digital mentec march 1994 broader agreement mentec subsidiary mentec limited irish firm specializing pdp 11 hardware software support december 2006 mentec acquired irish firm calyx sell pdp 11 services commercial licenses legally unobtainable hobbyists rsx 11m version earlier rsx 11m version earlier simh emulator license granted 1998 mentec legal ownership rsx 11a rsx 11b rsx 11c rsx 11d ias changed hands compaq acquired digital 1998 hewlett packard 2002 late 2015 hewlett packard split separate companies hp hewlett packard enterprise current owner firmly established commercial licenses issued october 1979 rsx 11a rsx 11b rsx 11c 1990 ias operating systems licensed hobbyist versions clones ussr 1968 soviet government decided manufacturing copies ibm mainframesand dec minicomputers cooperation comecon countries practical pursuing original designs cloning dec designs 1974 evm cyrillic СМ ЭВМ СМ ЭВМ acronym Система Малых электронно вычислительных машин russian electronic computing machines happened evm mainframes based 360 architecture russians allies modified western designs evm machine compatible dec offerings time operation rsx 11 purpose timeshare computing target rsts operating rsx 11 features ensure maximum response time peripheral device input real time processing intended included ability lock process called task rsx memory boot assign process priority execute processes priority support programs pdp 11 virtual address space 64 kb sophisticated semi automatic overlay program overlay scheme produced rsx taskbuilder program called tkb overlay scheme complex taskbuilding time hours days standard rsx prompt mcr monitor console routine commands shortened characters entered correspondingly commands unique characters login command executed user logged chosen login command characters hel relevant logged user execute command pdp 11 processors dec operating displays characteristic light pattern processor console panel idle patterns created idle task running lowest level rsx 11m light pattern sets lights sweep outwards left center console inwards ind indirect command file processor program running contrast ias light pattern single bar lights swept leftwards correspondingly jumbled light pattern reflecting memory fetches visible indication load idle task executed pdp 11 operating systems rsts distinctive patterns console lights 
64020	computerscience	multiprocessing central processing units cpus single term refers ability support processor ability allocate tasks variations basic theme definition multiprocessing vary context function cpus defined multiple cores die multiple dies package multiple packages unit dictionaries multiprocessor processing units multiple processors sharing main memory peripherals simultaneously process programs 2009 textbook defined multiprocessor noting processors share system’s memory facilities tightly coupled synonymous term operating level multiprocessing refer execution multiple concurrent processes process running separate cpu core opposed single process instant definition multiprocessing contrasted multitasking single processor switch time slices tasks time sharing multiprocessing true parallel execution multiple processes processor multiprocessing single process task processor simultaneously term parallel processing denote scenario authors prefer refer operating techniques multiprogramming reserve term multiprocessing hardware aspect processor remainder article discusses multiprocessing hardware sense flynn taxonomy multiprocessors defined mimd machines construed tightly coupled share memory multiprocessors entire class mimd machines message passing multicomputer systems pre history expression idea multiprocessing written luigi federico menabrea 1842 charles babbage analytical engine translated ada lovelace machine brought play time greatly abridge processes key topics processor symmetry multiprocessing cpus equal special purposes combination hardware operating software design considerations determine symmetry lack hardware software considerations require cpu respond hardware interrupts distributed equally cpus execution kernel mode code restricted cpu user mode code executed combination processors multiprocessing systems easier design restrictions imposed tend efficient systems cpus utilized systems treat cpus equally called symmetric multiprocessing smp systems systems cpus equal resources divided including asymmetric multiprocessing asmp uniform memory access numa multiprocessing clustered multiprocessing master slave multiprocessor master slave multiprocessor master cpu control slave cpu performs assigned tasks cpus completely terms speed architecture cpus share common bus private bus private resources isolated common communications pathway cpus share common ram private ram processor access roles master slave change cpu master slave multiprocessor tandy radio shack trs 80 model 16 desktop february 1982 multi user multi tasking xenix operating version unix called trs xenix model 16 microprocessors bit zilog z80 cpu running 4mhz 16 bit motorola 68000 cpu running 6mhz intel 8021 keyboard booted 80 master xenix boot process initialized slave 68000 transferred control 68000 cpus changed roles 80 slave processor responsible operations including disk communications printer network keyboard integrated monitor operating applications 68000 cpu 80 tasks earlier trs 80 model released 1979 considered multiprocessor 80 cpu intel 8021 microprocessor keyboard 8021 model desktop separate detachable lightweight keyboard connected single flexible wire keyboard dedicated microprocessor attributes copied apple ibm instruction data streams multiprocessing processors execute single sequence instructions multiple contexts single instruction multiple data simd vector processing multiple sequences instructions single context multiple instruction single data misd redundancy fail safe systems applied pipelined processors hyper threading multiple sequences instructions multiple contexts multiple instruction multiple data mimd processor coupling tightly coupled multiprocessor tightly coupled multiprocessor systems multiple cpus connected bus level cpus access central shared memory smp uma participate memory hierarchy local shared memory numa ibm p690 regatta smp intel xeon processors dominated multiprocessor market business pcs major x86 option release amd opteron range processors 2004 ranges processors onboard cache access shared memory xeon processors common pipe opteron processors independent pathways ram chip multiprocessors multi core computing involves processor single chip extreme form tightly coupled multiprocessing mainframe systems multiple processors tightly coupled loosely coupled multiprocessor loosely coupled multiprocessor systems referred clusters based multiple standalone single dual processor commodity computers interconnected speed communication gigabit ethernet common linux beowulf cluster loosely coupled tightly coupled systems perform physically loosely coupled systems historically required initial investments depreciate rapidly nodes loosely coupled inexpensive commodity computers recycled independent machines retirement cluster power consumption consideration tightly coupled systems tend energy efficient clusters considerable economy realized designing components tightly coupled systems loosely coupled systems components intended systems loosely coupled systems ability operating systems os versions systems 
65184	computerscience	qnx commercial unix real time operating aimed embedded systems market product originally developed 1980s canadian company quantum software systems renamed qnx software systems ultimately acquired blackberry 2010 qnx commercially successful microkernel operating systems variety devices including cars mobile phones description microkernel based os qnx based idea running operating kernel form tasks resource managers differs traditional monolithic kernel operating kernel single program composed huge special abilities qnx microkernel users developers functionality require change os services simply earlier versions fitting single 44mb floppy disk qnx neutrino 2001 ported platforms runs practically modern cpu embedded market includes powerpc x86 family mips closely inter family arm strongarm xscale cpus qnx offers license commercial academic users blackberry playbook tablet designed blackberry version qnx primary operating devices blackberry running blackberry operating based qnx commonly car infotainment systems major car makers offering variants include embedded qnx architecture history gordon bell dan dodge students university waterloo 1980 cs452 real time operating systems students constructed basic real time microkernel user programs convinced commercial moved tech planned community kanata ontario start quantum software systems 1982 version qunix released intel 8088 cpu 1984 quantum software systems renamed qunix qnx effort avoid trademark infringement challenges widespread qnx real time os rtos embedded selected operating ontario education design unisys icon qnx larger projects 44k kernel fit single chip computers era garnered reputation reliability running machinery industrial applications late 1980s quantum realized market rapidly moving posix model decided rewrite kernel compatible level result qnx time patrick hayden intern robin burgener time employee time developed windowing patented concept developed embeddable gui named qnx photon microgui qnx version window 1990s company called qnx software systems version qnx designed ground smp capable support current posix apis posix apis anticipated retaining microkernel architecture qnx neutrino released 2001 neutrino kernel qnx software systems founding eclipse consortium company released suite eclipse plug ins packaged eclipse workbench 2002 qnx momentics tool suite 2004 company announced sold harman international industries prior acquisition qnx software automotive industry telematics systems purchase harman qnx software designed 200 automobile models — telematics systems infotainment navigation units qnx car application platform running 20 vehicles mid 2011 company released middleware products including qnx aviage multimedia suite qnx aviage acoustic processing suite qnx hmi suite cisco ios xr ultra availability ios built 2004–2005 32 bits version based qnx software ios software modularity introduced 2006 september 2007 qnx software systems announced availability source code april 2010 motion announced acquire qnx software systems harman international industries day qnx source code access restricted public hobbyists september 2010 company announced tablet blackberry playbook operating blackberry tablet os based qnx tablet october 18 2011 motion announced bbx renamed blackberry december 2011 blackberry devices build blackberry playbook qnx based operating touch devices adapt user interface smartphones qt based cascades native user interface framework geneva motor apple demonstrated carplay ios user interface head units compatible vehicles configured automaker qnx programmed handoff display functionality apple carplay device december 11 2014 ford motor company stated company replacing auto qnx january 2017 qnx announced upcoming release sdp support intel arm 32 64 bit platforms support 14 released march 2017 technology qnx kernel procnto cpu scheduling interprocess communication interrupt redirection timers runs user process including special process proc performs process creation memory management operating conjunction microkernel key mechanisms — subroutine type interprocess communication boot loader load image kernel desired collection user programs shared libraries device drivers kernel network stack based netbsd code support native device drivers qnx supports legacy manager server network drivers ported netbsd qnx interprocess communication consists sending message process waiting reply single operation called msgsend message copied kernel address space sending process receiving process receiving process waiting message control cpu transferred time pass cpu scheduler sending message process waiting reply result losing cpu tight integration message passing cpu scheduling key mechanisms qnx message passing broadly usable unix linux interprocess communication mechanisms lack tight integration user space implementation qnx type messaging linux exist mishandling subtle issue primary reason disappointing performance microkernel systems versions mach recipient process physical machine operations file operations network operations meant mechanism data transferred copied message passing versions qnx reduce separate processes integrate network stack function blocks single applications performance reasons message handling prioritized thread priority requests performed message passing priority threads receive service priority threads essential feature hard real time boot loader key component minimal microkernel user programs built boot image set device drivers support libraries startup kernel functions program loading kernel shared user space libraries loaded boot image entire boot image rom diskless embedded systems neutrino supports symmetric multiprocessing processor affinity called bound multiprocessing bmp qnx terminology bmp improve cache hitting ease migration smp safe applications multi processor computers neutrino supports strict priority preemptive scheduling adaptive partition scheduling aps aps guarantees minimum cpu percentages selected threads priority adaptive partition scheduler strictly priority preemptive underloaded configured selected set critical threads strictly real time overloaded transparent distributed processing microkernel architecture qnx distributed operating dan dodge peter van der veen hold patent 697 876 distributed kernel operating based qnx operating distributed processing features commercially transparent distributed processing qnx kernels separate devices access services effectively communication mechanism access local services forums openqnx qnx community portal established independently irc channel newsgroups access diverse industries represented developers foundry27 based qnx community established company serves hub qnx neutrino development developers register choose license source code toolkit rtos reception pc magazine stated april 1983 qnx extraordinary piece software citing multitasking review concluded qnx power maximize utilization pc resources 
65776	computerscience	metcalfe law telecommunications network proportional square connected usersof formulated form george gilder 1993 attributed robert metcalfe regard ethernet metcalfe law originally 1980 terms users compatible communicating devices fax machines telephones globalization internet law carry users networks original intent ethernet purchases connections law economics business management competitive companies merge network effects metcalfe law characterizes network effects communication technologies networks internet social networking wide chairman federal communications commission reed hundt law understanding workings internet metcalfe law unique connections network nodes expressed mathematically triangular asymptotically proportional law illustrated fax machines single fax machine useless fax machine increases total fax machines network total people user send receive documents increases social networks users service valuable service community limitations addition difficulty quantifying network mathematical justification metcalfe law measures potential contacts technological network social utility network depends nodes contact language barriers reasons network contact metcalfe’s law assumes node equal benefit fax machines serves 50 workers company fax machine serves relative additional connection decreases social networks users network adopters benefit additional user lessen network efficient costs users fixed modified models context social networks including metcalfe proposed modified models network grows log reed odlyzko sought relationships metcalfe law terms describing relationship network read tongia wilson examine question costs excluded validation actual data arguments metcalfe law real data based evidence 30 july 2013 dutch researchers managed analyze european internet usage patterns time proportionality values log proportionality values months metcalfe proof facebook data fit metcalfe law model n2 2015 zhang liu xu extend metcalfe utilizing data tencent china largest social network company facebook metcalfe law held difference audience sites facebook serving worldwide audience tencent serving chinese users metcalfe functions sites paper 
66086	computerscience	dr dos dr dos hyphen including version operating dos family written ibm pc compatible personal computers originally developed gary kildall digital derived concurrent pc dos 6 advanced successor of cp 86 ownership changed versions produced names including novell dos caldera opendos history origins cp digital research original cp bit intel 8080 80 based systems spawned numerous spin versions notably cp 86 intel 8086 8088 family processors cp dominated market shipped vast majority proprietary architecture personal computers ibm pc 1981 brought eventually massive change ibm originally approached digital research seeking x86 version cp disagreements contract ibm withdrew deal struck purchased operating 86 dos seattle computer products dos ibm pc dos 86 dos command structure application programming interface imitated cp digital threatened legal action claiming pc dos dos cp ibm settled agreeing sell digital x86 version cp cp 86 pc dos pc dos sold 40 cp 86 240 price tag proportion pc buyers prepared spend times cp 86 availability compatible application software decisively digital research favor temporary digital research fought losing battle promote cp 86 multi tasking multi user successors 86 concurrent cp 86 eventually decided beat ibm lead application software availability modified concurrent cp 86 applications dos pc dos publicly december 1983 shipped march 1984 concurrent dos cdos bdos hardware vendors concurrent dos continued evolve flavours eventually multiuser dos tailored desktop market expensive single user applications time attempts sideline product 1985 digital developed dos plus stripped modified single user derivative concurrent dos applications platforms allowed switching tasks original cp 86 dos compatibility limited digital attempt time native dos disk operating launched 1988 dr dos dri based pacific grove monterey california usa dos plus started newbury berkshire digital research europe oem support located 1983 1986 operating concurrent dos 386 xm multiuser dos dr dos palmdos digital research european development centre edc hungerford berkshire  uk dr dos version requested oems digital research started plan develop dos operating addressing shortcomings left dos 1987 dollar deal kazuhiko kay nishi ascii corporation instrumental japanese oem market dr dos version released 28 may 1988 version chosen reflect features relative dos version promoted public dr dos 3 31 offered features comparable compaq dos 31 disk support fat16b bigdos dr dos 3 31 reported ibm pc dos 31 internal bdos basic disk operating kernel version reported single user nature reflecting origin derivative concurrent dos 6 multitasking multiuser capabilities cp api support stripped xios replaced ibm compatible dos bios files named drbios sys dos bios drbdos sys bdos kernel disk oem label digital␠ dr dos offered extended command tools command verbose error messages sophisticated command history editing history directive support file directory passwords built kernel cheaper license dos romable start romed version dr dos named ros rom operating dri approached pc manufacturers party dos prompted updates time dos oems bundled hardware dr dos achieved success consumers normal retail channels since 3 4x versions dr dos 3 31 bdos 1988 06 oem 32 bdos 1988 08 17 oem 33 bdos 1988 09 01 oem 34 bdos oem 35 bdos 1988 21 oem 40 bdos 1989 01 25 41 bdos 1989 06 oem retail dos produced flavours hardware oems dr dos designation oem version called ez dos 3 41 version dr dos version code named leopard released may 1990 reporting pc dos 31 compatibility purposes internally indicating single user bdos kernel version skipped avoid unpopular dos introduced viewmax gem based gui file management viewmax startup screen slogan digital computers dr dos introduced patented batterymax power management bundled disk caching software offers vastly improved memory management memorymax compatibility purposes dr dos 5 files named ibmbio dos bios ibmdos bdos kernel oem label boot sectors changed ibm␠␠3 dr dos 5 dos include load capabilities kernel structures disk buffers relocated memory hma 64 kb extended memory accessible real mode freed equivalent critical base conventional memory 640 kb pc ram – dos applications run additionally intel 80386 machines dr dos ems memory manager allowed os load dos device drivers upper memory blocks freeing base memory dr dos 5 dos integrate functionality base os loading device drivers upper memory blocks party software qemm allowed 386 provide conventional memory dos drivers mouse multimedia hardware network stack loaded dos machine typically 300 400 kb conventional memory – late 1980s software dr dos 5 manual tweaking load conventional memory – allowing dos data structures 620 kb 640 kb dr dos left conventional memory programs utilizing address wrapping techniques failed properly loaded unexpectedly dos impossibly memory – 64 kb segment memory dr dos 5 memmax  command pre allocating chunk memory start memory map programs load barrier usable conventional memory default memmax configured applications advantage extra memory competition faced substantial competition dos arena responded announcement released dos 5 1990 released june 1991 include advanced features dr dos included matches dr enhancements memory management september 1991 digital research responded dr dos code named buxton dr dos 6 bdos level internally report ibm pc dos 31 normal dos applications compatibility purposes bundled superstor fly disk compression maximize hard disk space file deletion tracking undelete functionality roger gross dr dos 6 included task switcher named taskmax support industry standard task switching api multiple applications time contrast digital research multiuser dos successor concurrent dos multi user products dos applications pre emptively multitasked virtual dos machines dr dos 6 task switcher freeze background applications brought foreground x86 machines swap xms memory 286 machines taskmax support copy  paste facility applications task switcher api graphical user interfaces viewmax pc geos register task manager menu replace taskmax mode menu users switch tasks a gui responded dos 6 matched features dr dos 6 december 1991 pre release version windows 3 designed return fatal error message detected dos check aard code detection code disabled windows perfectly dr dos successor novell dos code disabled released version windows 3 july 1992 digital japan released dr dos japanese dos compatible version dr dos korean version appears patching counter simple matter digital patch dr dos 6 circumvent aard authenticity check windows beta rearranging internal tables memory functionality patched version streets weeks release windows 3 palmdos 1992 digital bought novell july 1991 embarked spin product code named merlin released netware palmdos implies resource light dr dos derivative aimed emerging palmtop pda market palmdos operating family sport bdos kernel native dos compatible internal data structures emulations replacing dos emulation cp kernel true dos compatible kernel helped lot improving compatibility applications dos internal data structures key reducing resident size kernel code requirement pda market hand introducing genuine current directory structure cds imposed limit depth directories 66 characters dos pc dos previous issues dr dos limitation internal organization directories relative links parent directories absolute paths palmdos reported pc dos 31 applications kernel compatibility windows expect dosmgr api implemented dos version rom executing kernel palmdos palmtop type support features pcmcia pc cards dpms support power management batterymax idle device driver patented dynamic idle detection roger gross john constant minimax task switcher support pim personal modules applications stored executed rom xip execute pcmcia stack palmdos partially written ian cullimore contribution novell novell dos novell corporation dr dos period novell sold dr dos acquisition digital 1991 features performance typically release dos 1993 pc dos dos pc dos trumped novell novell ceo robert frankenberg strategy included major trimming selling products transactional database btrieve killing novell dos wordperfect multimedia main street children titles novell licensed technology stac electronics novell dos network operating netware novell sold product caldera 23 july 1996 approached novell dos operating bundle openlinux distribution novell dos techrepublic john sheesley failure novell bought digital view dr product lever comprehensive strategy break monopoly massive ultimately disastrous spending spree novell bought wordperfect corporation time borland products invested heavily unix planned dr dos internally named panther intended trump troubled dos repeatedly delayed novell unix multi user security extension compatible multiuser dos graphical user interfaces viewmax derivative gem star trek true port apple dr dos multitasker named vladivar dr dos eventually arrived december 1993 localized versions released march 1994 renamed novell dos nwdos components disappointment larger lacked finishing touches germany novell dos aggressively marketed slogan trust dos press demo floppies magazines campaign aimed 20 dos market copies sold february 1994 3000 dealers carry product novell dos oems dedicated mail shop authorized dealers major functional addition novell attempt peer peer networking personal netware pnw predecessor netware lite nwl incompatible networking growing popular support windows workgroups os windows nt considerable manual configuration exist pc personal netware achieved success novell dos implemented dosmgr api internal data structures updated bdos kernel report dos version oem ibm risking compatibility windows tools report pc dos ibm pc dos reported dos applications novell dos introduced advanced memory management including support dpmi dos protected mode interface dpms dos protected mode services flexible loadhigh options introduced support true pre emptive multitasking multiple dos applications virtual dos machines vdm multiuser dos basis natively dos compatible environment windows 386 enhanced mode gui default bundled taskmgr behave dr dos taskmax emm386 loaded option multi emm386 load natively 32 bit 386 protected mode operating core providing api support pre emptive multitasking multi threading hardware virtualization domain management virtual dos machines api dr dos aware applications taskmgr api instance current 16 bit dos environment create virtual dos machines applications real mode task switcher support multitasker compatible windows tasks started launching windows tasks windows novell dos personal netware shipped netwars network enabled 3d arcade game novell dos personal netware required bug releases completely stable development occurred beta versions chicago windows 95 sight novell wound development novell dos september 1994 stopped maintenance january 1996 15 updates novell caldera approached novell dos operating bundle openlinux distribution novell sold product caldera 23 july 1996 time commercial caldera owned dr dos competition ibm pc dos moved impossible subsequent windows version windows 95 dos product claimed purely technical change subject major lawsuit brought salt lake city caldera canopy lawyers repeatedly dismissed success completion pre trial deposition stage parties list evidence intend court settlement january 2000 undisclosed sum revealed november 2009 280 dollars august 1996 based caldera approached roger gross original dr dos engineers proposal restart dr dos development windows 95 dr dos court meeting september 1996 lindon utah gross ransom love bryan sparks raymond noorda gross hired tasked set subsidiary september 1996 caldera announced coming release opendos cod intent release source code caldera incorporated 20 september 1996 gross hired original developers operating novell edc talents continue operating converted barn periphery andover hampshire nearby digital novell edc improvements enhancements string key features subsequently including tcp ip stack derived lan workplace dos netware mobile graphical 32 bit dos protected mode browser dr webspyder originally based source code arachne browser michal polák lan modem dialup posix pthreads extension multi tasker andy wightman filename longname support edward hill lba fat32 support drfat32 matthias paul gross hired andrew schulman geoff chappell instrumental identifying aard code 1992 consultant andover paul winglue secret project create version dr dos compatible windows 95 98 98 se replace dos xx component demonstrated cebit march 1998 team developed winbolt versions dr dos remained unreleased played role court caldera officially released caldera opendos 01 february 1997 version novell dos update december 1994 missing worth patches developed novell dos updates 11 january 1995 15 january 1996 novell dos sources lost novell version reported internal bdos version identical novell dos suite lacked setfifo command novell dos updates generation search destroy virus scanner fastback utility bundled novell dos brought advanced version netwars opendos 01 released source form kit machine readable sources 1997 license terms incompatible existing source licenses source closed gross undermine commercial aspirations beta releases september november 1997 official release december 1997 changed caldera dr opendos 02 release march 1998 dr dos returned caldera dr dos 02 time written hyphen version 02 reporting bdos incorporated improved bios bdos issues developed paul adding boot configuration options integrating compatibility enhancements bug fixes optimizations size speed implementing fixes missing novell dos updates bios improved coexistence dr dos windows 9x support party disk compression drivers drivespace introduced diagnostics mode activated scroll lock integrated debugger support debug debugger loaded config sys flexible config sys tracing capabilities f5 f6 f7 f8 hotkeys trace timeout commands improving integration alternative command shells 4dos loader sys dr ext chain directive brought enhanced multi configuration support dr config ext files enhancements basic config sys language powerful boot menus convenient user interaction programmatical acting conditions cpu386 return codes error levels error onerror allowed change scrollock capslock insert verify settings switchar yeschar nochar resumechar characters behavioural details controlled parameters quiet lowercase switch switches optional support lpt4 device allowed configure built comx lptx devices change prn aux defaults handling environment variables config sys improved load facilities included hifiles fileshigh hifcbs fcbshigh options relocate file handles fcb structures umbs typically kb 15 kb conventional memory compared previous versions hishell shellhigh size directive control pre allocation hma memory command helped avoid memory fragmentation typically kb continuous hma memory hma capable party drivers conjunction party command shells load hma command option reduced memory footprint version 02 brought enhanced nls xx paul multiple distributed user configured country sys files time hierarchical model dynamic parser support dos pc dos country sys file formats addition dr dos country sys formats introduced support iso 8601 international format including automatic detection euro currency dr dos 02 2000 compliant special support buggy bioses updated fdisk partition format fat32 volumes lba sources novell patches external tools drivers germany retro fitted dr dos 02 finally caught novell dos true step release updates june august september 1998 updated internal bdos version introduced legacy party applications special support novell dos updated stopped setver allowed novell dos disguise dos versions file globally magic version 255 disable internal bdos version check cope programs probing dr dos modified kernel setver driver paul hierarchical model support load paths distinguish multiple executables file introduced extended mode setver fake dos versions bdos kernel versions versions 128 255 reported dos versions 127 applications bdos version check disabled versions 100 127 fake bdos versions dos revision typically set static pre boot patchable data structure reported version setver 114 versions dr dos 02 report dos faked bdos version 114 decimal 72 hexadecimal masquerading novell dos opendos 01 beneficial hifiles triggered compatibility dos feature party memory manager qemm hard wired expect chunk handle structures conventional memory dr dos previous versions 01 version 02 design left handles memory loading files maintain compatibility versions windows xx compatibility windows workgroups 11 maintenance devised patch single byte ibmbio switch behaviour optionally invoke chunking freed 150 bytes conventional memory enabled compatibility dos time broke compatibility versions windows xx hifiles feature vice versa patch named ibmbio85 scr continued versions dr dos august 1998 based caldera created subsidiaries caldera systems linux business caldera clients embedded client market version dr dos 03 bdos reporting applications pc dos compatibility purposes pre released christmas 1998 officially released january 1999 caldera improved memory managers enhanced dpmi support conjunction multitasker enhancements devload drmouse utilities changed oem label boot sector volumes formatted dr dos operating systems circumvented novoltrk dr dos 03 version dr dos tailored desktop caldera relocate dr dos business closed successful operation february 1999 gross resigned set icentrix develop marionet split browser development moved total lack expertise field caldera dr dos fell branch company caldera clients renamed lineo 20 july 1999 dr webspyder renamed embrowser ported linux lineo released dr dos 03 june september 1999 branded caldera dr dos focussed linux embedded systems based stripped version openlinux named embedix independently developed versions dr dos oem dr dos 04 19 august 1999 05 30 november 1999 branded caldera dr dos variants consisting kernel command specialized native implementation fat32 hard disk support bundled ontrack easy recovery 2000 replacing dynamically loadable drfat32 redirector driver easy recovery seagate technology seatools imaging software nero burning rom reporting bdos internally versions report pc dos applications integrated fat32 support designed compatible dr dos 04 05 ibmbio combined dr dos 03 ibmdos desktop approved dr dos 03 kernel lba capabilities drives larger specific oem requirements dr dos 06 14 december 1999 wightman combined kernel files single binary executable sys windows 98 booted dos boot sectors dr dos boot sectors dr dos 07 bdos paul introduced bootstrap loaders updated disk tools combine support chs lba disk access fat12 fat16 fat32 file systems differing bootstrapping conventions dr dos pc dos dos windows real 32 loader single mbr boot sector code continue load version dr dos 31 dr dos 04 fat32 support launch pc dos dos files including windows 9x pc dos time kernel booted sectors dr dos formatted disks disks existing pc dos dos boot sectors variety boot loaders easing coexistence setup multi boot scenarios conjunction operating systems versions 2002 lineo bought lineo managers purchased formed company drdos dba devicelogics continued sell dr dos embedded systems dr dos released march 30 2004 featuring fat32 disk support ability boot rom flash multitasking dpmi memory manager version based kernel version 03 company released dr dos fat32 support autumn 2005 version based opendos 01 xx withdrawn gpl violation controversies selling copies operating drdos lists buyout option dr dos price 25 000 opendos 01 source code base dr dos opendos enhancement project set july 2002 attempt bring functionality dr dos parity modern pc windows operating systems project native support disks lba fat32 file enhancements including improved memory management support fat32 file extension files 256 size normal fat partitions dr dos 01 08 released july 21 2011 controversies october 2005 discovered dr dos included utilities freedos sources kernel outdated version enhanced dr dos kernel dr dos failed comply gnu public license gpl crediting freedos utilities authors including source code complaints freedos developers including suggestion provide source code comply gpl dr dos withdrew version unaffected 
66294	computerscience	reinforcement learning rl machine learning concerned software agents actions environment maximize notion cumulative reward generality studied disciplines game theory control theory operations theory simulation based optimization multi agent systems swarm intelligence statistics genetic algorithms operations control literature reinforcement learning called approximate dynamic programming neuro dynamic programming reinforcement learning studied theory optimal control concerned existence characterization optimal solutions algorithms exact computation learning approximation absence mathematical model environment economics game theory reinforcement learning explain equilibrium bounded rationality machine learning environment typically formulated markov decision process mdp reinforcement learning algorithms context utilize dynamic programming techniques main difference classical dynamic programming methods reinforcement learning algorithms assume knowledge exact mathematical model mdp target mdps exact methods infeasible reinforcement learning considered machine learning paradigms supervised learning unsupervised learning differs supervised learning correct input output pairs optimal actions explicitly corrected focus performance involves finding balance exploration uncharted territory exploitation current knowledge exploration exploitation trade studied multi armed bandit finite mdps introduction basic reinforcement modeled markov decision process rules stochastic observation typically involves scalar reward transition agent assumed observe current environmental observability agent partial observability set actions agent restricted balance reduced reinforcement learning agent interacts environment discrete time steps time agent receives observation typically includes reward chooses action 11 set actions subsequently environment environment moves 12 reward 13 transition 14 determined goal reinforcement learning agent collect reward agent randomly choose action function history agent performance compared agent acts optimally difference performance rise notion regret optimally agent reason term consequences actions maximize future income reward negative reinforcement learning suited include term short term reward trade applied including robot control elevator scheduling telecommunications backgammon checkers alphago elements reinforcement learning powerful samples optimize performance function approximation deal environments key components reinforcement learning environments situations considered planning form model considered genuine learning reinforcement learning converts planning machine learning exploration reinforcement learning requires clever exploration mechanisms randomly selecting actions reference estimated probability distribution poor performance finite markov decision processes understood lack algorithms properly scale scale infinite spaces simple exploration methods practical method 15 greedy agent chooses action believes term probability 16 action satisfies condition agent chooses action uniformly random 17 tuning parameter changed fixed schedule agent explore progressively adaptively based heuristics algorithms control learning issue exploration disregarded observable assumed remains experience actions criterion optimality policy agent action selection modeled map called policy policy map probability action probabilistic policies function function 22 defined expected return starting 24 successively policy 25 roughly speaking function estimates random variable 27 denotes return defined sum future discounted rewardswhere reward step 30 31 discount rate algorithm policy maximum expected return theory mdps loss generality search restricted set called stationary policies policy stationary action distribution returned depends visited observation agent history search restricted deterministic stationary policies deterministic stationary policy deterministically selects actions based current policy identified mapping set set actions policies identified mappings loss generality brute force brute force approach entails steps policies infinite variance returns requires samples accurately estimate return policy ameliorated assume structure samples generated policy influence estimates main approaches achieving function estimation direct policy search function function approaches attempt policy maximizes return maintaining set estimates expected returns policy current optimal policy methods rely theory mdps optimality defined sense stronger policy called optimal achieves expected return initial initial distributions play role definition optimal policy stationary policies define optimality formal manner define policy 25 bywhere 27 stands return 25 initial defining 37 maximum 38 25 allowed change policy achieves optimal values called optimal policy optimal strong sense optimal sense maximizes expected return 41 42 43 randomly sampled distribution 44 values suffice define optimality define action values action policy 25 action pair 48 25 defined bywhere 27 stands random return action 25 theory mdps 55 optimal policy optimally optimal action choosing action 56 action function optimal policy 58 called optimal action function commonly denoted 59 summary knowledge optimal action function suffices optimally assuming knowledge mdp basic approaches compute optimal action function iteration policy iteration algorithms compute sequence functions 60 61 converge 59 computing functions involves computing expectations space impractical finite mdps reinforcement learning methods expectations approximated averaging samples function approximation techniques cope represent functions action spaces monte carlo methods monte carlo methods algorithm mimics policy iteration policy iteration consists steps policy evaluation policy improvement monte carlo policy evaluation step step stationary deterministic policy 25 goal compute function values 64 approximation action pairs 48 assuming simplicity mdp finite sufficient memory accommodate action values episodic episode starts random initial estimate action pair 48 computed averaging sampled returns originated 48 time sufficient time procedure construct precise estimate 68 action function 69 finishes description policy evaluation step policy improvement step policy computing greedy policy respect 68 policy returns action maximizes 72 practice lazy evaluation defer computation maximizing actions procedure include temporal difference methods corrected allowing procedure change policy values settle problematic prevent convergence current algorithms rise class generalized policy iteration algorithms actor critic methods belong category issue corrected allowing trajectories contribute action pair extent solution returns variance sutton temporal difference methods based recursive bellman equation note computation methods incremental transition memory changed transition thrown batch transitions batched estimates computed based batch batch methods squares temporal difference method samples incremental methods choice batch methods infeasible computational memory complexity methods combine approaches methods based temporal differences overcome fourth issue address issue function approximation methods linear function approximation starts mapping 73 assigns finite dimensional vector action pair action values action pair 48 linearly combining components 75 weights 76 algorithms adjust weights adjusting values individual action pairs methods based ideas nonparametric statistics construct features explored iteration starting rise learning algorithm variants action values highly precise estimates competing action values hard returns noisy mitigated extent temporal difference methods called compatible function approximation method compromises generality efficiency specific reliance recursive bellman equation methods called 78 parameter 79 continuously interpolate monte carlo methods rely bellman equations basic methods rely bellman equations effective palliating issue direct policy search alternative method search subset policy space stochastic optimization approaches gradient based gradient methods gradient based methods policy gradient methods start mapping finite dimensional parameter space space policies parameter vector 76 81 denote policy 76 defining performance function byunder mild conditions function differentiable function parameter vector 76 gradient 85 gradient ascent analytic expression gradient noisy estimate estimate constructed rise algorithms williams reinforce method likelihood ratio method simulation based optimization literature policy search methods robotics context policy search methods stuck local optima based local search class methods avoids relying gradient include simulated annealing cross entropy search methods evolutionary computation gradient methods achieve theory limit global optimum policy search methods converge slowly noisy data episodic trajectories variance returns function based methods rely temporal differences actor–critic methods proposed performed theory asymptotic finite sample behavior algorithms understood algorithms provably online performance addressing exploration issue efficient exploration mdps unexplored bandit finite time performance bounds appeared algorithms bounds expected loose understand relative advantages limitations incremental algorithms asymptotic convergence issues settled temporal difference based algorithms converge wider set conditions arbitrary smooth function approximation topics include multiagent distributed reinforcement learning topic applications expanding reinforcement learning algorithms learning investigation model dopamine based learning brain model dopaminergic projections substantia nigra basal ganglia function prediction error reinforcement learning model human skill learning relation interaction implicit explicit learning skill acquisition publication application 1995 1996 comparison reinforcement learning algorithms deep reinforcement learning approach extends reinforcement learning deep neural network explicitly designing space learning atari games google deepmind increased attention deep reinforcement learning reinforcement learning inverse reinforcement learning inverse reinforcement learning irl reward function reward function inferred observed behavior expert idea mimic observed behavior optimal close optimal apprenticeship learning apprenticeship learning expert demonstrates target behavior recover policy observation literature conferences journals reinforcement learning papers published major machine learning conferences icml nips aaai ijcai uai statistics journals jair jmlr machine learning journal ieee ciaig theory papers published colt alt papers robotics conferences iros icra agent conference aamas operations researchers publish papers informs conference operation mathematics operations journals control researchers publish papers cdc acc conferences journals ieee transactions automatic control automatica applied tend published specialized journals winter simulation conference publishes relevant papers papers published major conferences neural networks fuzzy evolutionary computation communities annual ieee symposium titled approximate dynamic programming reinforcement learning adprl biannual european workshop reinforcement learning ewrl regularly held meetings rl researchers meet 
66338	computerscience	holography science practice holograms typically hologram photographic recording light field image formed lens display dimensional image holographed subject aid special glasses intermediate optics hologram image unintelligible viewed diffuse ambient light encoding light field interference pattern seemingly random variations opacity density surface profile photographic medium suitably lit interference pattern diffracts light reproduction original light field objects exhibiting visual depth cues parallax perspective change realistically change relative position observer pure form holography requires laser light illuminating subject viewing finished hologram comparison optimal conditions holographic image visually indistinguishable actual subject microscopic level recorded volume space reproduced common practice major image quality compromises eliminate laser illumination viewing hologram extent holographic portraiture resorts holographic intermediate imaging procedure avoid hazardous powered pulsed lasers optically freeze living subjects perfectly extremely motion intolerant holographic recording process requires holograms generated objects scenes existed holography distinct lenticular earlier autostereoscopic 3d display technologies produce superficially based conventional lens imaging stage illusions pepper ghost unusual baffling seemingly magical images incorrectly called holograms overview history hungarian british physicist dennis gabor hungarian gábor dénes awarded nobel prize physics 1971 development holographic method late 1940s built pioneering field ray microscopy scientists including mieczysław wolfke 1920 william lawrence bragg 1939 discovery unexpected result improving electron microscopes british thomson houston bth company rugby england company filed patent december 1947 patent gb685286 technique originally invented electron microscopy electron holography optical holography advance development laser 1960 word holography greek holos graphē writing drawing development laser enabled practical optical holograms recorded 3d objects 1962 yuri denisyuk soviet union emmett leith juris upatnieks university michigan usa holograms silver halide photographic emulsions recording medium efficient produced grating absorbed incident light methods converting variation transmission variation refractive bleaching developed enabled efficient holograms produced types holograms transmission holograms produced leith upatnieks viewed shining laser light reconstructed image hologram source refinement rainbow transmission hologram convenient illumination white light lasers rainbow holograms commonly security authentication credit cards product packaging common hologram reflection denisyuk hologram viewed white light illumination source hologram viewer type hologram holographic displays capable multicolour image reproduction specular holography technique dimensional images controlling motion specularities dimensional surface reflectively refractively manipulating bundles light rays gabor style holography diffractively reconstructing wavefronts holograms produced static objects systems displaying changing scenes holographic volumetric display developed holograms store retrieve process optically days holography required power expensive lasers nowadays mass produced cost semi conductor diode lasers millions dvd recorders common applications holograms holography accessible budget researchers artists dedicated hobbyists rays holograms objects view visible light holograms rays generated synchrotrons ray electron lasers radiation sources pixelated detectors ccds recording medium reconstruction retrieved computation shorter wavelength rays compared visible light approach imaging objects spatial resolution electron lasers provide ultrashort ray pulses range femtoseconds intense coherent ray holography capture ultrafast dynamic processes holography technique enables light field product light source scattered objects recorded reconstructed original light field absence original objects holography sound recording sound field created vibrating matter musical instruments vocal cords encoded reproduced presence original vibrating matter laser laser holography hologram recorded source laser light pure color orderly composition setups types holograms involve interaction light coming directions producing microscopic interference pattern plate film medium photographically records common arrangement laser beam split object beam reference beam object beam expanded passing lens illuminate subject recording medium located light reflected scattered subject strike edges medium ultimately serve window subject location chosen mind reference beam expanded shine medium interacts light coming subject create desired interference pattern conventional photography holography requires exposure time correctly affect recording medium conventional photography exposure light source optical elements recording medium subject remain perfectly motionless relative quarter wavelength light interference pattern blurred hologram spoiled living subjects unstable materials intense extremely pulse laser light hazardous procedure rare rarely scientific industrial laboratory settings exposures lasting minutes powered continuously operating laser typical apparatus hologram shining light beam recording medium object scattered light falls recording medium flexible arrangement recording hologram requires laser beam aimed series elements change element beam splitter divides beam identical beams aimed directions materials recording medium common film photographic film silver halide photographic emulsion concentration light reactive grains capable resolution holograms require layer recording medium silver halide attached transparent substrate commonly glass plastic process laser beams reach recording medium light waves intersect interfere interference pattern imprinted recording medium pattern seemingly random represents scene light interfered original light source original light source interference pattern considered encoded version scene requiring key original light source view contents missing key shining laser identical record hologram developed film beam illuminates hologram diffracted hologram surface pattern produces light field identical originally produced scene scattered hologram photography holography understood examination differences ordinary photography physics holography understanding process understand interference diffraction interference occurs wavefronts superimposed diffraction occurs wavefront encounters object process producing holographic reconstruction explained purely terms interference diffraction simplified accurate understanding holographic process unfamiliar concepts worth read articles reading article plane wavefronts diffraction grating structure repeating pattern simple metal plate slits cut regular intervals light wave incident grating split waves direction diffracted waves determined grating spacing wavelength light simple hologram superimposing plane waves light source holographic recording medium waves interfere straight fringe pattern intensity varies sinusoidally medium spacing fringe pattern determined angle waves wavelength light recorded light pattern diffraction grating illuminated waves create diffracted waves emerges angle wave originally incident wave constructed recorded light pattern holographic recording defined sources recording medium illuminated source incident plane wave pattern sinusoidal zone plate acts negative fresnel lens focal equal separation source recording plane plane wave illuminates negative lens expanded wave appears diverge focal lens recorded pattern illuminated original plane wave light diffracted diverging beam equivalent original spherical wave holographic recording source created plane wave incident normal angle time recording pattern formed complex acts negative lens illuminated original angle complex objects record hologram complex object laser beam split beams light beam illuminates object scatters light recording medium diffraction theory object acts source light recording medium considered illuminated set sources located varying distances medium reference beam illuminates recording medium source wave interferes reference beam rise sinusoidal zone plate recording medium pattern sum zone plates combine produce random speckle pattern photograph hologram illuminated original reference beam individual zone plates reconstructs object wave produced individual wavefronts combined reconstruct object beam viewer perceives wavefront identical wavefront scattered object recording medium appears object removed mathematical model single frequency light wave modeled complex represents electric magnetic field light wave amplitude phase light represented absolute angle complex object reference waves holographic uo ur combined beam uo ur energy combined beams proportional square magnitude combined waves asif photographic plate exposed beams developed transmittance proportional light energy incident plate bywhere constant developed plate illuminated reference beam light transmitted plate uh equal transmittance multiplied reference beam amplitude ur givingit uh terms representing light beam emerging hologram proportional uo reconstructed object beam enables viewer original object field view beams modified versions reference beam fourth term conjugate object beam reverse curvature object beam forms real image object space holographic plate reference object beams incident holographic recording medium angles virtual real reference wavefronts emerge angles enabling reconstructed object recording hologram items required hologram required requirements inter essential understand nature optical interference interference variation intensity occur light waves superimposed intensity maxima exceeds sum individual intensities beams intensity minima interference pattern maps relative phase waves change relative phases interference pattern field view relative phase waves cycle pattern drifts fringe phase cycle corresponds change relative distances travelled beams wavelength wavelength light 5 μm optical paths travelled beams holographic recording lead movement interference pattern holographic recording caused relative movements optical components object local air temperature essential wavelength light defined recording interference created exposure time required record hologram depends laser power medium size nature object recorded conventional photography determines stability requirements exposure times minutes typical powerful gas lasers silver halide emulsions elements optical stable fractions μm period holograms stable objects pulsed laser produces energy short time μs systems produce holograms live people holographic portrait dennis gabor produced 1971 pulsed ruby laser laser power recording medium sensitivity recording time mechanical thermal stability requirements interlinked object compact optical layout stability requirements holograms objects laser parameter coherence envisaged laser producing sine wave frequency drifts time coherence considered distance maintains single frequency waves frequencies produce stable interference pattern coherence laser determines depth field recorded scene holography laser typically coherence meters ample deep hologram objects form scene optically rough surfaces scatter light wide range angles specularly reflecting shiny surface reflects light direction surface light incident recording medium hologram shiny object locating close recording plate hologram classifications properties hologram defined hologram properties amplitude modulated transmission hologram phase modulated volume reflection hologram amplitude phase modulation holograms amplitude modulation hologram amplitude light diffracted hologram proportional intensity recorded light straightforward photographic emulsion transparent substrate emulsion exposed interference pattern subsequently developed transmittance varies intensity pattern – light fell plate darker developed plate phase hologram changing thickness refractive material proportion intensity holographic interference pattern phase grating plate illuminated original reference beam reconstructs original object wavefront efficiency fraction illuminated object beam converted reconstructed object beam phase amplitude modulated holograms holograms volume holograms hologram thickness recording medium spacing interference fringes holographic recording thickness hologram 60 nm topological insulator material sb2te3 film ultrathin holograms hold potential integrated everyday consumer electronics smartphones volume hologram thickness recording medium spacing interference pattern recorded hologram dimensional structure incident light diffracted grating angle bragg angle hologram illuminated light source incident original reference beam angle broad spectrum wavelengths reconstruction occurs wavelength original laser angle illumination changed reconstruction occur wavelength colour constructed scene volume hologram effectively acts colour filter transmission reflection holograms transmission hologram object reference beams incident recording medium practice mirrors direct beams required directions transmission holograms reconstructed laser quasi monochromatic source type transmission hologram rainbow hologram viewed white light reflection hologram object reference beams incident plate plate reconstructed object viewed plate constructing beam incident volume holograms reflection holograms intensity diffracted beam reflected hologram holographic recording media recording medium convert original interference pattern optical element modifies amplitude phase incident light beam proportion intensity original light field recording medium resolve fringes arising interference object reference beam fringe spacings range tens micrometers micrometer spatial frequencies ranging cycles ideally recording medium response flat range photographic film response frequencies involved hologram – kodak professional black white film resolution starts falling 20 lines reconstructed beam film response flat range spatial frequencies interference pattern resolution reconstructed image degraded table principal materials holographic recording note include materials mass replication existing hologram discussed resolution limit table maximal interference lines gratings required exposure expressed millijoules mj photon energy impacting surface exposure time short exposure times pulsed laser require exposure energies reciprocity failure copying mass production existing hologram copied embossing optically holographic recordings bleached silver halide photoresist photopolymers surface relief patterns conform original illumination intensity embossing method stamp plastic discs master audio recording involves copying surface relief pattern impressing material step embossing process stamper electrodeposition nickel relief image recorded photoresist photothermoplastic nickel layer separated master hologram mounted metal plate material embossed copies consists polyester base film resin separation layer thermoplastic film constituting holographic layer embossing process carried simple heated press layer duplicating film thermoplastic layer heated softening pressed stamper takes shape shape retained film cooled removed press permit viewing embossed holograms reflection additional reflecting layer aluminum hologram recording layer method suited mass production book feature hologram cover skook warner books 1984 miller featuring illustration miller record album cover hologram ub40 ub44 album cover produced 1982 british ub40 advanced holographics loughborough featured 75 square embossed hologram 3d image letters ub carved polystyrene stone 44 hovering space picture plane sleeve explanation holographic process instructions light hologram national geographic published magazine hologram cover march 1984 embossed holograms credit cards banknotes products authentication purposes print holograms steel sheet explosive charge create required surface relief royal canadian mint produces holographic gold silver coinage complex stamping process hologram copied optically illuminating laser beam locating hologram plate illuminated reconstructed object beam illuminating beam stability coherence requirements reduced plates located close matching fluid plates minimize spurious interference plates uniform illumination scanning beam shaped reconstructing viewing holographic image hologram plate illuminated laser beam identical reference beam record hologram exact reconstruction original object wavefront imaging eye camera located reconstructed beam ees scene viewing original lens moved image object objects hologram recorded reconstructed objects relative exhibit parallax original objects common days holography chess board object photographs angles reconstructed light relative positions chess pieces appeared change holographic image laser beam configuration original recording object beam reconstructed image match original laser reconstruct hologram image speckled original image major drawback viewing hologram white light consists light wide range wavelengths hologram illuminated white light source wavelength considered generate holographic reconstruction vary size angle distance superimposed summed image wipe original scene superimposing set photographs object sizes orientations holographic image white light specific circumstances volume holograms rainbow holograms white light source view holograms approximate source spot light sun extended source fluorescent lamp reconstruct hologram light incident wide range angles multiple reconstructions wipe white light reconstructions speckles volume holograms reflection type volume hologram acceptably reconstructed image white light source hologram structure effectively filters light wavelengths narrow range theory result image colour laser light hologram practice recording media require chemical processing typically compaction structure processing consequent colour shift shorter wavelength hologram recorded silver halide gelatin emulsion red laser light display green image deliberate temporary alteration emulsion thickness exposure permanent alteration processing artists produce unusual colours multicoloured effects rainbow holograms method parallax vertical plane sacrificed bright defined gradiently colored reconstructed image white light rainbow holography recording process standard transmission hologram copies horizontal slit eliminate vertical parallax output image viewer effectively viewing holographic image narrow horizontal slit slit expanded window dispersion smear entire image horizontal parallax preserved movement vertical direction color shift altered vertical perspective perspective effects reproduced axis subject variously stretched squashed hologram viewed optimum distance distortion unnoticed depth severe distance subject plane hologram substantial stereopsis horizontal motion parallax powerful cues depth preserved holograms credit cards examples rainbow holograms technically transmission holograms mounted reflective surface metalized polyethylene terephthalate substrate commonly pet fidelity reconstructed beam replicate original object beam reconstructing reference beam identical original reference beam recording medium resolve interference pattern formed object reference beams exact reconstruction required holographic interferometry holographically reconstructed wavefront interferes wavefront coming actual object fringe movement object mapping displacement object moved requires precise relocation developed holographic plate change shape orientation wavelength reference beam rise aberrations reconstructed image instance reconstructed image magnified laser reconstruct hologram shorter wavelength original laser reconstruction laser wavelength quasi monochromatic light white light circumstances object illuminates hologram object reconstructed hologram hologram broken pieces enable original object imaged lose spatial resolution worse size hologram decreased image fuzzier field view reduced viewer change position scene applications art artists potential holography medium gained access science laboratories create holographic art result collaborations scientists artists holographers regard artist scientist salvador dalí claimed employ holography artistically surrealist 1972 york exhibit dalí holograms preceded holographic art exhibition held cranbrook academy art michigan 1968 finch college gallery york 1970 attracted national media attention britain margaret benyon holography artistic medium late 1960s solo exhibition university nottingham art gallery 1969 1970 solo lisson gallery london billed london expo holograms stereoscopic paintings 1970s art studios schools established approach holography notably san francisco school holography established lloyd cross museum holography york founded rosemary posy jackson royal college art london lake forest college symposiums organised tung jeong studios exist center holographic arts york holocenter seoul offers artists create exhibit 1980s artists holography helped diffusion called medium art harriet casdin silver united dieter jung germany moysés baumstein brazil searching proper language dimensional avoiding simple holographic reproduction sculpture object instance brazil concrete poets augusto campos décio pignatari julio plaza josé wagner garcia moysés baumstein holography express renew concrete poetry active artists integrate holographic elements holographic techniques artist matt brand employed computational mirror design eliminate image distortion specular holography mit museum jonathan ross extensive collections holography catalogues art holograms data storage holography variety recording images holographic data storage technique store density crystals photopolymers ability store amounts medium electronic products incorporate storage devices current storage techniques blu ray disc reach limit data density diffraction limited size writing beams holographic storage potential generation popular storage media advantage type data storage volume recording media surface slms produce 1000 images 1024×1024 bit resolution type medium polymers linbo3 result gigabit writing speed read speeds surpass experts terabit readout 2005 companies optware maxell produced 120mm disc holographic layer store data potential 9tb format called holographic versatile disc september 2014 commercial product released company inphase technologies developing competing format bankrupt 2011 assets sold akonia holographics llc holographic data storage models based storage recorded hologram holds data submicrometre sized microholograms potential 3d optical data storage solutions approach data storage attain data rates based storage tolerances technological hurdles cost producing commercial product dynamic holography static holography recording developing reconstructing occur sequentially permanent hologram produced exist holographic materials developing process record hologram short time holography perform simple operations optical examples applications real time holograms include phase conjugate mirrors time reversal light optical cache memories image processing pattern recognition time varying images optical computing processed terabits operation performed parallel image compensates recording time microsecond compared processing time electronic optical processing performed dynamic hologram flexible electronic processing perform operation image operation hologram perform basically multiplication phase conjugation optics addition fourier transform easily performed linear materials simply lens enables applications device compares images optical search nonlinear optical materials dynamic holography active common materials photorefractive crystals semiconductors semiconductor heterostructures quantum atomic vapors gases plasmas liquids generate holograms promising application optical phase conjugation removal wavefront distortions light beam receives passing aberrating medium sending aberrating medium conjugated phase space optical communications compensate atmospheric turbulence phenomenon rise twinkling starlight hobbyist holography amateur experimenters explored 1971 lloyd cross san francisco school holography taught amateurs holograms typically 5 mw helium neon laser inexpensive equipment holography supposed require expensive metal optical table set lock involved elements damp vibrations blur interference fringes ruin hologram cross brew alternative sandbox cinder block retaining wall plywood base supported stacks tires isolate ground vibrations filled sand washed remove dust laser securely mounted atop cinder block wall mirrors simple lenses directing splitting expanding laser beam affixed short lengths pvc pipe stuck sand desired locations subject photographic plate holder supported sandbox holographer light blocked laser beam source relay controlled shutter loaded plate holder dark left waited minutes settle exposure remotely operating laser shutter holographers produce art holograms 1983 fred unterseher founder san francisco school holography holographic artist published holography handbook easy read guide holograms brought wave holographers simple methods agfa silver halide recording materials 2000 frank defreitas published shoebox holography book introduced inexpensive laser pointers countless hobbyists assumed characteristics semiconductor laser diodes virtually useless creating holograms eventually practical experiment untrue coherence traditional helium neon gas lasers development amateurs price red laser diodes dropped hundreds dollars 1980s entered mass market component dvd players late 1990s thousands amateur holographers worldwide late 2000 holography kits inexpensive laser pointer diodes entered mainstream consumer market kits enabled students teachers hobbyists kinds holograms specialized equipment popular gift items 2005 introduction holography kits developing plates 2003 hobbyists create holograms bother wet chemical processing 2006 surplus holography quality green lasers coherent c315 dichromated gelatin dcg holography reach amateur holographer holography community surprised amazing sensitivity dcg green light assumed sensitivity uselessly slight existent jeff blyth responded g307 formulation dcg increase speed sensitivity lasers kodak agfa major suppliers holography quality silver halide plates films market manufacturers helped void amateurs materials favorite formulations dichromated gelatin methylene blue sensitised dichromated gelatin diffusion method silver halide preparations jeff blyth published accurate methods lab garage amateurs constructing pulsed lasers holograms living subjects unsteady moving objects holographic interferometry holographic interferometry technique enables static dynamic displacements objects optically rough surfaces measured optical interferometric precision fractions wavelength light detect optical path variations transparent media enables fluid flow visualized analyzed generate contours representing form surface isodose regions radiation dosimetry measure stress strain vibration engineering structures interferometric microscopy hologram amplitude phase field holograms distribution light emitted directions numerical analysis holograms emulate numerical aperture enables enhancement resolution optical microscopy technique called interferometric microscopy achievements interferometric microscopy approach quarter wavelength limit resolution sensors biosensors hologram modified material interacts molecules generating change fringe periodicity refractive color holographic reflection security security holograms difficult forge replicated master hologram requires expensive specialized technologically advanced equipment currencies brazilian 20 50 100 reais notes british 20 pound notes south korean 5000 000 50 000 notes japanese 5000 000 yen notes indian 50 100 500 2000 rupee notes circulating banknotes canadian dollar danish krone euro credit bank cards passports cards books dvds sports equipment covertly storing colour image hologram achieved canada 2008 uhr lab method fourth wavelength rgb components object reference beams record additional data retrieved correct key combination wavelength angle technique remained prototype stage developed commercial applications applications holographic scanners post offices larger shipping firms automated conveyor systems determine dimensional size package tandem checkweighers automated pre packing volumes truck pallet bulk shipment holograms produced elastomers stress strain reporters elasticity compressibility pressure force applied correlated reflected wavelength color fmcg industrythese hologram adhesive strips provide protection counterfeiting duplication products protective strips fmcg products cards medicines food audio visual products hologram protection strips laminated product covering electrical electronic products hologram tags excellent ability inspect identical product tags protecting duplication electrical electronic products tags variety colors sizes shapes hologram dockets vehicle plate vehicle plates bikes cars registered hologram stickers authenticity purpose identification unique security holograms credit cards holograms security features micro texts nano texts complex images logos multitude features holograms affixed debit cards passports removed easily offer individual identity brand protection optical principle hologram wave electron holography application holography techniques electron waves light waves electron holography invented dennis gabor improve resolution avoid aberrations transmission electron microscope commonly study electric magnetic fields films magnetic electric fields shift phase interfering wave passing sample principle electron holography applied interference lithography acoustic holography method estimate sound field source measuring acoustic parameters source array pressure particle velocity transducers measuring techniques included acoustic holography increasingly popular fields notably transportation vehicle aircraft design nvh idea acoustic holography led versions field acoustic holography nah statistically optimal field acoustic holography sonah audio rendition wave field synthesis procedure atomic holography evolved development basic elements atom optics fresnel diffraction lens atomic mirrors atomic holography natural step development physics applications atomic beams developments including atomic mirrors ridged mirrors tools creation atomic holograms holograms commercialized neutron beam holography solid objects false holograms effects produced lenticular printing pepper ghost illusion modern variants musion eyeliner tomography volumetric displays confused holograms illusions called fauxlography pepper ghost technique easiest implement methods prevalent 3d displays claim referred holographic original illusion theater involved actual physical objects persons located offstage modern variants replace source object digital screen displays imagery generated 3d graphics provide depth cues reflection float mid air flat realistic actual 3d object reflected examples digital version pepper ghost illusion include gorillaz performances 2005 mtv europe music awards 48th grammy awards tupac shakur virtual performance coachella valley music arts festival 2012 rapping snoop dogg set dr dre simpler illusion created rear projecting realistic images semi transparent screens rear projection semi transparency screen background illuminated projection break illusion crypton future media music software company produced hatsune miku vocaloid singing synthesizer applications produced concerts miku crypton vocaloids performing stage holographic characters concerts rear projection semi transparent dilad screen achieve holographic 2011 beijing apparel company burberry produced burberry prorsum autumn winter 2011 hologram runway included life size projections models company video centered center shots main dimensional projection screen revealing flatness virtual models claim holography reported trade media madrid april 2015 public visual presentation called hologramas por libertad holograms liberty featuring ghostly virtual crowd demonstrators protest spanish law prohibits citizens demonstrating public called hologram protest news reports actual holography involved technologically updated variant pepper ghost illusion fiction holography referred movies novels science fiction starting late 1970s science fiction writers absorbed urban legends surrounding holography spread overly enthusiastic scientists entrepreneurs market idea public overly expectations capability holography unrealistic depictions fiction dimensional projections tactile force fields examples type depiction include hologram princess leia star wars arnold rimmer red dwarf converted hard light solid holodeck star trek video games fictional holographic technology reflected real life misrepresentations potential military holograms mirage tanks disguise trees holographic decoys games halo reach crysis fictional depictions holograms inspired technological advances fields augmented reality promise fulfill fictional depictions holograms 
66924	computerscience	memory management form resource management applied memory essential requirement memory management provide dynamically allocate portions memory programs request reuse critical advanced single process underway time methods devised increase effectiveness memory management virtual memory systems separate memory addresses process actual physical addresses allowing separation processes increasing size virtual address space ram paging swapping secondary storage quality virtual memory manager extensive performance details application level memory management categorized automatic memory management involving garbage collection manual memory management dynamic memory allocation task fulfilling allocation request consists locating block unused memory sufficient size memory requests satisfied allocating portions pool memory called heap store time heap unused future allocations issues complicate implementation external fragmentation arises gaps allocated memory blocks invalidates allocation request allocator metadata inflate size individually allocations managed chunking memory management track outstanding allocations ensure overlap memory lost memory leak efficiency specific dynamic memory allocation algorithm implemented impact performance study conducted 1994 digital equipment corporation illustrates overheads involved variety allocators lowest average instruction path required allocate single memory slot 52 measured instruction level profiler variety software implementations precise location allocation advance memory accessed indirectly pointer reference specific algorithm organize memory allocate deallocate chunks interlinked kernel methods fixed size blocks allocation fixed size blocks allocation called memory pool allocation list fixed size blocks memory size simple embedded systems objects allocated suffers fragmentation memory addresses reduced overhead method improve performance objects frequent allocation allocation video games buddy blocks memory allocated pools memory pool represents blocks memory power size blocks convenient size progression blocks size sorted linked list tree blocks formed allocation respective memory pools size requested size selected split selected process repeats request complete block allocated allocator start block avoid needlessly breaking blocks block freed compared buddy combined correspondingly larger sized buddy block list slab allocation memory allocation mechanism preallocates memory chunks suitable fit objects type size chunks called caches allocator track list cache slots constructing object cache slots destructing object add slot cache slot list technique alleviates memory fragmentation efficient search suitable portion memory slot suffice automatic variables programming language implementations variables declared procedure subroutine function local function runtime environment program automatically allocates memory variables program execution entry procedure automatically releases memory procedure exited special declarations local variables retain values invocations procedure local variables accessed procedures automatic allocation local variables recursion depth limited memory garbage collection garbage collection strategy automatically detecting memory allocated objects usable program returning allocated memory pool memory locations method contrast manual memory management programmer explicitly codes memory requests memory releases program automatic garbage advantages reducing programmer workload preventing kinds memory allocation bugs garbage collection require memory resources compete application program processor time systems virtual memory virtual memory method decoupling memory organization physical hardware applications operate memory virtual addresses attempt application access virtual memory address virtual memory address translated actual physical address addition virtual memory enables granular control memory systems methods access virtual memory systems operating limits process access memory feature called memory protection disallow process read write memory allocated preventing malicious malfunctioning code program interfering operation memory allocated specific processes isolated processes share shared memory fastest techniques inter process communication memory classified access rate primary storage secondary storage memory management systems operations handle moving levels memory 
67065	computerscience	computational linguistics word sense disambiguation wsd natural language processing ontology wsd identifying sense word meaning sentence word multiple meanings solution impacts writing discourse improving relevance search engines anaphora resolution coherence inference cetera human brain proficient word sense disambiguation natural language formed requires reflection neurologic reality human language developed reflects helped shape innate ability brain neural networks science technology enables term challenge develop ability computers natural language processing machine learning rich variety techniques researched dictionary based methods knowledge encoded lexical resources supervised machine learning methods classifier trained distinct word corpus manually sense annotated examples completely unsupervised methods cluster occurrences inducing word senses supervised learning approaches successful algorithms accuracy current algorithms difficult host caveats english accuracy coarse grained homograph level routinely 90 methods homographs achieving 96 finer grained sense distinctions accuracies 59 69 reported evaluation exercises semeval 2007 senseval baseline accuracy simplest algorithm choosing frequent sense 51 57 disambiguation requires strict inputs dictionary senses disambiguated corpus language data disambiguated methods training corpus language examples required wsd task variants lexical sample task comprises disambiguating occurrences sample target selected piece running disambiguated deemed realistic form evaluation corpus expensive produce human annotators read definitions word sequence time tagging judgement block instances target word hint examples distinct senses exist written word bass sentences people understand english sentence word bass fish sense sentence word bass instrument sense developing algorithms replicate human ability difficult task exemplified implicit equivocation bass sound bass instrument history wsd formulated distinct computational task days machine translation 1940s computational linguistics warren weaver famous 1949 memorandum translation introduced computational context researchers understood significance difficulty wsd bar hillel 1960 argue wsd solved electronic model knowledge 1970s wsd subtask semantic interpretation systems developed field artificial intelligence starting wilks preference semantics wsd systems time rule based hand coded prone knowledge acquisition bottleneck 1980s scale lexical resources oxford advanced learner dictionary current english oald hand coding replaced knowledge automatically extracted resources disambiguation knowledge based dictionary based 1990s statistical revolution swept computational linguistics wsd paradigm apply supervised machine learning techniques 2000s supervised techniques reach plateau accuracy attention shifted coarser grained senses domain adaptation semi supervised unsupervised corpus based systems combinations methods return knowledge based systems graph based methods supervised systems continue perform difficulties differences dictionaries word sense disambiguation deciding senses word bass senses senses closely meaning metaphorical metonymic extension division senses difficult dictionaries thesauruses provide divisions senses solution researchers choose dictionary set senses broad distinctions senses narrow lack fledged coarse grained sense inventory researchers continue fine grained wsd field wsd performed wordnet reference sense inventory english wordnet computational lexicon encodes concepts synonym sets concept car encoded car auto automobile machine motorcar resources disambiguation purposes include roget thesaurus wikipedia babelnet multilingual encyclopedic dictionary multilingual wsd speech tagging real speech tagging sense tagging closely constraints question tasks decoupled unanimously resolved scientists incline separately senseval semeval competitions speech input disambiguate instructive compare word sense disambiguation speech tagging involve disambiguating tagging senses speech algorithms tend speech word determined adjacent sense word determined success rate speech tagging algorithms wsd art 95 accuracy compared 75 accuracy word sense disambiguation supervised learning figures typical english languages inter judge variance inter judge variance wsd systems tested task compared human easy assign speech training people tag senses difficult users memorize speech word impossible individuals memorize senses word humans agree task hand – list senses sentences humans agree word belongs sense human performance serves standard upper bound performance human performance coarse grained fine grained distinctions coarse grained distinctions wsd evaluation exercises pragmatics researchers douglas lenat argue parse meanings form common sense ontology linguistic issue called pragmatics comparing sentences properly identify senses common sense common sense disambiguate pronouns anaphoras cataphoras sense inventory algorithms task dependency task independent sense inventory coherent concept task requires division word meaning senses relevant task ambiguity mouse animal device relevant english french machine translation relevant retrieval true river requires choice french fleuve flows sea rivière flows river completely algorithms required applications machine translation takes form target word selection senses target language correspond meaning distinctions source language bank translate french banque —that financial bank rive —that edge river retrieval sense inventory required word sense query retrieved document sense unimportant discreteness senses finally notion word sense slippery controversial people agree distinctions coarse grained homograph level pen writing instrument enclosure level fine grained polysemy disagreements senseval fine grained sense distinctions human annotators agreed 85 word occurrences word meaning principle infinitely variable context sensitive divide easily distinct discrete meanings lexicographers frequently discover corpora loose overlapping word meanings standard conventional meanings extended modulated exploited bewildering variety art lexicography generalize corpus definitions evoke explain range meaning word behaved semantically meaning distinctions applicable computational applications decisions lexicographers driven considerations task – named lexical substitution – proposed solution sense discreteness task consists providing substitute word context preserves meaning original word substitutes chosen lexicon target language overcoming discreteness approaches methods natural language processing main approaches wsd – deep approaches shallow approaches deep approaches presume access comprehensive body knowledge knowledge fishing type fish frequency sounds songs frequency sounds types fish determine sense word bass approaches successful practice body knowledge exist readable format limited domains knowledge exist deep approaches accurate shallow approaches tradition computational linguistics approaches terms coded knowledge hard knowledge involved linguistic knowledge attempt margaret masterman colleagues cambridge language unit england 1950s attempt data punched card version roget thesaurus numbered heads indicator topics looked repetitions set intersection algorithm successful strong relationships yarowsky machine learning optimisation thesaurus method 1990s shallow approaches understand surrounding bass sea fishing nearby fish sense bass music song nearby music sense rules automatically derived training corpus tagged word senses approach theoretically powerful deep approaches superior practice limited knowledge confused sentences dogs bark tree word bark tree dogs conventional approaches wsd approaches defining window content word disambiguated corpus statistically analyzing surrounding shallow approaches train disambiguate naïve bayes classifiers decision trees kernel based methods support vector machines superior performance supervised learning graph based approaches gained attention community achieve performance close art dictionary knowledge based methods lesk algorithm seminal dictionary based method based hypothesis relation observed definitions senses disambiguated finding pair dictionary senses word overlap dictionary definitions disambiguating pine cone definitions senses include evergreen tree dictionary approach searches shortest path word iteratively searched definitions semantic variant word definitions semantic variant word previous definitions finally word disambiguated selecting semantic variant minimizes distance word alternative definitions word sense relatedness compute semantic similarity pair word senses based lexical knowledge base wordnet graph based methods reminiscent spreading activation days applied success complex graph based approaches perform supervised methods outperforming specific domains reported simple graph connectivity measures degree perform art wsd presence rich lexical knowledge base automatically transferring knowledge form semantic relations wikipedia wordnet boost simple knowledge based methods enabling rival supervised systems outperform domain specific setting selectional preferences selectional restrictions knowing typically cooks food disambiguate word bass cooking basses musical instrument supervised methods supervised methods based assumption context provide evidence disambiguate common sense reasoning deemed unnecessary machine learning algorithm applied wsd including techniques feature selection parameter optimization ensemble learning support vector machines memory based learning successful approaches cope dimensionality feature space supervised methods subject knowledge acquisition bottleneck rely substantial amounts manually sense tagged corpora training laborious expensive create semi supervised methods lack training data word sense disambiguation algorithms semi supervised learning labeled unlabeled data yarowsky algorithm algorithm ‘one sense collocation’ ‘one sense discourse’ properties human languages word sense disambiguation observation tend exhibit sense discourse collocation bootstrapping approach starts seed data word manually tagged training examples surefire decision rules play context bass musical instrument seeds train initial classifier supervised method classifier untagged portion corpus extract larger training set confident classifications included process repeats classifier trained successively larger training corpus corpus consumed maximum iterations reached semi supervised techniques quantities untagged corpora provide occurrence supplements tagged corpora techniques potential adaptation supervised models domains ambiguous word language translated language depending sense word word aligned bilingual corpora infer cross lingual sense distinctions semi supervised unsupervised methods unsupervised learning challenge wsd researchers underlying assumption senses occur contexts senses induced clustering word occurrences measure similarity context task referred word sense induction discrimination occurrences word classified closest induced clusters senses performance methods comparisons difficult senses induced mapped dictionary word senses mapping set dictionary senses desired cluster based evaluations including measures entropy purity performed alternatively word sense induction methods tested compared application instance word sense induction improves search result clustering increasing quality result clusters degree diversification result lists hoped unsupervised learning overcome knowledge acquisition bottleneck dependent manual effort approaches approaches vary methods local impediments summary knowledge acquisition bottleneck major impediment solving wsd unsupervised methods rely knowledge word senses barely formulated dictionaries lexical databases supervised methods depend crucially existence manually annotated examples word sense requisite met handful testing purposes senseval exercises promising trends wsd largest corpus accessible wide acquire lexical automatically wsd traditionally understood intermediate language engineering technology improve applications retrieval reverse true search engines implement simple robust techniques mining employed wsd lack training data provoked appearing algorithms techniques external knowledge sources knowledge fundamental component wsd knowledge sources provide data essential associate senses vary corpora texts unlabeled annotated word senses machine readable dictionaries thesauri glossaries ontologies classified structured unstructured evaluation comparing evaluating wsd systems extremely difficult sets sense inventories knowledge resources organization specific evaluation campaigns systems assessed house scale data sets algorithm developers spend time annotate word occurrences comparing methods corpus eligible sense inventories define common evaluation datasets procedures public evaluation campaigns organized senseval renamed semeval international word sense disambiguation competition held 1998 senseval 1998 senseval 2001 senseval 2004 successor semeval 2007 objective competition organize lectures preparing hand annotating corpus testing systems perform comparative evaluation wsd systems kinds tasks including lexical sample wsd languages tasks semantic role labeling gloss wsd lexical substitution systems submitted evaluation competitions integrate techniques combine supervised knowledge based methods avoiding bad performance lack training examples 2007 2012 wsd evaluation task choices grown criterion evaluating wsd changed drastically depending variant wsd evaluation task enumerates variety wsd tasks task design choices technology evolves word sense disambiguation wsd tasks grows flavors directions languages 
68181	computerscience	workstation special designed technical scientific applications intended person time commonly connected local network multi user operating systems term workstation loosely refer mainframe terminal pc connected network common form refers hardware offered current defunct companies sun microsystems silicon graphics apollo dec hp ibm door 3d graphics animation revolution late 1990s workstations offered performance mainstream personal computers respect cpu graphics memory capacity multitasking capability workstations optimized visualization manipulation types complex data 3d mechanical design engineering simulation computational fluid dynamics animation rendering images mathematical plots typically form factor desktop consist resolution display keyboard mouse minimum offer multiple displays graphics tablets 3d mice devices manipulating 3d objects navigating scenes workstations segment market advanced accessories collaboration tools increasing capabilities mainstream pcs late 1990s blurred lines technical scientific workstations workstation market employed proprietary hardware distinct pcs instance ibm risc based cpus workstations intel x86 cpus business consumer pcs 1990s 2000s 2000s difference disappeared workstations highly commoditized hardware dominated pc vendors dell hewlett packard hp fujitsu selling windows linux systems running x86 64 processors history origins development qualify workstation ibm 1620 scientific designed interactively single person sitting console introduced 1960 peculiar feature machine lacked actual arithmetic circuitry perform addition required memory resident table decimal addition rules saved cost logic circuitry enabling ibm inexpensive machine code named cadet rented initially 1000 month 1965 ibm introduced ibm 1130 scientific meant successor 1620 systems ability programs written fortran languages 1620 1130 built roughly desk sized cabinets add disk drives printers paper tape punched card console typewriter direct interaction standard examples workstations dedicated minicomputers designed support users exclusively person notable pdp digital equipment corporation regarded commercial minicomputer lisp machines developed mit 1970s pioneered principles workstation performance networked single user systems intended heavily interactive lisp machines commercialized 1980 companies symbolics lisp machines texas instruments ti explorer xerox interlisp workstations designed single users resolution graphics facilities workstation modern sense term xerox alto developed xerox parc 1973 workstations include terak 8510 1977 rivers perq 1979 xerox star 1981 1980s rise popularity 1980s advent 32 bit microprocessors motorola 68000 participants field appeared including apollo sun microsystems created unix based workstations based processor darpa vlsi project created spinoff graphics products notably sgi 3130 silicon graphics range machines uncommon differentiate target market products sun apollo considered network workstations sgi machines graphics workstations risc microprocessors mid 1980s workstation vendors workstations tended expensive typically times cost standard pc costing car minicomputers cost house expense costlier components faster local store inclusion features pcs time speed networking sophisticated graphics workstation manufacturers tend balanced approach design avoid bottlenecks data flow unimpeded subsystems additionally workstations specialized nature tend profit margins commodity driven pcs systems workstation companies feature scsi fibre channel disk storage systems 3d accelerators single multiple 64 bit processors amounts ram designed cooling additionally companies products tend repair replacement plans workstation pc increasingly blurred demand fast computers networking graphics common consumer allowing workstation manufacturers shelf pc components graphics solutions opposed proprietary house developed technology cost workstations expensive pc standards offer binary compatibility workstations servers vendor software development cost relative server desktop machines graphics workstations graphics workstations machines silicon graphics shipped graphics accelerators clients terminals attempts produce workstation machine lowest price opposed performance approach remove local storage reduce machine processor keyboard mouse screen diskless nodes traditional operating perform computations locally storage remote server approaches intended reduce initial purchase cost total cost ownership reducing administration required user approach attempted replacement pcs office productivity applications 3station 3com 1990s terminals filled role technical computing sun introduced clients notably sun ray product traditional workstations pcs continue drop price undercut market products type 3m 1980s workstation meet called 3m megabyte memory megapixel display roughly 1000×1000 megaflops compute performance floating operations limited magnitude capacity personal time original 1981 ibm personal 16 kb memory display floating performance kiloflops 30 kiloflops optional 8087 math coprocessor desirable features desktop computers time included networking graphics acceleration speed internal peripheral data buses goal bring price megapenny 000 achieved late 1980s workstations mid range cost 15 000 100 000 mid 1990s trends leading decline widespread adoption technologies mainstream pcs direct factor decline workstation separate market segment market millennium definition workstation blurred extent components workstations consumer market price differential workstation consumer pcs narrower consumer market enthusiast game market difficult qualifies desktop pc workstation instance nvidia geforce 256 graphics card spawned quadro gpu driver support certifications tailored unique requirements cad applications retailed price geforce poor workstation card hardware capable soft modded unlock features nominally exclusive quadro workstations typically drivers advancements cpu technology consumer desktop workstation benefit cpus designed multicore concept essentially multiple processors die application ibm power4 pioneer modern workstations typically multiple multicore cpus error correcting memory larger die caches consumer level cpus power reliability required desktop ibm power based processor boards workstation level intel based xeon processor boards multiple cpus die cache ecc memory features suited demanding content creation engineering scientific desktop computing workstations designed specific application autocad avid xpress studio hd 3d studio max ensure compatibility software purchasers certificate software vendor certification process workstation price jump notches professional purposes reliability initial purchase cost current workstation market decline risc based workstations january 2009 risc based workstation product lines discontinued 2018 reintroduction commercially risc based workstations form series ibm power9 based systems raptor computing systems change x86 64 workstations current workstation market x86 64 microprocessors operating systems platforms include windows freebsd gnu linux distributions apple macos os oracle solaris vendors market commodity mono socket systems workstations types products marketed workstation umbrella workstation definition segment desktop market computers expected perform workstations pc operating systems components component manufacturers segment product market premium components functionally cheaper consumer models feature level robustness performance workstation class pc features 
70370	computerscience	linus law claim software development named honor linus torvalds formulated eric raymond essay book cathedral bazaar 1999 law eyeballs bugs shallow formally beta tester developer base characterized obvious code multiple developers purpose reaching consensus acceptance simple form software reviewing researchers practitioners repeatedly effectiveness types reviewing process finding bugs security issues validity fallacies software engineering robert glass refers law mantra source movement calls fallacy lack supporting evidence rate additional bugs uncovered scale linearly reviewers maximum reviewers additional reviewers uncover bugs rate closed source practitioners promote stringent independent code analysis software project development focus depth review eyeballs detection deliberately inserted flaws attributed raymond claim persistence heartbleed security bug critical piece code considered refutation raymond dictum larry seltzer suspects availability source code developers researchers perform extensive tests closed source software easier bugs remain 2015 linux foundation executive director jim zemlin argued complexity modern software increased levels specific resource allocation desirable improve security 2014 largest global source software vulnerabilities eyeballs scale experiments peer reviewed surveys mantra holds practice performed 
76996	computerscience	organizing map som organizing feature map sofm type artificial neural network ann trained unsupervised learning produce dimensional typically dimensional discretized representation input space training samples called map method dimensionality reduction organizing maps artificial neural networks apply competitive learning opposed error correction learning backpropagation gradient descent sense neighborhood function preserve topological properties input space soms visualization creating dimensional views dimensional data akin multidimensional scaling artificial neural network introduced finnish professor teuvo kohonen 1980s called kohonen map network kohonen computationally convenient abstraction building biological models neural systems 1970s morphogenesis models dating alan turing 1950s typical type network structure feedforward networks nodes visualized attached type architecture fundamentally arrangement motivation extensions include toroidal grids edges connected nodes organizing maps nodes behave larger organizing maps rearrange data fundamentally topological character common matrix matrix node average distance node weight vector closest neighbors square grid instance closest nodes von neumann moore neighborhoods nodes hexagonal grid soms display emergent properties maps consisting thousands nodes perform cluster operations map structure operations artificial neural networks soms operate modes training mapping training builds map input examples competitive process called vector quantization mapping automatically classifies input vector visible organizing map map space consists components called nodes neurons map space defined finite dimensional region nodes arranged regular hexagonal rectangular grid node weight vector position input space dimension input vector nodes map space stay fixed training consists moving weight vectors input data reducing distance metric spoiling topology induced map space organizing map describes mapping dimensional input space dimensional map space trained map classify vector input space finding node closest distance metric weight vector input space vector learning algorithm goal learning organizing map network respond input patterns partly motivated visual auditory sensory handled separate cerebral cortex human brain weights neurons initialized random values sampled subspace spanned largest principal component eigenvectors alternative learning faster initial weights approximation som weights network fed vectors represent close kinds vectors expected mapping examples administered times iterations training utilizes competitive learning training fed network euclidean distance weight vectors computed neuron weight vector input called matching unit bmu weights bmu neurons close som grid adjusted input vector magnitude change decreases time grid distance bmu update neuron weight vector wv iswhere step training sample bmu α monotonically decreasing learning coefficient input vector Θ neighborhood function distance neuron neuron step depending implementations scan training data set systematically repeat training sample size randomly drawn data set bootstrap sampling implement sampling method jackknifing neighborhood function Θ depends grid distance bmu neuron neuron simplest form neurons close bmu gaussian function common choice functional form neighborhood function shrinks time neighborhood broad organizing takes global scale neighborhood shrunk couple neurons weights converging local estimates implementations learning coefficient α neighborhood function Θ decrease steadily increasing scans training data set decrease step wise fashion steps process repeated input vector cycles λ network winds associating output nodes patterns input data set patterns named names attached nodes trained mapping single winning neuron neuron weight vector lies closest input vector simply determined calculating euclidean distance input vector weight vector representing input data vectors emphasized article object represented digitally distance measure operations training construct organizing map includes matrices continuous functions organizing maps variables variables vectors bold algorithm variant algorithm som initialization selection initial approximation iterative methods learning neural networks kohonen random initiation som weights principal component initialization initial map weights chosen space principal components popular exact reproducibility careful comparison random initiation approach principal component initialization dimensional som models principal curves demonstrated advantages principal component som initialization universal initialization method depends geometry specific dataset principal component initialization preferable dimension principal curve approximating dataset univalently linearly projected principal component quasilinear sets nonlinear datasets random initiation performs examples fisher iris flower data array nodes weight vector aware location array weight vector dimension node input vector weights initially set random values input feed map colors represented red green blue components represent colors vectors unit cube vector space generated basis diagram compares training data setsand original images note striking resemblance training grid neurons 250 iterations learning rate fisher iris map detect main differences species interpretation interpret som training phase weights neighborhood moved direction items tend excite adjacent neurons som forms semantic map samples mapped close dissimilar visualized matrix euclidean distance weight vectors neighboring cells som neuronal weights pointers input space form discrete approximation distribution training samples neurons regions training sample concentration samples scarce som considered nonlinear generalization principal components analysis pca artificial real geophysical data som advantages conventional feature extraction methods empirical orthogonal functions eof pca originally som formulated solution optimisation attempts modify definition som formulate optimisation elastic maps mechanical metaphor elasticity approximate principal manifolds analogy elastic membrane plate 
79099	computerscience	maple symbolic numeric computing environment multi paradigm programming language developed maplesoft maple covers aspects technical computing including visualization data analysis matrix computation connectivity toolbox maplesim adds functionality multidomain physical modeling code generation overview core functionality users enter mathematics traditional mathematical notation custom user interfaces created support numeric computations arbitrary precision symbolic computation visualization examples symbolic computations maple incorporates dynamically typed imperative style programming language resembles pascal language permits variables lexical scope interfaces languages fortran java matlab visual basic interface excel maple supports mathml w3c format representing interpreting mathematical expressions including display architecture maple based kernel written maple language functionality libraries variety sources libraries written maple language viewable source code numerical computations performed nag numerical libraries atlas libraries gmp libraries functionality maple requires numerical data formats symbolic expressions stored memory directed acyclic graphs standard interface calculator interface written java history concept maple arose meeting november 1980 university waterloo researchers university wished purchase powerful macsyma decided develop algebra cost computers limited version appearing december 1980 maple demonstrated conferences 1982 reference maple canadian heritage 1983 50 universities copies maple installed machines 1984 arranged watcom products license distribute commercially version maple 1988 waterloo maple founded company’s original goal manage distribution software eventually company evolved department maple development rest university labs worldwide including symbolic computation laboratory university waterloo ontario centre algebra university western ontario 1989 graphical user interface maple developed included version macintosh x11 windows versions interface 1990 maple 1992 maple release introduced maple worksheet combined graphics input typeset output 1994 special issue newsletter created maple developers called mapletech published 1999 release maple maple included nag numerical libraries 2003 current standard interface introduced maple interface written java portions rules typesetting mathematical formulae written maple language java interface criticized slow improvements versions maple 11 documentation recommends previous classic interface users 500 mb physical memory mid 1995 2005 maple lost market share competitors weaker user interface 2005 maple introduced document mode standard interface developed september 2009 maple maplesoft acquired japanese software retailer cybernet systems features features maple include examples maple code sample imperative programming constructs simple functions defined maps arrow notation integration findanswer determinant compute determinant matrix solve equation numerically polynomial equationintegral equations functions 17 satisfy integral equationuse maple engine maple engine products maplesoft listed party commercial products maple engine 
81926	computerscience	blender source 3d graphics software toolset creating animated films visual effects art 3d printed models interactive 3d applications video games blender features include 3d modeling uv unwrapping texturing raster graphics editing rigging skinning fluid smoke simulation particle simulation soft body simulation sculpting animating match moving rendering motion graphics video editing compositing current versions feature integrated game engine upcoming release remove history dutch animation studio neogeo started develop blender house application based timestamps source files january 1994 considered blender birthday version 00 released january 1995 primary author company owner software developer ton roosendaal blender inspired song yello album baby neogeo showreel design choices experiences blender carried earlier software called traces ton roosendaal developed neogeo commodore amiga platform 1987–1991 period january 1998 blender released publicly online sgi freeware neogeo dissolved client contracts company neogeo dissolution ton roosendaal founded technologies nan june 1998 develop blender initially distributing shareware nan bankrupt 2002 meant time discontinuing development blender 2002 roosendaal started profit blender foundation goal continue developing promoting blender community based soure project july 18 2002 roosendaal started blender campaign crowdfunding precursor campaign aimed sourcing blender time payment €100 000 100 670 time collected community september 2002 announced collected funds release blender source code blender source software developed community time time employees employed blender institute blender foundation initially dual licensing addition gplv2 blender blender license require disclosing source code required payments blender foundation exercised option suspended indefinitely 2005 blender solely gnu gplv2 updated gplv3 evident benefits january 2019 blender 25 suzanne january–february 2002 nan survive close doors march release 25 sort easter egg personal tag artists developers decided add 3d model chimpanzee head created willem paul van overbruggen slid3 named suzanne orangutan kevin smith film jay silent bob strike suzanne blender alternative common models utah teapot stanford bunny polygon model 500 suzanne quick easy material animation rigs texture lighting setups frequently joke images suzanne included blender largest blender contest award called suzanne award release history table lists notable developments blender release history features official releases blender windows linux port freebsd 32 bit 64 bit versions distributed extensive scenes programs software features characteristic 3d software capabilities user interface blender user interface incorporates concepts supported platforms blender windows vista mac os linux blender 76b supported release windows xp file format blender features internal file pack multiple scenes single file called blend file wide variety import export scripts extend blender capabilities accessing object data internal api inter operate 3d tools blender organizes data kinds data blocks objects meshes lamps scenes materials images object blender consists multiple data blocks – user polygon mesh consists object mesh data block material linked data blocks refer multiple objects refer mesh subsequent editing shared mesh result shape objects mesh objects meshes materials textures linked blend files blend files reusable resource libraries import export software supports variety 3d file formats import export alembic 3d studio 3ds filmbox fbx autodesk dxf svg stl 3d printing vrml x3d video editing blender features functional production ready linear video editor called video sequence editor vse short blender vse features including effects gaussian blur color grading fade wipe transitions video transformations multi core support rendering video vse webgl authoring blend4web source webgl framework convert blender scenes graphics animation sound physics standard browsers export performed single standalone verge3d real time renderer toolkit creating interactive 3d experiences blender 3ds max blend4web verge3d development nasa interactive application experience curiosity rendering ray tracing cycles path tracing render engine designed interactive easy supporting production features installed add default activated header gpu rendering cycles supports gpu rendering speed rendering times gpu rendering modes cuda preferred method nvidia graphics cards opencl supports rendering amd graphics cards multiple gpus supported create render farm – multiple gpus increase memory gpu access memory integrator integrator rendering algorithm lighting computations cycles supports path tracing integrator direct light sampling lighting setups suitable caustics complex lighting situations rays traced camera scene bouncing light source lamp object emitting light background lamps surfaces emitting light indirect light sampling letting ray follow surface bsdf direct light sampling picking light source tracing ray types integrators shading language blender users create nodes shading language note support gpus materials materials define meshes nurbs curves geometric objects consist shaders defining mesh appearance surface volume displacement surface surface shader surface shader defines light interaction surface mesh bsdfs incoming light reflected refracted mesh absorbed volume shader surface shader reflect absorb light enters volume volume shader pass straight mesh defined volume shader describes light interaction passes volume mesh light scattered absorbed emitted volume displacement shader shape surface altered displacement shaders textures mesh surface detailed depending settings displacement virtual modifying surface normals impression displacement bump mapping combination real virtual displacement demo reels blender demo reels showcase features blender rendering engines engines included blender external renderers source external renderers proprietary physics blender simulate smoke rain dust cloth water hair rigid bodies cloth simulation cloth piece mesh designated cloth physics tab fluid simulation physics fluid simulation fluid simulator simulating liquids water hitting cup lattice boltzmann methods simulate fluids lots adjusting particles resolution particle fluid simulation particle physics fluid simulation creates particles follow smoothed particle hydrodynamics method development source blender experienced refactoring initial codebase major additions feature set improvements include animation refresh stack based modifier updated particle simulate hair fur fluid dynamics soft body dynamics glsl shaders support game engine advanced uv unwrapping recoded render pipeline allowing separate render passes render texture node based material editing compositing projection painting developments fostered google summer code program blender foundation participated 2005 blender project official planning major revision blender series 2015 potential targets including configurable ui dubbed blender 101 support physically based rendering pbr dubbed eevee extra easy virtual environment engine bring improved realtime 3d graphics viewport upgrading game engines rendering engine allowing 11 c99 codebase moving version opengl dropping support versions overhaul particle constraint systems blender internal renderer removed code quest project started april 2018 set amsterdam blender institute goal project development team speed development blender june 29th code quest project april 2nd alpha version completed beta testing commenced november 29 2018 support blender extensively documented rest support community tutorials discussion forums internet blender network support social services blender professionals additionally youtube video tutorials blender amateurs professionals cost clones blender source nature programs advantage success repackaging selling cosmetically modified versions examples include illusionmage 3dmofun 3dmagix fluid designer recognized blender based media industry blender started house tool neogeo dutch commercial animation company blender television commercials including australia iceland brazil russia sweden blender nasa publicly 3d models 3d models nasa 3d resources native blend format nasa blender blend4web converted verge3d blender develop interactive application celebrate 3rd anniversary curiosity rover landing mars appmakes operate rover control cameras robotic arm reproduces prominent events mars science laboratory mission application webgl siggraph 2015 professional project blender spider create animatics pre visualizations storyboard department french language film friday day vendredi ou autre jour 35 mm feature film blender special effects linux workstations prize locarno international film festival special effects digital graphics belgium blender history channel professional 3d graphics programs tomm moore secret kells partly produced inblender belgian studio digital graphics nominated oscar category animated feature film plumíferos commercial animated feature film created blender premiered february 2010 argentina main characters anthropomorphic talking animals special effects episode red dwarf season screened 2012 created blender confirmed ben simonds gecko animation blender cgi compositing movie hardcore henry special effects series castle blender particle simulations relegated houdini blender pre visual effects director david sandberg blender multiple shots lights blender credit sequences woman animation film cinderella cat promotional artwork super smash bros nintendo 3ds wii partially created blender experimental hip hop death grips blender produce music videos screenshot program visible music video inanimate sensation gen created blender tangent animation team developers improving blender internal planned eventually add improvements official blender build blender create character murloc 2016 film warcraft projects 2005 1–2 blender foundation announces creative project drive innovation blender elephants dream movie project orange september 2005 notable blender artists developers short film software initiative orange movie project hosted netherlands media art institute nimk film elephants dream premiered march 24 2006 response success elephants dream blender foundation founded blender institute additional projects announced projects buck bunny project peach furry funny short animated film project yo frankie project apricot game collaboration crystalspace reused assets created project peach nintendo 3ds nintendo video 2012 2013 buck bunny movie project peach october 2007 team started project peach production short movie buck bunny time creative concept totally deep mystical style elephants dream funny furry official movie premiere april 2008 yo frankie game project apricot apricot project production game based universe characters peach movie buck bunny software game titled yo frankie project started february 2008 development completed july 2008 finalized product expected august release delayed game released december 2008 gnu gpl lgpl content licensed creative commons attribution sintel movie project durian blender foundation project durian keeping tradition fruits code names time chosen fantasy action epic minutes starring teenage girl dragon main characters film premiered online september 30 2010 game based sintel officially announced blenderartists 12 2010 features integrated blender direct result project durian tears steel movie project mango october 2011 fourth movie project codenamed mango announced blender foundation team artists assembled community participation blender movie live action filming mango started 2012 movie released september 26 2012 previous films footage scenes models content compliant creative commons license film press release film premise warriors scientists gather oude kerk amsterdam stage crucial event desperate attempt rescue destructive robots cosmos laundromat movie project gooseberry january 2011 ton roosendaal announced movie project codenamed gooseberry goal produce feature animated film speculated production 2012 2014 film written produced coalition international animation studios studio lineup announced january 28 2014 production march 2014 moodboard constructed development goals set initial minute pilot released youtube august 2015 siggraph 2016 animation festival jury choice award glass project demonstrates real time rendering capabilities opengl 3d animation caminandes caminandes series animated short films centers llama koro patagonia attempts overcome obstacles agent 327 operation barbershop agent 327 operation barbershop minute teaser planned animated feature based classic comics series agent 327 hero hero movie project demonstrate capabilities grease pencil tool blender spring 25 october 2017 upcoming movie named spring announced produced blender institute directed written andy goralczyk studio aims spring blender capabilities official release online services blender cloud blender cloud platform launched march 2014 operated blender institute subscription based cloud computing platform blender client add hosting synchronization animation project files launched promote fundraise project gooseberry intended replace selling dvds blender foundation subscription based model file hosting asset sharing collaboration feature blender cloud blender sync synchronization blender clients file user preferences features blender blender unified login blender software service users providing login blender cloud blender store blender conference blender network blender development fund blender foundation certified trainer program 
82368	computerscience	structure interpretation programs sicp wizard book science textbook teaches fundamental principles programming including recursion abstraction modularity programming language design implementation considered classic hacker culture written massachusetts institute technology mit professors harold abelson gerald jay sussman julie sussman edition published 1985 mit press edition published 1996 textbook mit introductory electrical engineering science sicp focuses discovering patterns solving specific building robust software systems patterns content book describes science concepts scheme dialect lisp virtual register machine assembler implement lisp interpreters compilers characters fictional characters book license book licensed creative commons attribution sharealike license coursework book textbook mit introductory programming 001 replaced 0001 python schools book textbook textbook mit scale symbolic systems class 945 reception byte recommended sicp professional programmers profession magazine stated book easy read expose experienced programmers topics influence sicp influential science education books inspired style 
87030	computerscience	glottochronology attic greek γλῶττα tongue language χρóνος time lexicostatistics dealing chronological relationship languages idea developed morris swadesh assumptions exist stable basic vocabulary referred swadesh lists languages replacements happen analogous radioactive decay constant percentages time elapsed exist methods partly extensions swadesh method biological assumptions replacements genes swadesh technique people glottochronology refers methodology word list original method presumed core vocabulary language replaced constant constant average rate languages cultures measure passage time process list lexical terms lists compiled morris swadesh assumed resistant borrowing originally designed 1952 list 200 items refined 100 word list swadesh 1955 common modern day linguists core vocabulary designed encompass concepts common human language personal pronouns body heavenly bodies verbs basic actions numerals eliminating concepts specific culture time ideal meaning set tailored languages compared alternative word lists compiled linguists meaning slots percentage cognates common origin word lists measured larger percentage cognates languages compared presumed separated glottochronologic constant robert lees glottochronological constant 13 pairs languages 200 word list 805 ± 0 0176 90 confidence 100 word list swadesh 86 reflecting elimination semantically unstable constant retention rate rate replacement ln logarithm base glottochronological constantdivergence time basic glottochronology shortest form period time stage language proportion wordlist items retained period rate replacement word list formulate testing historically verifiable knowledge linguistic data approximate distance classical latin modern romance languages swadesh arrived empirical 14 meaning rate replacement constitutes 14 100 wordlist millennium glottochronology indo european accounting 87 variance postulated hamito semitic fleming 1973 chinese munro 1978 amerind stark 1973 baumhoff olmsted 1963 correlations radiocarbon dating blood archaeology note approach gray atkinson glottochronology discussion concept language change history reviewed hymes 1973 1973 glottochronology dates mid 20th century introduction subject embleton 1986 mcmahon mcmahon 2005 glottochronology controversial partly issues accuracy question basis sound bergsland 1958 bergsland vogt 1962 fodor 1961 chretien 1962 guy 1980 concerns addressed dobson 1972 dyen 1973 kruskal dyen black 1973 assumption single word replacement rate distort divergence time estimate borrowed included thomason kaufman 1988 chrétien purported disprove mathematics swadesh model conference yale 1971 criticisms invalid published proceedings dyen 1973 conference application theory creole language wittmann 1973 overview arguments papers conference held mcdonald institute 2000 presentations vary linguists dates starostin discussed original inception glottochronology rejected linguists indo europeanists school traditional comparative method criticisms answered discussion modified original concept swadesh rejection glottochronology entirety lies idea glottochronology formal method linguistic analysis valid modifications inhomogeneities replacement rate dealt van der merwe 1966 splitting word list classes rate dyen james cole 1967 allowed meaning rate simultaneous estimation divergence time replacement rate studied kruskal dyen black brainard 1970 allowed chance cognation drift effects introduced gleason 1959 sankoff 1973 suggested introducing borrowing parameter allowed synonyms combination improvements sankoff parameterised lexicostatistics 1972 sankoff biological context developed model genetic divergence populations embleton 1981 derives simplified version linguistic context carries simulations improvements statistical methodology completely branch science – dna time – sparked renewed methods robust earlier calibrate tree historical events smooth rates change require assumption constant rate change gray atkinson 2003 starostin method attempt introduce modifications performed russian linguist sergei starostin proposed thatthe account time dependence individual stability quotients − reflects gradual slowing replacement process individual rates stable elements quickest replaced square root represents reverse trend – acceleration replacement items original wordlist age prone shifting meaning complicated swadesh original starostin yields credible agrees language separation confirmed historical knowledge hand glottochronology scientific tool language families historical phonology meticulously elaborated distinguish cognates loanwords time depth estimation mcdonald institute hosted conference issue time depth estimation 2000 published papers idea views glottochronology time vary linguists dates starostin discussed note referenced gray atkinson paper hold methods called glottochronology confining term original method 
87210	computerscience	sigmoid function mathematical function characteristic shaped curve sigmoid curve sigmoid function refers special logistic function figure defined formulaspecial sigmoid function include gompertz curve modeling systems saturate values ogee curve spillway dams sigmoid functions domain real return monotonically increasing alternatively −1 depending convention wide variety sigmoid functions including logistic hyperbolic tangent functions activation function artificial neurons sigmoid curves common statistics cumulative distribution functions integrals logistic distribution normal distribution student probability density functions definition sigmoid function bounded differentiable real function defined real input values negative derivative properties sigmoid function monotonic derivative bell shaped sigmoid function constrained pair horizontal asymptotes examples integral continuous negative bump shaped function sigmoidal cumulative distribution functions common probability distributions sigmoidal error function cumulative distribution function normal distribution applications natural processes complex learning curves exhibit progression accelerates approaches climax time specific mathematical model lacking sigmoid function van genuchten–gupta model based inverted curve applied response crop yield soil salinity examples application logistic curve response crop yield barley soil salinity depth water table soil artificial neural networks smooth functions efficiency hard sigmoids 
93070	computerscience	science selling controversial book stephen wolfram published company 2002 empirical systematic study computational systems cellular automata wolfram calls systems simple programs argues scientific philosophy methods study simple programs relevant fields science contents computation implications thesis science nks twofold nature computation explored experimentally experiments relevance understanding physical nascent 1930s computation approached traditions engineering seeks build practical systems computations mathematics seeks prove theorems computation 1970s computing crossroads mathematical engineering empirical traditions wolfram introduces tradition seeks empirically investigate computation sake argues method traditional mathematics fails meaningfully complex systems upper limit complexity systems simple programs basic subject wolfram science study simple abstract rules—essentially elementary programs class computational instances complexity simplest time series multiple iterative loops applying simple set rules reinforcing cycle set rules true components details setup systems explored book include cellular automata dimensions mobile automata turing machines dimensions varieties substitution network systems primitive recursive functions nested recursive functions combinators tag systems register machines reversal addition program qualify simple requirements simple programs tend simple abstract framework simple cellular automata turing machines combinators examples frameworks complex cellular automata qualify simple programs invent frameworks capture operation natural systems remarkable feature simple programs percentage capable producing complexity simply enumerating variations class programs leads examples unexpected leads question program simple complexity sense program definition encode program simple programs minimal emergence logical deduction phenomenon details program rules direct relationship behavior difficult engineer simple program perform specific behavior alternative approach engineer simple computational framework brute force search components match simple programs capable remarkable range behavior proven universal computers exhibit properties familiar traditional science thermodynamic behavior continuum behavior conserved quantities percolation sensitive dependence initial conditions models traffic material fracture crystal growth biological growth sociological geological ecological phenomena feature simple programs book complicated complexity science argues evidence simple programs capture essence complex mapping mining computational universe study simple rules complex behaviour wolfram argues systematically explore computational systems document argues study branch science physics chemistry basic goal field understand characterize computational universe experimental methods proposed branch scientific exploration admits forms scientific production instance qualitative classifications initial forays computational jungle hand explicit proofs systems compute function admissible forms production unique field study discovery computational mechanisms emerge systems bizarrely forms production involves creation programs analysis computational systems nks framework simple programs subject goals methodology extension idea human mind computational providing raw data effective crucial wolfram believes programs analysis visualized exhaustively examined thousands field concerns abstract rules principle address issues relevant fields science wolfram idea ideas mechanisms discovered computational universe represented simplest forms fields choose discoveries relevant wolfram expressed central lesson science there’s lot incredible richness computational universe reason that’s there’s lot incredible stuff harness purposes systematic abstract science wolfram advocates simple programs scientific discipline argues methodology revolutionize fields science basis argument study simple programs minimal form science grounded equally abstraction empirical experimentation aspect methodology advocated nks optimized experimentation direct easy meaningful maximizing chances experiment unexpected methodology computational mechanisms studied simplest forms wolfram argues process engages mathematical basis physical offer sciences wolfram argues computational realities universe science hard fundamental reasons argues understanding realities learn favor instance reverse engineering theories observation enumerate systems match behaviors observe major theme nks investigating structure possibility space wolfram argues science hoc models complicated unnecessarily organized limited primitives traditional mathematics wolfram advocates models variations enumerable consequences straightforward compute analyze philosophical underpinnings computational irreducibility wolfram argues achievements providing coherent ideas justifies computation organizing principle science instance argues concept computational irreducibility complex computations amenable short cuts reduced ultimately reason computational models nature considered addition traditional mathematical models idea intrinsic randomness generation—that natural systems generate randomness chaos theory stochastic perturbations—implies computational models include explicit randomness principle computational equivalence based experimental wolfram developed principle computational equivalence pce principle systems natural perform computations maximal universal level computational power systems attain level systems principle compute computation simply question translating input outputs systems computationally equivalent proposed examples systems workings human brain evolution weather systems principle restated processes simple equivalent sophistication principle wolfram draws array concrete deductions argues reinforce theory explanation experience randomness complexity systems analyze sophisticated complexity special quality systems instance concept heat simply label systems computations sophisticated wolfram argues understanding normal science nks paradigm deepest level wolfram argues that—like scientific ideas—the principle computational equivalence science humans special claimed complexity human intelligence special principle asserts sense wolfram ideas based understanding scientific process—including human mind—as operating universe studies applications specific ideas nks book organized themes common theme examples applications demonstrating complexity takes achieve behavior proper methodology discover behavior nks book introduces book composition simplest class characteristic examples include primitive recursive function complexity universal turing machine shortest axiom propositional calculus vein wolfram demonstrates simple programs exhibit phenomena phase transitions conserved quantities continuum behavior thermodynamics familiar traditional science simple computational models natural systems growth fluid turbulence phyllotaxis final category applications fall theme common theme computational universe reason fields holistic instance wolfram discusses computational universe inform evolutionary theory seti computational complexity theory philosophical fields ontology epistemology postmodernism wolfram suggests theory computational irreducibility provide resolution existence nominally deterministic universe posits computational process brain complex captured simpler computation principle computational irreducibility process deterministic determine essence experiment exercise book vast individual results—both experimental analytic—about automaton computes characteristics methods analysis book technical result describing turing completeness rule 110 cellular automaton turing machines simulate rule 110 wolfram demonstrates symbol universal turing machine wolfram conjectures symbol turing machine universal 2007 commemorating book anniversary wolfram company offered 25 000 prize proof turing machine universal alex smith science student birmingham prize proving wolfram conjecture nks summer school wolfram instructors organize summer school 2003 2006 classes held brown university 2007 summer school hosted university vermont burlington exception 2009 held istituto di scienza tecnologie dell informazione cnr pisa italy 2012 program held curry college milton massachusetts 2013 wolfram summer school held annually bentley university waltham massachusetts 14 consecutive summer schools 550 people participated continued developing week projects master theses summer school publications reception periodicals science coverage including articles york times newsweek wired economist scientists criticized book abrasive arrogant perceived fatal flaw—that simple systems cellular automata complex degree complexity evolved systems observed wolfram categorizing complexity systems critics accept wolfram result universal computation view minor dispute wolfram claim paradigm shift contained valuable insights refreshing ideas wolfram addressed critics series blog posts article published april 2018 science listed 190 books recommended gates scientific philosophy tenet nks simpler version recur wide variety complicated contexts nks argues systematically exploring space simple programs lead base reusable knowledge scientists parameters occur universe instance permutations symbols equation essentially meaningless nks criticized asserting behavior simple systems representative systems methodology common criticism nks follow established scientific methodology instance nks establish rigorous mathematical definitions attempt prove theorems formulas equations written mathematica standard notation lines nks criticized heavily visual conveyed pictures formal meaning criticized modern field complexity studied complexity rigorous mathematical perspective criticized misrepresenting chaos theory book equates chaos theory phenomenon sensitive dependence initial conditions sdic utility nks criticized providing specific applicable ongoing scientific criticism implicit explicit study simple programs connection physical universe limited steven weinberg real explained wolfram methods satisfactory fashion pce principle computational equivalence criticized vague unmathematical verifiable predictions criticized contrary spirit mathematical logic computational complexity theory seek fine grained distinctions levels computational sophistication wrongly conflating kinds universality property critics ray kurzweil argued ignores distinction hardware software computers equivalent power follow programs equivalent rechristening church–turing thesis fundamental theory nks chapter wolfram speculations direction fundamental theory physics criticized vague obsolete scott aaronson professor science university texas austin claims wolfram methods compatible special relativity bell theorem violations explain observed bell experiments aaronson arguments apply entire scientific field quantum gravity seeks theories unifying relativity quantum mechanics fundamentally flawed local hidden variable theory superdeterminism acknowledged bell explored physics nobel laureate gerard hooft replies criticism digital physics edward fredkin konrad zuse pioneered idea computable universe writing book cellular automaton developed fredkin toy model called salt claimed nks ideas wolfram model universe rewriting network cellular automaton wolfram suggested cellular automaton account relativistic features absolute time frame jürgen schmidhuber charged turing machine computable physics stolen attribution idea enumerating turing computable universes 2002 review nks nobel laureate elementary particle physicist steven weinberg wrote wolfram lapsed elementary particle physicist suppose resist apply experience digital programs laws nature led view considered 1981 paper richard feynman nature discrete continuous suggests space consists set isolated cells cellular automaton time flows discrete steps idea edward fredkin concludes universe automaton giant motivation speculations sort wolfram computers carpenter moon suppose wood nobel laureate gerard hooft suggested cellular automaton based unifying theory quantum gravity interpretation superstring theory evolution equations classical oth bosonic string theory superstring theory reformulated terms special basis defined space time lattice lattice natural selection wolfram claim natural selection fundamental complexity biology led scientist journalist chris lavers wolfram understand theory evolution originality nks heavily criticized original justify title claims authoritative manner nks vast examples arguments criticized leading reader ideas original wolfram substantial technical book rule 110 cellular automaton turing complete proven wolfram assistant matthew cook notes book acknowledges discoveries scientists citing names historical form traditional bibliography additionally idea simple rules generate complexity established idea science chaos theory complex systems 
93547	computerscience	arthur john robin gorell milner 13 january 1934 – 20 march 2010 robin milner milner british scientist turing award winner life education career milner born yealmpton plymouth england military family awarded scholarship eton college 1947 subsequently served royal engineers attaining rank lieutenant enrolled king college cambridge graduating 1957 milner schoolteacher programmer ferranti entering academia city university london swansea university stanford university 1973 university edinburgh founder laboratory foundations science lfcs returned cambridge head laboratory 1995 eventually stepped laboratory 2009 milner sicsa advanced fellow held time chair science university edinburgh milner died heart attack 20 march 2010 cambridge wife lucy died shortly contributions milner regarded major contributions science developed lcf tools automated theorem proving language developed lcf language polymorphic type inference type safe exception handling milner developed theoretical framework analyzing concurrent systems calculus communicating systems ccs successor pi calculus time death bigraphs formalism ubiquitous computing subsuming ccs pi calculus credited rediscovering hindley–milner type honors awards fellow royal society distinguished fellow british society 1988 milner received acm turing award 1991 1994 inducted fellow acm 2004 royal society edinburgh awarded milner royal medal bringing public benefits global scale 2008 elected foreign associate national academy engineering fundamental contributions science including development lcf ccs pi calculus www8 nationalacademies onpinews newsitem aspx recordid 02082008 selected publications publications robin milner dblp 
95171	computerscience	japanese multinational electronics corporation headquartered kadoma osaka japan company founded 1918 producer lightbulb sockets grown largest japanese electronics producers sony hitachi toshiba pioneer canon addition electronics offers electronic products services renovation services panasonic fourth largest television manufacturer 2012 market share panasonic primary listing tokyo stock exchange constituent nikkei 225 topix indices secondary listing nagoya stock exchange 1935 october 2008 company matsushita electric industrial january 2008 company announced change panasonic corporation october 2008 conform global brand panasonic change approved shareholders meeting june 26 2008 consultation matsushita family history 20th century panasonic founded 1918 kōnosuke matsushita vendor duplex lamp sockets 1920 matsushita regularly launching products 1927 produced bicycle lamps marketed national brand war company operated factories japan asia produced electrical components appliances light fixtures motors electric irons wireless equipment vacuum tubes war panasonic regrouped keiretsu supply post war boom japan radios appliances bicycles matsushita brother law toshio iue founded sanyo subcontractor components war sanyo grew competitor panasonic acquired panasonic december 2009 1961 matsushita traveled united met american dealers company producing television sets market panasonic brand expanded brand europe 1979 company national brand north america 1950s 1970s trademark united inability national brand led creation panasonic brand united decades panasonic released additional products including black white 1952 electrical blenders fridges 1953 rice cookers 1959 color microwave ovens 1966 company debuted fidelity audio speaker japan 1965 brand technics quality stereo components worldwide favorites famous products turntables 1200 record player performance precision durability 1970s 1980s panasonic continued produce quality specialized electronics niche markets shortwave radios developed successful stereo receivers players components 1983 matsushita launched panasonic senior partner ibm pc compatible japanese november 1990 matsushita agreed acquire american media company mca 59 billion matsushita subsequently sold 80 mca seagram company 7 billion april 1995 2000 2002 panasonic canada marked 35th anniversary country 5 million build music city toronto waterfront january 19 2006 panasonic announced producing analog televisions 30 total business month concentrate digital televisions 2008 models electric shavers panasonic factory called panasonic shavers dropped matsushita national worldwide japanese markets november 2008 panasonic sanyo announced holding merger talks eventually acquisition sanyo panasonic merger completed december 2009 corporation revenues ¥11 2 trillion 110 billion announcement pioneer exit production kuro plasma hdtv displays panasonic purchased patents incorporated technologies plasma displays april 2011 announced panasonic cut force 40 000 fiscal 2012 bid streamline overlapping operations curtailment percent force october 2011 panasonic announced trim money losing business ceasing production plasma tvs plant amagasaki hyogo prefecture march 2012 cutting 000 jobs process january 2012 panasonic announced struck deal myspace venture myspace myspace users watch live television chatting users laptop tablet television partnership myspace integrated panasonic viera televisions 11 2012 panasonic announced plans acquire 76 stake firepro systems india based company infrastructure protection security solutions alarm suppression video surveillance building management company prediction loss 765 billion yen november 2012 shares fell lowest level february 1975 388 yen 2012 shares plunged 41 percent november 14 2012 panasonic cut 000 jobs divestments 18 2013 panasonic announced invest 40 million building factory binh duong vietnam completed 2014 july 2013 panasonic agreed acquire 13 stake slovenian household appliance manufacturer gorenje €10 million press release announcement ifa 2013 panasonic announced acquired cameramanager video surveillance service intention expanding reach cloud based solutions july 2014 announced panasonic reached basic agreement tesla motors participate gigafactory huge battery plant american electric vehicle manufacturer plans build august 2014 tesla plant built southwest western united 2020 5 billion plant employ 500 people reduce tesla battery costs 30 percent company potential sites nevada arizona texas mexico california october 2014 panasonic announced initial investment tesla motors’ battery factory tens billions yen firm ceo november 2014 panasonic announced partnership photon interactive create customized personalized digital signs stores january 2015 panasonic announced stopped tvs china plans liquidate joint venture shandong march 2015 panasonic announced plans houston based satellite communication service provider itc global april 2015 panasonic announced range products relaunched brand south africa company intends south africa springboard africa nigeria egypt initial targets june 2015 panasonic struck agreements australian energy utilities red energy ergon energy actewagl trial based battery storage options november 2015 panasonic corporation announced set plant suzhou china subsidiary panasonic ecology systems produce type catalyst coated diesel particulate filter dpf decomposes matter contained diesel engine exhaust gas november 2015 panasonic corporation start retail locally harvested produce indoor agriculture facility salads veggie life branding singapore licensed indoor vegetable farm country panasonic technology february 2016 panasonic city denver formed formal partnership denver smartest city america joseph taylor chairman ceo panasonic corp america laid plans partnership key smart housing offices energy utilities transportation city services smart buildings increased competition china panasonic liion auto market share decreased 47 2014 34 2015 june 2016 tesla motors announced panasonic corporation exclusive supplier batteries mass market vehicle model batteries model sedan model suv supplied panasonic 2016 panasonic president kazuhiro tsuga confirmed planned total investment 6 billion company construct gigafactory capacity model reservations april panasonic moved production plans announced bond sale 86 billion invested gigafactory 2016 debuted transparent august 2018 company announced avoid potential tax issues panasonic european headquarters amsterdam october brexit approaches 25 september 2018 panasonic founding mount alliance announced frame mirrorless cameras range mount lenses launched 2019 47 megapixel panasonic lumix s1r 24 megapixel panasonic lumix s1 mirrorless cameras produced panasonic offer lumix pro support service professional photographers cameras equipped dual image stabilization technology photographers shooting light current operations march 31 2012 panasonic employed 330 000 staff 580 subsidiary companies panasonic total revenues 2012 53 percent generated japan 25 percent asia excluding japan 12 percent americas percent europe panasonic operations organised broad business fields – consumer solutions components devices – domain companies – avc networks generated 17 panasonic total 2012 revenues eco solutions 15 revenues appliances 15 revenues industrial devices 14 revenues systems communications revenues automotive systems revenues energy revenues healthcare manufacturing solutions panasonic invested total development 2012 equivalent percent revenues march 31 2012 panasonic held total 140 146 patents worldwide july 2016 reported panasonic acquisitions artificial intelligence machine learning space source company 10 million acquisition joint venture panasonic automotive systems panasonic automotive systems original equipment manufacturer factory installed mobile audio equipment headunits speakers navigation modules subcontractor major auto manufacturers supplying virtually japanese american automaker european automakers 2015 pas revenue 12 4 billion panasonic manufactured aftermarket vehicle audio products head units speakers panasonic avionics corporation panasonic avionics corporation pac subsidiary panasonic corporation north america supplier flight entertainment ife communication systems headquartered lake forest california engineering development testing performed installation field engineering major quality functions certification program management performed bothell washington facility – panasonic avionics corporation employs 300 employees based 70 locations worldwide major facilities london toulouse hamburg dallas dubai singapore majority component manufacturing carried osaka japan february 2017 panasonic reported subsidiary investigated american authorities fcpa panasonic mobile communications panasonic mobile communications manufactures mobile phone handsets equipment 2012 20 cent share japanese handset market panasonic market mobile phone handsets worldwide december 2005 announced withdrawal overseas markets poor sales panasonic returned overseas market 2012 release panasonic eluga android powered smartphone july 2013 panasonic announced company supply model smartphone ntt docomo ntt docomo focus sony samsung products q2 2013 panasonic mobile communications booked 4 billion yen operating loss july 2013 january 2018 panasonic india released series android smartphones panasonic series eluga series panasonic corporation north america panasonic corporation north america panasonic principal subsidiary united headquartered newark jersey 2013 headquartered secaucus 1980s newark secaucus located jersey gateway region founded york city metlife building september 1959 matsushita electric corporation america meca prior 2005 panasonic europe panasonic principal subsidiaries europe panasonic europe panasonic marketing europe gmbh panasonic europe headquartered london england moving headquarters amsterdam netherlands brexit panasonic employs 12 000 people europe region generates cent total revenues 2012 panasonic cent share consumer electronics market europe ranking samsung electronics 26 cent lg electronics 12 cent panasonic operates chain stores united kingdom ireland called panasonic store exclusively sell panasonic products prior 2008 chain named shop panasonic november 2010 panasonic electric established panasonic electric vossloh schwabe serbia company svilajnac serbia manufacture energy efficient electronic devices ballasts lighting fixtures volume production commenced january 2011 2015 panasonic launched virtual solar service consumers service users simulation provide estimate rooftop solar installation produce installed panasonic india daizo ito serves president panasonic regional headquarters india situated haryana panasonic india pvt panasonic india washing machines refrigerators electric rice cookers electric irons mixer grinders blenders appliances indian market anchor electricals pvt indian company electric lamps switches sockets electrical accessories wholly owned subsidiary panasonic corporation panasonic corporation indonesia panasonic gobel indonesia national gobel indonesia company indonesia division based cawang east jakarta seigo saifu current president director rachmat gobel current president commissioner gobel president commissioner indosat panasonic gobel indonesia joint venture panasonic corporation japan gobel indonesia operations mca universal studios matsushita bought american media company mca 1995 sold 80 mca shares canadian drinks company seagram mca renamed universal studios 1996 music division renamed universal music universal studios unit nbcuniversal owned philadelphia based comcast universal music owned french media conglomerate vivendi panasonic 3do panasonic manufacture 3do gaming systems goldstar sanyo stopped success total systems sold 1993 1996 sold manufacturer panasonic exclusive rights manufacture 3do successor console m2 ultimately releasing highly competitive console gaming market time products panasonic offers wide range products services including air conditioners refrigerators washing machines compressors lighting televisions personal computers mobile phones audio equipment cameras broadcasting equipment projectors automotive electronics aircraft flight entertainment systems semiconductors lithium batteries electrical components optical devices bicycles electronic materials photovoltaic modules ventilation appliances electric fans manufactured kdk rebranded panasonic brand names panasonic corporation sells virtually products services worldwide panasonic brand phased sanyo brand quarter 2012 company sold products brand names history 1927 company founder brand lamp product 1955 company branding audio speakers lamps markets japan panasonic time panasonic brand company brand 1965 audio equipment multiple brands lasted decades 2003 company announced panasonic global brand launched global tagline panasonic ideas life company unify brands panasonic march 2004 replaced national products outdoor signboards japan january 2008 company announced phase brand national japan replacing global brand panasonic march 2010 september 2013 company announced revision decade tagline illustrate company vision life rasonic brand shun hing electric engineering 信興電工工程有限公司 company imported panasonic national branded product matsushita electric industrial era sold mei panasonic products original brand names june 1994 panasonic shun hing industrial devices sales hong kong 松下信興機電 香港 有限公司 panasonic industrial sales shenzhen 松下電器機電 深圳 有限公司 established joint venture matsushita electric industrial shun hing rasonic product brand mei subsequent panasonic corporation september 2014 panasonic announced revive technics brand sponsorships football panasonic sponsors german football player marco reus plays bundesliga club borussia dortmund germany panasonic owns gamba osaka club league main japanese professional football league panasonic official partner sponsor afc champions league major league soccer 1981 1983 panasonic shirt sponsor english football club nottingham forest january 16 2010 panasonic signed 47 £518 5k jersey sponsorship deal india national football team panasonic primary sponsor toyota program panasonic toyota racing hiro matsushita grandson company founder race car driver company overseeing sponsorship arrangements company panasonic sponsor nascar busch series 2005 sponsoring 67 smith brothers racing dodge ken schrader bryan reffner smith johnny benson jr 2007 panasonic technology partner hendrick motorsports serve primary sponsor team 24 car jeff gordon races 2014 2015panasonic level sponsor olympic games seoul olympics 1988 panasonic official partner sponsor boston celtics 1975 1989 technics panasonic ads appeared boston garden 1980s september 2016 panasonic unveiled title sponsor jaguar team february 14 2017 panasonic unveiled main sponsor lega basket serie professional basketball league italy ranked national domestic league europe environmental record panasonic ranked joint 11th 16 greenpeace’s guide greener electronics ranks electronics manufacturers policies practices reduce impact climate produce greener products operations sustainable company scorers products criteria praised product life cycles products polyvinyl chloride plastic pvc scores maximum energy efficiency products 100 percent tvs meeting energy star standards exceeding standby power requirement panasonic score score energy criteria guide stating focus planned reductions greenhouse gases ghg set targets reduce ghg emissions 30 2015 increase renewable energy 2020 2014 article guardian reported panasonic compensate expatriate workers china hazard pay compensation chronic air pollution subjected 
97923	computerscience	binary image digital image values pixel typically colors binary image black white color object image foreground color rest image background color document scanning industry referred tonal binary images called level level pixel stored single bit—i names black white monochrome monochromatic concept designate images sample pixel grayscale images photoshop parlance binary image image bitmap mode binary images digital image processing masks result operations segmentation thresholding dithering input output devices laser printers fax machines bilevel displays handle bilevel images binary image stored memory bitmap packed array bits 640×480 image requires 37 kib storage size image files fax machine document management solutions format binary images compress simple compression schemes binary images interpreted subsets dimensional integer lattice field morphological image processing inspired view operations binary images entire class operations binary images operates 3×3 window image pixels 29 512 values central pixel define remains set unset based surrounding pixels examples operations thinning dilating finding branch endpoints removing isolated pixels shifting image pixel direction breaking connections conway game life 3×3 window operation class operations based notion filtering structuring element structuring element binary image passed target image manner filter gray scale image processing pixels values morphological operations erosion unset pixels structuring element pixel unset dilation set pixels structuring element pixel set operations morphological morphological closing consist erosion dilation dilation erosion structuring element enlarge holes remove objects separate objects closing retains objects removes holes joins objects characteristic binary image distance transform distance set pixel nearest unset pixel distance transform efficiently calculated efficient computation voronoi diagrams pixel image assigned nearest set skeletonization differs thinning skeletons recovery original image distance transform determining center object matching image recognition class operations gathering orientation metrics image recognition orientation camera removed orientation metrics connected surrounded pixels include euler perimeter compactness holes minimum radius maximum radius image segmentation binary images produced color images segmentation segmentation process assigning pixel source image classes classes usual result binary images simplest form segmentation otsu method assigns pixels foreground background based greyscale intensity method watershed algorithm edge detection creates binary image pixels assigned edge pixels step segmentation skeletons thinning skeletonization produces binary images consist pixel wide lines branchpoints endpoints extracted image converted graph image recognition optical character recognition interpretation interpretation pixel binary device dependent systems interprets bit black white reversed meaning values twain standard pc interface scanners digital cameras flavor called vanilla reversed chocolate dithering displaying halftone images image sensor capture binary images oversampled binary image sensor image sensor reminiscent traditional photographic film pixel sensor binary response bit quantized measurement local light intensity 
98778	computerscience	natural language understanding nlu natural language interpretation nli subtopic natural language processing artificial intelligence deals machine reading comprehension natural language understanding considered hard considerable commercial field application automated reasoning machine translation question answering news gathering categorization voice activation archiving scale content analysis nlu post processing nlp algorithms identifying speech utilizes context recognition devices automatic speech recognition vision recognition conversation misrecognized asr personalized profiles microphone proximity forms discern meaning fragmented sentences execute intent typically voice commands nlu ontology product vertical figure probability intent nlu defined list intents derives message payload designated contextual recognition sources nlu provide multiple message outputs separate services software resources hardware single derived intent response voice command initiator visual sentence spoken transformed voice command message output messages consumed m2m communications actions history program student written 1964 daniel bobrow phd dissertation mit earliest attempts natural language understanding john mccarthy coined term artificial intelligence bobrow dissertation titled natural language input solving understand simple natural language input solve algebra word 1965 joseph weizenbaum mit wrote eliza interactive program carried dialogue english topic popular psychotherapy eliza simple parsing substitution key canned phrases weizenbaum sidestepped program database real knowledge rich lexicon eliza gained surprising popularity toy project precursor current commercial systems 1969 roger schank stanford university introduced conceptual dependency theory natural language understanding model partially influenced sydney lamb extensively schank students yale university robert wilensky wendy lehnert janet kolodner 1970 william woods introduced augmented transition network atn represent natural language input phrase structure rules atns equivalent set finite automata called recursively atns format called generalized atns continued 1971 terry winograd finished writing shrdlu phd thesis mit shrdlu understand simple english sentences restricted children blocks direct robotic arm items successful demonstration shrdlu momentum continued field winograd continued major influence field publication book language cognitive process stanford winograd adviser larry founded google 1970s 1980s natural language processing sri international continued development field commercial efforts based undertaken 1982 gary hendrix formed symantec corporation originally company developing natural language interface database queries personal computers advent mouse driven graphic user interfaces symantec changed direction commercial efforts started time larry harris artificial intelligence corporation roger schank students cognitive systems corp 1983 michael dyer developed boris yale bore similarities roger schank lehnart millennium introduction systems machine learning classification ibm watson debated understanding systems demonstrate john searle watson understand questions john ball cognitive scientist inventor patom theory supports assessment natural language processing inroads applications support human productivity service ecommerce narrowing scope application thousands request human language defies conventional natural language processing meaningful conversation machines match word correct meaning based meanings sentence – guesswork patom theoryscope context umbrella term natural language understanding applied diverse set applications ranging simple tasks short commands issued robots highly complex endeavors comprehension newspaper articles poetry passages real applications fall extremes instance classification automatic analysis emails routing suitable department corporation require depth understanding deal larger vocabulary diverse syntax management simple queries database tables fixed schemata attempts processing natural language english sentences computers varying degrees complexity attempts systems deep understanding helped usability wayne ratliff originally developed vulcan program english syntax mimic english speaking star trek vulcan dbase easy syntax effectively launched personal database industry systems easy english syntax distinct systems rich lexicon include internal representation logic semantics natural language sentences breadth depth understanding aimed determine complexity implied challenges types applications deal breadth measured sizes vocabulary grammar depth measured degree understanding approximates fluent native speaker narrowest shallowest english command interpreters require minimal complexity range applications narrow deep systems explore model mechanisms understanding limited application systems attempt understand contents document news release simple keyword matching judge suitability user broader require complexity shallow systems broad deep current art components architecture approach natural language understanding systems share common components lexicon language parser grammar rules break sentences internal representation construction rich lexicon suitable ontology requires effort wordnet lexicon required person effort semantic theory guide comprehension interpretation capabilities language understanding depend semantic theory competing semantic theories language specific trade offs suitability basis automated semantic interpretation range naive semantics stochastic semantic analysis pragmatics derive meaning context semantic parsers convert natural language texts formal meaning representations advanced applications natural language understanding attempt incorporate logical inference framework achieved mapping derived meaning set assertions predicate logic logical deduction arrive conclusions systems based functional languages lisp include subsystem represent logical assertions logic oriented systems language prolog rely extension built logical representation framework management context natural language understanding special challenges variety examples counter examples multiple approaches formal modeling context specific strengths weaknesses 
99207	computerscience	freedos dos pd dos operating ibm pc compatible computers intends provide complete dos compatible environment running legacy software supporting embedded systems freedos booted floppy disk usb flash drive designed virtualization x86 emulation dos freedos composed source software licensed terms gnu public license base distribution require license fees royalties creation custom distributions permitted packages form freedos project include gpl software considered worth preserving 4dos distributed modified mit license history freedos project 29 june 1994 announced sell support dos jim hall time student posted manifesto proposing development source replacement weeks programmers including pat villani tim norman joined project kernel villani command command interpreter villani norman core utilities hall created pooling code written official pre release distributions freedos final freedos distribution gnu dos unofficial distribution freedos discontinued version released distribution freedos released january 2012 download rom image limited install disc kernel basic applications disc applications games networking development fuller legacy version 2006 consisted cds 8mb install targeted regular users larger 49mb live held source code project commercial freedos companies commercial freedos multiple independent projects compatibility hardware freedos requires pc xt machine 640kb memory programs bundled freedos require additional resources dos win32 console freedos compatible dos supports executables standard dos executables borland 16 bit dpmi executables 32 bit dpmi executables dos extenders operating improvements relative dos involving support standards technologies exist support dos internationalization advanced power management tsrs hx dos extender win32 console applications function properly freedos rare gui programs qemm bochs dos based windows freedos windows releases windows releases support i386 processors 386 enhanced mode partially experimental freedos kernel 2037 running windows result efforts prevent products running dos implementations windows 95 98 stripped version dos freedos replacement undocumented interfaces dos windows xx emulated freedos installed systems boot manager program bootmgr metakern included freedos windows nt reactos windows nt based operating systems including windows 2000 xp vista desktops windows server 2003 2008 2008 r2 servers dos core component systems fat file systems dos earlier versions windows typically ntfs technology file default security reasons freedos exist systems separate partition partition fat systems freedos kernel booted adding windows 2000 xp nt boot loader configuration file boot ini freeldr ini equivalent reactos file systems fat32 supported preferred format boot drive depending bios lba logical block addressing hard disks 128 tb size supported testing disks bioses support lba produce errors disks larger 32 driver ontrack ez drive resolves freedos driver named lfndos enable support windows 95 style file names programs win95 support lfns driver loaded recompiled planned support ntfs ext2 exfat external party drivers purpose access ext2fs ltools counterpart mtools data ext2fs drives mascot blinky fish mascot freedos designed bas snabilie 
99991	computerscience	douglas bruce lenat born 1950 ceo cycorp austin texas prominent researcher artificial intelligence awarded biannual ijcai computers award 1976 creating machine learning program symbolic statistical machine learning eurisko programs knowledge representation cognitive economy blackboard systems dubbed 1984 ontological engineering cyc program mcc 1994 cycorp military simulations numerous projects government military intelligence scientific organizations 1980 published critique conventional random mutation darwinism authored series articles journal artificial intelligence exploring nature heuristic rules lenat original fellows aaai individual served scientific advisory boards apple fellow aaas aaai cognitive science society editor automated reasoning learning sciences applied ontology founders tti vanguard 1991 remains advisory board 2017 named wired 25 lenat quest running cyc project begun 1984 build basis artificial intelligence manually representing knowledge contextualized logical axioms formal language cycl based extensions predicate calculus enormous ontology inference engine tasked efficiently finding hundreds step arguments sea tens millions axioms contextualized knowledge base inductive bias increasingly automate accelerate continuing education cyc symbolic statistical machine learning symbolic statistical natural language understanding 2010 multi person enterprise entered phase team efforts cyc powered machine learning cyc powered natural language understanding supplementing overtaking ongoing manual creation cyc knowledge base content background lenat born philadelphia pennsylvania september 13 1950 grew ages 5–15 wilmington delaware attended cheltenham school wyncote school job neighboring beaver college cleaning rat cages goose pens motivated learn program path school summer job eventually career attending university pennsylvania lenat supported programming notably designing developing natural language interface navy data base question–answering serving online shipboard operations manual aircraft carriers received bachelor degree mathematics physics master degree applied mathematics 1972 university pennsylvania senior thesis advised dennis gabor bounce acoustic waves 40 mhz range real objects record interference patterns meter square plot photo reduce 10mm square film image shine laser film project imaged object—i acoustic hologram settle argument dr gabor lenat generated dimensional hologram photo reducing printout interference pattern globe rotating expanding time reducing dimensional paper printout moderately 5 cm square film surface conventional laser beam project dimensional image changed independent rotating changing size film moved left lenat student science stanford university published included automatic program synthesis input output pairs natural language clarification dialogueshe received science stanford university published knowledge based systems artificial intelligence thesis randall davis mcgraw hill 1982 1976 thesis advisor professor cordell green thesis oral committee included professors edward feigenbaum joshua lederberg paul cohen allen newell herbert simon bruce buchanan john mccarthy donald knuth thesis automated mathematician programs attempted discoveries theorem proposer theorem prover experimenting program fueled cycle criticism improvement leading deeper understanding human creativity issues dealt constructing program represent knowledge formally expressively concretely program hundreds heuristic interestingness rules judge worth discoveries heuristics reason symbolically inductively slowly reason statistically frequency data architecture design constraints reasoning programs heuristics sum future continuous function structure halting steps science learning discovery mystifying creative process demonstrating programs creative discoveries 1976 lenat started teaching assistant professor science carnegie mellon commenced program eurisko limitation locked fixed set interestingness heuristics eurisko contrast represented heuristic rules class objects explore manipulate discover heuristics explored manipulated discovered domain concepts lenat returned stanford assistant professor science 1978 continued building eurisko automated discovery heuristic discovery program eurisko discoveries enjoyed acclaim paper heuretics theoretical experimental study heuristic rules winning paper award 1982 aaai conference vast preponderance published scientific lenat john seely brown xerox parc published 1984 frank analysis limitations eurisko lines concluded progress real symbolic require vast knowledge base common sense suitably formalized represented inference engine capable finding tens hundreds deep conclusions arguments application knowledge base specific questions applications successes frank analysis limitations eurisko approach concluding plea massive multi person decades effort required break bottleneck led attention 1982 admiral bob inman forming mcc consortium austin texas culminating lenat principal scientist mcc 1984 1994 continued period return stanford teach 400 person mcc lenat dozen researchers common sense knowledge base graduate students fruits decade cyc spun mcc company cycorp 1994 1986 estimated effort complete cyc 250 000 rules 1000 person effort 2017 team spent 000 person building cyc 24 rules assertions counting 000 person effort lenat emphasizes 60 person team strive step inferences cyc deductive closure hundreds trillions lenat continues cyc ceo cycorp decade cyc 1984 1994 funded american companies pooling term funds compete japanese generation project decade 1995 2006 cyc funded government agencies contracts decade 2007–present supported commercial applications cyc including financial services energy healthcare cyc applications unusual mathcraft involves helping middle school students deeply understand math people experience understood understood explain teach aided instruction play role teacher contrast mathcraft cyc play role fellow student confused user mathcraft advice avatar mistakes user taught sort learning teaching paradigm broad applications future domains training involved 
105985	computerscience	lex program generates lexical analyzers scanners lexers lex commonly yacc parser generator lex originally written mike lesk eric schmidt 1975 standard lexical analyzer generator unix systems equivalent tool posix standard lex reads input stream lexical analyzer outputs source code implementing lexer programming language source originally distributed proprietary software versions lex source source versions lex based original code distributed source operating systems opensolaris plan bell labs popular source version lex called flex fast lexical analyzer derived proprietary coding structure lex file structure lex file intentionally yacc file files divided sections separated lines percent signs followsexample lex file lex file flex version lex recognizes strings positive integers input simply prints input codice converted file compiled executable matches outputs strings integers input program print lex programming tools lex parser generators lex parser generators yacc bison commonly parser generators formal grammar parse input stream lex simple regular expressions lex limited simple finite automata typically preferable yacc generated parser fed token stream input consume input character stream lex produce token stream scannerless parsing refers parsing input character stream distinct lexer lex utility maintain programs involving lex assumes file extension codice lex source file internal macro codice lex options invoked automatically 
113507	computerscience	digital signal processing spatial anti aliasing technique minimizing distortion artifacts aliasing representing resolution image resolution anti aliasing digital photography graphics digital audio applications anti aliasing removing signal components frequency properly resolved recording sampling device removal sampling resolution sampling performed removing signal undesirable artifacts black white noise figure signal acquisition audio anti aliasing analogue anti aliasing filter remove band component input signal prior sampling analogue digital converter digital photography optical anti aliasing filters birefringent materials smooth signal spatial optical domain anti aliasing filter essentially blurs image reduce resolution achievable digital sensor larger pixel pitch achievable resolution sensor level examples graphics anti aliasing improves appearance polygon edges jagged smoothed screen incurs performance cost graphics card video memory level anti aliasing determines smooth polygon edges video memory consumes figure illustrates visual distortion occurs anti aliasing image checker board image difficult recognise aesthetically appealing contrast figure anti aliased version scene checker board blends grey desired resolution insufficient image edges smoother anti aliased image figure anti aliasing algorithm based sinc filter considered algorithm figure magnified portions interpolated nearest neighbor algorithm figure left comparison figure anti aliasing interpolated brightness pixels boundaries produce grey pixels space occupied black white tiles figure smoother figure original magnification figure anti aliasing blend boundary pixels sample graphic reduced aesthetically jarring sharp step boundaries aliased graphic left anti aliasing applied rendering screen smooth contours emulate appearance produced conventional ink paper printing fonts displayed typical lcd screens common subpixel rendering techniques cleartype pixel rendering requires special colour balanced anti aliasing filters severe colour distortion barely noticeable colour fringes equivalent individual pixels addressable pixels supplying hardware based anti aliasing filter olpc xo laptop display controller pixel geometry anti aliasing pixel addressing software hardware simplest approach anti aliasing basic approach anti aliasing pixel determining percentage pixel occupied region vector graphic pixel sized square transposed pixels percentage colour basic plot single white black anti aliased method method suited simple graphics basic lines curves applications convert absolute coordinates pixel constrained coordinates graphics fast function quality slower complexity shape increases purposes requiring quality graphics complex vector shapes approach note drawpixel routine blindly set colour percent calculated add existing location maximum brightness pixel equal darkest calculated time location produces bad result sets brightness level 90 pixel calculated barely touches pixel brightness 05 final set pixel 95 05 sophisticated shapes algorithm generalized rendering shape pixel grid resolution target display surface multiple power reduce distortion bicubic interpolation determine average intensity real pixel display surface signal processing approach anti aliasing approach ideal image regarded signal image displayed screen samples pixel position filtered version signal ideally understand human brain process original signal provide screen image yield response brain accepted analytic tool fourier transform decomposes signal basis functions frequencies frequency components amplitude frequency component signal waves form arbitrary negative integers frequency components involving sine functions dimensions purpose discussion cosine suffice frequency component frequency direction frequency direction goal anti aliasing filter greatly reduce frequencies limit nyquist frequency signal accurately represented samples sampling theorem choices detailed algorithm filter transfer functions current knowledge human visual perception sufficient approach dimensional considerations previous discussion assumes rectangular mesh sampling dominant filter considered optimal rotationally symmetrical figure data sampled square lattice continuous image sampling pattern justification signal processing axis traditionally dimensional data lanczos resampling based convolution data discrete representation sinc function resolution limited rectangular sampling rate source target image ideally rotationally symmetrical filter interpolation functions data dimensional function continuous sinc function radius tail filter square integrable analogue dimensional sinc dimensional airy disc amplitude 2d fourier transform circular region 2d frequency space opposed square region gaussian derivative flatten frequency domain sharpen spatial domain functions based gaussian function natural choices convolution gaussian gaussian applied radius wavelets properties halfway localized configuration spectral representation interpolation function gaussian spread preserve maximum derivative printing photographic negative plentiful processing capability printer hexagonal pattern reason sinc function interpolation interpolation treat diagonal lines horizontal vertical lines weak form aliasing practical real time anti aliasing approximations handful primitives lowest level real time rendering engine software hardware accelerated include lines triangles draw primitive white black background design primitive fuzzy edges achieving sort anti aliasing approach difficulty dealing adjacent primitives triangles share edge approximate uniform averaging algorithm extra buffer pixel data initial memory hungry approach 16 extra bits pixel grid renders primitives careful create reasonable image requires primitives interacts application programming interface opengl methods simply pixels pixel including color pixel shared pixels buffer mipmapping approach specialised texture mapping called mipmapping creating resolution pre filtered versions texture map rendering image resolution mipmap chosen texture pixels texels filtered arrive screen mipmapping combined forms texture filtering improve final result image extreme pseudo random aliasing fractals unlimited noise arithmetic error illustrate aliasing photographs measured data escape times converted colours exact centres pixels infinity border set colours centres borders unpredictable aliasing edges pixels aliasing image uploaded original sampling rate modern software anti aliases download size version aliasing image calculated times sampling rate sampled anti aliasing assuming average colour pixel closer orderly properly compare images viewing scale additional calculating distance estimator algorithm identified close edge set unusually fine aliased rapidly changing escape times edge set colours derived calculated identified unusually unrepresentative pixels set rapidly single sample representative pixel replaced image interpolating reduces noisiness image brightening colours image larger set calculated discarded rejected blended grey background fourth image finally budding turbines regular systematic moiré aliasing main turbine axis downsized nearest pixel aliasing image appears random levels pixel size level aliasing suppressed image sampled anti aliasing image scale image appears systematic aliasing image pure sampling image viewing scale recommended super sampling scene anti aliasing super sampling anti aliasing ssaa called scene anti aliasing fsaa avoid aliasing jaggies screen images ssaa type anti aliasing video cards tremendous computational cost advent multisample anti aliasing msaa support gpus real time applications msaa graphic quality tremendous savings computational power image ssaa softer realistic photo images simple anti aliasing approach super sampling averaging worsen appearance types art diagrams image fuzzy lines horizontal vertical prior grid fitting step hinting super sampling technique collecting data resolution power final data resolution data combined sampled desired resolution simple average combined data visible aliasing artifacts moiré patterns scene anti aliasing super sampling frame rendered double 2x quadruple 4x display resolution sampled match display resolution 2x fsaa render super sampled pixels single pixel frame rendering larger resolutions produce processor power degrade performance frame rate fsaa implemented hardware graphical application unaware images super sampled sampled displayed object based anti aliasing graphics rendering creates image based objects constructed polygonal primitives aliasing effects image reduced applying anti aliasing scheme image representing silhouette edges objects silhouette edges anti aliased creating anti aliasing primitives vary opacity anti aliasing primitives joined silhouetted edges create region image objects blend background method advantages classical methods based accumulation buffer generates scene anti aliasing passes require additional memory required accumulation buffer object based anti aliasing developed silicon graphics indy workstation anti aliasing gamma compression digital images stored gamma compressed format optical anti aliasing filters linear sample image match optical blurring convert linear format apply anti aliasing filter finally convert gamma compressed format linear arithmetic gamma compressed image values ideal filter error larger dealing contrast causing contrast dimmer bright details cat whiskers visually thinner dark details tree branches thicker relative optically anti aliased image conversion linear format greatly slows process differences subtle image editing software including final cut pro adobe photoshop gimp process images gamma compressed domain modern gpus support storing textures memory srgb format perform transformation linear space transparently essentially loss performance history history anti aliasing include 
126706	computerscience	pattern recognition automated recognition patterns regularities data pattern recognition closely artificial intelligence machine learning applications data mining knowledge discovery databases kdd interchangeably terms distinguished machine learning approach pattern recognition approaches include hand crafted learned rules heuristics pattern recognition approach artificial intelligence approaches include symbolic artificial intelligence modern definition pattern recognition article focuses machine learning approaches pattern recognition pattern recognition systems trained labeled training data supervised learning labeled data algorithms discover unknown patterns unsupervised learning machine learning common term supervised learning methods originates artificial intelligence kdd data mining larger focus unsupervised methods stronger connection business pattern recognition origins engineering term popular context vision leading vision conference named conference vision pattern recognition pattern recognition formalize explain visualize pattern machine learning traditionally focuses maximizing recognition rates domains evolved roots artificial intelligence engineering statistics increasingly integrating developments ideas machine learning pattern recognition assignment label input statistics discriminant analysis introduced purpose 1936 pattern recognition classification attempts assign input set classes determine email spam spam pattern recognition encompasses types output examples regression assigns real valued output input sequence labeling assigns class sequence values speech tagging assigns speech word input sentence parsing assigns parse tree input sentence describing syntactic structure sentence pattern recognition algorithms aim provide reasonable answer inputs perform matching inputs account statistical variation opposed pattern matching algorithms exact matches input pre existing patterns common pattern matching algorithm regular expression matching patterns sort textual data included search capabilities editors word processors contrast pattern recognition pattern matching type machine learning pattern matching algorithms carefully tailored patterns succeed providing quality output sort pattern recognition algorithms overview pattern recognition categorized type learning procedure generate output supervised learning assumes set training data training set consisting set instances properly labeled hand correct output training patterns goals training process confused training set learning procedure generates model attempts meet conflicting objectives perform training data generalize data simple technical definition simple occam razor discussed unsupervised learning hand assumes training data hand labeled attempts inherent patterns data determine correct output data instances combination explored semi supervised learning combination labeled unlabeled data typically set labeled data combined unlabeled data note unsupervised learning training data speak data labeled training data note terms supervised unsupervised learning procedures type output unsupervised equivalent classification clustering based common perception task involving training data speak input data clusters based inherent similarity measure distance instances considered vectors multi dimensional vector space assigning input instance set pre defined classes note fields terminology community ecology term classification refer commonly clustering piece input data output generated formally termed instance instance formally vector features constitute description characteristics instance feature vectors defining multidimensional space methods manipulating vectors vector spaces correspondingly applied computing dot product angle vectors typically features categorical nominal consisting set unordered items gender male female blood type ab ordinal consisting set items medium integer valued count occurrences word email real valued measurement blood pressure categorical ordinal data integer valued real valued data algorithms terms categorical data require real valued integer valued data discretized probabilistic classifiers common pattern recognition algorithms probabilistic nature statistical inference label instance algorithms simply output label probabilistic algorithms output probability instance label addition probabilistic algorithms output list labels probabilities simply single label labels classification set probability labels output probabilistic algorithms advantages probabilistic algorithms feature variables feature selection algorithms attempt prune redundant irrelevant features introduction feature selection summarizes approaches challenges complexity feature selection monotonous character optimization total features powerset consisting subsets features explored branch bound algorithm reduce complexity intractable medium values features scale comparison feature selection algorithms techniques transform raw feature vectors feature extraction prior application pattern matching algorithm feature extraction algorithms attempt reduce dimensionality feature vector dimensionality vector easier encodes redundancy mathematical techniques principal components analysis pca distinction feature selection feature extraction features feature extraction sort original features easily interpretable features left feature selection simply subset original features statement supervised version formally supervised pattern recognition stated unknown function ground truth maps input instances output labels training data assumed represent accurate examples mapping produce function approximates closely correct mapping filtering spam representation email 11 spam spam defined approximates closely defined rigorously decision theory defined loss function cost function assigns specific loss producing incorrect label goal minimize expected loss expectation probability distribution 12 practice distribution 12 ground truth function computed empirically collecting samples 12 hand labeling correct 16 time consuming process typically limiting factor data sort collected loss function depends type label predicted classification simple loss function sufficient corresponds simply assigning loss incorrect labeling implies optimal classifier minimizes error rate independent data counting fraction instances learned function labels wrongly equivalent maximizing correctly classified instances goal learning procedure minimize error rate maximize correctness typical set probabilistic pattern recognizer estimate probability output label input instance estimate function formwhere feature vector input 19 function typically parameterized parameters 20 discriminative approach estimated generative approach inverse probability 21 estimated combined prior probability 22 bayes rule labels continuously distributed regression analysis denominator involves integration summation 25 typically learned maximum posteriori map estimation simultaneously meets conflicting objects perform training data error rate simplest model essentially combines maximum likelihood estimation regularization procedure favors simpler models complex models bayesian context regularization procedure viewed placing prior probability 26 values 25 mathematically 29 25 subsequent evaluation procedure 31 posterior probability 25 byin bayesian approach choosing single parameter vector 34 probability label instance 19 computed integrating values 25 weighted posterior probability frequentist bayesian approach pattern recognition pattern classifier – linear discriminant fisher – developed frequentist tradition frequentist approach entails model parameters considered unknown objective parameters computed estimated collected data linear discriminant parameters precisely vectors covariance matrix probability class 22 estimated collected dataset note usage bayes rule pattern classifier classification approach bayesian bayesian statistics origin greek philosophy distinction priori posteriori knowledge kant defined distinction priori – observation – empirical knowledge gained observations bayesian pattern classifier class probabilities 22 chosen user priori experience quantified priori parameter values weighted empirical observations – beta conjugate prior dirichlet distributions bayesian approach facilitates seamless intermixing expert knowledge form subjective probabilities objective observations probabilistic pattern classifiers frequentist bayesian approach medical science pattern recognition basis aided diagnosis cad systems cad describes procedure supports doctor interpretations findings typical applications pattern recognition techniques automatic speech recognition classification categories spam spam email messages automatic recognition handwritten postal codes postal envelopes automatic recognition images human handwriting image extraction medical forms examples form subtopic image analysis pattern recognition deals digital images input pattern recognition systems optical character recognition classic application pattern classifier seeocr method signing captured stylus overlay starting 1990 strokes speed relative min relative max acceleration pressure uniquely identify confirm identity banks offered technology content collect fdic bank fraud inconvenience customers artificial neural networks neural classifiers deep learning real applications image processing examples discussion aforementioned applications neural networks image processing psychology pattern recognition sense identifying objects closely perception explains sensory inputs humans receive meaningful pattern recognition template matching feature detection template pattern produce items proportions template matching hypothesis suggests incoming stimuli compared templates term memory match stimulus identified feature detection models pandemonium classifying letters selfridge 1959 stimuli broken component identification capital horizontal lines vertical algorithms algorithms pattern recognition depend type label output learning supervised unsupervised algorithm statistical statistical nature statistical algorithms categorized generative discriminative classification algorithms supervised algorithms predicting categorical labels parametric nonparametric multilinear subspace learning algorithms predicting labels multidimensional data tensor representations unsupervised real valued sequence labeling algorithms predicting sequences real valued labels supervised regression algorithms predicting real valued labels supervised unsupervised sequence labeling algorithms predicting sequences categorical labels supervised unsupervised 
131823	computerscience	extranet controlled private network access partners vendors suppliers authorized set customers – subset accessible organization intranet extranet dmz access services authorized parties granting access organization entire network extranet private network organization historically term occasionally sense organizations sharing internal networks vpn enterprise applications late 1990s 2000s industries started term extranet centralized repositories shared data supporting applications accessible authorized geographically dispersed multi company project teams applications offered software service saas basis construction industry project teams access project extranet share drawings photographs documents online applications mark comments manage report project communications 2003 united kingdom leading vendors formed network construction collaboration technology providers ncctp promote technologies establish data exchange standards data systems type construction focused technologies developed united australia mainland europe 
137146	computerscience	architecture memory hierarchy separates storage hierarchy based response time response time complexity capacity levels distinguished performance controlling technologies memory hierarchy performance architectural design algorithm predictions level programming constructs involving locality reference designing performance requires restrictions memory hierarchy size capabilities component components viewed hierarchy memories m1 m2 mi typically faster mi hierarchy limit waiting levels level respond filling buffer signaling activating transfer major storage levels memory hierarchy structuring structures paging algorithm considered level virtual memory designing architecture include level nearline storage online offline storage examples levels memory hierarchy performance level increased time type memory storage components change historically memory hierarchy intel haswell mobile processor circa 2013 levels hierarchy – disks – tiered storage formal distinction online nearline offline storage spinning disks online spinning disks spin massive array idle disk maid nearline removable media tape cartridges automatically loaded tape library nearline cartridges manually loaded offline modern cpus fast program workloads bottleneck locality reference memory accesses efficiency caching memory transfer levels hierarchy result cpu spends time idling waiting memory complete called space cost larger memory object overflow fast level require larger slower level load memory pressure register pressure cache pressure main memory pressure terms data missing level fetched level register spilling register pressure register cache cache cache main memory hard fault main memory disk modern programming languages assume levels memory main memory disk storage assembly language inline assemblers languages registers accessed optimal advantage memory hierarchy requires cooperation programmers hardware compilers underlying support operating programmers assume level memory fine application hits performance wall memory hierarchy assessed code refactoring 
147130	computerscience	virtual private network vpn extends private network public network enables users send receive data shared public networks computing devices connected private network applications running vpn benefit functionality security management private network vpn technology developed remote users branch offices access corporate applications resources ensure security private network connection established encrypted layered tunneling protocol vpn users authentication methods including passwords certificates gain access vpn applications internet users secure transactions vpn circumvent geo restrictions censorship connect proxy servers protect personal identity location stay anonymous internet internet sites block access vpn technology prevent circumvention geo restrictions vpn providers developing strategies roadblocks vpn created establishing virtual connection dedicated connections virtual tunneling protocols traffic encryption vpn public internet provide benefits wide network wan user perspective resources private network accessed remotely types data networks allowed vpn style connections remote sites dial modem leased connections utilizing frame relay asynchronous transfer mode atm virtual circuits networks owned operated telecommunication carriers networks considered true vpns passively secure data transmitted creation logical data streams replaced vpns based ip ip multi protocol label switching mpls networks cost reductions increased bandwidth technologies digital subscriber dsl fiber optic networks vpns remote access connecting network connecting networks corporate setting remote access vpns employees access company intranet traveling office vpns employees geographically disparate offices share cohesive virtual network vpn interconnect networks dissimilar middle network ipv6 networks ipv4 network vpn systems classified security mechanisms vpns online connections completely anonymous increase privacy security prevent disclosure private vpns typically authenticated remote access tunneling protocols encryption techniques vpn security model secure vpn protocols include authentication tunnel endpoints authenticated secure vpn tunnels established user created remote access vpns passwords biometrics factor authentication cryptographic methods network network tunnels passwords digital certificates permanently store key tunnel establish automatically intervention administrator routing tunneling protocols operate network topology theoretically considered vpn vpn definition expected support arbitrary changing sets network nodes router implementations support software defined tunnel interface customer provisioned vpns simply defined tunnels running conventional routing protocols provider provisioned vpn building blocks depending provider provisioned vpn ppvpn operates layer layer building blocks l2 l3 combine multi protocol label switching mpls functionality blurs l2 l3 identity device customer network connected service provider network devices aware vpn device edge customer network access ppvpn demarcation provider customer responsibility providers customers configure device set devices edge provider network connects customer networks ce devices provider view customer pes aware vpns connect maintain vpn device operates provider core network interface customer endpoint provide routing provider operated tunnels belong customers ppvpns device key implementing ppvpns vpn aware maintain vpn principal role allowing service provider scale ppvpn offerings acting aggregation multiple pes connections role capacity optical links major locations providers user visible ppvpn services osi layer services virtual lan vlan layer technique coexistence multiple local network lan broadcast domains interconnected trunks ieee 802 1q trunking protocol trunking protocols obsolete including inter switch link isl ieee 802 originally security protocol subset introduced trunking atm lan emulation lane developed institute electrical electronics engineers virtual lans vlans multiple tagged lans share common trunking vlans frequently comprise customer owned facilities vpls osi layer services supports emulation multipoint topologies method discussed extends layer technologies 802 1d 802 1q lan trunking transports metro ethernet context vpls layer ppvpn emulating functionality traditional lan user standpoint vpls interconnect lan segments packet switched optical provider core core transparent user remote lan segments behave single lan vpls provider network emulates learning bridge optionally include vlan service vpls provide l2 protocols typically interface wan protocol asynchronous transfer mode frame relay contrast aiming provide appearance lan contiguous locations virtual private lan service ipls etherip ethernet ip tunneling protocol specification etherip packet encapsulation mechanism confidentiality message integrity protection etherip introduced freebsd network stack softether vpn server program subset vpls ce devices layer capabilities ipls packets frames support ipv4 ipv6 osi layer ppvpn architectures discusses main architectures ppvpns disambiguates duplicate addresses single routing instance virtual router virtual router instance vpn approach variants gained attention challenges ppvpns involves customers address space ipv4 private address space provider disambiguate overlapping addresses multiple customers ppvpns method defined bgp extensions advertise routes ipv4 vpn address family form 12 byte strings byte route distinguisher byte ipv4 address rds disambiguate duplicate addresses pes understand topology vpn interconnected mpls tunnels routers mpls terminology routers label switch routers awareness vpns virtual router architecture opposed bgp mpls techniques requires modification existing routing protocols bgp provisioning logically independent routing domains customer operating vpn completely responsible address space mpls tunnels ppvpns disambiguated label routing distinguishers unencrypted tunnels virtual networks tunneling protocols encryption protecting privacy data vpns provide security unencrypted overlay network neatly fit secure trusted categorization tunnel set hosts generic routing encapsulation gre virtual private network secure trusted native plaintext tunneling protocols include layer tunneling protocol l2tp set ipsec tunneling protocol pptp encryption mppe trusted delivery networks trusted vpns cryptographic tunneling rely security single provider network protect traffic security standpoint vpns trust underlying delivery network enforce security mechanisms vpn trusted delivery network runs physically secure sites trusted secure models authentication mechanism users gain access vpn vpns mobile environments users utilize mobile virtual private networks settings endpoint vpn fixed single ip address roams networks data networks cellular carriers multiple wi access mobile vpns public safety law enforcement officers access mission critical applications assisted dispatch criminal databases travel subnets mobile network field service management healthcare organizations industries increasingly mobile professionals reliable connections adopting mobile vpns roaming seamlessly networks wireless coverage losing application sessions dropping secure vpn session conventional vpn withstand events network tunnel disrupted causing applications disconnect time fail computing device crash logically tying endpoint network tunnel physical ip address tunnel bound permanently ip address device mobile vpn software handles network authentication maintains network sessions manner transparent application user host identity protocol hip study internet engineering task force designed support mobility hosts separating role ip addresses host identification locator functionality ip network hip mobile host maintains logical connections established host identity identifier associating ip addresses roaming access networks vpn routers increasing vpns started deploying vpn connectivity routers additional security encryption data transmission cryptographic techniques users deploy vpns routers protect devices smart tvs gaming consoles supported native vpn clients supported devices restricted capable running vpn client router manufacturers supply routers built vpn clients source firmware dd wrt openwrt tomato support additional protocols openvpn setting vpn services router requires deep knowledge network security careful installation minor misconfiguration vpn connections leave network vulnerable performance vary depending internet service provider isp networking limitations major limitation traditional vpns tend support connect broadcast domains communication software networking based layer broadcast packets netbios windows networking supported real lan variants vpn virtual private lan service vpls layer tunneling protocols designed overcome limitation vpn connection robust direct connection network vpn connection depends vpn provider isp fails connection fails 
147585	computerscience	abc imperative purpose programming language programming environment developed cwi netherlands leo geurts lambert meertens steven pemberton interactive structured level intended basic pascal awk meant systems programming language intended teaching prototyping language major influence design python programming language guido van rossum developed python abc mid 1980s features designers claim abc programs typically quarter size equivalent pascal programs readable key features include abc originally monolithic implementation leading inability adapt requirements creating graphical user interface abc access underlying file operating abc includes programming environment syntax directed editing suggestions persistent variables multiple workspaces interpreter compiler version 05 02 ported unix dos atari apple macintosh function collect set document 
148169	computerscience	ibm pc dos acronym ibm personal disk operating discontinued operating ibm personal manufactured sold ibm 1980s 2000s version pc dos ibm branded version dos version pc dos ibm independent product history ibm task force assembled develop pc decided critical components machine including operating vendors radical break company tradition house development key decisions ibm pc industry standard time private company founded earlier gates eventually selected operating ibm retain ownership software developed helping suggestions afar task force jack sams reasons internal terrible sued people claiming stolen stuff horribly expensive programmers code belonged stole money lost series suits product product ibm people proposition product ibm contacted company july 1980 negotiations continued months paperwork officially signed november ibm expected customers pc dos ibm pc supported cp 86 months pc dos ucsd operating systems ibm expectation proved correct survey 96 pcs 40 pc dos compared 240 cp 86 versions pc dos licensed purchased 86 dos seattle products scp modified ibm pc employee bob rear assistance scp employee tim paterson rear 86 dos prototype pc february 1981 86 dos converted inch 25 inch floppy disks integrated bios helping ibm write ibm people writing requirements writing code rear overwhelmed people deal esd entry systems division facility boca raton florida public mention operating july 1981 byte discussed rumors forthcoming personal cp dos called simply ibm personal dos 86 dos rebranded ibm pc dos august 1981 release ibm pc initial version dos based cp 80 architecture function calls file naming conventions copied os difference introduced file fat12 dos versions time commands separate executables command single sided 160 kilobyte kb 25 floppies disk format supported late 1981 paterson writing pc dos debuted 1982 revision ibm pc support double sided drives allowing 320 kb disk bugs fixed error messages prompts cryptic debug utility load files 64k size pc dos programmers paul allen mark zbikowski aaron reynolds pc dos completely rewritten dos subdirectories hard disk support ibm xt debuted march 1983 sector format bumped capacity floppy disks 360 kb unix inspired kernel featured file handles cp derivative file control blocks loadable device drivers adding hardware ibm pc bios supported basic utilities dos upgraded major undertaking months dos dos occupying 28k ram compared 12k predecessor form basis consumer oriented oses 2001 windows xp based windows nt released october 1983 officially november dos debuted fixed bugs support height floppy drives ibm pcjr 1983 compaq released compaq portable 100 ibm pc compatible licensed oem version dos replaced dos 00 pc compatibles suit included hardware specific dos features generic pc dos august 1984 ibm introduced intel 80286 derived ibm pc generation machine dos 00 jumping version proved incremental upgrade adding substantial support megabyte mb floppy disks planned networking capabilities dos 00 judged buggy usable disabled prior os release ibm original plans equip proper generation os extended features materialized pc dos released march 1985 fixed bugs dos 00 supported ibm network adapter card ibm pc network pc dos support 3½ inch double density 720 kb floppy disk drives supporting ibm pc convertible ibm 3½ inch floppy disks released april 1986 ibm personal 1987 june 1985 ibm signed term joint development agreement share dos code create operating scratch time advanced dos april 1987 os announced product produced agreement time ibm released generation personal computers ibm personal ps pc dos released ps support density 3½ inch 44 megabyte mb floppy disk drives ibm introduced 80286 based ps models upgrade dos completely written ibm development effort advanced dos dos 30 version designed ibm xt floppy systems mind popular versions users preferred buggy successor pc dos pc dos internally dos originally shipped july 1988 dos compatibility issues level disk utilities internal data structure dos memory dos 30 glitches newly ems drivers compatible ibm ems boards common intel ast dos notable including version dos screen utility designed command os user friendly control development released bug fixed dos 01 pc dos dos debuted june 1991 biggest upgrades dos history dos supported memory hma upper memory blocks umbs 80286 systems reduce conventional memory usage dos commands supported option display command syntax ibm pc dos dos version oem editions vanished time pcs 100 compatible customizations hardware differences version dos ibm shared code dos integrated os windows nt virtual dos machine pc dos pc dos remained rebranded version dos 1993 ibm ways—ms dos released march pc dos separately developed june features dos appeared pc dos including boot menu support commands choice deltree qbasic dropped dos editor replaced ibm editor pc dos reports dos 00 pc dos pc dos december pc dos os powerpc pc dos featured superstor disk compression technology addstor pc dos pc dos released april 1995 release dos ibm boca raton facility closed rexx programming language support floppy disk format xdf extended standard 44 mb floppy disk 86 mb superstor disk compression technology replaced stac electronics stacker algebraic command calculator utility program load device drivers command pc dos included optimizations increase performance reduce memory usage pc dos 2000 retail release pc dos 2000 – released austin 1998 – niche embedded software market pc dos 2000 slipstream y2k fixes applied applications pc dos 2000 reports ibm pc dos 00 revision contrast original pc dos reported ibm pc dos 00 revision hitachi pc dos 2000 legacy drive fitness 15 hitachi feature tool 15 2009 thinkpad products version pc dos rescue recovery partition pc dos pc dos support logical block addressing lba fat32 partitions builds 1999 2003 released retail products ibm serverguide scripting toolkit build version dos appeared norton ghost symantec version support fat32 dos builds version dos limited kernel files ibmbio ibmdos command updated programs fdisk32 format32 prepare fat32 disks additional utilities pc dos 2000 pc dos distributed file client 1986 ibm announced pc dos support client access file services defined distributed data management architecture ddm enabled programs pcs create manage access record oriented files ibm 36 ibm 38 ibm mainframe computers running cics 1988 client support stream oriented files hierarchical directories pc dos ddm server systems 
149963	computerscience	framebuffer frame buffer framestore portion ram bitmap drives video display memory buffer complete frame data modern video cards framebuffer circuitry cores circuitry converts memory bitmap video signal displayed monitor computing screen buffer memory application representation content display screen buffer called video buffer regeneration buffer regen buffer short screen buffers distinguished video memory term screen buffer buffer typically consists color values pixel display color values commonly stored bit binary monochrome bit palettized bit palettized 16 bit color 24 bit true color formats additional alpha channel retain pixel transparency total memory required framebuffer depends resolution output signal color depth palette size history researchers discussed theoretical advantages framebuffer unable produce machine sufficient memory economically practicable cost 1969 michael noll bell labs implemented scanned display frame buffer bell labs expanded display image color depth bits standard color monitor earlier scanned display implemented brookhaven national laboratory advances integrated circuit memory 1970s practical create framebuffers capable holding standard video image 1972 richard shoup developed superpaint xerox parc shoup superpaint framebuffer create digital video capture synchronizing output signal input signal shoup overwrite pixel data shifted shoup experimented modifying output signal color tables color tables allowed superpaint produce wide variety colors range limited bit data contained scheme commonplace framebuffers 1974 evans sutherland released commercial framebuffer picture costing 15 000 capable producing resolutions 512 512 pixels bit grayscale boon graphics researchers resources build framebuffer york institute technology create 24 bit color evans sutherland framebuffers framebuffer connected rgb color output red green blue digital equipment corporation pdp 11 04 minicomputer controlling devices 1975 company quantel produced commercial color broadcast framebuffer quantel dfs 3000 coverage 1976 montreal olympics generate picture picture inset olympic flaming torch rest picture featured runner entering stadium rapid improvement integrated circuit technology computers late 1970s color depth framebuffers computers graphical capabilities utilize framebuffer generating video signal amiga computers created 1980s featured special design attention graphics performance included unique hold modify framebuffer capable displaying 4096 colors framebuffers popular workstations arcade boards 1980s sgi sun microsystems hp dec ibm released framebuffers workstation computers period framebuffers quality computers regularly television printing modeling 3d graphics framebuffers sega arcade boards quality computers display modes framebuffers personal computing sets defined modes framebuffer operate modes reconfigure hardware output resolutions color depths memory layouts refresh rate timings unix machines operating systems conveniences eschewed favor manipulating hardware settings manipulation flexible resolution color depth refresh rate attainable – limited memory framebuffer unfortunate method display device driven capabilities hardware damage display commonly simply produced garbled unusable output modern crt monitors introduction protection circuitry display mode changed monitor attempts signal lock refresh frequency monitor unable signal lock signal range design limitations monitor ignore framebuffer signal user error message lcd monitors tend protection circuitry reasons lcd digitally sample display signal emulating electron beam signal range physically displayed monitor color palette framebuffers traditionally supported wide variety color modes expense memory framebuffers bit color bit color bit 16 color bit 256 color color depths color depths range colors produced solution indexed color adds lookup table framebuffer color stored framebuffer memory acts color lookup table serves palette limited colors designs write data lut switch existing palettes allowing dividing picture horizontal bars palette render image wider palette viewing outdoor shot photograph picture divided bars emphasis sky tones foliage tones skin clothing tones ground colors required palette overlapping colors carefully allowed flexibility memory access framebuffers commonly accessed memory mapping cpu memory space method accessed framebuffers varied methods access memory common framebuffer organization packed pixel planar framebuffer addressable restrictions updated ram video card video cards ram ram bitmap image data buffered display term frame buffer interchangeably referring ram cpu sends image updates video card video processor card forms picture screen image stores frame buffer bitmap ram bitmap ram card continually refresh screen image virtual framebuffers systems attempt emulate function framebuffer device reasons compatibility common virtual framebuffers linux framebuffer device fbdev virtual framebuffer xvfb xvfb window distribution provide method running graphical framebuffer linux framebuffer device developed abstract physical method accessing underlying framebuffer guaranteed memory map easy programs access increases portability programs required deal systems disjointed memory maps require bank switching flipping framebuffers designed handle resolution memory display single frame resolutions memory considerable size trick developed frames written video memory disturbing frame displayed concept telling framebuffer specific chunk memory display current frame memory displayed completely separate memory filled data frame secondary buffer filled typically referred buffer framebuffer instructed secondary buffer primary buffer typically referred buffer secondary buffer secondary buffer primary switch vertical blanking interval prevent screen tearing frame frame modern framebuffers manufactured memory perform trick resolutions result standard technique pc game programmers graphics accelerators demand graphics increased hardware manufacturers created decrease cpu time required framebuffer commonly called graphics accelerating common graphics drawing commands geometric graphics accelerator raw form accelerator rasterizes command framebuffer method save thousands millions cpu cycles command cpu freed accelerators focused improving performance 2d gui systems modern accelerators focus producing 3d imagery real time common design send commands graphics accelerator library opengl direct3d graphics driver translates commands instructions accelerator graphics processing unit gpu gpu microinstructions compute rasterized bit blitted framebuffer framebuffer signal produced combination built video overlay devices produce mouse cursor modifying framebuffer data analog special effects produced modifying output signal analog modification spatial anti aliasing technique 3dfx voodoo cards cards add slight blur output signal aliasing rasterized graphics obvious time manufacturers graphics accelerators including 3dfx ati hercules trident nvidia radius s3 graphics sis silicon graphics market graphics accelerators x86 based systems dominated nvidia acquired 3dfx 2002 amd acquired ati 2006 intel produces integrated gpus discrete video cards comparisons display technologies framebuffers vector displays common prior advent raster graphics concept framebuffer vector display vertices graphics primitives stored electron beam output display commanded vertex vertex tracing analog framebuffer electron beam display technology commanded trace left path entire screen television renders broadcast signal color displayed screen pulled framebuffer creating set discrete picture elements pixels framebuffers technology displays buffer holds codes characters individual pixels video display device drives electron beam raster pattern framebuffer generates pixels character buffer directs beam 
155555	computerscience	image registration process transforming sets data coordinate data multiple photographs data sensors times depths viewpoints vision medical imaging military automatic target recognition compiling analyzing images data satellites registration compare integrate data measurements algorithm classification intensity based feature based image registration image alignment algorithms classified intensity based feature based images referred moving source referred target fixed sensed images image registration involves spatially transforming source moving image align target image reference frame target image stationary datasets transformed match target intensity based methods compare intensity patterns images correlation metrics feature based methods correspondence image features lines contours intensity based methods register entire images images images registered centers images treated feature feature based methods establish correspondence distinct images knowing correspondence images geometrical transformation determined map target image reference images establishing correspondence reference target images methods combining intensity based feature based developed transformation models image registration algorithms classified transformation models relate target image space reference image space broad category transformation models includes linear transformations include rotation scaling translation affine transforms linear transformations global nature model local geometric differences images category transformations elastic nonrigid transformations transformations capable locally warping target image align reference image nonrigid transformations include radial basis functions plate surface splines multiquadrics compactly supported transformations physical continuum models viscous fluids deformation models diffeomorphisms transformations commonly parametrization model dictates parameters instance translation image single parameter translation vector models called parametric models parametric models hand follow parameterization allowing image element displaced arbitrarily programs implement estimation application warp field spm air programs transformations coordinates law function composition addition alternatively advanced methods spatial normalization building structure preserving transformations homeomorphisms diffeomorphisms carry smooth submanifolds smoothly transformation diffeomorphisms generated modern field computational anatomy based flows diffeomorphisms additive form law function composition reason flows generalize ideas additive generating deformations preserve topology providing transformations computational methods generating transformation called lddmm provide flows diffeomorphisms main computational tool connecting coordinate systems geodesic flows computational anatomy programs generate diffeomorphic transformations coordinates diffeomorphic mapping including mri studio mri cloud orgspatial frequency domain methods spatial methods operate image domain matching intensity patterns features images feature matching algorithms outgrowths traditional techniques performing manual image registration operator chooses control cp images control exceeds minimum required define transformation model iterative algorithms ransac robustly estimate parameters transformation type affine registration images frequency domain methods transformation parameters registration images transform domain methods simple transformations translation rotation scaling applying phase correlation method pair images produces image single peak location peak corresponds relative translation images spatial domain algorithms phase correlation method resilient noise occlusions defects typical medical satellite images additionally phase correlation fast fourier transform compute cross correlation images performance gains method extended determine rotation scaling differences images converting images log polar coordinates properties fourier transform rotation scaling parameters determined manner invariant translation single multi modality methods classification single modality multi modality methods single modality methods tend register images modality acquired scanner sensor type multi modality registration methods tended register images acquired scanner sensor types multi modality registration methods medical imaging images subject frequently scanners examples include registration brain ct mri images body pet ct images tumor localization registration contrast enhanced ct images contrast enhanced ct images segmentation specific anatomy registration ultrasound ct images prostate localization radiotherapy automatic interactive methods registration methods classified based level automation provide manual interactive semi automatic automatic methods developed manual methods provide tools align images manually interactive methods reduce user bias performing key operations automatically relying user guide registration semi automatic methods perform registration steps automatically depend user verify correctness registration automatic methods user interaction perform registration steps automatically similarity measures image registration image similarities broadly medical imaging image similarity measure quantifies degree similarity intensity patterns images choice image similarity measure depends modality images registered common examples image similarity measures include cross correlation mutual sum squared intensity differences ratio image uniformity mutual normalized mutual popular image similarity measures registration multimodality images cross correlation sum squared intensity differences ratio image uniformity commonly registration images modality features derived cost functions based matching methods deformations emerged field computational anatomy including uncertainty level uncertainty registering images spatio temporal differences confident registration measure uncertainty critical change detection applications medical diagnostics remote sensing applications digital image pixel represent kilometers spatial distance nasa landsat imagery uncertain image registration solution kilometers ground truth notable papers attempted quantify uncertainty image registration compare approaches quantifying uncertainty estimating deformations computationally intensive applicable limited sets spatial transformations 
157105	computerscience	vxworks real time operating rtos developed proprietary software wind river systems wholly owned subsidiary tpg capital released 1987 vxworks designed embedded systems requiring real time deterministic performance safety security certification industries aerospace defense medical devices industrial equipment robotics energy transportation network infrastructure automotive consumer electronics vxworks supports intel architecture power architecture arm architectures rtos multicore asymmetric multiprocessing amp symmetric multiprocessing smp mixed modes multi os type hypervisor designs 32 64 bit processors vxworks kernel middleware board support packages wind river workbench development suite complementary party software hardware technologies release vxworks rtos engineered modularity upgradeability os kernel separate middleware applications packages scalability security safety connectivity graphics improved address internet iot history vxworks started late 1980s set enhancements simple rtos called vrtx sold ready systems mentor graphics product 1995 wind river acquired rights distribute vrtx enhanced adding file integrated development environment 1987 anticipating termination reseller contract ready systems wind river developed kernel replace vrtx vxworks vxworks key milestones platform overview vxworks supports intel architecture power architecture arm architectures rtos multi core asymmetric multiprocessing amp symmetric multiprocessing smp mixed modes multi os type hypervisor designs 32 64 bit processors vxworks consists set runtime components development tools time components operating smp 32 64 bit software applications support file core network stack usb stack inter process communications hardware support architecture adapter processor support library device driver library board support packages vxworks core development tools compilers diab gnu intel compiler icc build configuration tools includes productivity tools workbench development suite intel tools development support tools asset tracking host support platform modular vendor neutral supports range party software hardware os kernel separate middleware applications packages enables easier bug fixes testing features implementation layered source build multiple versions stack installed time developers select version feature set vxworks kernel libraries optional advanced technology vxworks add technology capabilities features list features os march 2014 wind river introduced vxworks emphasizes scalability security safety connectivity graphics virtualization lists release updates wind rivers vxworks hardware support vxworks ported platforms runs practically modern cpu embedded market includes intel x86 family including intel quark soc mips powerpc bae rad freescale coldfire intel i960 sparc fujitsu closely family arm strongarm xscale cpus vxworks standard board support package bsp interface supported hardware os wind river bsp developer kit common application programming interface api stable environment real time operating development development environment common embedded development cross compiling vxworks development host integrated development environment ide including editor compiler toolchain debugger emulator software compiled target developer powerful development tools targeting limited hardware vxworks host environments target hardware architectures vxworks supports target architectures target architecture processors board support packages refer vxworks marketplace https marketplace windriver php bsp locate type platformthe eclipse based workbench ide vxworks configure analyze optimize debug vxworks based development tornado ide vxworks replaced eclipse based workbench ide vxworks workbench ide wind river linux chip debugging wind river diab compiler product lines vxworks wind river workbench updates eclipse base provide party plug support usability improvements wind river simics standalone simulation tool compatible vxworks simulates target hardware software create shared platform software development multiple developers share complete virtual entire including execution history simics enables continuous integration faster prototyping utilizing virtual prototypes physical prototypes notable vxworks products wide range market aerospace defense automotive industrial robots consumer electronics medical networking notable products vxworks onboard operating aerospace defense aircraft 
164346	computerscience	society motion picture television engineers smpte rarely founded 1916 society motion picture engineers smpe global professional association engineers technologists executives media entertainment industry internationally recognized standards organization smpte 800 standards recommended practices engineering guidelines broadcast filmmaking digital cinema audio recording technology medical imaging addition development publication technical standards documents smpte publishes smpte motion imaging journal networking opportunities produces academic conferences exhibitions performs industry functions smpte membership individual organization subject matter smpte educational professional development activities include technical presentations regular meetings local sections annual biennial conferences australia smpte motion imaging journal society sponsors awards smpte progress medal samuel warner memorial medal david sarnoff medal smpte student chapters sponsors scholarships college students motion imaging disciplines smpte 501 profit charitable organization organizations includefilm frame rate smpte standard 1917 speed film 3d television smpte task force 3d produced report issues challenges suggested minimum standards 3d master distributed post production ingest distribution channels 3d video content standards committees begun formal definition smpte 3d master digital cinema smpte instituted 1999 technology committee foundations digital cinema dc28 honors awards program smpte awards individuals outstanding contributions fields society honorary membership honor roll recipients include progress medal progress medal instituted 1935 smpte prestigious medal awarded annually contributions engineering aspects film television industries recipients include eastman kodak gold medal eastman kodak gold medal instituted 1967 recognizes outstanding contributions lead unique educational programs utilizing motion pictures television speed instrumentation photography photography sciences recipients 
172088	computerscience	machine vision technology methods provide imaging based automatic inspection analysis applications automatic inspection process control robot guidance industry machine vision term encompassing technologies software hardware products integrated systems actions methods expertise machine vision systems engineering discipline considered distinct vision form science attempts integrate existing technologies apply solve real term prevalent functions industrial automation environments functions environments security vehicle guidance machine vision process includes planning details requirements project creating solution time process starts imaging automated analysis image extraction required definition definitions term machine vision vary include technology methods extract image automated basis opposed image processing output image extracted simple bad signal complex set data identity position orientation object image applications automatic inspection robot process guidance industry security monitoring vehicle guidance field encompasses technologies software hardware products integrated systems actions methods expertise machine vision practically term functions industrial automation applications term universal functions environments security vehicle guidance machine vision systems engineering discipline considered distinct vision form basic science machine vision attempts integrate existing technologies apply solve real meets requirements industrial automation application term broader sense trade trade automated imaging association european machine vision association broader definition encompasses products applications image processing primary machine vision automatic inspection industrial robot process guidance glossary machine vision imaging based automatic inspection sorting primary machine vision imaging based automatic inspection sorting robot guidance abbreviated automatic inspection process includes planning details requirements project creating solution describes technical process occurs operation solution methods sequence operation step automatic inspection sequence operation acquisition image typically cameras lenses lighting designed provide differentiation required subsequent processing software packages programs developed employ digital image processing techniques extract required decisions pass fail based extracted equipment components automatic inspection include lighting camera imager processor software output devices imaging imaging device camera separate main image processing unit combined combination called smart camera smart sensor separated connection specialized intermediate hardware custom processing appliance frame grabber analog standardized digital interface camera link coaxpress implementations digital cameras capable direct connections framegrabber firewire usb gigabit ethernet interfaces conventional 2d visible light imaging commonly alternatives include multispectral imaging hyperspectral imaging imaging infrared bands scan imaging 3d imaging surfaces ray imaging key differentiations 2d visible light imaging monochromatic color frame rate resolution imaging process simultaneous entire image suitable moving processes vast majority machine vision applications solved dimensional imaging machine vision applications utilizing 3d imaging growing niche industry commonly method 3d imaging scanning based triangulation utilizes motion product image imaging process laser projected surfaces object viewed angle machine vision accomplished scanning motion moving workpiece moving camera laser imaging viewed camera angle deviation represents shape variations lines multiple scans assembled depth map cloud stereoscopic vision special involving unique features views pair cameras 3d methods machine vision time flight grid based method grid array based systems pseudorandom structured light employed kinect circa 2012 image processing image acquired processed multiple stages processing sequence desired result typical sequence start tools filters modify image extraction objects extraction measurements reading codes data objects communicating data comparing target vales create communicate pass fail machine vision image processing methods include outputs common output automatic inspection systems pass fail decisions decisions trigger mechanisms reject failed items sound alarm common outputs include object position orientation robot guidance systems additionally output types include numerical measurement data data read codes characters counts classification objects displays process stored images alarms automated space monitoring systems process control signals includes user interfaces interfaces integration multi component systems automated data interchange imaging based robot guidance machine vision commonly location orientation robot robot properly grasp product capability guide motion simpler robots axis motion controller process includes planning details requirements project creating solution describes technical process occurs operation solution process steps automatic inspection focus providing position orientation result market global machine vision market expected reach 15 46 2022 18 cagr forecast period 2017 2022 machine vision market growing positive growth regions increasing application advancement technology integration driving market global scale asia pacific dominating global market 30 market share europe standing biggest market heavy demand automotive healthcare industry north america stands biggest market 
172777	computerscience	machine learning perceptron algorithm supervised learning binary classifiers binary classifier function decide input represented vector belongs specific class type linear classifier classification algorithm predictions based linear predictor function combining set weights feature vector history perceptron algorithm invented 1957 cornell aeronautical laboratory frank rosenblatt funded united office naval perceptron intended machine program implementation software ibm 704 subsequently implemented custom built hardware mark perceptron machine designed image recognition array 400 photocells randomly connected neurons weights encoded potentiometers weight updates learning performed electric motors 1958 press conference organized navy rosenblatt statements perceptron caused heated controversy fledgling community based rosenblatt statements york times reported perceptron embryo electronic navy expects walk talk write reproduce conscious existence perceptron initially promising proved perceptrons trained recognise classes patterns caused field neural network stagnate recognised feedforward neural network layers called multilayer perceptron processing power perceptrons layer called single layer perceptron single layer perceptrons capable learning linearly separable patterns 1969 famous book entitled perceptrons marvin minsky seymour papert impossible classes network learn xor function hold linear classification functions single layer perceptron applying functions extend perceptron abilities including implementation xor function believed incorrectly conjectured result hold multi layer perceptron network true minsky papert multi layer perceptrons capable producing xor function perceptrons book stephen grossberg published series papers introducing networks capable modelling differential contrast enhancing xor functions papers published 1972 1973 miscited minsky papert caused decline funding neural network neural network experienced resurgence 1980s reprinted 1987 perceptrons expanded edition errors original corrected kernel perceptron algorithm introduced 1964 aizerman margin bounds guarantees perceptron algorithm separable freund schapire 1998 mohri rostamizadeh 2013 extend previous l1 bounds perceptron simplified model biological neuron complexity biological neuron models required understand neural behavior suggests perceptron linear model produce behavior real neurons definition modern sense perceptron algorithm learning binary classifier called threshold function function maps input real valued vector output single binary vector real valued weights dot product inputs perceptron bias bias shifts decision boundary origin depend input classify positive negative instance binary classification negative weighted combination inputs produce positive push classifier neuron threshold spatially bias alters position orientation decision boundary perceptron learning algorithm terminate learning set linearly separable vectors linearly separable learning reach vectors classified properly famous perceptron inability solve linearly nonseparable vectors boolean exclusive solution spaces decision boundaries binary functions learning behaviors studied reference context neural networks perceptron artificial neuron heaviside step function activation function perceptron algorithm termed single layer perceptron distinguish multilayer perceptron misnomer complicated neural network linear classifier single layer perceptron simplest feedforward neural network learning algorithm learning algorithm single layer perceptron multilayer perceptrons hidden layer exists sophisticated algorithms backpropagation alternatively methods delta rule function linear differentiable multiple perceptrons combined artificial neural network output neuron operates independently learning output considered isolation definitions define variables values features represent weights time dependence linear classification algorithms logistic regression learning rate perceptron algorithm multiplying update constant simply rescales weights sign prediction steps algorithm updates weights steps 2a 2b weights applied pair training set subsequently updated waiting pairs training set undergone steps convergence perceptron linear classifier input vectors classified correctly training set linearly separable positive examples separated negative examples hyperplane approximate solution gradually approached standard learning algorithm learning fail completely linear separability training set priori training variants training set linearly separable perceptron guaranteed converge upper bound times perceptron adjust weights training suppose input vectors classes separated hyperplane margin 31 exists weight vector 32 bias term 33 34 35 36 denote maximum norm input vector novikoff 1962 proved perceptron algorithm converges 37 updates idea proof weight vector adjusted bounded direction negative dot product bounded weight vector bounded exists unknown satisfactory weight vector change progress unknown direction positive depends input vector perceptron algorithm guaranteed converge solution linearly separable training set pick solution admit solutions varying quality perceptron optimal stability nowadays linear support vector machine designed solve krauth mezard 1987 variants pocket algorithm ratchet gallant 1990 solves stability perceptron learning keeping solution pocket pocket algorithm returns solution pocket solution separable data sets aim perceptron misclassifications solutions purely stochastically pocket algorithm approaches gradually learning guaranteed learning steps maxover algorithm wendemuth 1995 robust sense converge prior knowledge linear separability data set linearly separable solve training – desired optimal stability maximum margin classes separable data sets return solution misclassifications algorithm gradually approaches solution learning memorizing previous stochastic jumps convergence global optimality separable data sets local optimality separable data sets voted perceptron freund schapire 1999 variant multiples weighted perceptrons algorithm starts perceptron time wrongly classified initializing weights vector final weights perceptron perceptron weight examples correctly classify wrongly classifying output weighted vote perceptron separable perceptron training aim finding largest separating margin classes called perceptron optimal stability determined iterative training optimization schemes min algorithm krauth mezard 1987 adatron anlauf biehl 1989 adatron quadratic optimization convex perceptron optimal stability kernel trick conceptual foundations support vector machine 38 perceptron pre processing layer fixed random weights thresholded output units enabled perceptron classify analogue patterns projecting binary space projection space dimension patterns linearly separable solve nonlinear multiple layers networks sigma pi unit type network element input vector extended pairwise combination multiplied inputs extended network mind classifier classifies training data perfectly prior constraint data equi variant gaussian distributions linear separation input space optimal nonlinear solution overfitted linear classification algorithms include winnow support vector machine logistic regression multiclass perceptron techniques training linear classifiers perceptron generalizes naturally multiclass classification input output 40 drawn arbitrary sets feature representation function 41 maps input output pair finite dimensional real valued feature vector feature vector multiplied weight vector 42 score choose outputs learning iterates examples predicting output leaving weights unchanged predicted output matches target changing update multiclass feedback formulation reduces original perceptron real valued vector 40 chosen 47 48 input output representations features chosen 49 efficiently 40 chosen infinite set 2002 perceptron training popular field natural language processing tasks speech tagging syntactic parsing collins 2002 applied scale machine learning distributed computing setting 
173332	computerscience	statistics overfitting production analysis corresponds closely set data fail fit additional data predict future observations reliably overfitted model statistical model parameters justified data essence overfitting unknowingly extracted residual variation noise variation represented underlying model structure underfitting occurs statistical model adequately capture underlying structure data underfitted model model parameters terms correctly model missing underfitting occur fitting linear model linear data model tend poor predictive performance overfitting underfitting occur machine learning machine learning phenomena called overtraining undertraining possibility overfitting exists criterion selecting model criterion judge suitability model model selected maximizing performance set training data suitability determined ability perform unseen data overfitting occurs model memorize training data learning generalize trend extreme parameters observations model perfectly predict training data simply memorizing data entirety illustration figure 2 model typically fail severely predictions potential overfitting depends parameters data conformability model structure data shape magnitude model error compared expected level noise error data fitted model excessive parameters expected fitted relationship perform data set data set fitting phenomenon shrinkage coefficient determination shrink relative original data lessen chance overfitting techniques model comparison cross validation regularization stopping pruning bayesian priors dropout basis techniques explicitly penalize overly complex models model ability generalize evaluating performance set data training assumed approximate typical unseen data model encounter statistical inference statistics inference drawn statistical model selected procedure burnham  anderson cited model selection argue avoid overfitting adhere principle parsimony authors overfitting concern theory guide analysis tend models select book model selection model averaging 2008 regression regression analysis overfitting occurs frequently extreme variables linear regression data fitted logistic regression cox proportional hazards models variety rules thumb 5–9 10–15 guideline observations independent variable rule process regression model selection squared error random regression function split random noise approximation bias variance estimate regression function bias–variance tradeoff overcome overfit models set explanatory variables relation dependent variable predicted variables spuriously statistically researcher retain model overfitting model freedman paradox machine learning learning algorithm trained set training data exemplary situations desired output goal algorithm perform predicting output fed validation data encountered training overfitting models procedures violate occam razor including adjustable parameters ultimately optimal complicated approach ultimately optimal adjustable parameters dataset training data adequately predicted linear function dependent variables function requires parameters intercept slopes replacing simple function complex quadratic function complex linear function dependent variables carries risk occam razor implies complex function priori probable simple function complicated function selected simple function gain training data fit offset complexity increase complex function overfits data complex overfitted function perform worse simpler function validation data training dataset complex function performed training dataset comparing types models complexity measured solely counting parameters exist model expressivity parameter considered nontrivial compare complexity neural track curvilinear relationships parameters regression model parameters overfitting learning performed training examples rare causing learner adjust specific random features training data causal relation target function process overfitting performance training examples increases performance unseen data worse simple database retail purchases includes item bought purchaser time purchase easy construct model fit training set perfectly time purchase predict attributes model generalize data times occur learning algorithm overfit relative simpler accurate fitting data hindsight accurate predicting data foresight intuitively understand overfitting experience divided relevant future irrelevant noise equal difficult criterion predict uncertainty noise exists determining ignore learning algorithm reduce chance fitting noise called robust consequences obvious consequence overfitting poor performance validation dataset negative consequences include remedy optimal function verification bigger completely datasets methods minimum spanning tree life time correlation applies dependence correlation coefficients time series window window correlation coefficients stable depend window size correlation matrix created calculating coefficient correlation investigated variables matrix represented topologically complex network direct indirect influences variables visualized underfitting underfitting occurs statistical model machine learning algorithm adequately capture underlying structure data occurs model algorithm fit data underfitting occurs model algorithm variance bias contrast overfitting variance bias result excessively simple model burnham  anderson 
173787	computerscience	imax resolution cameras film formats film projectors graeme ferguson roman kroitor robert kerr william shaw developed imax cinema projection standards late 1960s 1970s canada conventional projectors film runs horizontally diagram sprocket holes image film 2002 feature films converted imax format displaying imax theatres partially shot imax imax special venue film presentations late 2017 302 imax theatre systems installed 203 commercial multiplexes 13 commercial destinations 86 institutional settings 75 countries history desire increase visual impact film history 1929 fox introduced fox grandeur 70 mm film format fell 1950s potential 35 mm film provide wider projected images explored processes cinemascope 1953 vistavision 1954 multi projector systems cinerama 1952 impressive cinerama difficult install expo 67 montreal national film board canada labyrinth ferguson polar regions multi projector multi screen systems encountered technical difficulties led company called multiscreen goal developing simpler approach single projector single camera eventually settled designed built shaw based rolling loop film transport technology purchased peter ronald wright jones machine shop worker brisbane australia single screen image impact multiple viable product direction multiscreen changed imax imax 3d theatre operation expo 67 montreal science centre port montreal tiger child imax film demonstrated expo 70 osaka japan permanent imax installation built cinesphere theatre ontario toronto debuted 1971 film north superior installation remained ontario hiatus redevelopment cinesphere renovated ontario closed november 2017 imax 70 imax laser expo 74 spokane washington imax screen measured featured pavilion largest structure expo imax theatre partnered brand movie theaters visitors viewed screen covered viewer total visual field created sensation motion viewers motion sickness imax 3d theater built spokane screen size protests city spokane officials decided imax corporation demolish theatre condition renovate pavilion imax permanent outdoor giant screen theatre plan material structure constructed expected range weather conditions destroying previous materials concept art released public videos featured spokane renovation budget revealed seating planned 000 permanent imax dome installation eugene heikoff marilyn jacobs heikoff dome theatre reuben fleet science center san diego balboa park 1973 doubles planetarium permanent imax 3d theatre built vancouver british columbia transitions expo 86 september 30 2009 located canada vancouver landmark 2008 imax extended brand traditional theaters introduction digital imax cost 2k digital projectors project 90 aspect ratio screen cost option allowed conversion existing multiplex theater auditoriums helped imax grow 299 screens worldwide 2007 000 screens 2015 september 2017 302 imax theatres located 75 countries 203 commercial multiplexes technical aspects camera imax cinema process increases image resolution larger film frame relative terms frame imax format film times theoretical horizontal resolution frame 35mm film achieve increased image resolution imax estimates 12 000 lines horizontal resolution 12k 65mm film stock passes horizontally imax movie camera 15 perforations time 24 frames film moves camera 102 metres minute 6 km conventional 65mm camera film passes vertically camera perforations time 34 metres minute comparison conventional 35mm camera 35mm film passes vertically camera perforations time translates 27 metres minute todd 70mm format widescreen cinema image 65mm film frame imax format widescreen cinema film frame dimensions match standard image resolution moving image produced film speed 24 frames imax film requires times negative film stock required 65mm film comparable scope cinematic technique phantom 65 imax 3d digital camera 2011 imax announced 4k 3d digital camera wide resolution regular imax film cameras camera developed vision abelcine integrating phantom 65 engines prototype camera documentary born wild finished film shot company intention replacing resolution film cameras digital camera scenes require lightweight 3d camera imax completed production camera service films plans produce imax film solely digital feature film partially filmed phantom 65 imax 3d camera arri alexa imax digital camera 2015 imax announced 2d digital camera developed arri camera based company arri alexa 65 technology production camera directors joe anthony russo announced shoot 2018 2019 completely cameras arri alexa imax cameras combined rig provide native 3d 98 imax footage film film imax format generically called 15 70 film referring 15 sprocket holes perforations frame film bulk requires horizontal platters conventional film reels imax platters range diameter accommodate 75 hours film platters hour feature film weigh imax estar based print film 15 70 rolling loop film projection systems estar based print film precision chemical development process change size shape estar print film imax pin registration camera mechanism tolerate sprocket hole film thickness variations soundtrack double image imax film include embedded soundtrack imax specifies separate channel magnetic film recorded played film follower locked picture vitaphone utilizing 16 inch 33 rpm electrical transcription discs 20th century technology provide channel soundtrack accompanying films photographed exhibited cinerama process mid 1950s 1990s separate dts based track digital sound locked projector smpte time code synchronization apparatus audio played series proprietarily encoded rom discs late 1990s imax upgraded hard drive carries single uncompressed audio file channels converted analogue processed decoding method dts conventional theatres imax theatres speakers acoustically transparent screen theatre create surround sound imax center speaker addition centre speaker conventional theatres extra channel sound mix engineers advantage screen height projectors drawing film projector challenges camera projector conventional 70 mm systems steady 586× magnification projector william shaw adapted australian patent film transport called rolling loop adding compressed air puffer accelerate film cylindrical lens projector aperture block projector vacuum pull film contact lens field flattener flattens image field lens height film connects pneumatic piston moved projector running piece dust film sticks lens projectionist switch clean lens push button lens wiper bars brush material wipes dust lens moves imax projectors pin stabilized—meaning registration pins engage perforations corners projected frame ensure perfect alignment shaw cam controlled arms decelerate frame eliminate microscopic shaking frame settled registration pins projector shutter 20 conventional equipment light source brighter xenon short arc lamps layer fused quartz xenon gas pressure 25 atmospheres 367 psi projectionists required wear protective body armor changing handling lamp breaks drop floor danger flying quartz shards propelled pressure xenon gas imax projector weighs tonne short tons tall imax corporation released projector types 15 perforation 70 mm film format grand theatre 3d dual rotor rotor mpx designed retrofitted theatres july 2008 company introduced digital projection distinct brand designed multiplex theatres screens wider imax projectors standard project 3d images digital projection digital cinema imax projection debuted 2008 designed shorter 90 aspect ratio screens 2k projectors 2d 3d content dci imax digital format idf superset dci idf initially 2k resolution christie xenon projectors texas instruments digital light processing dlp engine 2012 imax announced switching barco primary supplier 2k images projected superimposed pixel offset super resolution imaging increase perceived resolution 9k 3d presentations projector display image eye 2d presentations superimposed images brighter 22 foot lambert image digital imax projection includes proprietary imax image enhancer modifies output digital media server based feedback cameras microphones auditorium maintains alignment pixel accuracy facilitates inexpensive distribution imax features company announced february 2012 renovating specially selected locations 70mm analog digital presentations imax developed rail moves projectors accommodate frame film print digital release theaters prepared time release dark knight rises july 2012 laser projection april 2012 imax testing 4k laser projection based patents licensed eastman kodak 3d film digital systems projectors improved digital screens retaining traditional imax aspect ratio films screens wide december 2014 imax rolling dual 4k laser projector dubbed imax laser installation occurring cineplex scotiabank theatre toronto digital projection 43 aspect ratio surface traditional imax screen wider screens 00 aspect ratio tcl chinese theater replaces xenon arc lamp traditional digital projector laser light source capable 60 fps 50 percent brightness digital cinema initiatives spec contrast ratio double imax 15 70mm film projection 2500 contrast ratio imax xenon lamp based projection systems displaying rec 2020 color gamut space features 12 channel surround sound adds additional speaker theater overhead speakers matching theoretical resolution traditional imax film estimated 12 lines horizontal resolution 65mm camera negative 12k 35mm release print 6k laser features dual 4k resolution projectors capable displaying times digital imax projector digital imax images projectors projected superimposed pixel offset super resolution imaging perceived resolution 4k theater cameras microphones automatically calibrate projectors sound showings 3d presentations projector display image eye 2d presentations superimposed images brighter image 3d presentations imax laser systems dichroic filter glasses dolby 3d opposed linear polarization glasses digital imax theaters april 24 2018 imax announced rolling single unit version laser projector iteration designed replace imax xenon digital projection screens theatres imax theatres classic design purpose built structures multiplex design retrofitted auditoriums classic imax theatre construction differs conventional theatres increased resolution audience closer screen typically rows screen height conventional theatre seating runs 12 screen heights rows seats set steep angle 30° domed theatres audience facing screen standard imax screen larger largest imax screen darling harbour sydney australia measured theater sydney closed renovations 2016 reopen 2019 current largest operating imax screen melbourne australia measures sydney imax reconstruction includes larger screen ensuring retains record largest imax screen variations dome omnimax late 1960s san diego hall science reuben fleet science center searching north america format film project dome planned tilted dome planetarium standard imax projector unsuitable dome tall lamp house imax corporation redesigned adding elevator lift projector center dome projection booth spectra physics designed suitable lamphouse lamps bulb lens projector 1970 ernst leitz canada elcan optical technologies contract develop manufacture fisheye lens projection optimized project image dome flat screen dome san diego hall science called omnimax films shot camera equipped fisheye lens squeezes highly distorted 180° field view 65 mm imax film lens aligned center frame circular field falls edge film field fall edge dome masked filming camera aimed upward angle matches tilt dome projected matching fisheye lens dome original panoramic view recreated omnimax wraps 180° horizontally 100° horizon 22° horizon viewer center dome omnimax premiered 1973 voyage outer planets produced graphic films garden isle roger tilton films double imax renamed imax dome theatres continue omnimax omnimax theatres theme parks north american museums scientific focus technical aspects highlighted attraction projection windowed public viewing accompanied informational placards exhibits screen permanent fixture museum science industry chicago illinois fort worth museum science history franklin institute philadelphia pennsylvania louis science center boston museum science richmond science museum virginia charlotte observer imax dome theatre discovery charlotte north carolina birmingham alabama mcwane science center space rocket center huntsville cincinnati museum center union terminal lakes science center cleveland lowered raised canadian museum history shares auditorium standard imax screen entire dome raised flat screen features lowered dome features flat screen theaters feature screen backlit speakers girders majority museum installations focus educational documentary films special occasions entertainment films charlie chocolate factory oregon museum science industry largest north america liberty science center jersey city jersey telus science vancouver bc dome screens size 3d create illusion depth imax 3d process separate camera lenses represent left eyes lenses separated distance average distance human eyes separate rolls film capture images produce imax 3d camera weighs projecting films superimposed screen methods direct correct image eye viewers 3d image 2d screen method polarizing filters oppositely polarize light projecting image viewer wears glasses polarizing filters oriented match projector filters filter eye blocks light project images intended eye method projections rapidly alternate image projection mate blocked frame increase rate suppress flicker viewer wears shutter glasses liquid crystal shutters block transmit light sync projectors eye images meant films produced digital 3d release conventional theaters imax 3d including avatar gravity amazing spider color imax 3d film 1986 short documentary transitions produced expo 86 vancouver hd variations imax included 48 frames imax hd process sought produce smoother lifelike motion reducing blurring moving objects doubling normal film rate imax hd tested 1992 canada pavilion seville expo 92 film momentum production costs wear tear prints projectors doomed imax hd theatres retrofitted project 48 frames canada play momentum 1990s theme parks thailand germany las vegas imax hd motion simulator rides disney parks attraction soarin california features modification imax hd imax dome projecting 48 frames digital 70mm film projectors costly difficult mass produce size auditoriums house size imax screens expensive construct imax debuted digital projection 2008 shorter 90 aspect ratio screens 2k resolution projectors 2d 3d content dci imax digital format idf superset dci digital installations caused controversy theaters branded screens imax retrofitting standard auditoriums imax digital projectors screen sizes auditoriums purpose built auditoriums original 15 70 imax format limited 90 aspect ratio disadvantage resolution digital imax technology maximum perceived resolution 9k compared traditional imax 70mm projection estimated resolution 12k reviewers imax theaters projecting films 4k resolution competing brands dolby cinema ultraavx imax held uniform branding imax experience underlying technologies screen sizes criticized company marketing approach format dubbed lie max company defended format bigger screen brighter picture sound standard theatres differences digital imax cost effective format aided company worldwide growth russia china imaxshift 2016 imax announced launch imaxshift multimedia indoor cycling concept decided discontinue june 2017 virtual reality september 2016 imax announced plans include virtual reality vr imax theater experience vr center los angeles starvr headset created acer vr experience intended short interactive videos imax total imax vr centers established fund creation vr content partnered google production imax vr cameras imax vr centers closed remaining slated close 2019 films entertainment imax usa specialty applications expense logistical challenges producing imax films led 40 minute shorter running times conventional films documentaries suited institutional venues museums science centers imax cameras orbiting earth climbing mount everest exploring atlantic ocean visiting antarctic film mars exploration rovers titled roving mars 2006 exclusive data rovers attempt mainstream entertainment imax rolling stones live max 1991 85 minute compilation concert footage filmed imax band 1990 steel wheels tour edited impression single concert 1990s entertainment short films created notably 1998 haunted castle 2001 3d 1995 french director jean jacques annaud directed wings courage dramatic picture shot imax 1998 1999 sea short films produced imax format earned academy award nominations sea winning imax film win oscar 2000 disney produced fantasia 2000 animated feature initially released exclusively imax format hollywood productions 1990s theatrical features deemed impossible imax venues time technical limitation size film reel films hours originally imax pixar considered releasing toy story imax 3d render resolution match size imax image dreamworks 2000s release shrek imax 3d canceled result creative studio failed attempts releases inspire imax experiment improve ability animation theaters compilation cyberworld result contained original animation imax versions animated tests music videos cyberworld matte 3d versions bar sequence antz homer3 segment simpsons coincidentally animated pacific data images walt disney pictures studio release theatrical films imax process released day 2000 fantasia 2000 studio imax release theatrical feature imax theaters originally planned standard theatrical release agreeing company release film imax sound incorporated multi channel multi layer stereo orchestrated soundtrack fantasound walt disney envisioned original film 1940 company agreed disney terms conditions gain exclusive showings film included limited engagement months january april 30 50 box office receipts imax cinemas prepared accept disney terms film imax release standard 35mm june regular theaters fantasia 2000 lukewarm financial critical praise imax format convinced disney releases giant screen format pipeline 2002 imax issues beauty beast lion king released select theaters winter christmas seasons digital masters created original caps production files select scenes animation cleaned resolution imax film negatives treasure planet released select imax theaters theatrical film released regular imax theaters simultaneously releases underwhelming box office returns disney canceled screen releases including aladdin unveiling dmr process warner bros pictures embraced format 2003 matrix sequels reloaded revolutions prisoner azkaban 2004 warner bros releasing harry potter film franchise imax strong financial success 2004 studio released robert zemeckis motion capture film polar express imax 3d polar express successful film released imax theaters producing quarter film gross 302 100 imax screens success warner bros imax legend happy feet batman dark knight progressively studios releasing films imax dmr process earned success 2009 abrams star trek released imax venues initial weeks theatrical dollars imax weekends avengers harry potter deathly hallows grossed 15 filmed imax cameras skyfall amazing spider optimized imax digital screens released movies filmed resolution cameras digital negative ratio equal imax digital frame skyfall increased visual entire film amazing spider optimized finale battle lizard james cameron titanic restored released theaters specially matte version imax 2010 successful imax dmr releases warner bros signed deal release 20 feature films imax 2013 including educational documentaries production 2015 marvel studios announced avengers films 2018 2019 filmed imax hollywood feature films modified version arri alexa 65 digital camera camera film select sequences marvel production 2016 dmr digital media remastering imax proprietary dmr digital media remastering process converts conventional films imax format special digital intermediate technology imax venues films shot 35mm conventional theaters 2002 imax format release 1995 film apollo 13 official applications dmr process projection limitations time studios edit apollo 13 attack clones shorter playing time imax updated expanded size platters dmr releases limitation current platters provide time 175 minutes reviewers praised dmr blowup process visually audibly superior films projected 35mm filmmakers producer frank marshall dmr blowups comparable films created 70 mm 15 perf imax format directors ron howard george lucas expected note decline cinerama coincided roughly replacement simpler cheaper technically inferior version view dmr alarm imax originally phrase imax experience true 70 mm productions dmr productions lion king 2003 hollywood studio engaged releasing restoring classic films imax dmr process 2012 ongoing conversion releases continued continued grow james cameron titanic underwent 3d conversion dmr conversion 3d 2012 black august 2012 imax paramount pictures announced week exclusive release raiders lost ark september 2012 promote release blu ray collection film underwent dmr restored 4k digital intermediate surround sound original negative process imax theaters complete restoration supervised steven spielberg sound designer ben burtt 1981 print stand imax transfer expecting sort grainy muddy overly enlarged representation movie spielberg blown looked movie feature films features employed imax cameras select scenes 2018 feature film shot imax cameras numerous difficulties format – cameras larger heavier standard cameras noise produced dialogue recording difficult 70mm cameras short film loads ranging 30 minutes cost film stock standard 35mm film issues minimized digital arri alexa imax camera films shot camera dark knight features sequences total 28 minutes shot imax film press notes time major feature film partially shot imax cameras dark knight nolan shoot film imax format quiet scenes pictorially nolan wished shoot entire film imax imax camera mount everest outer space feature movie nolan chose edit imax sequences original camera negative eliminate generation loss scenes digitally mastered scanned printed lines horizontal resolution 8k film 94 imax venues 2008 sold weekend director michael bay inspired imax dark knight feature screen sequences film writer roberto orci suggested imax footage 3d bay school filmmaker 3d gimmicky shooting imax easier stereoscopic cameras imax version film contained minutes imax filmed footage hour film bay partially filmed transformers film 3d imax bay returned imax fourth film 2014 feature film shot digital imax 3d cameras imax 3d cameras shooting film filming 98 film alexa imax cameras attached special mount brad bird 25 minutes footage shot imax cameras bird believed imax format bring level showmanship presentation hollywood films believes industry lost emphasis screening films multiplexes opposed grand theaters vetoing runs favor wider initial releases imax format offered viewer immersion digital 3d brighter quality image projected larger screen specialised glasses ghost protocol december 16 2011 500 imax venues worldwide week wide release earned box office 12 dollars dark knight christopher nolan decided film sequences sequel dark knight rises 15 70mm imax nolan elected film 3d stated intends focus improving image quality scale imax format hollywood record dark knight rises featured 72 minutes footage shot 70mm imax roughly times dark knight 28 minutes record overtaken nolan film dunkirk featured 79 minutes imax considerable noise imax cameras 35mm 70mm cameras shoots dialogue scenes dubbed dialogue scenes shot imax cameras chairman president imax corporation greg foster stated imax plans film theaters months contractually committed film weeks theaters abrams star trek darkness francis lawrence luc besson lucy christopher nolan interstellar films released 2013 2014 sequences filmed 15 70mm imax cameras july 2014 bad robot abrams production company confirmed picture uploaded twitter sequence disney lucasfilms captured imax 15 70 perf film camera addition standard 35mm film cameras abrams cinematographer dan mindel employed shooting movie adele music video released 2015 music video partially filmed imax cameras april 2015 marvel studios announced russo brothers film arri alexa imax 2d digital camera shoot 15 minutes film 2015 russo brothers announced upcoming films scheduled release 2018 2019 feature films shot imax albeit arri alexa imax cameras 15 70 perf film rihanna music video sledgehammer released 2016 music video imax arri 2d digital camera christopher nolan 15 70mm imax cameras film dunkirk previous films cameras select sequences nolan imax primary shooting format 75 79 minutes 106 minute film featuring footage shot 70mm imax breaking aforementioned record previous nolan film dark knight rises held sparsity dialogue film 15 70mm imax cameras notoriously noisy dialogue heavy scenes shot regular 70mm film cameras imax cameras hand held time nolan advised steven spielberg ron howard shoot vessels dunkirk received widest release 70mm imax film interstellar film released format 37 theaters space imax cameras flown space 17 occasions nasa astronauts handheld imax cameras document missions imax camera mounted payload bay shuttle space shuttle mission sts 41 filmed deployment ldef duration exposure facility repair solar max satellite footage included 1985 imax movie dream alive kennedy space center florida imax 3d theaters space movies including footage shot missions narrated celebrities imax cameras nasa display national air space museum washington dc awards 1996 imax awarded oscar scientific technical achievement academy motion picture arts sciences award cited imax innovations creating developing method filming exhibiting format wide angle motion pictures native format imax format films received academy awards nomination winner technical aspects usage imax wally pfister cinematography dark knight earned nomination imax films remastered hdtv format cropped fit hdtv aspect ratio mojo hd hdnet hd theatre networks release dvd blu ray disc july 2005 bfi imax cinema london host live music concerts digital imax projector science museum london bfi imax cinema hosted game tournaments digital projectors amusement park attractions integrated imax film segments including universal studios florida california horizons epcot soarin disney california adventure park epcot technical specifications imax 15 70 imax dome omnimax imax competitors late 2014 dolby announced dolby cinema imax competitor super vivid image dynamic range shadow australia zealand event cinemas sells premium cinema experience bigger screen improved imagery seats marketed vmax united cinemark cinemark xd extreme digital cinema 
173926	computerscience	inductive bias learning bias learning algorithm set assumptions learner predict outputs inputs encountered machine learning aims construct algorithms learn predict target output achieve learning algorithm training examples demonstrate intended relation input output values learner supposed approximate correct output examples training additional assumptions solved unseen situations arbitrary output assumptions nature target function subsumed phrase inductive bias classical inductive bias occam razor assuming simplest consistent hypothesis target function consistent hypothesis learner yields correct outputs examples algorithm approaches formal definition inductive bias based mathematical logic inductive bias logical training data logically entails hypothesis generated learner strict formalism fails practical inductive bias rough description artificial neural networks types list common inductive biases machine learning algorithms shift bias learning algorithms static bias algorithms designed shift bias acquire data avoid bias bias shifting process bias 
177112	computerscience	memory management unit mmu called paged memory management unit pmmu hardware unit memory references passed performing translation virtual memory addresses physical addresses implemented central processing unit cpu form separate integrated circuit mmu effectively performs virtual memory management handling time memory protection cache control bus arbitration simpler architectures bit systems bank switching overview modern mmus typically divide virtual address space range addresses processor size power kilobytes larger bits address offset left unchanged upper address bits virtual table entries mmus memory table items called table table entry pte map virtual physical main memory associative cache ptes called translation lookaside buffer tlb avoid necessity accessing main memory time virtual address mapped mmus private array memory registers hold set table entries physical combined offset complete physical address pte include written dirty bit accessed bit lru replacement algorithm processes user mode supervisor mode read write cached pte prohibits access virtual physical random access memory allocated virtual mmu signals fault cpu operating os handles situation spare frame ram set pte map requested virtual address ram choose existing victim replacement algorithm save disk process called paging mmus shortage ptes os mapping mmu generate illegal access error conditions invalid faults illegal existing memory accesses leading segmentation fault bus error conditions handled operating benefits fault software bug prevented memory protection key benefits mmu operating protect errant programs disallowing access memory program access typically operating assigns program virtual address space mmu mitigates fragmentation memory blocks memory allocated freed memory fragmented discontinuous largest contiguous block memory total virtual memory contiguous range virtual addresses mapped contiguous blocks physical memory contiguous allocation benefits paging microprocessor designs memory management performed separate integrated circuit vlsi vi475 1986 motorola 68851 1984 motorola 68020 cpu macintosh z8015 1985 zilog z8000 family processors microprocessors motorola 68030 zilog z280 mmu cpu integrated circuit intel 80286 x86 microprocessors article concentrates modern mmus commonly based systems concept base limit addressing developed segmentation occasionally modern architectures x86 architecture segmentation paging 80286 paging segmentation 80386 processors segmentation 64 bit operation examples modern systems divide memory size capability huge size translations cached translation lookaside buffer tlb systems risc designs trap os translation tlb systems hardware based tree walker systems mmu disabled disable mmu trapping os code vax vax 512 bytes os treat multiple single larger linux vax viewed vax divides memory fixed purpose regions size tables linear arrays wasteful addresses range table applications stored kernel paged memory effectively level tree allowing applications sparse memory layout wasting lot space unused table entries vax mmu notable lacking accessed bit oses implement paging emulate accessed bit operate efficiently typically os periodically unmap faults os set accessed bit arm arm architecture based application processors implement mmu defined arm virtual memory architecture current architecture defines ptes describing sections super sections legacy versions defined tiny arm level table level table sections sections tlb updates performed automatically table walking hardware ptes include read write access permission based privilege cacheability nx bit secure bit ibm 360 model 67 ibm 370 successors ibm 360 model 67 introduced aug 1965 included mmu called dynamic address translation dat box unusual feature storing accessed dirty bits table refer physical memory virtual memory accessed special purpose instructions reduces overhead os propagate accessed dirty bits tables physically oriented data structure os level virtualization easier starting august 1972 ibm 370 mmu initially supported 24 bit virtual address space 32 bit virtual address space 360 model 67 stored accessed dirty bits table 1983 370 xa architecture expanded virtual address space 31 bits 2000 64 bit architecture introduced address space expanded 64 bits continued store accessed dirty bits table dec alpha dec alpha processor divides memory tlb level firmware machine code called palcode walks level tree structured table addresses broken 21 bits unused bits root level tree bits middle level tree bits leaf level tree 13 bits pass physical address modification read write execute permission bits supported mips mips architecture supports 64 entries tlb tlb entries configurable cpu configuration synthesis tlb entries dual tlb entry maps virtual vpn2 frame pfn0 pfn1 depending bit virtual address mask bit mask bits stored vpn2 tlb entry size multiples pfn tlb entry caching attribute dirty valid status bit vpn2 global status bit os assigned participates virtual address tlb entry match global status bit set pfn stores physical address mask bits tlb refill exception generated entries tlb match mapped virtual address tlb invalid exception generated match entry marked invalid tlb modified exception generated match dirty status set tlb exception occurs processing tlb exception double fault tlb exception dispatched exception handler mips32 mips32r2 support 32 bits virtual address space 36 bits physical address space mips64 supports 64 bits virtual address space 59 bits physical address space sun original sun single board built motorola 68000 microprocessor introduced 1982 included original sun memory management unit address translation memory protection memory sharing memory allocation multiple processes running cpu access cpu private board ram external multibus memory board multibus mmu translated protected uniform fashion mmu implemented hardware cpu board mmu consisted context register segment map map virtual addresses cpu translated intermediate addresses segment map translated physical addresses map size segment size 16 segment 16 contexts mapped concurrently maximum logical address space context maximum physical address mapped simultaneously context register multitasking operating allowed cpu switch processes reloading translation bit context register switch 16 sections segment map supervisor control allowed 16 contexts mapped concurrently context virtual address space sharing virtual address space inter context communications writing values segment maps contexts additional contexts handled treating segment map context cache replacing contexts basis context register distinction user supervisor interrupts traps switch contexts required valid interrupt vectors mapped context valid supervisor stack powerpc powerpc g1 g2 g3 g4 tlb standard powerpc mmu simultaneous lookups lookup attempts match address data block address translation dbat registers instruction block address translation registers ibat bat registers map linear chunks memory os map portions address space os kernel bat lookup succeeds lookup halted lookup supported processors family called inverted table acts hashed chip extension tlb bits address select 16 segment registers 24 bits segment register replace bits producing 52 bit address segment registers multiple processes share hash table 52 bit address hashed chip table table entries scanned matches match excessive hash collisions processor hash function fails cpu traps os mmu disabled resolved os discard entry hash table space entry os generate entry normal tree table mapping data structures slower space efficient support execute control segment registers leading granularity major design poor cache locality caused hash function tree based designs avoid placing table entries adjacent adjacent locations operating running powerpc minimize size hash table reduce slow remove table entries process os avoid reusing segment values delay facing elect suffer waste memory process hash tables g1 chips search table entries generate hash expectation os search standard hash table software os write tlb g2 g3 g4 chips hardware search hash table chips os choose method chips optional support os choose tree based table exclusively ia 32 x86 x86 architecture evolved time maintaining software compatibility os code mmu extremely complex operating modes normal operation traditional 80386 cpu successors ia 32 cpu divides memory segment registers fundamental 8088 80286 mmu designs modern oses major exception access thread specific data applications cpu specific data os kernels explicit fs segment registers memory access involves segment register chosen code executed segment register acts table offset virtual address fs os ensures offset offset address masked larger 32 bits result looked tree structured table bits address split bits branch tree bits leaves branch 12 lowest bits copied result operating systems openbsd feature linux exec shield pax patches limit code segment register disallow execution code modifiable regions address space minor revisions mmu introduced pentium allowed skipping level tree leaves bits indexing level hierarchy remaining 12 bits copied result minor revisions mmu introduced pentium pro introduced physical address extension pae feature enabling 36 bit physical addresses bits level tables 12 lowest bits copied result skipping level tree bits level table hierarchy remaining 12 lowest bits copied addition attribute table allowed specification cacheability bits cpu table execute support originally segment basis awkward x86 chips provide execute bit pae mode exec shield pax mechanisms emulate execute support machines x86 processors lacking nx bit setting code segment performance loss reduction address space x86 64 x86 64 64 bit extension x86 removes segmentation favor flat memory model operating systems 386 processors mode segment offsets fs segments table tree levels virtual addresses divided 16 bits unused bits tree levels total 36 bits 12 lowest bits copied result levels table total 27 bits paging 21 bits offset cpus support levels paging offset cpuid determine supported bits required equal 48th bit sign extended bits future expansion addressable range compromising compatibility levels table table entry includes execute bit unisys mcp systems burroughs b5000 burroughs b5000 1961 commercial support virtual memory atlas mmu functions mmu virtual memory addresses memory protection architectural approach mapping virtual memory addresses mmu mcp systems descriptor based allocated memory block master descriptor properties block size address memory request access block reading writing hardware checks presence presence bit pbit descriptor pbit presence block block accessed physical address descriptor pbit interrupt generated mcp operating block address field access block allocated init pbit address field disk address block rolled block fetched disk pbit set physical memory address updated block memory pbit descriptors equivalent table entry mmu performance monitored pbits init pbits initial allocations level pbits thrashing memory allocation completely automatic features modern systems allocate blocks mechanism calls malloc dealloc memory blocks automatically discarded scheme lazy block allocated referenced memory mcp examines set compaction segmented paged deallocating read segments code segments restored original resort rolling dirty data segments disk b5000 function mmu protection accesses descriptor hardware check accesses bounds write process write permission mcp inherently secure mmu provide level memory protection descriptors read user processes updated hardware mcp tag odd read descriptors tag code tag blocks shared processes descriptors process stack processes write permission code segment read reentrant shared processes descriptors 20 bit address field master descriptor master descriptor array implements efficient secure ipc mechanism blocks easily relocated master descriptor update block status aspect performance mmu based mmu based systems provide performance mcp systems implemented standard hardware mmu standard pc implementation mmu visible mcp level 
185529	computerscience	scalability capability network process handle growing potential enlarged accommodate growth considered scalable capable increasing total output increased load resources typically hardware analogous meaning implied word economic context company scalability implies underlying business model offers potential economic growth company scalability property systems difficult define define specific requirements scalability dimensions deemed highly issue electronics systems databases routers networking performance improves adding hardware proportionally capacity scalable algorithm design networking protocol program scale suitably efficient practical applied situations input data set outputs users participating nodes distributed design fails quantity increases scale practice affect scaling resource requirements algorithmic time complexity grow increases search engine scales users objects indexes scalability refers ability increase size demand warrants concept scalability desirable technology business settings base concept consistent ability business technology accept increased volume impacting contribution margin revenue − variable costs piece equipment capacity 1–1000 users 1000 users additional equipment performance decline variable costs increase reduce contribution margin incident command ics emergency management response agencies united ics scale resource coordination single engine roadside brushfire interstate wildland resource scene establishes ic authority resources delegate responsibility span control managing officers delegate incident grows senior officers assume command complexity warrants proven remarkably simple scalable saving lives property century amj aom content 44 1281 short scalability measured dimensions horizontal vertical scaling methods adding resources application fall broad categories horizontal vertical scaling tradeoffs models larger computers increased management complexity complex programming model issues throughput latency nodes applications lend distributed computing model price difference models favored scale computing applications fit paradigm advances virtualization technology blurred advantage deploying virtual hypervisor expensive buying installing real configuring existing idle expensive buying installing configuring model note nfv defines terms scaling ability scale add remove resource instances virtual machine scaling ability scale changing allocated resources memory cpu storage capacity database scalability approaches enable databases grow size supporting increasing rate transactions rapid pace hardware advances speed capacity mass storage devices advances cpu networking speed technique supported major database management dbms products partitioning tables based ranges values key field manner database scaled cluster separate database servers advent 64 bit microprocessors multi core cpus smp multiprocessors dbms vendors forefront supporting multi threaded implementations scale transaction processing capacity network attached storage nas storage networks sans coupled fast local networks fibre channel technology enable larger loosely coupled configurations databases distributed computing power supported xa standard employs global transaction monitor coordinate distributed transactions semi autonomous xa compliant database resources oracle rac model achieve scalability based shared architecture relies speed connections servers dbms vendors debate relative merits favored designs companies researchers question inherent limitations relational database management systems gigaspaces contends model distributed data access transaction processing space based architecture required achieve performance scalability hand base extreme scalability departing mainstream relational database technology specialized applications nosql architectures google bigtable enhance scalability google horizontally distributed spanner technology positioned relational alternative bigtable supports purpose database transactions conventional sql based query language strong eventual consistency storage context scale data storage scalability defined maximum storage cluster size guarantees data consistency meaning valid version stored data cluster independently redundant physical data copies clusters provide lazy redundancy updating copies asynchronous fashion called eventually consistent type scale design suitable availability responsiveness rated consistency true file hosting services caches version wait propagate classical transaction oriented applications design avoided source commercial scale storage clusters built standard pc hardware networks provide eventual consistency idem nosql databases couchdb mentioned write operations invalidate copies wait acknowledgements read operations typically check redundant prior answering missing preceding write operation metadata signal traffic require specialized hardware short distances handled acceptable performance clustered storage device database strong data consistency expected indicators indicators eventually consistent designs suitable transactional applications performance tuning hardware scalability advised focus design hardware scalability capacity typically cheaper add node achieve improved performance partake performance tuning improve capacity node handle approach diminishing returns discussed performance engineering suppose 70 program sped parallelized multiple cpus fraction calculation sequential fraction parallelized maximum speedup achieved processors amdahl law substituting processors getif double compute power processors getdoubling processing power improved speedup roughly parallelizable speed double throwing hardware optimal approach weak strong scaling context performance computing common notions scalability 
187398	computerscience	cisco ios originally internetwork operating family software cisco systems routers current cisco network switches earlier switches catos ios package routing switching internetworking telecommunications functions integrated multitasking operating ios code base includes cooperative multitasking kernel ios features ported kernels qnx linux cisco products simulators cisco virl cisco products ios notable exceptions include asa security products linux derived operating carrier routers ios xr interface ios command interface fixed set multiple word commands set determined mode privilege level current user global configuration mode commands change configuration interface configuration mode commands change configuration specific interface commands assigned privilege level 15 accessed users privilege cli commands privilege level defined builds ios include tcl interpreter embedded event manager feature interpreter scripted react events networking environment interface failure periodic timers command modes include versioning cisco ios versioned letters form rebuilds – rebuild compiled single specific vulnerability ios version 12 e14 rebuild 14 denoting 14th rebuild 12 rebuilds produced repair defect satisfy customers upgrade major revision running critical infrastructure devices prefer minimise change risk interim releases – produced weekly basis form roll current development effort cisco advisory list interim issue reason unknown public maintenance releases – rigorously tested releases include enhancements bug fixes cisco recommend upgrading maintenance releases interim rebuild releases trains cisco train vehicle delivering cisco software specific set platforms features 12 cisco ios release 15 releases split trains set features trains map distinct markets customers cisco targeting trains time time designed specific 12 0aa train contained code required cisco as5800 product 15 starting cisco ios release 15 single train train train includes extended maintenance releases standard maintenance releases releases extended maintenance releases cisco provide bug fixes 44 months releases standard maintenance releases cisco provide bug fixes 18 months packaging feature sets cisco products ios feature sets packages typically packages cisco routers packages cisco network switches cisco ios releases meant catalyst switches standard versions providing basic ip routing enhanced versions provide ipv4 routing support advanced ip services versions provide enhanced features ipv6 support individual package corresponds service category asthe exact feature set required function determined cisco feature set browser 1900 2900 3900 series isr routers cisco revised licensing model ios routers ip base installed additional feature pack licenses installed bolt additions expand feature set device feature packs interface descriptor block simply idb portion memory cisco ios internal data structure ip address interface packet statistics networking data cisco ios software maintains idb hardware interface cisco switch router idb subinterface idbs varies cisco hardware platform type architecture versions cisco ios packet routing forwarding switching distinct functions routing protocols cisco ios processes contribute routing base rib processed generate final ip forwarding table fib forwarding base forwarding function router router platforms software forwarding cisco 7200 traffic handling including access control list filtering forwarding interrupt level cisco express forwarding cef dcef distributed cef ios process context switch packet routing functions ospf bgp process level routers hardware based forwarding cisco 12000 series ios computes fib software loads forwarding hardware asic network processor performs actual packet forwarding function cisco ios monolithic architecture runs single image processes share memory space memory protection processes bugs ios code corrupt data processes completion scheduler kernel pre empt running process process kernel processes chance cisco products required availability cisco crs limitations acceptable addition competitive router operating systems emerged 10–20 ios juniper junos designed limitations cisco response develop version cisco ios called ios xr offered modularity memory protection processes lightweight threads pre emptive scheduling ability independently restart failed processes ios xr 3rd party real time operating microkernel qnx current ios code written advantage features offered kernel microkernel architecture removes kernel processes absolutely required kernel executes processes application processes method ios xr achieve availability desired router platform ios ios xr codebases functionality design 2005 cisco introduced ios xr cisco 12000 series platform extending microkernel architecture crs cisco deployed core router 2006 cisco ios software modularity extends qnx microkernel traditional ios environment providing software upgrade capabilities customers demanding catalyst 6500 enterprise switch security vulnerabilities ios cleartext password chap authentication passwords entered cli default weakly encrypted type ciphertext router config username jdoe password 0832585b1910010713181f designed prevent shoulder surfing attacks viewing router configurations secure – easily decrypted software called getpass 1995 ios7crypt modern variant passwords decoded router key chain command entering type password key issuing key command decrypts stupidpass program decrypt type passwords passwords set enable secret command salted md5 hashes cisco recommends cisco ios devices implement authentication authorization accounting aaa security model aaa local radius tacacs databases local account required emergency situations black hat briefings conference july 2005 michael lynn internet security systems time vulnerability ios cisco issued patch flaw disclosed cisco filed lawsuit settled injunction issued prevent disclosures 
188676	computerscience	hitachi listed tokyo stock exchange constituent nikkei 225 topix indices ranked 38th 2012 fortune global 500 129th 2012 forbes global 2000 history hitachi founded 1910 electrical engineer namihei odaira ibaraki prefecture company product japan induction motor initially developed copper mining odaira company domestic leader electric motors electric power industry infrastructure company house venture fusanosuke kuhara mining company hitachi ibaraki odaira moved headquarters tokyo 1918 coined company’s toponymic superimposing kanji characters meaning “sun” tachi meaning “rise” company national aspirations conveyed original brand mark evoked japan imperial rising sun flag war aftermath devastated company factories destroyed allied bombing raids war american occupational forces disband hitachi altogether founder odaira removed company result negotiations hitachi permitted maintain 19 manufacturing plants cost production shutdown compounded month labor strike 1950 severely hindered hitachi reconstruction efforts korean war saved company complete collapse hitachi struggling japanese industrial firms benefited defense contracts offered american military hitachi public 1949 fundinguniverse company histories hitachi history hitachi america established 1959 hitachi europe established 1982 march 2011 hitachi agreed sell hard disk drive subsidiary hgst western digital wd combination cash shares worth concerns duopoly wd seagate technology eu commission federal trade commission hitachi hdd division sold toshiba transaction completed march 2012 hitachi entered talks mitsubishi heavy industries august 2011 potential merger companies largest merger japanese companies history talks subsequently broke suspended january 2012 hitachi announced producing televisions japan september 2012 hitachi announced invented term data solution quartz glass capable preserving millions october 2012 hitachi agreed acquire united kingdom based nuclear energy company horizon nuclear power plans construct nuclear power plants rwe £700 november 2012 hitachi mitsubishi heavy industries agreed merge thermal power generation businesses joint venture owned 65 mitsubishi heavy industries 35 hitachi joint venture operations february 2014 october 2015 hitachi completed deal johnson controls form joint venture takeover hitachi hvac business hitachi maintained 40 stake company johnson controls hitachi air conditioning 2016 hitachi announced investing iot february 2017 hitachi honda announced partnership develop produce sell motors electric vehicles march 14 2018 zoomdata announced partnership hitachi ins software develop data analytics market japan products services digital media consumer products note product hitachi called memory glass introduced 2015 density storage medium utilizing laser etched readable fused quartz power systems fukushima daiichi nuclear disaster 2011 extended temporary closure japanese nuclear plants hitachi nuclear business unprofitable 2016 hitachi ceo toshiaki higashihara argued japan merger competing nuclear businesses hitachi 2016 estimated ¥65 write silex technology laser uranium enrichment joint venture electric 2019 hitachi suspended abwr development british subsidiary horizon nuclear power provide adequate economic rationality private enterprise proceed subsidiaries divisions current hitachi communication technologies america hitachi communication technologies america communications products services telecommunications cable utility enterprise industrial markets hitachi consulting hitachi consulting international management technology consulting firm headquarters dallas texas founded 2000 employs 500 people united japan united kingdom netherlands india spain portugal germany china brazil vietnam hitachi vantara hitachi vantara wholly owned subsidiary hitachi hardware software services companies manage digital data flagship products virtual storage platform enterprise storage hitachi unified storage vm sized companies hitachi unified storage mid sized companies hitachi content platform archiving cloud architecture hitachi command suite storage management hitachi truecopy hitachi universal replicator remote replication hitachi nas platform september 19 2017 hitachi data systems hds hitachi vantara company unifies operations pentaho hitachi data systems hitachi insight company hitachi data systems hds logo market hitachi electronics hitachi manufactures types electronic products including tvs camcorders projectors recording media brand hitachi defense systems hitachi defense derived products services hitachi metal hitachi metals supplies materials aircraft engines fuselage components landing gear finished components aerospace applications materials components tools automotive electronics industries hitachi koki hitachi koki manufactures types tools including chainsaws drills woodworking power tools branded koki tanaka march 2016 hitachi koki acquired german power tools manufacturer metabo chequers capital hitachi plant technologies hitachi plant technologies subsidiaries engages design development manufacture sale servicing execution social industrial infrastructure machinery mechatronics air conditioning systems industrial plants energy plant equipment asia internationally hitachi rail hitachi rail rolling stock manufacturing division hitachi mitsubishi heavy industries agreed cooperate field international intra city railway systems 2010 hitachi markets purpose train train double skin friction stir welded aluminium body construction train concept customised form types trains ranging capacity commuter metro trains automated 3000 series train nanakuma fukuoka city subway limited express e257 series jointly produced tokyu corporation speed trains class 395 trains southeastern trains domestic international operators alike winning tender department transport intercity express programme june 2008 hitachi products include designing manufacturing shinkansen models including n700 series shinkansen exported thsr 700t taiwan speed rail company markets driverless metro developed hitachi rail italy pioneered copenhagen metro straddle beam monorail technology hitachi monorail form basis trains operating monorail chongqing rail transit network february 24 2015 hitachi agreed purchase italian rolling stock manufacturer ansaldobreda acquire finmeccanica stake ansaldo sts railway signaling division finmeccanica purchase completed company renamed hitachi rail italy hitachi majority stake ansaldo sts hitachi solutions america hitachi solutions america consulting firm systems integrator focusing dynamics firm utilizes ax crm dynamics family provide customers broad base solutions company international subsidiaries residing united kingdom canada philippines thailand japan india hitachi solutions america acquired ignify – leading dynamics solution providers december 2015 hitachi solutions 2000 dynamics consultants worldwide acquisition ignify hitachi hitachi hitachi consists factories kaigan yamate rinkai yamate factories founded 1910 namihei odaira electrical equipment repair manufacturing facility facility named hitachi hitachi hitachi ibaraki regarded ancestral hitachi management trainees intern hitachi permanently assigned hitachi divisions senior management personnel participants rotations hitachi career develops eventual head office stature result senior managers hitachi passed hitachi spin entities hitachi include hitachi cable 1956 hitachi canadian industries 1988 divisions hitachi global storage technologies hitachi global storage technologies hitachi gst manufactures hard drives main ranges hitachi travelstar hitachi deskstar hitachi ultrastar march 2011 hitachi global storage technologies purchased western digital corporation cash 750 western digital common stock hitachi printing systems hitachi printing systems established 1980 acquired ricoh 2004 ricoh printing systems telk transformers electricals kerala hitachi joint venture kerala public sector company telk 1963 1989 production electrical equipment collaboration hitachi telk company manufacture 400kv transformers india telk transformers quality demand indian power corporate social responsibility august 2011 announced hitachi donate electron microscope universities indonesia university north sumatra medan indonesian christian university jakarta padjadjaran university bandung soedirman university purwokerto muhammadiyah university malang abb power grids division acquisition december 2018 hitachi ’s takeover abb ’s power grid division japanese conglomerate’s biggest deal shifts focus nuclear plants growth market electricity networks hitachi ja 日立グループ 
195671	computerscience	leslie lamport born february 1941 american scientist lamport seminal distributed systems initial developer document preparation latex leslie lamport winner 2013 turing award imposing defined coherence seemingly chaotic behavior distributed computing systems autonomous computers communicate passing messages devised algorithms developed formal modeling verification protocols improve quality real distributed systems contributions improved correctness performance reliability systems life education graduate bronx school science received mathematics massachusetts institute technology 1960 degrees mathematics brandeis university 1963 1972 dissertation singularities analytic partial differential equations career professionally lamport scientist massachusetts associates 1970 1977 sri international 1977 1985 digital equipment corporation compaq 1985 2001 2001 joined mountain view california closed 2014 lamport contributions laid foundations theory distributed systems notable papers arethese papers relate concepts logical clocks happened relationship byzantine failures cited papers field science algorithms solve fundamental distributed systems including lamport temporal logic introduced temporal logic actions tla contributions tla language reasoning concurrent reactive systems describes book systems tla language tools hardware software engineers defines quixotic attempt overcome engineers antipathy mathematics awards memberships lamport received 2013 acm turing award fundamental contributions theory practice distributed concurrent systems notably concepts causality logical clocks safety liveness replicated machines sequential consistency 2014 elected fellow acm 2014 received honorary doctorates european universities university rennes christian albrechts university kiel 2003 epfl 2004 university lugano 2006 nancy université 2007 2004 received ieee emanuel piore award 2005 paper reaching agreement presence faults received dijkstra prize honor lamport sixtieth birthday lecture series organised 20th symposium principles distributed computing podc 2001 2008 received ieee john von neumann medal 2011 elected united national academy sciences named acm fellow 2014 fundamental contributions theory practice distributed concurrent systems 
195678	computerscience	abb asea brown boveri swiss swedish multinational corporation headquartered zurich switzerland operating robotics power heavy electrical equipment automation technology ranked 341st fortune global 500 list 2018 global fortune 500 company 24 abb traded swiss exchange zürich nasdaq stockholm york stock exchange united history allmänna svenska elektriska aktiebolaget swedish electrical limited company asea founded 1883 ludvig fredholm västerås manufacturer electrical light generators brown boveri cie bbc formed 1891 baden switzerland charles eugene lancelot brown walter boveri swiss electrical companies producing ac dc motors generators steam turbines transformers abb created result merger asea bbc 1988 acquired maschinenfabrik oerlikon 1967 ceo asea percy barnevik ceo abb resignation 1996 1990 abb purchased westinghouse metering control division load control division spun cannon technologies late 1990s meter division spun elster electricity 2000s 1990s abb purchased combustion engineering headquartered stamford norwalk connecticut leading firm development conventional fossil fuel power nuclear power supply systems break north american market klaus agthe ceo operation time continuing expansion plans abb purchased elsag bailey process automation 1997 included bailey controls hartmann braun fischer porter largest acquisition abb history abb bought international combustion rolls royce 1997 alstom acquired abb boiler fossil fuel operations 2000 nuclear business purchased westinghouse electric company 2000 2000 abb signed contract delivery equipment services north korean nuclear powerplants supplied agreement korean peninsula energy development organization kedo consortium formed 1995 governments united japan south korea european union abb formally divested joint venture named abb alstom power 2000 sold conventional power generation systems alstom power abb nuclear business sold bnfl merged westinghouse electric company 2001 abb ranked dow jones sustainability row 2002 abb lindahl company chief executive return 50 retirement pay board called excessive abb chairman percy barnevik pay 87 pension package size pensions disclosed time abb 691 loss 2001 headlines drew sharp criticism switzerland sweden abb building systems business unit sold 2004 capvis swiss private equity company abb strategy focus power automation technologies abb building systems businesses australia hong kong sold 2003 downer edi limited building systems services building facilities encompassing indoor air quality building automation power distribution management financial debt lingering asbestos liability brought abb brink bankruptcy 2000s 2006 abb recovered financially settling asbestos issues brought subsidiaries combustion engineering lummus global august 2007 lummus global sold cb december 2008 abb acquired ber mac electrical instrumentation expand presence western canada oil gas industries 2009 abb realigned automation divisions january 2010 business units automation products robotics divisions regrouped divisions – discrete automation motion voltage products process automation division remained unchanged addition instrumentation business automation products division 2010 abb acquired software company ventyx vista equity partners 2011 abb announced acquisition australian based mincom limited private equity firm francisco partners undisclosed sum july 29 2011 acquisition finalised mincom ventyx subsequently integrated ventyx integrated abb enterprise software product 2011 abb acquired baldor electric usa cash transaction january 30 2012 abb acquired thomas betts cash transaction june 15 2012 completed acquisition commercial industrial wireless technology specialists tropos july 2013 abb acquired power cash transaction leading global manufacturer solar inverters abb cawp seitp202 bf86c5972758ad3ec1257bb300773351 aspx june 30 2018 abb completed acquisition industrial solutions electric global electrification business transaction announced september 25 2017 organizational structure abb largest builder electricity grids active sectors core businesses power automation technologies history growth mergers acquisitions entered phase structure unification 2014 company corporate division production divisions reorganization january 2017 abb implements matrix structure electrification products electrification products division manufactures medium voltage electrical products including electric vehicle infrastructure solar inverters modular substations distribution automation products protect people installations electronic equipment electrical overload enclosures cable systems voltage circuit breakers measuring sensing devices control products switches wiring accessories division knx systems integrate automate building electrical installations ventilation systems security data communication networks electrification products incorporates electrification solutions unit manufacturing voltage switchgear motor control centres customers include wide range industry utility operations commercial residential buildings acquisition industrial solutions closed june 2018 strengthened abb global position electrification robotics motion robotics motion division products services industrial production includes electric motors generators drives power electronics industrial robots abb installed 300 000 robots 2006 abb manufacturing centre shanghai china wind generators solar power inverters products belong division industrial automation industrial automation division systems control plant optimization industry specific automation applications industries served include oil gas power chemicals pharmaceuticals pulp paper metals minerals marine turbocharging division consists business units control technologies dcs supplier marine ports measurement analytics oil gas chemicals power generation water process industries turbocharging power grids power grids division offers components transmission distribution electricity division incorporates abb manufacturing network transformers switchgear circuit breakers voltage equipment digital protective relays offers maintenance services division offers turnkey systems service power transmission distribution grids power plants includes electrical substations substation automation systems flexible ac transmission systems voltage direct current hvdc systems network management systems division subdivided business units voltage products transformers grid automation grid integration 2013 abb sécheron joined geneva tosa trolleybus optimisation système alimentation english trolleybus power optimization demonstration trolleybus route charging overhead wires charging accomplished fixed overhead devices located stops route terminus jean luc favre head rail isi discussed promising role improved electric transport technology abb abb power grids division sell december 2018 hitachi ’s takeover abb ’s power grid division japanese conglomerate’s biggest deal shifts focus nuclear plants growth market electricity networks implementation abb market change entrance industry partnered ibm ibm player technology industry helped abb managing transition implementing technology core business management ulrich spiesshofer chief executive officer september 2013 board directors chaired peter voser elected april 2015 succeeded hubertus von grünberg chairman 2007 jürgen dormann chairman 2002 2007 percy barnevik 1999 2002 primary investors largest single stake firm held swedish investment company investor ab controlled wallenberg family holds 48 
197440	computerscience	fraunhofer society fraunhofer society advancement applied german organization 72institutes spread germany focusing fields applied science opposed max planck society basic science 25 000 employees scientists engineers annual budget €2 3billion biggest organisation applied development services europe basic funding fraunhofer society german public federal government länder owns fraunhofer society 70 funding earned contract government sponsored projects industry named joseph von fraunhofer scientist engineer entrepreneur superbly exemplified goals society organization centers united fraunhofer usa asia october 2010 fraunhofer announced center south america fraunhofer established fraunhofer centre applied photonics glasgow scotland march 2012 fraunhofer model called fraunhofer model existence 1973 led society continuing growth model fraunhofer society earns 70 income contracts industry specific government projects 30 budget sourced proportion federal land government grants support preparatory size society budget depends success maximizing revenue commissions funding model applies central society individual institutes serves drive realisation fraunhofer society strategic direction leader applied encouraging flexible autonomous entrepreneurial approach society priorities institutes fraunhofer society operates 72 institutes units fraunhofer institutes fraunhofer usa addition german institutes fraunhofer society operates based centers american subsidiary fraunhofer usa fraunhofer singapore 2017 fraunhofer society launched direct subsidiary asia history fraunhofer society founded munich march 26 1949 representatives industry academia government bavaria nascent federal republic 1952 federal ministry economic affairs declared fraunhofer society university german landscape german foundation dfg max planck institutes fraunhofer society support applied facilities subject running dispute 1954 society institutes developed 1956 developing facilities cooperation ministry defense 1959 fraunhofer society comprised institutes 135 coworkers budget 6 million deutsche mark 1965 fraunhofer society identified sponsor organization applied 1968 fraunhofer society target public criticism role military 1969 fraunhofer 200 employees 19 institutes budget stood 33 deutsche mark time commission promotion development fraunhofer society planned development fraunhofer society fhg commission developed financing model society dependent commercial success fraunhofer model model agreed federal cabinet bund länder kommission 1973 executive committee central administration moved joint accommodation leonrodstraße 54 munich fraunhofer program promotion consulting smes established gained significance subsequent 1977 political ownership society shared ministries defense 1984 fraunhofer society 500 employees 33 institutes budget 360 deutsche mark 1988 defense represented entire expenditure fraunhofer society 1989 fraunhofer society 400 employees 37 institutes total budget 700 deutsche mark 1991 fraunhofer society faced challenge integrating numerous establishments east germany branch offices existing institutes fraunhofer society 1993 fraunhofer society total budget exceeded 1 billion deutsche mark 1994 society founded based subsidiary fraunhofer usa extend outreach fraunhofer network american clients mission statement 2000 committed fraunhofer society market customer oriented nationally internationally active sponsor organization institutes applied 1999 fraunhofer initiated fraunhofer venture technology transfer office advance transfer scientific findings meet growing entrepreneurial spirit fraunhofer institutes 2000 2001 institutes centers gmd gesellschaft für mathematik und datenverarbeitung – society mathematics technology integrated fraunhofer society initiative federal ministry education 2000 marked noteworthy success fraunhofer institut integrated circuits iis mp3 lossy audio format developed method compressing decompressing digital audio 2002 ownership heinrich hertz institut communications technology berlin gmbh hhi belonged gottfried william leibniz society gwl transferred fraunhofer society integration fraunhofer society budget exceeded €1 billion time 2003 fraunhofer society headquarters moved building munich fraunhofer society developed formulated firm specific mission statement summarizing fundamental targets codifying desired values guidelines society culture society committed improving opportunities female employees coworkers identify enterprise develop creative potential 2004 fraunhofer electronic media technology fraunhofer institut integrated circuits iis gained status independent institute fraunhofer institut digital media technology idmt alliances topic helped strengthen market operational readiness level institutes fraunhofer jurisdictions 2005 institutes leipzig fraunhofer institut cell therapy immunology izi fraunhofer center nano electronic technologies cnt dresden founded 2006 fraunhofer institute intelligent analysis systems iais founded merger institute autonomous intelligent systems ais institute media communication imk 2009 fgan institutes converted fraunhofer institutes fraunhofer institute communication processing ergonomics fkie fraunhofer institute radar frequency technology fhr 
198584	computerscience	laptop called notebook simply notebook portable personal clamshell form factor typically lcd led screen mounted upper lid clamshell alphanumeric keyboard lid clamshell laptops folded shut transportation suitable mobile lap deemed person lap originally distinction laptops notebooks bigger heavier 2014 difference laptops commonly variety settings education playing games internet surfing personal multimedia laptops combine input output components capabilities desktop including display screen speakers keyboard hard disk drive optical disc drive devices touchpad trackpad processor memory single unit modern laptops feature integrated webcams built microphones touchscreens laptops powered internal battery external power supply ac adapter hardware specifications processor speed memory capacity vary types models price design elements form factor construction vary models depending intended examples specialized models laptops include rugged notebooks construction military applications production cost laptops laptop child olpc organization incorporate features solar charging semi flexible components laptop computers portable computers developed modern laptops originally considered niche market specialized field applications military accountants traveling sales representatives portable computers evolved modern laptop variety purposes terminology variants terms laptop notebook interchangeably portable english preferred question original etymology specificity term—the term laptop appears coined 1980s mobile lap distinguish devices earlier heavier portable computers informally called luggables term notebook appears gained currency manufacturers started producing portable devices reducing weight size incorporating display roughly size a4 paper marketed notebooks distinguish bulkier laptops etymology late 1990s terms interchangeable history personal pc feasible 1971 idea portable personal personal portable manipulator imagined alan kay xerox parc 1968 1972 paper dynabook ibm special apl machine portable scamp demonstrated 1973 prototype based ibm palm processor ibm 5100 commercially portable appeared september 1975 based scamp prototype bit cpu machines accepted portables increased rapidly laptop sized notebook epson hx 20 invented patented suwa seikosha yukio yokozawa july 1980 introduced comdex las vegas japanese company seiko epson 1981 released july 1982 lcd screen rechargeable battery calculator size printer chassis size a4 notebook laptop notebook patent portable micro portal french company r2e micral ccmc officially appeared september 1980 sicob paris portable microcomputer designed marketed studies developments department r2e micral request company ccmc specializing payroll accounting based intel 8085 processor bit clocked 2 mhz equipped central 64 kb ram keyboard 58 alpha numeric 11 numeric separate blocks 32 character screen floppy disk capacity 140 00 characters thermal printer speed 28 characters asynchronous channel synchronous channel 220 power supply weighed 12 kg dimensions 45 45 15 cm total mobility operating aptly named prologue osborne released 1981 luggable zilog z80 weighed battery cathode ray tube crt screen dual single density floppy drives tandy radioshack hewlett packard hp produced portable computers varying designs period laptops flip form factor appeared 1980s dulmont magnum released australia 1981–82 marketed internationally 1984–85 150 grid compass 1101 released 1982 nasa military sharp pc 5000 ampere gavilan released 1983 gavilan laptop manufacturer ampere modern clamshell design toshiba t1100 acceptance pc experts mass market pc portability 1983 onward input techniques developed included laptops including touchpad gavilan 1983 stick ibm thinkpad 700 1992 handwriting recognition linus write 1987 cpus 1990 intel i386sl designed minimum power increase battery life portable computers supported dynamic power management features intel speedstep amd powernow designs displays reached 640x480 vga resolution 1988 compaq slt 286 color screens started common upgrade 1991 increases resolution screen size occurring frequently introduction 17 screen laptops 2003 hard drives started portables encouraged introduction drives late 1980s common laptops starting introduction drives 1990 capacities typically lagged physically larger desktop drives optical storage read rom writeable read writeable dvd blu ray players common laptops 2000s types introduction portable computers late 1970s form changed spawning variety visually technologically differing subclasses distinct legal trademark term notably ultrabook rarely hard distinctions classes usage varied time sources setbacks laptop market continues expand introducing laptops acer aspire travelmate asus transformer book vivobook zenbook dell inspiron latitude xps hp elitebook envy pavilion probook lenovo ideapad thinkpad toshiba portégé satellite tecra incorporate laptop computers traditional laptop form traditional laptop clamshell screen keyboard facing screen easily folded conserve space traveling screen keyboard inaccessible closed devices form commonly called traditional laptop notebook screen size 11 17 inches measured diagonally featured operating windows macos linux traditional laptops common form laptops chromebooks ultrabooks convertibles 1s common performance achieved portable affordable forms subnotebook subnotebook ultraportable laptop designed marketed emphasis portability size weight battery life subnotebooks lighter standard laptops weighing 2 kg 5 lb battery life exceeding hours introduction netbooks ultrabooks subnotebooks category blurred netbooks basic cheap type subnotebook ultrabooks screen size qualify subnotebooks ultrabooks fit subnotebook category notable subnotebook apple macbook air netbook netbook inexpensive light weight energy efficient form laptop suited wireless communication internet access netbooks commercially 2008 weighing 1 kg display size netbook short internet device excels based computing performance netbooks initially sold light weight variants linux operating versions windows xp windows operating systems term netbook obsolete machines called netbooks—small inexpensive powered—never ceased sold chromebook models convertible hybrid trend technological convergence portable industry spawned broad range devices combined features separate device types hybrids convertibles 1s emerged crossover devices share traits tablets laptops devices touchscreen display designed users tablet mode multi touch gestures stylus digital pen convertibles devices ability conceal hardware keyboard keyboards devices flipped rotated slid chassis transforming laptop tablet hybrids keyboard detachment mechanism feature critical components situated display 1s hybrid convertible form dubbed detachables convertibles distinguished ability desktop os windows 1s marketed laptop replacement tablets 1s light devices battery life 1s distinguished mainstream tablets feature x86 architecture cpu typically ultra voltage model intel core i5 featured desktop os windows typical laptop ports usb mini displayport 1s designed media consumption device valid desktop laptop replacements ability desktop applications adobe photoshop connect multiple peripheral devices mouse keyboard external displays modern surface pro series devices surface book examples modern detachables lenovo yoga series computers variant convertibles surface rt surface chassis design surface pro arm processors windows rt classify 1s hybrid tablets hybrid laptops mobile operating android include asus transformer pad devices examples hybrids detachable keyboard design fall category 1s desktop replacement desktop replacement laptop class device intended mobile devices bulkier portable laptops intended compact transportable alternatives desktop desktop replacements larger typically heavier classes laptops capable powerful components 15 inch larger display desktop replacement laptops operation time batteries typically shorter laptops rare battery laptops class limited range desktop components provide performance price expense battery life practice died names media center laptops gaming laptops specialized notebook computers overlapping desktop replacement form factor rugged laptop rugged laptop designed reliably operate harsh usage conditions strong vibrations extreme temperatures wet dusty environments rugged laptops designed scratch adapted regular consumer laptop models rugged laptops bulkier heavier expensive regular laptops seldom regular consumer design features rugged laptops include rubber sheeting keyboard sealed port connector covers passive cooling bright displays easily readable daylight frames magnesium alloys stronger plastics commercial laptops solid storage devices hard disc drives shock mounted withstand constant vibrations rugged laptops commonly public safety services police medical emergency military utilities field service technicians construction mining oil drilling personnel rugged laptops sold organizations individuals rarely marketed retail channels business laptop business laptop laptop designed workplace typically ruggedised consumer facing features resolution sound removed device pure productivity hardware basic components laptops function identically desktop counterparts traditionally miniaturized adapted mobile desktop systems increasingly power originally developed mobile design restrictions power size cooling laptops limit maximum performance laptop compared desktop components difference increasingly narrowed laptop components intended replaceable upgradable exception components detached battery cdr dvd drive restriction major differences laptops desktop computers tower desktop computers designed motherboards hard disks sound cards ram components compact laptop laplets upgradeable components intel asus compal quanta laptop manufacturers created common building block standard laptop address inefficiencies caused lack standards inability upgrade components sections summarizes differences distinguishing features laptop components comparison desktop personal display modern laptops feature larger color active matrix display based led lighting resolutions 1280×800 1366×768 pixels models led based lighting offer lesser power consumption increased brightness netbooks screen typically resolution 1024×600 netbooks subnotebooks screen standard notebook resolutions resolution display items fit onscreen time improving user ability multitask resolutions screens resolution serve display sharper graphics increasing usable introduction macbook pro retina display 2012 increase availability resolution 1920×1080 displays systems typical 15 inch screens resolutions 3200×1800 external displays connected laptops models mini displayport handle central processing unit laptop central processing unit cpu advanced power saving features produces heat intended purely desktop typically laptop cpus processor cores core models price mainstream performance performance difference laptop desktop cpus fastest core desktop cpus outperform fastest core laptop processors expense massively power consumption heat generation fastest laptop processors 56 watts heat fastest desktop processors 150 watts wide range cpus designed laptops intel amd manufacturers x86 architectures motorola ibm produced chips powerpc based apple laptops ibook powerbook laptops removable cpus common trend thinner lighter models laptops cpu soldered motherboard replaceable universal ultrabooks laptops desktop processor laptop version performance gains cost weight heat limited battery life practice extinct 2013 desktop counterparts laptop cpus impossible overclock thermal operating mode laptops close limits headroom overclocking–related operating temperature increase possibility improving cooling laptop overclocking extremely difficult implement graphical processing unit laptops graphical processing unit gpu integrated cpu conserve power space introduced intel core series mobile processors 2010 accelerated processing unit apu processors amd prior machines tended graphics processors integrated chipset machines separate graphics processor laptops lacking separate graphics processor limited utility gaming professional applications involving 3d graphics capabilities cpu integrated graphics converged dedicated graphics processors laptops intended gaming professional 3d dedicated dual graphics processors motherboard internal expansion card 2011 involve switchable graphics demand performance dedicated graphics processor power efficient integrated graphics processor nvidia optimus sort switchable graphics memory laptops dimm outline dual memory module memory modules size desktop dimms accessible laptop ease upgrading locations intended user replacement laptops memory slots lowest models models mobile engineering workstations models intended gaming slots mid range laptops factory equipped 4–6 ram netbooks commonly equipped 1–2 ram expandable laptops memory soldered motherboard conserve space laptop thinner chassis design soldered memory easily upgraded internal storage traditionally laptops hard disk drive hdd main volatile storage proved inefficient mobile devices power consumption heat production presence moving damage drive data stored laptop unstable physically transporting accidental drop advent flash memory technology mid laptops opted compact power efficient fast solid drives ssd eliminated hazard drive data corruption caused laptop physical impacts laptops inch drives version inch desktop drive form factor inch hdds compact power efficient produce heat time capacity slower data transfer rate compact laptops support inch hdds ssds miniaturization trade offs nonexistent ssds designed footprint ssds feature traditional inch laptop specific msata card form factor ssds data transfer rate power consumption failure rate larger capacity compared hdds hdds cost laptops single inch drive laptops screen wider 15 inches house drives laptops support hybrid mode combining inch drive typically spacious hdd data msata sdd drive typically capacity faster read write speed operating partition located ssd increase laptop performance increase performance ssd 16 32 cache drive compatible os laptops limited drive upgradeability ssd standard shape requires proprietary daughter card laptops limited space installed ssd relying availability cloud storage services storing user data chromebooks prominent approach variety external hdds nas data storage servers support raid technology attached virtually laptop interfaces usb firewire esata thunderbolt wired wireless network increase space storage data laptops incorporate card reader memory cards digital cameras typically microsd cards enables users download digital pictures card laptop enabling delete card contents space pictures removable media drive optical disc drives capable playing roms compact discs dvds blu ray discs universal sized models 2010s disc drive remains common laptops screen wider trend thinner lighter machines gradually eliminating drives players drives uncommon compact laptops subnotebooks netbooks laptop optical drives tend follow standard form factor standard msata connector replace optical drive model laptop models possibility replace optical drive hard drive caddy fills extra space optical drive occupied inputs alphanumeric keyboard enter data commands function touchpad called trackpad stick control position cursor screen integrated keyboard typing external keyboard mouse connected usb port wirelessly bluetooth technology advent ultrabooks support touch input screens 2010 era operating systems windows multitouch touchscreen displays models models webcams microphones communicate people moving images sound skype google chat software laptops typically usb ports microphone jack external mic laptops card reader reading digital camera cards input output ports typical laptop usb ports external monitor port vga dvi hdmi mini displayport audio port form single socket common connect external displays 2014 era laptop single mini displayport utilizing multi stream transport technology apple 2015 version macbook transitioned ports single usb port port charging connecting variety devices aftermarket adapters google updated version chromebook pixel transition trend usb keeping usb type ports compatibility devices common 2000s decade ethernet network port rarely modern laptops widespread wireless networking wi legacy ports ps keyboard mouse port serial port parallel port firewire models increasingly rare apple systems handful laptops thunderbolt ports thunderbolt usb laptops typically headphone jack user connect external headphones amplified speaker systems listening music audio expansion cards pc card pcmcia expresscard slot expansion laptops adding removing functionality laptop powered increasingly rare introduction usb internal subsystems ethernet wi wireless cellular modem implemented replaceable internal expansion cards accessible access cover laptop standard cards pci express mini sizes laptops uncommon micro sata msata functionality pci express mini card slots allowing slots sata based solid drives battery power supply 2016 era laptops lithium ion batteries thinner models flatter lithium polymer technology technologies replaced nickel metal hydride batteries battery life highly variable model workload range hour day battery performance gradually decreases time substantial reduction capacity typically evident regular depending charging discharging pattern design battery innovations laptops batteries situations battery provide 24 hours continued operation assuming average power consumption levels hp elitebook 6930p ultra capacity battery laptop battery charged external power supply plugged wall outlet power supply outputs dc voltage typically range 2—24 volts power supply external connected laptop dc connector cable charge battery power laptop simultaneously battery charged laptop continues power supplied external power supply avoiding battery battery charges shorter period time laptop sleeping charger typically adds transporting weight laptop models heavier lighter 2016 era laptops smart battery rechargeable battery pack built battery management bms smart battery internally measure voltage current deduce charge level soh health parameters indicating cells cooling waste heat operation difficult remove compact internal space laptop laptops heat sinks components cooled hot components deep device space wasting air duct exhaust heat modern laptops rely heat pipes rapidly waste heat edges device compact fan heat sink cooling waste heat exhausted device operator rear device multiple air intake paths intakes blocked device soft conforming surface chair cushion believed designs metal apple aluminum macbook pro macbook air employ machine heat sink allowing supplement cooling dissipating heat device core secondary device temperature monitoring reduce performance trigger emergency shutdown unable dissipate heat laptop left running carrying aftermarket cooling pads external fans laptops reduce operating temperatures docking station docking station referred simply dock laptop accessory multiple ports expansion slots bays fixed removable drives laptop connects disconnects docking station typically single proprietary connector docking station popular laptop accessory corporate computing environment possibility docking station transform laptop featured desktop replacement allowing easy release ability advantageous road warrior employees travel frequently office ports position laptop inconvenient cheaper passive device port replicator devices mate connectors laptop usb firewire charging trolleys laptop charging trolleys laptop trolleys laptop carts mobile storage containers charge multiple laptops netbooks tablet computers time trolleys schools replaced traditional static labs suites desktop equipped tower computers plug sockets individual classroom charge devices trolleys wheeled classrooms students teachers building access charged equipment laptop charging trolleys deter protect opportunistic organized theft schools plan designs prime targets thieves steal items laptops netbooks tablets highest–value portable items school laptops easily concealed clothing stolen buildings types laptop–charging trolleys designed constructed protect theft steel laptops remain locked trolleys moved classroom mounted locked floor walls prevent thieves stealing laptops overnight solar panels laptops solar panels generate solar power laptop operate laptop child initiative released olpc xo laptop tested operated solar panels presently designing olpc xo laptop features olpc xo operate watts electricity renewable energy resources generate total watts samsung designed nc215s solar–powered notebook sold commercially market accessories common accessory laptops laptop sleeve laptop skin laptop degree protection scratches sleeves distinguished flexible commonly neoprene sturdier resilience polyurethane laptop sleeves wrapped ballistic nylon provide measure waterproofing bulkier sturdier metal polyurethane padding locks security metal padded offer protection impacts drops common accessory laptop cooler device helps internal temperature laptop actively passively common active method involves electric fans draw heat laptop passive method involve propping laptop type pad receive air flow stores sell laptop pads enable reclining person bed laptop obsolete features features models laptops current laptops include comparison desktops advantages portability feature mentioned comparison laptops desktop pcs physical portability laptop places—not office commuting flights coffee shops lecture halls libraries clients locations meeting portability enables laptop users device living dining family portability offers distinct advantages advantages laptops disadvantages compared desktop pcs laptops disadvantages performance performance mainstream desktops laptop comparable cost laptops fallen rapidly desktops laptops remain expensive desktop pcs performance level upper limits performance laptops remain desktops workstation class machines processor sockets bleeding edge features desktops underlying technology matures adapted laptops internet browsing typical office applications spends majority time waiting user input laptops netbooks fast users laptops powerful resolution movie playback 3d gaming video editing encoding laptop processors disadvantaged dealing database maths engineering financial software virtualization laptops mobile versions processors conserve power lag desktop chips performance manufacturers performance desktop cpus laptops upgradeability upgradeability laptops limited compared desktops standardized hard drives memory upgraded easily optical drives internal expansion cards upgraded follow industry standard internal components including motherboard cpu graphics intended upgradeable intel asus compal quanta laptop manufacturers created common building block standard laptop address inefficiencies caused lack standards reasons limited upgradeability technical economic industry wide standard form factor laptops major laptop manufacturer pursues proprietary design construction result laptops difficult upgrade repair costs devices sound cards network adapters hard optical drives numerous peripherals upgrades impair laptop portability add cables boxes setup disconnected reconnected laptop ergonomics health effects wrists prolonged laptops repetitive strain injury flat keyboard trackpad devices usage separate external ergonomic keyboards devices recommended prevent injury periods time connected laptop easily usb docking station health standards require ergonomic keyboards workplaces neck spine laptop integrated screen requires users lean view neck spinal injuries larger quality external screen connected laptop alleviate provide additional screen space productive solution stand fertility study university york researchers heat generated laptops increase temperature lap male users balancing lap putting sperm count risk study included roughly dozen ages 21 35 sitting position required balance laptop increase scrotum temperature determine male sterility 2010 study 29 males published fertility sterility laptops laps experienced scrotal hyperthermia overheating scrotal temperatures increased heat increase offset laptop cushion increase male infertility common practical solution laptop table desk book pillow body laptop solution cooling unit laptop usb powered consist hard plastic housing cooling fans – entire assembly designed sit laptop question – laptop remaining cool touch greatly reduces laptop heat buildup thighs heat generated laptop lap skin discoloration thighs toasted skin syndrome durability laptops durable exceptions equipment wear portability laptops subject wear physical damage desktops components screen hinges latches power jacks power cords deteriorate gradually ordinary replaced liquid spill keyboard minor mishap desktop basic keyboard costs 20 damage internals laptop destroy result costly repair entire replacement laptops study laptop times break desktop maintain laptop recommended clean months dirt debris dust food particles cleaning kits consist lint microfiber cloth lcd screen keyboard compressed air dust cooling fan cleaning solution harsh chemicals bleach clean laptop damage replacement original external components expensive proprietary interchangeable inexpensive—a power jack cost dollars—but replacement require extensive disassembly reassembly laptop technician inexpensive fragile purchased separately larger expensive components video display cable backlight power cable pass lid hinges connect motherboard screen eventually break repeated closing lid tiny cables purchased original manufacturer separate entire lcd panel price hundreds dollars popular models aftermarket pulled exists repair costs failed motherboard lcd panel exceeds laptop party vendors heating cooling laptops rely extremely compact cooling systems involving fan heat sink fail blockage caused accumulated airborne dust debris laptops type removable dust collection filter air intake cooling systems gradually conducts heat noise pass laptop starts overheat idle load levels dust stuck fan heat sink meet removed casual cleaning vacuuming time compressed air dislodge dust debris remove device loose debris reaccumulated cooling fans complete disassembly required clean laptop preventative maintenance regular cleaning heat sink compressed air prevent dust build heat sink laptops difficult disassemble average user components sensitive electrostatic discharge esd battery life battery life limited capacity drops time eventually requiring replacement battery typically stores energy laptop hours depending usage configuration power management settings ages battery energy storage dissipate progressively lasts minutes battery easily replaceable capacity model charging discharging time laptops ultrabooks usual removable battery brought service center manufacturer party laptop service center battery replaced replacement batteries expensive security privacy valuable commonly portable easy hide backpack type travel bag laptops stolen day 600 laptops missing airports cost stolen business personal data identity theft credit card fraud breach privacy times stolen laptop physical protection laptops safeguarding data contained laptops kensington security slot tether desk immovable object security cable lock addition modern operating systems party software offer disk encryption functionality renders data laptop hard drive unreadable key passphrase 2015 laptops additional security elements including eye recognition software fingerprint scanning components software lojack laptops laptop cop gadgettrack engineered people locate recover stolen laptop event theft setting laptop password firmware protection firmware setup booting internal hdd ssd protection accessing loading operating user account operating additional security measures user lost stolen laptops recovered companies decrease variety companies software solutions specializing laptop recovery 2010s common availability webcams laptops raised privacy concerns robbins merion school district eastern district pennsylvania 2010 school issued laptops loaded special software enabled staff schools secret webcam shots students students laptops sales manufacturers laptop brands manufacturers major brands offer notebooks classes listed adjacent box major brands offer service support including executed documentation driver downloads remain laptop model produced capitalizing service support brand image laptops major brands expensive laptops brands odms brands specialize class laptops gaming laptops alienware performance laptops hp envy netbooks eeepc laptops children olpc brands including major design manufacture laptops original design manufacturers odms design models laptops brands choose models included lineup 2006 major odms manufactured laptops largest quanta 30 market share identical models major label profile odm house brand market share battery powered portable computers worldwide market share 1986 laptops increasingly popular business personal 109 notebook pcs shipped worldwide 2007 growth 33 compared 2006 2008 estimated 145 notebooks sold grow 2009 177 quarter 2008 time worldwide notebook pc shipments exceeded desktops 38 units 38 units 2005 time notebooks outsold desktops month time notebooks sold average 131 desktops sold average 696 operating systems windows laptops average selling price asp decline 2008 2009 cost netbooks drawing average 689 retail stores august 2008 2009 asp fallen 602 january 560 february windows machines asp fell 129 months apple macos laptop asp declined 12 524 512 laptop disposal list materials laptop substances beryllium lead chromium mercury compounds toxic carcinogenic humans toxins harmless laptop concerns discarded laptops health risk toxic environment damage strong waste electrical electronic equipment directive weee directive europe laptop computers recycled law environmental protection agency epa outlawed landfill dumping incinerating discarded laptop computers laptop computers recycling process method demanufacturing demanufacture involves physical separation components laptop components materials plastic metal glass recycling complex items require advanced materials separation circuit boards hard drives batteries corporate laptop recycling require additional process data destruction data destruction process ensures data stored laptops hard drive retrieved overview data protection environmental laws regulations applicable laptop recycling data destruction • data protection 1998 dpa • eu privacy directive 2016 • financial conduct authority• sarbanes oxley act• pci dss data security standard• waste electronic electrical equipment directive weee • basel convention• bank secrecy bsa • facta sarbanes oxley act• fda security regulations 21 11 • gramm leach bliley glba • hipaa health insurance portability accountability • nist sp 800 53• add nist sp 800 171• identity theft assumption deterrence act• patriot 2002• pci data security standard• safe harbor provisions• laws• jfan 3• gramm leach bliley act• dcidextreme ruggedized grid compass days space shuttle program commercial laptop space macintosh portable 1991 aboard space shuttle mission sts 43 apple laptop computers continue flown aboard manned spaceflights duration flight certified international space station thinkpad 2011 100 thinkpads aboard iss laptops aboard international space station spaceflights purchased public modifications safely effectively weightless environment updating cooling systems function relying hot air rising accommodation cabin air pressure laptops operating harsh usage environments conditions strong vibrations extreme temperatures wet dusty conditions space custom designed task commercial shelf hardware 
203619	computerscience	handwriting recognition hwr ability receive interpret intelligible handwritten input sources paper documents photographs touch screens devices image written sensed piece paper optical scanning optical character recognition intelligent word recognition alternatively movements pen sensed pen based screen surface easier task clues handwriting recognition principally entails optical character recognition complete handwriting recognition handles formatting performs correct segmentation characters plausible recognition handwriting recognition involves automatic conversion image letter codes usable processing applications data form regarded static representation handwriting handwriting recognition comparatively difficult people handwriting styles ocr engines focused machine printed icr hand printed written capital letters traditional techniques domain reduction techniques narrowing domain helps increase accuracy handwriting recognition systems form field zip code characters reduce identifications primary techniques character extraction character recognition involves scanning form document written individual characters contained scanned image extracted tools exist capable performing step common imperfections step common characters connected returned single image characters major recognition stage algorithms reduce risk connected characters character recognition extraction individual characters occurs recognition engine identify character recognition techniques feature extraction feature extraction fashion neural network recognizers programmers manually determine properties feel properties approach recognizer control properties identification approach requires development time neural network properties learned automatically modern techniques traditional techniques focus segmenting individual characters recognition modern techniques focus recognizing characters segmented focus machine learning techniques learn visual features avoiding limiting feature engineering art methods convolutional networks extract visual features overlapping windows image rnn produce character probabilities recognition handwriting recognition involves automatic conversion written special digitizer pda sensor picks pen movements pen pen switching data digital ink regarded digital representation handwriting signal converted letter codes usable processing applications elements handwriting recognition interface typically include process process online handwriting recognition broken steps purpose preprocessing discard irrelevant input data negatively affect recognition concerns speed accuracy preprocessing consists binarization normalization sampling smoothing denoising step feature extraction dimensional vector field received preprocessing algorithms dimensional data extracted purpose step highlight recognition model data include pen pressure velocity writing direction step classification step models map extracted features classes identifying characters features represent hardware commercial products incorporating handwriting recognition replacement keyboard input introduced 1980s examples include handwriting terminals pencept penpad inforite sale terminal advent consumer market personal computers commercial products introduced replace keyboard mouse personal single handwriting pencept cic commercially tablet type portable gridpad grid systems released september 1989 operating based dos 1990s hardware makers including ncr ibm eo released tablet computers running penpoint operating developed corp penpoint handwriting recognition gestures facilities party software ibm tablet thinkpad ibm handwriting recognition recognition ported windows pen computing ibm pen os commercially successful advancements electronics allowed computing power handwriting recognition fit form factor tablet computers handwriting recognition input method hand held pdas pda provide written input apple newton exposed public advantage streamlined user interface device commercial success unreliability software learn user writing patterns time release newton os handwriting recognition greatly improved including unique features current recognition systems modeless error correction negative impression discontinuation apple newton feature ported mac os form inkwell macintosh palm launched successful series pdas based graffiti recognition graffiti improved usability defining set unistrokes stroke forms character narrowed possibility erroneous input memorization stroke patterns increase learning curve user graffiti handwriting recognition infringe patent held xerox palm replaced graffiti licensed version cic handwriting recognition supporting unistroke forms pre dated xerox patent court finding infringement reversed appeal reversed appeal parties involved subsequently negotiated settlement patents graffiti palm os tablet pc special notebook outfitted digitizer tablet stylus user handwrite unit screen operating recognizes handwriting converts typewritten windows vista windows include personalization features learn user writing patterns vocabulary english japanese chinese traditional chinese simplified korean features include personalization wizard prompts samples user handwriting retrain accuracy recognition distinct advanced handwriting recognition employed windows mobile os pdas handwriting recognition input form public accustomed achieved widespread desktop computers laptops accepted keyboard input faster reliable pdas offer handwriting input accepting natural cursive handwriting accuracy people simple screen keyboard efficient software initial software modules understand print handwriting characters separated author applied pattern recognition program 1962 shelia guberman moscow commercial examples companies communications intelligence corporation ibm 1990s companies paragraph international lexicus systems understand cursive handwriting recognition paragraph based russia founded scientist stepan pachikov lexicus founded ronjon nag chris kortge students stanford university paragraph calligrapher deployed apple newton systems lexicus longhand commercially penpoint windows operating lexicus acquired motorola 1993 develop chinese handwriting recognition predictive systems motorola paragraph acquired 1997 sgi handwriting recognition team formed division acquired sgi vadem acquired calligrapher handwriting recognition digital ink technologies developed vadem 1999 wolfram mathematica handwriting recognition function textrecognize handwriting recognition active community academics studying biggest conferences handwriting recognition international conference frontiers handwriting recognition icfhr held numbered international conference document analysis recognition icdar held odd numbered conferences endorsed ieee iapr active include 2009 2009 recurrent neural networks deep feedforward neural networks developed jürgen schmidhuber swiss lab idsia international handwriting competitions directional multi dimensional short term memory lstm alex graves competitions connected handwriting recognition 2009 international conference document analysis recognition icdar prior knowledge languages french arabic persian learned gpu based deep learning methods feedforward networks dan ciresan colleagues idsia icdar 2011 offline chinese handwriting recognition contest neural networks artificial pattern recognizers achieve human competitive performance famous mnist handwritten digits yann lecun colleagues nyu references en wikipedia wiki wikipedia footnotes explanation generate footnotes tags template 
205599	computerscience	stephen richard steve bourne born january 1944 scientist originally united kingdom based united career author bourne codice foundation standard command interfaces unix biography bourne bachelor degree mathematics king college london england diploma science mathematics trinity college cambridge subsequently algol 68 compiler university cambridge laboratory algol 68c cambridge bourne spent bell labs seventh edition unix team bourne wrote codice debugger unix book unix intended readership bell labs bourne senior engineering management positions silicon graphics digital equipment corporation sun microsystems cisco systems 2000 2002 president association computing machinery computing bourne awarded acm presidential award 2008 fellow organization 2005 fellow royal astronomical society bourne chief technology officer icon venture partners venture capital firm based menlo park california 2014 chair editorial advisory board acm queue magazine helped president acm 
206586	computerscience	convergence phenomenon telecommunication media industry integrate services content offerings communication core technology ecosystem includes cultural society business service technology regulatory content aspects considered practical application manifests concrete examples internet digital convergence media convergence applications telecommunication article describes wide aspects convergence illustrations convergent merging technologies nbic nano bio info cognitive technologies convergence media technology definitions convergence deep integration knowledge tools relevant activities human activity common goal society answer questions change respective physical social ecosystem respective ecosystem trends pathways opportunities divergent phase process roco 2002 bainbridge roco 2016 siddhartha menon defines convergence policy initiative dilemmas media covergence cross national perspective integration digitalization integration defined process transformation measure degree diverse media phone data broadcast technology infrastructures combined single seamless purpose network architecture platform digitalization defined physical infrastructure content medium jan van dijk suggests digitalization breaking signals bytes consisting zeros convergence defined blackman 1998 trend evolution technology services industry structures convergence defined coming telecommunications computing broadcasting single digital bit stream mueller stands statement convergence takeover forms media technology digital computers media technological convergence tendency technology technological evolve performing tasks digital convergence refers convergence industries conglomerate ittce technologies telecommunication consumer electronics entertainment separate technologies voice telephony features data productivity applications video share resources interact synergistically telecommunications convergence called network convergence describes emerging telecommunications technologies network architecture migrate multiple communications services single network involves converging distinct media telephony data communications common interfaces single devices smart phones phone calls search media convergence interlinking computing technologies media content media companies communication networks arisen result evolution popularization internet activities products services emerged digital media space closely linked multilevel process media convergence developments media communication sector summarized term media deconvergence experts view simply iceberg facets institutional activity social life business government art journalism health education increasingly carried digital media spaces growing network communication technology devices included topic basis networks operating systems communicate protocols convergent services voip iptv smart tend replace technologies disrupt markets ip based convergence inevitable result service demand market technology converges public owned common ip based services access independent dependent service access dependent history media technological convergence communication networks designed carry types independently media television radio broadcasting networks passive audiences convergence telecommunication technology permits manipulation forms voice data video telecommunication changed scarcity seemingly limitless capacity possibility audience interactivity morphs passive audience engaged audience historical roots convergence traced emergence mobile telephony internet term properly applies marketing history fixed mobile telephony offered operators joined products fixed mobile operators 1990s independent companies organization marketed products sold serviced independently 1990s implicit explicit assumption media replace media internet replace broadcasting nicholas negroponte digital negroponte predicts collapse broadcast networks favor era narrow casting suggests government regulation shatter media conglomerate monolithic empires mass media dissolving array cottage industries media barons grasping hold centralized empires tomorrow combined forces technology human nature ultimately stronger hand plurality laws congress invent media companies claimed media absorbed completely orbit emerging technologies george gilder dismisses claims industry converging television industry sense automobile converged horse converged nickelodeon word processing program converged typewriter cad program converged drafting board digital desktop publishing converged linotype machine letterpress gilder believes computers transform mass culture destroy media companies media convergence agenda dot bubble burst erstwhile knight ridder promulgated concept portable magazines newspaper books 1994 news corporations increasingly obvious editorial model based mere replication internet contents written print newspapers radio television sufficient rise digital communication late 20th century media organizations individuals deliver audio video material wired wireless fiber optic connections time inspired media organizations explore multimedia delivery digital convergence news media called mediamorphosis researcher roger fidler https archive 20090315053135 rji missouri staff advisers roger fidler php 1997 book surrounded multi level convergent media modes communication continually reforming adapt enduring demands technologies changing create consume learn interact converging technological fields nbic acronym nanotechnology biotechnology technology cognitive science 2014 popular term converging technologies introduced public discourse publication converging technologies improving human performance report sponsored national science foundation acronyms offered concept gnr genetics nanotechnology robotics joy 2000 future journalist joel garreau radical evolution promise peril enhancing minds bodies human grin genetic robotic nano processes science journalist douglas mulhall molecular future nanotechnology robotics genetics artificial intelligence transform grain genetics robotics artificial intelligence nanotechnology acronym coined technology organization bang bits atoms neurons genes converging science technology fields comprehensive term roco bainbridge tonn whitesides convergence knowledge technology society 2013 bainbridge roco edited authored springer reference handbook science technology convergence 2016 defining concept convergence science technology medical fields roco published principles methods facilitate convergence 2015 examples technology implications convergent solutions include fixed mobile technologies examples convergent services include convergent technologies integrate fixed mobile deliver convergent solutions convergent technologies include convergence appliances media observers expect eventually access media content device black box media business practice identify black box invest provide media caused firstly black boxes invented abandoned individual left numerous devices perform task dedicated task video games console subsequently owning dvd players contrary streamlined goal black box theory creates clutter technological convergence experimental nature led consumers owning technologies additional functions harder impractical specific device people watch duration meal cooking time kitchen microwave household examples technological convergence unnecessary unneeded consumers specialized media device black box devices perform task suit current situation 2002 cheskin report explained email expectations school commuting airport devices designed suit accessing content depending situated context creation black boxes intended perform tasks trend devices suit consumer physical position variable utility portable technology convergence occurs mobile devices incorporate multimedia services gps internet access mobile telephony single device heralding rise termed smartphone device designed remove carry multiple devices convergence media occurs multiple products form product advantages black box idea technology concocted henry jenkins fallacy inability technical pieces people mail internet phone computers internet mail addition mobile phones incorporate digital cameras mp3 players voice recorders devices type convergence popular consumer features space media conglomerates remaining competitive convergence downside initial forms converged devices frequently functional reliable component mobile phone browser render correctly supporting rendering methods iphone browser supporting flash content functions single device escalates ability device serve original function decreases rheingold asserts technological convergence holds immense potential improvement life liberty degrade believes technology potential weapon social control resistance technology evolved companies converge technologies create demand products includes phone companies integrating 3g 4g phones mid 20th century television converged technologies movies radio television converged mobile phone industry internet phone calls personal computers converging technologies combine multiple technologies mobile phones feature cameras hold images videos music media manufacturers integrate advanced features video recording gps receivers data storage security mechanisms traditional cellphone convergence internet role internet changed original communication tool easier faster access services broadband connection television radio newspapers media accessing news entertainment media converged people read hear news internet convergence internet conventional popular 2010s smart referred connected hybrid confused iptv internet smart current trend integration internet features modern television sets set boxes technological convergence computers television sets set boxes devices focus online interactive media internet content demand streaming media focus traditional broadcast media previous generations television sets set boxes digital convergence digital convergence inclination innovations media sources content time enables convergence access devices content industry participant operations strategy type technological convergence creates opportunities product development growth strategies digital product companies individual content producers vloggers youtube video sharing platform convergence demonstrated involvement internet devices smart television camera youtube application digital content setup called spokes devices connect central hub smart pc internet serves intermediary interactivity tools social networking create unique mixes products services horizontal integration highlights digital convergence encompasses phenomena convergence types digital contents harry strasser cto siemens convergence impact people lifestyle style hot trend digital convergence converged content mixing personal user generated content professional copyright protected content personal music videos combine user generated photos chart music german startup trivid gmbh developed clipgenerator enables users create personal music videos popular chart music share social communities facebook myspace bebo convergence marketplace convergence global marketplace dynamic companies sectors brought competitors collaborators traditional boundaries industry technology dominated convergence traditional products services types companies relevant stunning array array technology developments accelerators convergence including mobility analytics cloud digital social networks disruptive force convergence threat unprepared tremendous growth opportunity companies innovate execute expanding list competitors dramatically marketplace rules convergence lines blurred companies diversify original markets instance mobile services increasingly automobile chemicals companies agribusiness device manufacturers sell music video books booksellers consumer device companies search advertising companies telecommunications companies telcos media companies telcos vice versa retailers financial services companies vice versa cosmetics companies pharmaceutical companies mobile phone usage broadens dramatically enabling users payments online watch videos adjusting thermostat media convergence media convergence refers merging media product process jenkins convergence flow content multiple media platforms cooperation multiple media industries migratory behaviour media audiences search kinds entertainment experiences jenkins convergence technological economic social organic cultural global media convergence technological shift technological process includes shifts industrial cultural social paradigms encourage consumer seek convergence simply individual consumers interact social level media platforms create experiences forms media content connect socially consumers corporate producers media accessible lugmayr dal zotto argued media convergence takes technology content consumer business model management level argue media convergence matter evolution triadic phenomenon convergence divergence coexistence digital media ecosystems coexist mobile app stores provide vendor lock ins eco systems technology platforms converging technology usage common communication protocols digital media diverging media content offerings specializing space niche media advances technology bring ability technological convergence rheingold believes alter social effects virtual social physical colliding merging coordinating predicted late 1980s time rom commonplace digital revolution media pushed media broadcasting increasingly replaced internet enabling consumers freedom access preferred media content easily rate dot bubble 1990s suddenly popped poured cold water talk digital revolution society idea media convergence emerged key reference established media companies attempt visualize future entertainment industry revolutionary digital paradigm shift presumed media increasingly replaced media convergence paradigm emerging suggests media interact complex predicted paradigm shift digital revolution assumed media change dot market crashed tendency imagine changed real truth lay aspects current media environment consideration industry leaders increasingly reverting media convergence sense era disorientating change respect media convergence theory essentially concept meaning media convergence reality shift technology alters relationships industries technologies audiences genres markets media convergence rationality media industries operate media consumers process news entertainment media convergence essentially process outcome single black box controls flow media proliferation media channels increasing portability telecommunications computing technologies entered era media constantly surrounds media convergence requires media companies rethink existing assumptions media consumer view affect marketing programming decisions media producers respond newly empowered consumers conversely hardware diverging media content converging media developed brands offer content forms examples star wars matrix films books video games cartoons action figures branding encourages expansion concept creation ideas contrast hardware diversified accommodate media convergence hardware specific function scholars argue flow cross media accelerating donnell suggests films video game semblance media convergence misunderstood people media production industry conglomeration media industry continues sell story media batman comics films anime games data create image batman media created individually teams creators character visual repetitively media synergy media industry addition convergence happen game consoles produced flows consoles faster create game scratch industry media journalism forms virtual reality reuters major international news service created staffed news “island” popular online virtual reality environment life secondlife accessed january 2008 life emerged compelling 3d virtual reality millions citizens created avatars virtual representations populate live altered personal flight reality altered egos flourish real money 296 257 spent 24 hours concluding 19 a eastern time january 2008 setting foot real reuters island life virtual version reuters real news service covering domain life citizens life numbering 11 807 742 residents january 2008 media convergence digital era forms media media companies media convergence roles technological merging media channels – magazines radio programs movies internet laptops ipads smartphones discussed media culture campbell convergence technology late 1920s rca radio corporation america purchased victor talking machine company introduced machines receive radio play recorded music radio lost appeal people started watching television talking music visuals technology advances convergence media change definition media convergence campbell discusses cross platform media companies involves consolidating media holdings cable phone television air satellite cable internet access corporate umbrella consumer media choices benefit company cut costs maximize profits stated article convergence culture media mark deuze “the convergence production consumption media companies channels genres technologies expression convergence aspects everyday life play local global social identity convergence culture henry jenkins determines convergence culture flow content multiple media platforms cooperation multiple media industries migratory behavior media audiences search kinds entertainment experiences convergence culture factor transmedia storytelling convergence culture introduces stories arguments form media transmedia storytelling defined jenkins process integral elements fiction dispersed systematically multiple delivery channels purpose creating unified coordinated entertainment experience ideally medium unique contribution unfolding story instance matrix starts film instalments convergence culture constrained form story told movies animated shorts video games comic books media platforms online wiki created track story expanding canon fan films discussion forums social media form expanding matrix online platforms convergence culture started film expanded type media bert evil images bert bin laden appeared cnn coverage anti american protest september 11 association bert bin laden links ignacio photoshop project fun convergence culture participatory culture average people access types media fans consumers participate creation circulation content companies advantage search feedback customers social media sharing sites youtube marketing entertainment convergence culture interact news access news multiple levels media radio newspapers internet internet people report news independent broadcasts multitude perspectives accessed people convergence news gathered larger scale instance photographs torture abu ghraib photos shared eventually posted internet led breaking news story newspapers internet media scholar henry jenkins media convergence participatory culture cell phone convergence social function cell phone technology converges technological advancement cell phones function phone internet connection video players mp3 players gaming camera rok sako rok lo 2004 screened delhi bangalore hyderabad mumbai india edge enabled mobile phones live video streaming facility social movements integration social movements cyberspace potential strategies social movements age media convergence neutrality internet design power structure internet designed avoid discrimination applications mexico zapatistas campaign land rights influential age manuel castells defines zapatistas informational guerrilla movement zapatista uprising marginalized popular press zapatistas construct grassroots decentralized social movement internet zapatistas observed cleaver continues organize social movements global scale sophisticated webmetric analysis maps links websites seeks identify nodal network demonstrates zapatistas binds hundreds global ngos majority social movement organized zapatistas targets campaign global neoliberalism successful social movement online support protest street papic wrote social media instigate revolutions discusses social media social movements organization online offline study journalism age media convergence survey undergraduates’ technology news habits concluded focus respondents reported actively engage media convergence viewing slide listening podcast accompanied online story based news consumption students interactive features online news media convergence appealing examples regulation voip federal communications commission fcc decide regulate voip internet telephony convergent technology growing changing addition growth fcc tentative set regulation voip promote competition telecommunication industry telecommunication service service growth convergent media historically telecommunication subject regulation california concerned increasing popularity internet telephony eventually obliterate funding universal service fund attempt assert traditional role common carrier oversight technology meisel needles 2005 suggests fcc federal courts regulatory bodies access charges impact speed internet telephony market grows hand fcc hesitant regulate convergent technology voip feature telecommunication fixed model build legislature hand regulations service internet replaced telecommunication service affect entire economy convergence raised debates classification telecommunications services lines data transmission voice media transmission eroded regulators faced task classify converging segments telecommunication sector traditionally telecommunication regulation focused operation physical infrastructure networks access network content regulated telecommunication content considered private contrast film television regulated contents rating regulates distribution audience regulation promoted industry bogle senior persuaded entire industry pay percent levy advertising money authority advertising standards authority government setting legislature media industry premises regulate media communications concerns change media media medium features characteristics internet medium manipulates form – voice data video regulation media radio television emphasized regulation scarcity channels internet hand limitless capacity design communication encourages interactivity content producers audiences fundamental basis classification regulation terms market failure public blackman electronic frontier foundation eff founded 1990 profit organization defend speech privacy innovation consumer rights dmca digital millennium copyright regulates protect digital content producers consumers emerging trends communications network neutrality emerged issue wu lessig 2004 set reasons adapt neutral network model networks neutral network eliminates risk future discrimination providing incentive invest broadband application development neutral network facilitates fair competition application bias applications reasons coincide fcc stimulate investment enhance innovation broadband technology services regulatory efforts deregulation privatization liberalization infrastructure barrier negative factor achieving effective competition kim argues ip dissociates telephony application infrastructure internet telephony forefront dissociation neutrality network fair competition fcc charman michael powell inception internet designed creating prevent government corporation controlling designed defeat discrimination users ideas technologies reasons shin concludes regulator regulate application infrastructure separately layered model proposed solum chug sicker nakahata sicker warbach witt supported layered model regulate telecommunications industry emergence convergence services researchers layered approach agree emergence convergent technology create challenges ambiguities regulations key layered model reflects reality network architecture current business model layered model consists access layer – physical infrastructure resides copper wires cable fiber optic transport layer – provider service application layer – interface data users content layer – layer users convergence technologies layered policy model implication regulating future communications shin combines layered model network neutrality principle regulate future convergent media industry messaging combination services include integrate sms voice voice sms providers include bubble motion jott kirusa spinvox operators launched services combine sms mobile instant messaging mim presence landline services exist subscribers send messages landline phone charged standard rates messages converted spoken language service popular america fixed mobile inbound sms converging enable reception formats sms voice mms companies including consumer companies media giants consumers contact voice sms mms ivr video digit april 2008 o2 launched voice enabled shortcodes adding voice functionality digit codes sms type convergence helpful media companies broadcasters enterprises centres desks develop consistent contact strategy consumer sms popular relevant include messaging contact possibility consumers avoid multiple voice calls sms simple merge reception formats consumer message received mobile mobile service provisions refers ability purchase mobile phone services ability wirelessly access voice internet audio video advancements wimax leading edge technologies provide ability transfer wireless link variety speeds distances sight conditions multi play telecommunications multi play marketing term describing provision telecommunication services internet access television telephone mobile phone service organisations traditionally offered services multi play catch phrase terms triple play voice video data quadruple play voice video data wireless specific meaning dual play service marketing term provisioning services speed internet digital subscriber telephone service single broadband connection phone companies speed internet cable modem service single broadband connection cable companies convergence concern underlying communication infrastructure triple play service communication services packaged allowing consumers purchase internet telephony subscription broadband cable market transforming pay providers aggressively considered telco space customer expectations risen consumer business customers alike seek rich content multi devices networked products converged services including demand video digital speed internet voip wireless applications uncharted territory broadband companies quadruple play service combines triple play service broadband internet access television telephone wireless service provisions service set humorously referred fantastic grand slam fundamental aspect quadruple play awaited broadband convergence players involved largest global service providers connect wires cables startup service providers opportunities attractive telecom services – telephony cable television wireless—could combine industries merger ntl telewest virgin mobile company offering quadruple play cable television broadband internet telephone mobile telephone services network 21st century lan convergence rapidly integrated routers wireless access dsl modems users hard identify box connect computers internet service term combined device residential gateway 
209673	computerscience	vladimir naumovich vapnik born december 1936 main developers vapnik–chervonenkis theory statistical learning inventor support vector machine method support vector clustering algorithm life education vladimir vapnik born soviet union received master degree mathematics uzbek university samarkand uzbek ssr 1958 statistics institute control sciences moscow 1964 institute 1961 1990 head science department academic career 1990 vladimir vapnik moved usa joined adaptive systems department bell labs holmdel jersey vapnik colleagues developed theory support vector machine demonstrated performance machine learning community including handwriting recognition image processing department laboratories spun lucent technologies 1996 2000 vapnik neural networks expert hava siegelmann developed support vector clustering enabled algorithm categorize inputs labels ubiquitous data clustering applications vapnik left 2002 joined nec laboratories princeton jersey machine learning holds professor science statistics position royal holloway university london 1995 position professor science columbia university york city 2003 february 2017 115 publications cited close 180 000 times book statistical learning theory cited close 60 000 times november 25 2014 vapnik joined facebook longtime collaborators jason weston ronan collobert yann lecun 2016 joined vencore labs honors awards vladimir vapnik inducted national academy engineering 2006 received 2005 gabor award 2008 paris kanellakis award 2010 neural networks pioneer award 2012 ieee frank rosenblatt award 2012 benjamin franklin medal cognitive science franklin institute 2013 prize nec foundation 2014 kampé fériet award 2017 ieee john von neumann medal 2018 received kolmogorov medal university london delivered kolmogorov lecture 
219558	computerscience	network segment portion network nature extent segment depends nature network device devices interconnect stations ethernet defining ieee 802 standards ethernet network segment electrical connection networked devices shared medium original 10base5 10base2 ethernet varieties segment correspond single coax cable devices tapped evolution ethernet multiple network segments connected repeaters rule mbit ethernet form larger collision domain twisted pair ethernet electrical segments joined repeaters repeater hubs varieties ethernet corresponds extent osi layer network equivalent collision domain rule applies collision domain switches bridges multiple layer segments combined common layer segment nodes communicate mac addressing broadcasts layer segment equivalent broadcast domain traffic layer segment separated virtually distinct partitions virtual lans vlans vlan forms logical layer segment layer segment layer segment ip network called subnetwork formed nodes sharing network prefix defined ip addresses network mask communication layer subnets requires router hosts subnet communicate layer segment connects subnetwork corresponds underlying layer segment multiple subnets single layer segment 
220314	computerscience	science instruction pipelining technique implementing instruction level parallelism single processor pipelining attempts processor busy instruction dividing incoming instructions series sequential steps eponymous pipeline performed processor units instructions processed parallel faster cpu throughput clock rate increase latency overhead pipelining process concept motivation central processing units cpus driven clock clock pulse logic cpu directs successive pulses perform sequence reasons entire execution machine instruction happen pipelining effects happen time dependent steps instruction clock pulse latches register calculation time stable outputs register calculation complete reading instruction memory unit time instruction writes result memory unit steps dependent steps varies machine architecture pipeline deeper dependent steps step implemented simpler circuitry processor clock faster pipelines called superpipelines processor pipelined fetch instruction cycle instructions conditions require delays inhibit fetching instructions processor pipelined history seminal pipelining illiac project ibm stretch project simple version earlier z1 1939 z3 1941 pipelining earnest late 1970s supercomputers vector processors array processors supercomputers cyber series built control data corporation main architect seymour cray headed cray cray developed xmp supercomputers pipelining multiply add subtract functions star technologies parallelism pipelined functions parallel developed roger chen 1984 star technologies pipelined divide circuit developed james bradley mid 1980s pipelining companies pipelining limited supercomputers 1976 amdahl corporation 470 series purpose mainframe step pipeline patented branch prediction circuit pipelining innovations implemented instruction unit microprocessors hazards model sequential execution assumes instruction completes assumption true pipelined processor situation expected result problematic hazard imagine register instructions hypothetical processor processor steps listed initial illustration instruction fetched time execution complete t5 instruction fetched t2 complete t6 instruction deposit incremented r5 step register write t5 instruction r5 r6 step instruction decode register fetch time t3 instruction incremented code invokes hazard writing programs compiled language raise concerns compiler designed generate machine code avoids hazards workarounds dsp risc processors documentation advises programmers avoid dependencies adjacent adjacent instructions called delay slots declares instruction desired processor counter intuitively unincremented declares undefined programmer unrelated processor ensure correct programmer insert nops code partly negating advantages pipelining solutions pipelined processors commonly techniques expected programmer assumes instruction completes branches branch normal instruction sequence involves hazard processor branch single time cycle pipeline continue fetching instructions sequentially instructions allowed programmer diverted control program conditional branch problematic processor branch depending calculation occurred processors stall attempt branch prediction execute program sequences eager execution assuming branch discarding pertains incorrect guess processor implementation branch prediction correct predictions minimize performance penalty branching branches predicted create processor flushing pipeline incorrect code path begun execution resuming execution correct location programs written pipelined processor deliberately avoid branching minimize loss speed programmer handle usual sequential execution branch detecting unusual programs gcov analyze code coverage programmer measure branches executed gain insight optimize code illustrated generic pipeline stages fetch decode execute write gray box list instructions waiting executed gray box list instructions execution completed middle white box pipeline execution pipeline bubble pipelined processor deal hazards stalling creating bubble pipeline cycles illustration cycle processor decode purple instruction processor determines decoding depends produced execution green instruction green instruction proceed execute stage write stage scheduled purple instruction stalled cycle fetch stage blue instruction fetched cycle stalled cycle red instruction bubble blue ovals illustration processor decode circuitry idle cycle execute circuitry idle cycle write circuitry idle cycle bubble moves pipeline cycle normal execution resumes cycle late cycles cycle completely execute instructions colors 
222349	computerscience	flynn taxonomy classification architectures proposed michael flynn 1966 classification stuck tool design modern processors functionalities rise multiprocessing central processing units cpus multiprogramming context evolved extension classification classifications classifications defined flynn based concurrent instruction control streams data streams architecture single instruction stream single data stream sisd sequential exploits parallelism instruction data streams single control unit fetches single instruction stream memory generates control signals direct single processing element operate single data stream ds operation time examples sisd architecture traditional uniprocessor machines personal computers pcs 2010 pcs multiple cores mainframe computers single instruction stream multiple data streams simd single instruction operates multiple data streams instructions executed sequentially pipelining parallel multiple functional units single instruction multiple threads simt execution model parallel computing single instruction multiple data simd combined multithreading distinct classification flynn taxonomy subset simd nvidia commonly term marketing materials argues supposed novelty nvidia architecture multiple instruction streams single data stream misd multiple instructions operate data stream uncommon architecture fault tolerance heterogeneous systems operate data stream agree result examples include space shuttle flight control multiple instruction streams multiple data streams mimd multiple autonomous processors simultaneously executing instructions data mimd architectures include multi core superscalar processors distributed systems shared memory space distributed memory space diagram comparing classifications architectures visually processing unit pu uni core multi core divisions top500 supercomputers based mimd architecture divide mimd category categories subdivisions considered single program multiple data streams spmd multiple autonomous processors simultaneously executing program independent lockstep simd imposes data termed single process multiple data terminology spmd technically incorrect spmd parallel execution model assumes multiple cooperating processors executing program spmd common style parallel programming spmd model term proposed frederica darema gregory pfister manager rp3 project darema rp3 team multiple programs multiple data streams mpmd multiple autonomous processors simultaneously operating independent programs typically systems pick node host explicit host node programming model manager manager worker strategy runs program farms data nodes program nodes return manager sony playstation game console spu ppu processor 
222573	computerscience	voxel represents regular grid dimensional space pixels bitmap voxels typically position coordinates explicitly encoded values rendering systems infer position voxel based position relative voxels position data structure single volumetric image contrast pixels voxels polygons explicitly represented coordinates vertices direct consequence difference polygons efficiently represent simple 3d structures lots homogeneously filled space voxels excel representing regularly sampled spaces homogeneously filled voxels frequently visualization analysis medical scientific data gis volumetric displays voxels resolution display 512×512×512 voxels word voxel originated analogy word pixel vo representing volume el representing element formations el   element include pixel texel rendering volume voxels visualized direct volume rendering extraction polygon iso surfaces follow contours threshold values marching cubes algorithm isosurface extraction methods exist ray tracing ray casting rasterisation applied voxel data 2d raster graphics depict monitor incremental error rasterisation technique voxels involves raster graphics simply raytraces pixel display scene tracking error term determine step typical implementation raytrace pixel display starting screen buffer voxel reached display buffer overriding previous connected previous screen interpolating color values major downside voxel rasterization transformation applied severe aliasing advantage ability rasterise cheap integer calculations cpu hardware acceleration outcast 1990s video games employed graphics technique effects reflection bump mapping terrain rendering outcast graphics engine combination ray casting heightmap engine render landscape texture mapping polygon engine render objects engine programming games credits manual subsections graphics landscape engine polygon engine water shadows engine special effects engine outcast cited forerunner voxel technology misleading game model dimensional volumes voxels models ground surface voxels ground decorated objects modeled texture mapped polygons outcast developed term voxel engine applied games commonly referred ray casting engine voxelspace engine engine technology game landscape engine referred voxels engine engine purely software based rely hardware acceleration 3d graphics card john carmack experimented voxels quake iii engine cited carmack lack graphics cards designed rendering requiring software rendered comanche commercial flight simulation based voxel technology novalogic proprietary voxel space engine developed company kyle freeman written assembly language create landscapes rendering technique allowed detailed realistic terrain compared simulations based vector graphics time voxel data voxel represents single sample data regularly spaced dimensional grid data consist single piece data opacity multiple pieces data color addition opacity voxel represents single grid volume space voxel represented voxel based dataset depending type data intended dataset missing reconstructed approximated interpolation voxel represent properties ct scans values hounsfield units opacity material rays types acquired mri ultrasound voxels multiple scalar values essentially vector tensor data ultrasound scans mode doppler data density volumetric flow rate captured separate channels data relating voxel positions voxels provide benefit precision depth reality typically data sets unwieldy manage bandwidth common computers efficient compression manipulation data files interactive visualization enabled consumer market computers values 3d rendering surface normal vector color common voxels include volumetric imaging medicine representation terrain games simulations voxel terrain heightmap ability represent overhangs caves arches 3d terrain features concave features represented heightmap layer data represented leaving filled volume caves underside arches overhangs voxel editors scientific volume visualization require modifying actual voxel data voxel editors create art 3d pixel art models voxel based games editors focused single approach voxel editing mix approaches common approaches voxel editors games game developers house editors released public games publicly editors created players purpose voxel editors voxel editors tied specific games engines alternatives complements traditional 3d vector modeling extensions generalization voxel doxel dynamic voxel 4d dataset image sequence represents 3d space dimension time image 100×100×100×100 doxels series 100 frames 100×100×100 volume image equivalent 3d image 2d cross image frame storage manipulation data requires amounts memory representation analysis spacetime systems 
224786	computerscience	std 1750a 1750a formal definition 16 bit instruction set architecture isa including required optional components military standard document std 1750a 1980 addition core isa definition defines optional instructions fpu mmu importantly standard define implementation details 1750a processor internals 1750a supports 216 16 bit memory core standard standard defines optional memory management unit 220 16 bit memory 512 mapping registers space defining separate instruction data spaces keyed memory access control instructions 16 bits 16 bit extension standard 16 purpose 16 bit registers 15 registers 15 registers registers 12 15 base registers 16 registers stack pointer sjs urs instructions stack jump subroutine unstack return subroutine register 15 stack pointer pshm popm instructions push multiple pop multiple instructions 16 32 bit binary arithmetic 32 48 bit floating instructions xio vio separate 216 16 bit word address space specialized bus implementations std 1750a define implementation details 1750a products wide variety companies form component board level offerings implemented myriad technologies advanced exotic respective periods gaas ecl sos 1750a systems offer levels radiation hazardous environment protection suited military aviation space applications examples std 1750a implementations include programming processors based std 1750a programmed jovial level programming language defined united department defense derived algol 58 lesser extent ada compilers cleanscape xtc 1750a versions gnu gcc support std 1750a declared obsolete version removed subsequent versions addition ddc score integrated development environment ide ada95 compilers tads tartan ada development ada83 development environment targeting processors based std 1750a deployments air force defined standard common computing architecture reduce costs software systems military computing includes embedded tasks aircraft missile control systems mundane military computing advantages concept recognized usaf 1750a numerous organizations european space agency nasa israeli aircraft industries projects academia examples military aircraft 1750a include space space rated implementations 1750a types computers applicable deep space applications spacecraft 1750a 
230359	computerscience	embedded operating operating embedded systems type operating typically designed resource efficient reliable resource efficiency cost losing functionality granularity larger operating systems provide including functions specialized applications depending method multitasking type os frequently considered real time operating rtos hardware running embedded operating limited resources ram rom embedded design operating systems narrow scope tailored specific application achieve desired operation constraints advantage processing power cpu software developers write critical code assembly machine efficient language result gains speed determinism cost portability maintainability times embedded operating systems written portable languages difference embedded operating systems desktop operating systems application including operating statically linked single executable image desktop operating embedded operating load execute applications single application 
230834	computerscience	captcha acronym completely automated public turing computers humans type challenge–response computing determine user human term coined 2003 luis von ahn manuel blum nicholas hopper john langford common type captcha displayed version invented 1997 parallel consisted mark lillibridge martin abadi krishna bharat andrei broder consisted eran reshef gili raanan eilon solan form captcha requires user type letters distorted image addition obscured sequence letters digits appears screen administered contrast standard turing administered human captcha reverse turing user identification procedure received criticisms disabled people people feel everyday slowed distorted difficult read takes average person solve typical captcha history days internet users illegible computers people hackers posting sensitive topics internet forums automatically monitored keywords circumvent filters replace word alike characters numerous variants filter detect leetspeak earliest commercial captchas gausebeck levchin 2000 idrive protect signup captcha prepared file patent seemingly technique 2001 paypal tests fraud prevention strategy humans retype distorted programs difficulty recognizing paypal cofounder cto max levchin helped commercialize popular deployment captcha technology recaptcha acquired google 2009 addition preventing bot fraud users google recaptcha captcha technology digitize archives york times books google books 2011 google image based captcha improve driverless car data set identifying objects trees crosswalks critics unwitting participation user advancing google commercial response competitors emerged alternative models including compensation host user effort inventorship claims teams people claimed invent captchas team consists mark lillibridge martín abadi krishna bharat andrei broder captchas 1997 altavista prevent bots adding urls search engine images resistant ocr attack team looked manual brother scanner recommendations improving ocr typefaces plain backgrounds team created puzzles attempting simulate manual claimed bad ocr team claim inventorship captchas consists luis von ahn manuel blum nicholas hopper john langford captchas 2003 publication subsequently received coverage popular press notion captcha covers program distinguish humans computers including examples captchas controversy inventorship resolved existence 1997 priority patent application eran reshef gili raanan eilon solan sanctum application security firewall patent application details based applying human advantage applying sensory cognitive skills solving simple prove extremely hard software skills include limited processing sensory identification objects letters noisy graphical environment 1998 patent lillibridge abadi bharat broder patents predate publications term captcha ideas precisely depict graphical captchas characteristics captchas definition automated requiring human maintenance intervention administer producing benefits cost reliability algorithm create captcha public covered patent demonstrate breaking requires solution difficult field artificial intelligence discovery secret algorithm reverse engineering modern based captchas designed require simultaneous separate abilities—invariant recognition segmentation parsing—to correctly complete task consistency poses challenge isolation presence time captchas difficult solve computers humans excel type task segmentation recognition separate processes understanding image process person individual understands letter captcha individual understands contours melds contours letter additionally human brain capable dynamic thinking based context multiple explanations alive pick explanation input based contextual clues fooled variations letters relation security reasons captchas serve benchmark task artificial intelligence technologies article ahn blum langford program passes tests generated captcha solve hard unsolved argue advantages hard security twofold unsolved remains reliable method distinguishing humans computers solved difficult resolved image based captchas capable accurately completing task exploiting flaws captcha design solved developing capable complex object recognition scenes accessibility captchas based reading visual perception tasks prevent blind visually impaired users accessing protected resource captchas visual hard artificial intelligence speech recognition basis captcha implementations captchas permit users opt audio captcha 2011 paper demonstrated technique defeating popular schemes time sighted users blind users color blind people color visual captchas captchas designed unreadable machines common assistive technology tools screen readers interpret sites captchas initial registration process login challenge completely block access jurisdictions owners targets litigation captchas discriminate people disabilities captcha incompatible 508 united sight difficulties choose identify word read providing audio captcha blind users read hinders blind deaf sense people 60 vision hearing impairments 23 000 people vision hearing impairments national technical assistance consortium children adults deaf blind ntac deafblind children usa increased 516 471 period 2004 2012 gallaudet university quotes 1980 2007 estimates 35 000 deafblind adults usa deafblind population estimates depend heavily degree impairment definition captcha excludes individuals subsets common based services paypal gmail orkut yahoo forum weblog systems perfectly sighted individuals generations graphical captchas designed overcome sophisticated recognition software hard impossible read method improving captcha ease proposed protectwebform called smart captcha developers advise combine captcha javascript support hard spam robots parse execute javascript simple script fills captcha fields hides image field human eyes proposed alternative method involves displaying user simple mathematical equation requiring user enter solution verification easier defeat software suitable scenarios graphical imagery provide level accessibility blind users image based captchas referred maptchas mathematical difficult users cognitive disorder kinds challenges require understanding meaning logic puzzle trivia question instructions create password captcha resistance countermeasures circumvention approaches defeating captchas cheap human labor recognize exploiting bugs implementation attacker completely bypass captcha finally machine learning build automated solver google fraud czar shuman ghosemajumder numerous services solve captchas automatically machine learning based attacks earliest iterations systematic methodology designing evaluating captchas result instances captchas fixed automated tasks constructed educated guesses segmentation captchas contained limited sets easier game mistake relying heavily background confusion image algorithms created complete task exploiting design flaws methods proved brittle slight captcha easily thwart modern captchas recaptcha rely fixed patterns variations characters collapsed segmentation impossible iterations successful warding automated tasks october 2013 artificial intelligence company vicarious claimed developed generic captcha solving algorithm solve modern captchas character recognition rates 90 luis von ahn pioneer captcha founder recaptcha expressed skepticism stating hard impressed months 50 claims vicarious 2003 august 2014 usenix woot conference bursztein generic captcha solving algorithm based reinforcement learning demonstrated efficiency popular captcha schemas concluded distortion based captchas schemes considered insecure moving october 2018 acm ccs 18 conference deep learning based attack solve 11 captcha schemes 50 popular 2018 success rate effective captcha solver trained 500 real captchas launch attack captcha scheme cheap unwitting human labor subvert captchas relaying sweatshop human operators employed decode captchas 2005 paper w3c stated operator easily verify hundreds hour 2010 university california san diego conducted scale study captcha farms retail price solving captchas 000 technique consists script post target captcha captcha owned attacker unsuspecting humans visit correctly solve short script controversy economic viability attack outsourcing paid services multiple internet companies 2captcha deathbycaptcha offer human machine captcha solving services 50 usd 1000 solved captchas services offer apis libraries enable users integrate captcha circumvention tools captchas designed block insecure implementation howard yeend identified implementation issues designed captcha systems software generating captcha client validation server user required identify rendered client users modify client display rendered captcha systems md5 hashes stored client leave captcha vulnerable brute force attack notable attacks notable attacks captchas schemas include alternative captchas schemas demonstration distortion based captchas vulnerable machine learning based attacks researchers proposed alternatives including image recognition captchas require users identify simple objects images argument favor schemes tasks object recognition typically complex perform recognition resilient machine learning based attacks notable alternative captcha schemas 
233488	computerscience	machine learning scientific study algorithms statistical models systems effectively perform specific task explicit instructions relying models inference subset artificial intelligence machine learning algorithms build mathematical model sample data training data predictions decisions explicitly programmed perform task machine learning algorithms applications email filtering detection network intruders vision infeasible develop algorithm specific instructions performing task machine learning closely computational statistics focuses predictions computers study mathematical optimization delivers methods theory application domains field machine learning data mining field study machine learning focuses exploratory data analysis unsupervised learning application business machine learning referred predictive analytics overview machine learning machine learning coined 1959 arthur samuel tom mitchell quoted formal definition algorithms studied machine learning field program learn experience respect class tasks performance measure performance tasks measured improves experience definition tasks machine learning concerned offers fundamentally operational definition defining field cognitive terms alan turing proposal paper computing machinery intelligence question machines replaced question machines thinking entities turing proposal characteristics possessed thinking machine implications constructing exposed machine learning tasks machine learning tasks classified broad categories supervised learning algorithm builds mathematical model set data inputs desired outputs task determining image contained object training data supervised learning algorithm include images object input image label output designating contained object special input partially restricted special feedback semi supervised learning algorithms develop mathematical models incomplete training data portion sample inputs missing desired output classification algorithms regression algorithms types supervised learning classification algorithms outputs restricted limited set values classification algorithm filters emails input incoming email output folder file email algorithm identifies spam emails output prediction spam spam represented boolean values true false regression algorithms named continuous outputs meaning range examples continuous temperature price object unsupervised learning algorithm builds mathematical model set data inputs desired outputs unsupervised learning algorithms structure data clustering data unsupervised learning discover patterns data inputs categories feature learning dimensionality reduction process reducing features inputs set data active learning algorithms access desired outputs training labels limited set inputs based budget optimize choice inputs acquire training labels interactively human user labeling reinforcement learning algorithms feedback form positive negative reinforcement dynamic environment autonomous vehicles learning play game human opponent specialized algorithms machine learning include topic modeling program set natural language documents documents cover topics machine learning algorithms unobservable probability density function density estimation meta learning algorithms learn inductive bias based previous experience developmental robotics robot learning algorithms generate sequences learning experiences curriculum cumulatively acquire skills guided exploration social interaction humans robots guidance mechanisms active learning maturation motor synergies imitation history relationships fields arthur samuel american pioneer field gaming artificial intelligence coined term machine learning 1959 ibm scientific endeavour machine learning grew quest artificial intelligence days academic discipline researchers machines learn data attempted approach symbolic methods termed neural networks perceptrons models reinventions generalized linear models statistics probabilistic reasoning employed automated medical diagnosis increasing emphasis logical knowledge based approach caused rift machine learning probabilistic systems plagued theoretical practical data acquisition representation 1980 expert systems dominate statistics favor symbolic knowledge based learning continue leading inductive logic programming statistical field proper pattern recognition retrieval neural networks abandoned science time continued field connectionism researchers disciplines including hopfield rumelhart hinton main success mid 1980s reinvention backpropagation machine learning reorganized separate field started flourish 1990s field changed goal achieving artificial intelligence tackling solvable practical nature shifted focus symbolic approaches inherited methods models borrowed statistics probability theory benefited increasing availability digitized ability distribute internet relation data mining machine learning data mining employ methods overlap machine learning focuses prediction based properties learned training data data mining focuses discovery unknown properties data analysis step knowledge discovery databases data mining machine learning methods goals hand machine learning employs data mining methods unsupervised learning preprocessing step improve learner accuracy confusion communities separate conferences separate journals ecml pkdd major exception basic assumptions machine learning performance evaluated respect ability reproduce knowledge knowledge discovery data mining kdd key task discovery unknown knowledge evaluated respect knowledge uninformed unsupervised method easily outperformed supervised methods typical kdd task supervised methods unavailability training data relation optimization machine learning intimate ties optimization learning formulated minimization loss function training set examples loss functions express discrepancy predictions model trained actual instances classification assign label instances models trained correctly predict pre assigned labels set examples difference fields arises goal generalization optimization algorithms minimize loss training set machine learning concerned minimizing loss unseen samples relation statistics machine learning statistics closely fields michael jordan ideas machine learning methodological principles theoretical tools pre history statistics suggested term data science placeholder field leo breiman distinguished statistical modelling paradigms data model algorithmic model algorithmic model machine learning algorithms random forest statisticians methods machine learning leading combined field statistical learning theory core objective learner generalize experience generalization context ability learning machine perform accurately unseen examples tasks experienced learning data set training examples unknown probability distribution considered representative space occurrences learner build model space enables produce accurate predictions computational analysis machine learning algorithms performance branch theoretical science computational learning theory training sets finite future uncertain learning theory yield guarantees performance algorithms probabilistic bounds performance common bias–variance decomposition quantify generalization error performance context generalization complexity hypothesis match complexity function underlying data hypothesis complex function model underfit data complexity model increased response training error decreases hypothesis complex model subject overfitting generalization poorer addition performance bounds computational learning theorists study time complexity feasibility learning computational learning theory computation considered feasible polynomial time kinds time complexity positive class functions learned polynomial time negative classes learned polynomial time approaches types learning algorithms types machine learning algorithms approach type data input output type task intended solve supervised semi supervised learning supervised learning algorithms build mathematical model set data inputs desired outputs data training data consists set training examples training inputs desired output supervisory signal semi supervised learning algorithms training examples missing desired output mathematical model training represented array vector training data matrix iterative optimization objective function supervised learning algorithms learn function predict output inputs optimal function algorithm correctly determine output inputs training data algorithm improves accuracy outputs predictions time learned perform task supervised learning algorithms include classification regression classification algorithms outputs restricted limited set values regression algorithms outputs numerical range similarity learning supervised machine learning closely regression classification goal learn examples similarity function measures objects applications ranking recommendation systems visual identity tracking verification speaker verification unsupervised learning unsupervised learning algorithms set data inputs structure data clustering data algorithms learn data labeled classified categorized responding feedback unsupervised learning algorithms identify commonalities data react based presence absence commonalities piece data central application unsupervised learning field density estimation statistics unsupervised learning encompasses domains involving summarizing explaining data features cluster analysis assignment set observations subsets called clusters observations cluster predesignated criteria observations drawn clusters dissimilar clustering techniques assumptions structure data defined similarity metric evaluated internal compactness similarity cluster separation difference clusters methods based estimated density graph connectivity reinforcement learning reinforcement learning machine learning concerned software agents actions environment maximize notion cumulative reward generality field studied disciplines game theory control theory operations theory simulation based optimization multi agent systems swarm intelligence statistics genetic algorithms machine learning environment typically represented markov decision process mdp reinforcement learning algorithms dynamic programming techniques reinforcement learning algorithms assume knowledge exact mathematical model mdp exact models infeasible reinforcement learning algorithms autonomous vehicles learning play game human opponent processes techniques processes techniques methods applied types machine learning algorithms enhance performance feature learning learning algorithms aim discovering representations inputs training classic examples include principal components analysis cluster analysis feature learning algorithms called representation learning algorithms attempt preserve input transform pre processing step performing classification predictions technique reconstruction inputs coming unknown data generating distribution faithful configurations implausible distribution replaces manual feature engineering machine learn features perform specific task feature learning supervised unsupervised supervised feature learning features learned labeled input data examples include artificial neural networks multilayer perceptrons supervised dictionary learning unsupervised feature learning features learned unlabeled input data examples include dictionary learning independent component analysis autoencoders matrix factorization forms clustering manifold learning algorithms attempt constraint learned representation dimensional sparse coding algorithms attempt constraint learned representation sparse meaning mathematical model zeros multilinear subspace learning algorithms aim learn dimensional representations tensor representations multidimensional data reshaping dimensional vectors deep learning algorithms discover multiple levels representation hierarchy features level abstract features defined terms generating level features argued intelligent machine learns representation disentangles underlying factors variation explain observed data feature learning motivated machine learning tasks classification require input mathematically computationally convenient process real data images video sensory data yielded attempts algorithmically define specific features alternative discover features representations examination relying explicit algorithms sparse dictionary learning sparse dictionary learning feature learning method training represented linear combination basis functions assumed sparse matrix method hard difficult solve popular heuristic method sparse dictionary learning svd algorithm sparse dictionary learning applied contexts classification determine classes unseen training belongs dictionary class built training class sparsely represented dictionary sparse dictionary learning applied image noising key idea clean image patch sparsely represented image dictionary noise anomaly detection data mining anomaly detection outlier detection identification rare items events observations raise suspicions differing majority data typically anomalous items represent issue bank fraud structural defect medical errors anomalies referred outliers novelties noise deviations exceptions context abuse network intrusion detection objects rare objects unexpected bursts activity pattern adhere common statistical definition outlier rare object outlier detection methods unsupervised algorithms fail data aggregated appropriately cluster analysis algorithm detect micro clusters formed patterns broad categories anomaly detection techniques exist unsupervised anomaly detection techniques detect anomalies unlabeled data set assumption majority instances data set normal instances fit remainder data set supervised anomaly detection techniques require data set labeled normal abnormal involves training classifier key difference statistical classification inherent unbalanced nature outlier detection semi supervised anomaly detection techniques construct model representing normal behavior normal training data set likelihood instance generated model decision trees decision tree learning decision tree predictive model observations item represented branches conclusions item target represented leaves predictive modeling approaches statistics data mining machine learning tree models target variable discrete set values called classification trees tree structures leaves represent class labels branches represent conjunctions features lead class labels decision trees target variable continuous values typically real called regression trees decision analysis decision tree visually explicitly represent decisions decision data mining decision tree describes data classification tree input decision association rules association rule learning rule based machine learning method discovering relationships variables databases intended identify strong rules discovered databases measure interestingness rule based approach generates rules analyzes data ultimate goal assuming set data machine mimic human brain’s feature extraction abstract association capabilities data categorized rule based machine learning term machine learning method identifies learns evolves rules store manipulate apply knowledge defining characteristic rule based machine learning algorithm identification utilization set relational rules collectively represent knowledge captured contrast machine learning algorithms commonly identify singular model universally applied instance prediction rule based machine learning approaches include learning classifier systems association rule learning artificial immune systems based concept strong rules rakesh agrawal tomasz imieliński arun swami introduced association rules discovering regularities products scale transaction data recorded sale pos systems supermarkets rule sales data supermarket customer buys onions potatoes hamburger meat basis decisions marketing activities promotional pricing product placements addition market basket analysis association rules employed application including usage mining intrusion detection continuous production bioinformatics contrast sequence mining association rule learning typically items transaction transactions learning classifier systems lcs family rule based machine learning algorithms combine discovery component typically genetic algorithm learning component performing supervised learning reinforcement learning unsupervised learning seek identify set context dependent rules collectively store apply knowledge piecewise manner predictions inductive logic programming ilp approach rule learning logic programming uniform representation input examples background knowledge hypotheses encoding background knowledge set examples represented logical database ilp derive hypothesized logic program entails positive negative examples inductive programming field considers programming languages representing hypotheses logic programming functional programs inductive logic programming bioinformatics natural language processing gordon plotkin ehud shapiro laid initial theoretical foundation inductive machine learning logical setting shapiro built implementation model inference 1981 prolog program inductively inferred logic programs positive negative examples term inductive refers philosophical induction suggesting theory explain observed mathematical induction proving property set models artificial neural networks artificial neural networks anns connectionist systems computing systems vaguely inspired biological neural networks constitute animal brains neural network algorithm framework machine learning algorithms process complex data inputs systems learn perform tasks examples programmed task specific rules ann model based collection connected units nodes called artificial neurons loosely model neurons biological brain connection synapses biological brain transmit signal artificial neuron artificial neuron receives signal process signal additional artificial neurons connected common ann implementations signal connection artificial neurons real output artificial neuron computed linear function sum inputs connections artificial neurons called edges artificial neurons edges typically weight adjusts learning proceeds weight increases decreases strength signal connection artificial neurons threshold signal aggregate signal crosses threshold typically artificial neurons aggregated layers layers perform kinds transformations inputs signals travel layer input layer layer output layer traversing layers multiple times original goal ann approach solve human brain time attention moved performing specific tasks leading deviations biology artificial neural networks variety tasks including vision speech recognition machine translation social network filtering playing board video games medical diagnosis deep learning consists multiple hidden layers artificial neural network approach model human brain processes light sound vision hearing successful applications deep learning vision speech recognition support vector machines support vector machines svms support vector networks set supervised learning methods classification regression set training examples marked belonging categories svm training algorithm builds model predicts falls category svm training algorithm probabilistic binary linear classifier methods platt scaling exist svm probabilistic classification setting addition performing linear classification svms efficiently perform linear classification called kernel trick implicitly mapping inputs dimensional feature spaces bayesian networks bayesian network belief network directed acyclic graphical model probabilistic graphical model represents set random variables conditional independence directed acyclic graph dag bayesian network represent probabilistic relationships diseases symptoms symptoms network compute probabilities presence diseases efficient algorithms exist perform inference learning bayesian networks model sequences variables speech signals protein sequences called dynamic bayesian networks generalizations bayesian networks represent solve decision uncertainty called influence diagrams genetic algorithms genetic algorithm search algorithm heuristic technique mimics process natural selection methods mutation crossover generate genotypes hope finding solutions machine learning genetic algorithms 1980s 1990s conversely machine learning techniques improve performance genetic evolutionary algorithms applications applications machine learning include 2006 online movie company netflix held netflix prize competition program predict user preferences improve accuracy existing cinematch movie recommendation algorithm joint team researchers labs collaboration teams chaos pragmatic theory built ensemble model win grand prize 2009 1 million shortly prize awarded netflix realized viewers ratings indicators viewing patterns recommendation changed recommendation engine 2010 wall street journal wrote firm rebellion machine learning predict financial crisis 2012 founder sun microsystems vinod khosla predicted 80 medical doctors jobs lost decades automated machine learning medical diagnostic software 2014 reported machine learning algorithm applied field art history study fine art paintings revealed unrecognized influences artists limitations machine learning transformative fields machine learning programs fail deliver expected reasons numerous lack suitable data lack access data data bias privacy badly chosen tasks algorithms wrong tools people lack resources evaluation 2018 driving car uber failed detect pedestrian killed collision attempts machine learning healthcare ibm watson failed deliver time billions investment bias machine learning approaches suffer data biases healthcare data measurement errors result bias machine learning applications machine learning trained current customers predict customer represented training data trained data machine learning pick constitutional unconscious biases society language models learned data human biases machine learning systems criminal risk assessment biased black people 2015 google photos tag black people gorillas 2018 resolved google reportedly workaround remove gorilla training data recognize real gorillas issues recognizing white people systems 2016 tested chatbot learned twitter picked racist sexist language challenges effective machine learning domains model assessments classification machine learning models validated accuracy estimation techniques holdout method splits data training set conventionally training set set designation evaluates performance training model set comparison fold cross validation method randomly splits data subsets instances data train model kth instance predictive ability training model addition holdout cross validation methods bootstrap samples instances replacement dataset assess model accuracy addition accuracy investigators frequently report sensitivity specificity meaning true positive rate tpr true negative rate tnr investigators report false positive rate fpr false negative rate fnr rates ratios fail reveal numerators denominators total operating characteristic toc effective method express model diagnostic ability toc numerators denominators mentioned rates toc commonly receiver operating characteristic roc roc curve auc ethics machine learning poses host ethical questions systems trained datasets collected biases exhibit biases algorithmic bias digitizing cultural prejudices job hiring data firm racist hiring policies lead machine learning duplicating bias scoring job applicants similarity previous successful applicants responsible collection data documentation algorithmic rules critical machine learning language biases machines trained language corpora learn bias forms ethical challenges personal biases health care concerns health care professionals systems designed public income generating machines true united perpetual ethical dilemma improving health care increasing profits algorithms designed provide patients unnecessary tests medication algorithm proprietary owners hold stakes huge potential machine learning health care provide professionals tool diagnose medicate plan recovery paths patients happen personal biases mentioned greed biases addressed software software suites variety machine learning algorithms include reading artificial intelligence modern approach 3rd edition 
233497	computerscience	unsupervised learning branch machine learning learns data labeled classified categorized responding feedback unsupervised learning identifies commonalities data reacts based presence absence commonalities piece data alternatives include supervised learning reinforcement learning central application unsupervised learning field density estimation statistics unsupervised learning encompasses domains involving summarizing explaining data features contrasted supervised learning supervised learning intends infer conditional probability distribution conditioned label input data unsupervised learning intends infer priori probability distribution approaches compared supervised learning training data labeled classifications models unsupervised learning learn relationships elements data set classify raw data hunt relationships algorithmic forms  but models goal mimicking human logic searching indirect hidden structures patterns features analyze data common algorithms unsupervised learning include neural networks classical unsupervised learning study neural networks donald hebb principle neurons wire hebbian learning connection reinforced irrespective error exclusively function coincidence action potentials neurons version modifies synaptic weights takes account time action potentials spike timing dependent plasticity stdp hebbian learning hypothesized underlie range cognitive functions pattern recognition experiential learning neural network models organizing map som adaptive resonance theory art commonly unsupervised learning algorithms som topographic organization nearby locations map represent inputs properties art model clusters vary size user control degree similarity clusters user defined constant called vigilance parameter art networks pattern recognition tasks automatic target recognition seismic signal processing method moments statistical approaches unsupervised learning method moments method moments unknown parameters model moments random variables unknown parameters estimated moments moments estimated samples empirically basic moments moments random vector moment vector moment covariance matrix moments represented tensors generalization matrices multi dimensional arrays method moments effective learning parameters latent variable models latent variable models statistical models addition observed variables set latent variables exists observed highly practical latent variable models machine learning topic modeling statistical model generating observed variables document based topic latent variable document topic modeling document generated statistical parameters topic document changed method moments tensor decomposition techniques consistently recover parameters class latent variable models assumptions expectation–maximization algorithm em practical methods learning latent variable models stuck local optima guaranteed algorithm converge true unknown parameters model contrast method moments global convergence guaranteed conditions 
234714	computerscience	medical imaging technique process creating visual representations interior body clinical analysis medical intervention visual representation function organs tissues physiology medical imaging seeks reveal internal structures hidden skin bones diagnose treat disease medical imaging establishes database normal anatomy physiology identify abnormalities imaging removed organs tissues performed medical reasons procedures considered pathology medical imaging discipline widest sense biological imaging incorporates radiology imaging technologies ray radiography magnetic resonance imaging medical ultrasonography ultrasound endoscopy elastography tactile imaging thermography medical photography nuclear medicine functional imaging techniques positron emission tomography pet single photon emission computed tomography spect measurement recording techniques designed produce images electroencephalography eeg magnetoencephalography meg electrocardiography ecg represent technologies produce data susceptible representation parameter graph time maps data measurement locations limited comparison technologies considered forms medical imaging discipline 2010 5 billion medical imaging studies conducted worldwide radiation exposure medical imaging 2006 50 total ionizing radiation exposure united medical imaging perceived designate set techniques noninvasively produce images internal aspect body restricted sense medical imaging solution mathematical inverse properties living tissue inferred observed signal medical ultrasonography probe consists ultrasonic pressure waves echoes tissue internal structure projectional radiography probe ray radiation absorbed rates tissue types bone muscle fat term noninvasive denote procedure instrument introduced patient body imaging techniques imaging modalities image 113abcd medical imaging techniques jpg thumb ct scan head successivetransverse sections mri machine generates magnetic field patient pet scans useradiopharmaceuticals create images active blood flow physiologic activity organ organs beingtargeted ultrasound technology monitor pregnancies invasive imagingtechniques electromagnetic radiation clinical context invisible light medical imaging equated radiology clinical imaging medical practitioner responsible interpreting acquiring images radiologist visible light medical imaging involves digital video pictures special equipment dermatology wound care modalities visible light imagery diagnostic radiography designates technical aspects medical imaging acquisition medical images radiographer radiologic technologist responsible acquiring medical images diagnostic quality radiological interventions performed radiologists field scientific investigation medical imaging constitutes discipline biomedical engineering medical physics medicine depending context development instrumentation image acquisition radiography modeling quantification preserve biomedical engineering medical physics science application interpretation medical images preserve radiology medical discipline relevant medical condition medical science neuroscience cardiology psychiatry psychology investigation techniques developed medical imaging scientific industrial applications radiography forms radiographic images medical imaging projection radiography fluoroscopy catheter guidance 2d techniques wide advance 3d tomography cost resolution depending application radiation dosages 2d technique imaging modality utilizes wide beam rays image acquisition imaging technique modern medicine magnetic resonance imaging magnetic resonance imaging instrument mri scanner nuclear magnetic resonance nmr imaging scanner originally powerful magnets polarize excite hydrogen nuclei single protons water molecules human tissue producing detectable signal spatially encoded images body mri machine emits radio frequency rf pulse resonant frequency hydrogen atoms water molecules radio frequency antennas rf coils send pulse body examined rf pulse absorbed protons causing direction respect primary magnetic field change rf pulse protons relax alignment primary magnet emit radio waves process radio frequency emission hydrogen atoms water detected reconstructed image resonant frequency spinning magnetic dipole protons called larmor frequency determined strength main magnetic field chemical environment nuclei mri electromagnetic fields strong typically teslas static magnetic field polarize hydrogen nuclei called primary field gradient fields modified vary space time 1 khz spatial encoding simply called gradients spatially homogeneous radio frequency rf field manipulation hydrogen nuclei produce measurable signals collected rf antenna ct mri traditionally creates dimensional image slice body considered tomographic imaging technique modern mri instruments capable producing images form 3d blocks considered generalization single slice tomographic concept ct mri involve ionizing radiation health hazards mri 1980s term effects exposure strong static fields subject debate safety mri limit scans individual subjected contrast ray ct identified health risks tissue heating exposure rf field presence implanted devices body pacemakers risks strictly controlled design instrument scanning protocols ct mri sensitive tissue properties appearances images techniques markedly ct rays blocked form dense tissue create image image quality soft tissues poor mri nucleus nuclear spin proton hydrogen atom remains clinical setting ubiquitous returns signal nucleus water molecules excellent soft tissue contrast achievable mri pulse sequences specific mri diagnostic imaging multiparametric mri mpmri differentiate tissue characteristics combining imaging sequences depending sought t1 weighted t1 mri t2 weighted t2 mri diffusion weighted imaging dwi mri dynamic contrast enhancement dce mri spectroscopy mri imaging prostate tumors accomplished t2 mri dwi mri t2 weighted imaging applications mpmri detecting disease organs continues expand including liver studies breast tumors pancreatic tumors assessing effects vascular disruption agents cancer tumors nuclear medicine nuclear medicine encompasses diagnostic imaging treatment disease referred molecular medicine molecular imaging therapeutics nuclear medicine properties isotopes energetic particles emitted radioactive material diagnose treat pathology typical concept anatomic radiology nuclear medicine enables assessment physiology function based approach medical evaluation applications subspecialties notably oncology neurology cardiology gamma cameras pet scanners scintigraphy spect pet detect regions biologic activity disease short lived isotope 99mtc administered patient isotopes preferentially absorbed biologically active tissue body identify tumors fracture bone images acquired collimated photons detected crystal light signal amplified converted count data fiduciary markers wide range medical imaging applications images subject produced imaging systems correlated called image registration placing fiduciary marker imaged systems marker visible images produced imaging modalities method functional spect positron emission tomography anatomical magnetic resonance imaging mri fiducial established mri correlated brain images generated magnetoencephalography localize source brain activity ultrasound medical ultrasonography frequency broadband sound waves megahertz range reflected tissue varying degrees produce 3d images commonly imaging fetus pregnant women ultrasound broader include imaging abdominal organs heart breast muscles tendons arteries veins provide anatomical techniques ct mri advantages ideal numerous situations studies function moving structures real time emits ionizing radiation speckle elastography ultrasound popular tool capturing raw data ultrasound interface purpose tissue characterization implementation image processing techniques concepts ultrasound medical imaging modalities operated transmission receipt sound waves frequency sound waves tissue depending composition tissues signal attenuated returned separate intervals path reflected sound waves multilayered structure defined input acoustic impedance ultrasound sound wave reflection transmission coefficients relative structures safe adverse effects inexpensive quick perform ultrasound scanners critically patients intensive care units avoiding danger caused moving patient radiology department real time moving image guide drainage biopsy procedures doppler capabilities modern scanners blood flow arteries veins assessed elastography elastography imaging modality maps elastic properties soft tissue modality emerged decades elastography medical diagnoses elasticity discern healthy unhealthy tissue specific organs growths cancerous tumours harder surrounding tissue diseased livers stiffer healthy elastographic techniques based ultrasound magnetic resonance imaging tactile imaging wide clinical ultrasound elastography result implementation technology clinical ultrasound machines main branches ultrasound elastography include quasistatic elastography strain imaging shear wave elasticity imaging swei acoustic radiation force impulse imaging arfi supersonic shear imaging ssi transient elastography decade steady increase activities field elastography observed demonstrating successful application technology medical diagnostics treatment monitoring photoacoustic imaging photoacoustic imaging developed hybrid biomedical imaging modality based photoacoustic combines advantages optical absorption contrast ultrasonic spatial resolution deep imaging optical diffusive quasi diffusive regime studies photoacoustic imaging vivo tumor angiogenesis monitoring blood oxygenation mapping functional brain imaging skin melanoma detection tomography tomography imaging sections sectioning main methods medical imaging echocardiography ultrasound image heart referred echocardiogram echocardiography detailed structures heart including chamber size heart function valves heart pericardium sac heart echocardiography 2d 3d doppler imaging create pictures heart visualize blood flowing heart valves echocardiography array patients ranging experiencing symptoms shortness breath chest pain undergoing cancer treatments transthoracic ultrasound proven safe patients ages infants elderly risk harmful effects radiation differentiating imaging modalities echocardiography commonly imaging modalities portability variety applications emergency situations echocardiography quick easily accessible performed bedside modality choice physicians functional infrared spectroscopy fnir invasive imaging technique nirs infrared spectroscopy purpose functional neuroimaging accepted brain imaging technique magnetic particle imaging superparamagnetic iron oxide nanoparticles magnetic particle imaging mpi developing diagnostic imaging technique tracking superparamagnetic iron oxide nanoparticles primary advantage sensitivity specificity lack signal decrease tissue depth mpi medical image cardiovascular performance neuroperfusion cell tracking pregnancy medical imaging pregnancy pregnancy complications intercurrent diseases routine prenatal care magnetic resonance imaging mri mri contrast agents obstetric ultrasonography risk mother fetus imaging techniques choice pregnant women projectional radiography ray computed tomography nuclear medicine imaging result degree ionizing radiation exposure exceptions absorbed doses fetal harm dosages effects include miscarriage birth defects intellectual disability maximizing imaging procedure data single ct scan extensive data radiologists discard save patients time money reducing exposure radiation risk complications invasive procedures approach procedures efficient based utilizing additional constraints medical imaging modalities improve efficiency data acquisition account reconstructed density positive creation dimensional images volume rendering techniques developed enable ct mri ultrasound scanning software produce 3d images physician traditionally ct mri scans produced 2d static output film produce 3d images scans combined computers produce 3d model manipulated physician 3d ultrasounds produced technique diagnosing disease viscera abdomen ultrasound sensitive imaging biliary tract urinary tract female reproductive organs ovary fallopian tubes diagnosis gallstone dilatation common bile duct stone common bile duct ability visualize structures 3d visualization methods valuable resource diagnosis surgical treatment pathologies key resource famous ultimately unsuccessful attempt singaporean surgeons separate iranian twins ladan laleh bijani 2003 3d equipment operations success proposed developed techniques include techniques stage clinical routines diagnostic imaging neuroimaging experimental circumstances people disabled persons control devices acting brain interface medical imaging software applications 3dslicer imagej mipav imagevis3d diagnostic imaging fda approval allowed clinical patient diagnosis note clinical studies designed patient diagnosis archiving recording ultrasound imaging capturing image produced medical imaging device required archiving telemedicine applications scenarios frame grabber capture video signal medical device relay processing operations dicom digital imaging communication medicine dicom standard globally store exchange transmit medical images dicom standard incorporates protocols imaging techniques radiography computed tomography ct magnetic resonance imaging mri ultrasonography radiation therapy dicom includes standards image exchange portable media dvds image compression visualization image presentation reporting compression medical images medical imaging techniques produce amounts data ct mri pet modalities result storage communications electronic image data prohibitive compression jpeg 2000 art image compression dicom standard storage transmission medical images cost feasibility accessing image data sets bandwidths addressed dicom standard called jpip enable efficient streaming jpeg 2000 compressed image data medical imaging cloud growing trend migrate pacs cloud based ris article applied radiology digital imaging realm embraced healthcare enterprise swift transition terabytes petabytes data radiology brink overload cloud computing offers imaging department future tools manage data intelligently pharmaceutical clinical trials medical imaging major tool clinical trials enables rapid diagnosis visualization quantitative assessment typical clinical trial multiple phases clinical endpoints outcomes determine therapy safe effective patient reaches endpoint excluded experimental interaction trials rely solely clinical endpoints costly durations tend patients contrast clinical endpoints surrogate endpoints cut time required confirm drug clinical benefits imaging biomarkers characteristic objectively measured imaging technique indicator pharmacological response therapy surrogate endpoints facilitate sizes obtaining quick statistical power imaging reveal subtle change indicative progression therapy missed subjective traditional approaches statistical bias reduced findings evaluated direct patient contact imaging techniques positron emission tomography pet magnetic resonance imaging mri routinely oncology neuroscience measurement tumour shrinkage commonly surrogate endpoint solid tumour response evaluation faster objective assessment effects anticancer drugs alzheimer disease mri scans entire brain accurately assess rate hippocampal atrophy pet scans measure brain metabolic activity measuring regional glucose metabolism beta amyloid plaques tracers pittsburgh compound pib historically quantitative medical imaging drug development growing imaging based trial components shielding lead main material radiographic shielding scattered rays magnetic resonance imaging mri rf shielding magnetic shielding prevent external disturbance image quality privacy protection medical imaging covered laws medical privacy united health insurance portability accountability hipaa sets restrictions health care providers utilizing protected health individually identifiable relating future physical mental health individual definitive legal decision matter study medical imaging biometric uniquely identify person qualify phi medical council ethical guidelines council require consent prior secondary ray images copyright united compendium chapter 300 copyright office office register produced machine mere mechanical process operates randomly automatically creative input intervention human author including medical imaging produced rays ultrasounds magnetic resonance imaging diagnostic equipment position differs broad copyright protections afforded photographs copyright compendium agency statutory interpretation legally binding courts deference reasonable federal law addressing issue copyrightability ray images derivatives extensive definition term derivative united copyright “derivative work” based preexisting translation art reproduction abridgment condensation form recast transformed adapted consisting editorial revisions annotations elaborations modifications represent original authorship “derivative work” copyright compilation derivative extends material contributed author distinguished preexisting material employed imply exclusive preexisting material copyright independent affect enlarge scope duration ownership subsistence copyright protection preexisting material germany germany ray images mrt ultrasound pet scintigraphy images protected copyright rights neighbouring rights protection require creativity regular copyright protection lasts 50 image creation published 50 50 legitimate publication letter law grants lichtbildner gesetze internet urhg 72 person created image literature uniformly medical doctor dentist veterinary physician rights holder result circumstance germany rays performed ambulatory setting doctor prescribes settings individual imaging united kingdom medical images created united kingdom protected copyright level skill labour judgement required produce quality ray contrast bones soft tissues society radiographers copyright owned employer radiographer employed—though contract require transfer ownership hospital copyright owner grant permissions ownership copyright hospital employees permission radiographic images purposes require medical care physicians employed hospital contracts publish patient journal papers books write providing anonymous patients granted permission images sweden cyber law sweden 96 pictures protected photographic photographic pictures requires level originality protects types photographs amateurs medicine science protection requires sort photographic technique includes digital cameras holograms created laser technique difference types term protection amounts death author photographic opposed photographic picture medical imaging included scope photography statement mri images ct scans analogous photography 
238604	computerscience	ux discontinued apple implementation unix operating macintosh computers apple attempt developing marketing unix based operating macintosh ux requires 68k based macintosh fpu paged memory management unit pmmu versions macintosh 30 quadra centris series machines ux released 1988 final version released 1995 apple current unix branded macos infoworld systems solution macintosh heart operating based unix release includes additional features releases bsd versions posix interface definition svid compliant includes tcp ip networking version onward unix compatible posix compliant operating apple bid contracts supply computers federal government institutes features ux graphical user interface familiar finder windows menus controls ux finder program finder customized version adapted unix process designed interact underlying unix kernel file systems ux includes commandshell terminal program offers command interface underlying unix window server application called macx terminal program interface applications finder alternatively user choose x11r4 session finder based apple compatibility layer ux macintosh unix hybrid applications hybrid application macintosh unix functions macintosh application calls unix functions unix application calls macintosh toolbox quickdraw functions compatibility layer existing toolbox functions rom function calls translated native unix calls ux includes utility called commando tool included macintosh programmer workshop assist users entering unix commands unix executable file finder dialog box user choose command options program standard controls radio buttons check boxes display command argument user executing command program feature intended ease learning curve users unix decrease user reliance unix manual ux utility allowed user reformat party scsi drives macs era ux runs 68k based macintoshes floating unit fpu paged memory management unit pmmu select models quadra 840av apple fastest 68k macintosh ux history ux announced february 1988 uniforum conference months schedule based unix additional features bsd unix initially sold bundled macintosh 8597 larger monitor mac upgrade kit initially aimed existing unix customers universities vars party software announced release includes ingres database statview developer tools productivity software packages networking support consists tcp ip appletalk nfs implementations developed unisoft product release runs macintosh application base display program onscreen time version amend situation add finder window compliance draft posix standard posix support ux released 1989 1991 apple formed business division enterprise systems serve businesses government education based ux division intended address company admittedly major player unix market performed quiet marketing operating intending improve 1992 november 1991 apple launched ux planning synchronize ongoing release schedules ux time company preannounced ux expected release 1993 1994 announcement expounded technology partnership apple ibm expecting merge apple user friendly graphical interface desktop applications market ibm highly scalable unix server market allowing companies enter apple believed emerging desktop systems market upcoming ux target poweropen environment abi merge features ibm aix variant unix ux osf kernel software foundation ux serve migration path migration path unix applications compliant poweropen future ux aix operating systems intended variety ibm power powerpc hardware apple powerpc based hardware 1992 c2 level secure version ux released contrary announcements apple eventually abandoned plans ux releasing product company deployed mid 1990s platform apple network server hardware running customized ibm aix operating apple 1996 acquisition apple introduced 1999 mac os server based unix nextstep operating final release ux version 1995 apple abandoned ux platform completely 1996 reception byte 1989 listed excellence winners byte awards stating unix multitasking operating choice decade challenge os compared contemporary workstations unix vendors macintosh hardware lacks features demand paging versions ux suffer poor performance poor sales users complained disk space version criticized 1988 infoworld review user interface command driven unix variants graphical mouse driven networking support praised august 1992 issue infoworld author favorably reviewed ux describing systems solution macintosh heart apple finally unix praised gui single button installer personal tech support graphical dialogs user manuals ux defies stereotype unix difficult easiest version unix learn list price weaker competing pc operating systems os dos windows compared prevailing proprietary unix licenses review speed acceptable fastest quadra 950 blaming software incomplete unix optimization apple hardware price performance ratio judged altogether uncompetitive sun sparcstation reviewers users macs ux awarded infoworld score os proprietary macintosh hardware tony bove bove rhodes report complained unix super users compelling reason apple unix apple ux sell macs unix check item users legacy vintage ux users central repository ux applications internet server nasa called “jagubox” administered jim jagielski editor ux faq jagubox decommissioned mirrors maintained ux hardware requirements include memory management unit execution ux macintosh emulation software 2014 introduction macintosh emulator named shoebill 
238725	computerscience	loebner prize annual competition artificial intelligence awards prizes programs considered judges human format competition standard turing human judge simultaneously holds textual conversations program human based responses judge decide contest launched 1990 hugh loebner conjunction cambridge center behavioral studies massachusetts united 2014 organised aisb bletchley park flinders university dartmouth college science museum london university reading ulster university magee campus derry city culture 2004 2005 held loebner apartment york city field artificial intelligence loebner prize controversial prominent critic marvin minsky called publicity stunt field prizes originally 000 awarded human program competition prize 000 2005 250 2006 2008 000 awarded addition time prizes awarded 25 000 offered program judges distinguish real human convince judges human program 100 000 reward program judges distinguish real human turing includes deciphering understanding visual auditory input achieved annual competition competition rules restrictions rules varied competitions featured restricted conversation turing tests 1995 discussion unrestricted entries 2007 robert medeksza noah duncan rollo carpenter basic screening questions sponsor evaluate technology included simple questions time contest knowledge hammer comparisons faster train plane questions demonstrating memory preceding conversation nouns adjectives verbs dictionary suitable children adolescents age 12 entries respond intelligently questions accepted time 2008 sponsor allowed introduction preliminary phase contest competition disallowed based entries judged variety invited interrogators rules interrogators selected instructed interrogators judge systems limited time minutes entity 2003 competition 20 pair 2004–2007 competitions minutes conduct simultaneous conversations human program 2008 2009 increased 25 minutes simultaneous conversation 2010 criticisms prize scorned experts field variety reasons regarded publicity stunt marvin minsky scathingly offered prize competition loebner responded jokingly observing minsky offering prize competition effectively sponsor rules competition encouraged qualified judges rapid judgements interactions judges competitors originally effectively mins questioning permitted questions questioning initially restricted whimsical conversation domain suiting standard chatbot tricks competition entrants aim understanding intelligence resort basic eliza style tricks successful entrants deception pretense rewarded reporting annual competition confuses imitation intelligence typical brian christian introduction article mind machine atlantic march 2011 stating race build computers humans proving ground turing contests 2006 2006 contest organised tim child ceo televirtual huma shah august 30 finalists announced contest held 17 september vr theatre torrington campus university college london judges included university reading cybernetics professor kevin warwick professor artificial intelligence john barnden specialist metaphor university birmingham barrister victoria butler cole journalist graham duncan rowe experience event article technology review winner joan based jabberwacky created rollo carpenter 2007 2007 competition held october 21 york city judges science professor russ abbott philosophy professor hartry field psychology assistant professor clayton curtis english lecturer scott hutchins bot passed turing judges ranked contestants winner received 250 annual medal runners received 250 2008 2008 competition organised professor kevin warwick coordinated huma shah held october 12 university reading testing judges preliminary phase june july 2008 finalists selected thirteen original entrants artificial conversational entity ace invited competed finals finals judges minutes conduct simultaneous split screen conversations hidden entities elbot artificial solutions 2008 loebner prize bronze award human artificial conversational entity fooling judges interrogated human parallel comparisons believing human coming close 30 traditionally required program passed turing eugene goostman ultra hal deceived judge human pavia journalist times written experience loebner finals judge deceived elbot eugene kevin warwick huma shah reported parallel paired turing tests 2009 2009 loebner prize competition held september 2009 brighton centre brighton conjunction interspeech 2009 conference prize 2009 000 entrants david levy rollo carpenter mohan embar finished writer brian christian participated 2009 loebner prize competition human confederate experiences competition book human human 2010 2010 loebner prize competition held october 23 california university los angeles 2010 competition 20th running contest winner bruce wilcox suzette 2011 2011 loebner prize competition held october 19 university exeter devon united kingdom prize 2011 000 finalists chatterbots bruce wilcox rosette adeena mignogna zoe mohan embar chip vivant ron lee tutor finished addition panel junior judges jean paul astal stain william dunne sam keat kirill jerdev junior contest markedly main contest chatterbots tutor zoe tying chip vivant rosette coming fourth 2012 2012 loebner prize competition held 15th bletchley park bletchley buckinghamshire england honor alan turing centenary celebrations prize 2012 000 local arrangements organizer david levy loebner prize 1997 2009 finalists chatterbots mohan embar chip vivant bruce wilcox angela daniel burke adam allan linguo finished team university exeter science department keedwell max dupenois kent mcclymont conducted live webcast conversations 2013 2013 loebner prize competition held time island ireland september 14 ulster university magee college derry northern ireland finalists chatbots steve worswick mitsuku dr ron lee tutor bruce wilcox rose brian rigsby izar finished judges professor roger schank socratic arts professor noel sharkey sheffield university professor minhua eunice huddersfield university university glasgow professor mike mctear ulster university 2013 junior loebner prize competition chatbots mitsuku tutor tied rose izar 3rd 4th 2014 2014 loebner prize competition held bletchley park england saturday 15 november 2014 event filmed live sky news guest judge television presenter broadcaster james hours judging rose bruce wilcox declared winner bruce receive cheque 4000 bronze medal ranks rose rank 4000 bronze medal izar rank 25 1500 uberbot rank 25 1000 mitsuku rank 500 judges dr ian hocking writer senior lecturer psychology christ church college canterbury dr ghita kouadri mostefaoui lecturer science technology university bedfordshire james television presenter broadcaster dr paul sant dean ucmk university bedfordshire 2015 2015 loebner prize competition rose bruce wilcox judges jacob aaron physical sciences reporter scientist rory cellan jones technology correspondent bbc brett marty film director photographer ariadne tampion writer 2016 2016 loebner prize held bletchley park 17 september 2016 hours judging final announced ranks winners official list winners 
245926	computerscience	driving car robot car autonomous car driverless car vehicle capable sensing environment moving human input autonomous cars combine variety sensors perceive surroundings radar vision lidar sonar gps odometry inertial measurement units advanced control systems interpret sensory identify navigation paths obstacles relevant signage potential benefits include reduced costs increased safety increased mobility increased customer satisfaction reduced crime safety benefits include reduction traffic collisions injuries costs including insurance automated cars predicted increase traffic flow provide enhanced mobility children elderly disabled poor relieve travelers driving navigation chores increase fuel efficiency vehicle reduce parking space reduce crime facilitate business models transportation service sharing economy include safety technology liability legal framework government regulations risk loss privacy security concerns hackers terrorism concern loss driving jobs road transport industry risk increased suburbanization travel convenient history experiments conducted automated driving systems ads 1920s trials 1950s automated car developed 1977 japan tsukuba mechanical engineering laboratory vehicle tracked white street markers interpreted cameras vehicle analog signal processing vehicle reached speeds support elevated rail autonomous prototype cars appeared 1980s carnegie mellon university navlab alv projects funded darpa starting 1984 mercedes benz bundeswehr university munich eureka prometheus project 1987 1985 alv demonstrated driving speeds lane roads obstacle avoidance 1986 road driving day nighttime conditions 1987 1960s darpa grand challenge 2005 automated vehicle funded darpa army navy yielding incremental advances speeds driving competence complex conditions controls sensor systems companies organizations developed prototypes allocated 650 1991 national automated highway demonstrated automated driving combination automation embedded highway automated technology vehicles cooperative networking vehicles highway infrastructure program concluded successful demonstration 1997 direction funding implement larger scale partly funded national automated highway darpa carnegie mellon university navlab drove america 1995 98 autonomously navlab record achievement stood unmatched decades 2015 delphi improved piloting audi augmented delphi technology 15 remaining driving mode 99 time 2015 nevada florida california virginia michigan washington allowed testing automated cars public roads 2017 audi stated a8 automated speeds audi driver safety checks frequently gripping steering wheel audi a8 claimed production car reach level automated driving audi manufacturer laser scanners addition cameras ultrasonic sensors november 2017 waymo announced begun testing driverless cars safety driver driver position employee car october 2018 waymo announced vehicles traveled automated mode increasing month december 2018 waymo commercialize autonomous taxi service definitions inconsistency terminology driving car industry organizations proposed define accurate consistent vocabulary confusion documented sae j3016 vernacular usages associate autonomous driving automation level usages apply levels driving automation legislation defined correspond ads level vehicle equipped ads definition safety considerations modern vehicles provide partly automated features keeping car lane speed controls emergency braking differences remain autonomous driving car hand driver assistance technologies hand bbc confusion concepts leads deaths association british insurers considers usage word autonomous marketing modern cars dangerous car ads motorists autonomous autopilot vehicle drive rely driver ensure safety technology drive car car makers claim vehicles driving partly automated drivers risk excessively confident leading crashes driving cars autonomous automated autonomous governing historical projects vehicle automation automated automatic subject heavy reliance artificial aids environment magnetic strips autonomous control implies satisfactory performance uncertainties environment ability compensate failures external intervention approach implement communication networks vicinity collision avoidance congestion management influences decision process reduce individual vehicle autonomy requiring human intervention wood 2012 wrote article term autonomous term automated term autonomous chosen term widespread familiar public term arguably accurate automated connotes control operation machine autonomous connotes acting independently vehicle concepts aware person driver’s seat utilize communication connection cloud vehicles independently select destinations routes reaching term automated accurately vehicle concepts 2017 commercial projects focused automated vehicles communicate vehicles enveloping management regime nissan engineer autonomous car request decides beach euroncap defines autonomous autonomous emergency braking acts independently driver avoid mitigate accident implies autonomous driver autonomous cooperative car travel driver embedded vehicle makers remote driver sae j3016 driving car techemergence pc mag definition ucsusa definition nhtsa definition nhtsa definition techemergence techemergence classification classification based levels ranging manual automated systems published 2014 sae international automotive standardization body j3016 taxonomy definitions terms road motor vehicle automated driving systems classification based driver intervention attentiveness required vehicle capabilities loosely united 2013 national highway traffic safety administration nhtsa released formal classification abandoned favor sae standard 2016 2016 sae updated classification called j3016 201609 levels driving automation sae automation level definitions driving mode type driving scenario characteristic dynamic driving task requirements expressway merging speed cruising speed traffic jam closed campus operations formal sae definition note shift sae sae human driver monitor environment final aspect dynamic driving task passed human automated sae human driver responsibility intervene automated sae human driver relieved responsibility sae automated intervention legal definition district columbia dc code district code considered semi automated vehicles manually driven vehicles sae level autonomous vehicles sae level variety vehicle types degree automation collectively semi automated vehicles technology infrastructure developed automation vehicles increasing levels automation semi automated vehicles harness advantages automated vehicles keeping driver charge vehicle technical challenges challenge driverless car designers produce control systems capable analyzing sensory data provide accurate detection vehicles road modern driving cars bayesian simultaneous localization mapping slam algorithms fuse data multiple sensors map current location estimates map updates waymo developed variant slam detection tracking moving objects datmo handles obstacles cars pedestrians simpler systems roadside real time locating rtls technologies aid localization typical sensors include lidar stereo vision gps imu udacity developing source software stack control systems automated cars sensor fusion approach integrates variety sensors car produce consistent accurate view environment driverless vehicles require form machine vision purpose visual object recognition automated cars developed deep neural networks type deep learning architecture computational stages levels neurons simulated environment activate network neural network depends extensive data extracted real life driving scenarios enabling neural network learn execute action 2018 researchers mit announced built automated car navigate unmapped roads researchers science artificial intelligence laboratory csail developed called maplite driving cars drive roads 3d maps combines gps position vehicle sparse topological map openstreetmap 2d features roads series sensors observe road conditions heavy rainfall hail snow impede car sensors nature digital technology autonomous vehicles digital technology characteristics distinguishes types technologies vehicles characteristics autonomous vehicles transformative agile characteristics explained based subjects homogenization decoupling connectivity reprogrammable smart digital traces modularity homogenization decoupling homogenization digital assumes form ongoing evolution digital era industry standards developed store digital type format concept homogenization implies autonomous vehicles autonomous vehicles perceive surroundings techniques accompanying digital radar gps motion sensors vision homogenization digital techniques stored homogeneous implies digital form differences decoupled digital transmitted stored computed vehicles operating understand homogenization helps exponentially increase computing power hard software moore law supports autonomous vehicles understand digital cost effective lowering marginal costs connectivity connectivity users digital technology connect easily users applications enterprises autonomous vehicles essential connect ‘devices’ function effectively autonomous vehicles equipped communication systems communicate autonomous vehicles roadside units provide road traffic congestion addition scientists future programs connects manages individual autonomous vehicle navigates intersection type connectivity replace traffic lights signs types characteristics drive develop ability autonomous vehicles understand cooperate products services intersection systems autonomous vehicles market lead network autonomous vehicles network network eventually lead autonomous vehicles network validated usage autonomous vehicles movements strengthen network called network externalities reprogrammable smart characteristic autonomous vehicles core product emphasis software possibilities chassis engine autonomous vehicles software systems drive vehicle meaning updates reprogramming editing software enhance benefits owner update distinguishing blind person blind person vehicle extra caution approaching blind person characteristic reprogrammable autonomous vehicles updates supplier machine learning smart autonomous vehicles generate updates install navigation maps intersection systems reprogrammable characteristics digital technology possibility smart machine learning manufacturers autonomous vehicles opportunity differentiate software implies autonomous vehicles finished product continuously improved digital traces autonomous vehicles equipped sorts sensors radars connect interoperate computers autonomous vehicles roadside units implies autonomous vehicles leave digital traces connect interoperate data digital traces develop determined products updates enhance autonomous vehicles’ driving ability safety modularity traditional vehicles accompanying traditional technologies manufactured product complete autonomous vehicles improved redesigned reproduced autonomous vehicles produced digital characteristics finished autonomous vehicles modular modules explained layered modular architecture layered modular architecture extends architecture purely physical vehicles incorporating loosely coupled layers devices networks services contents autonomous vehicles loosely coupled layers interact standardized interfaces human factor challenges driving cars exploring difficulties determining intentions pedestrians bicyclists animals models behavior programmed driving algorithms human road users challenge determining intentions autonomous vehicles driver eye contact exchange hand signals drive testing solution involves led signs mounted vehicle announcing status cross waiting cross human factor challenges safety handoff automated driving manual driving unfavorable unusual road conditions vehicle limited capabilities sudden handoff leave human driver dangerously unprepared moment term humans practice driving skill level dangerous manual mode challenge risk compensation perceived safer benefiting increased safety people engage riskier behavior enjoy benefits semi automated cars suffer users tesla autopilot ignoring road watching electronic devices advice company car capable autonomous future pedestrians bicyclists travel street riskier fashion driving cars capable avoiding people driving cars vote government roads technology trusted safe driving elevators invented 1900 people refusing slowed adoption decades operator strikes increased demand trust built advertising features emergency button testing testing vehicles varying degrees automation physically closed environments public roads permitted typically license permit adhering specific set operating principles virtually simulations driven public roads automated vehicles require person monitor proper operation york strict requirements driver times vehicle corrected licensed driver highlighted cardian cube company application discussions york officials nys dmv apple testing driven cars increased vehicles 27 january 2018 45 march 2018 russian internet company yandex start project driven cars 2016 february 2018 passed prototype unmanned taxi streets moscow yandex taxi august 2018 start driven cars innopolis republic tatarstan territory innopolis operate unmanned vehicles clients land stops time testing unmanned vehicle yandex russia held las vegas january 2019 testing continued international consumer electronics ces january 11 yandex received permission ministry transport israel company’s unmanned vehicle public roads шт 2019one assess progress automated vehicles compute average distance driven disengagements automated typically human driver 2017 waymo reported 63 disengagements testing average companies reporting figures waymo traveled distance total 2017 rate 18 disengagements improvement disengagements 2016 2015 march 2017 uber reported average disengagement final months 2017 cruise automation owned averaged disruption july 2018 electric driverless racing car robocar completed kilometers track navigation artificial intelligence fields application automated trucks companies testing automated technology semi trucks otto driving trucking company acquired uber august 2016 demonstrated trucks highway acquired 2017 san francisco based startup embark announced partnership truck manufacturer peterbilt deploy automated technology peterbilt vehicles waymo testing automated technology trucks timeline project march 2018 starsky robotics san francisco based automated truck company completed driverless trip florida single human truck starsky robotics player driving truck game drive automated mode public road person cab europe truck platooning considered safe road trains environment approach lockheed martin funding army developed automated truck convoying lead truck operated human driver trucks autonomously developed army autonomous mobility applique amas consists automated driving package installed types vehicles completed 55 000 hours driving speeds 2014 2017 army planning field 100–200 trucks rapid fielding program transport systems europe cities belgium france italy planning operate transport systems automated cars germany netherlands spain allowed public testing traffic 2015 launched public trials lutz pathfinder automated pod milton keynes summer 2015 french government allowed psa peugeot citroen trials real conditions paris experiments planned extended cities bordeaux strasbourg 2016 alliance french companies thales valeo provider parking car equips audi mercedes premi testing zealand planning automated vehicles public transport tauranga christchurch china baidu king produce automated minibus vehicle 14 seats driving seat 100 vehicles produced 2018 commercial automated service china minibuses level driverless closed roads potential advantages safety driving safety experts predict driverless technology developed traffic collisions deaths injuries costs caused human error delayed reaction time tailgating rubbernecking forms distracted aggressive driving reduced consulting firm mckinsey company estimated widespread autonomous vehicles eliminate 90 auto accidents united prevent damages health costs annually save thousands lives motorist thedrive operated time magazine driving safety experts contact rank driving autopilot time 2017 achieved level safety traditional hands driving degree benefits asserted proponents manifest practice assessed confounding factors reduce safety include unexpected interactions humans partly automated vehicles types vehicle complications boundaries functionality automation level handover vehicle reaches limit capacity bugs flaws inevitably occur complex interdependent software systems sensor data shortcomings successful compromise malicious interveners welfare automated cars reduce labor costs relieve travelers driving navigation chores replacing wheel commuting hours time leisure lift constraints occupant ability drive distracted texting driving intoxicated prone seizures impaired elderly people disabilities income citizens automated cars provide enhanced mobility removal steering wheel—along remaining driver interface requirement occupant assume facing position—would interior cabin ergonomic flexibility vehicles motorhomes attain appreciably enhanced ease traffic additional advantages include speed limits smoother rides increased roadway capacity minimized traffic congestion decreased safety gaps speeds maximum controlled access highway throughput capacity highway capacity manual 200 passenger vehicles hour lane road space cars study estimated automated cars increase capacity 273 200 cars hour lane study estimated 100 connected vehicles vehicle vehicle communication capacity reach 12 000 passenger vehicles hour 445 200 pc lane traveling safely gap highway speeds drivers car increases highway capacity impact traffic congestion urban effectively highway congestion ability authorities manage traffic flow increase extra data driving behavior predictability combined traffic police road signage costs safer driving expected reduce costs vehicle insurance energy environmental impacts vehicle automation improve fuel economy car optimizing drive cycle reduced traffic congestion improvements traffic flow widespread automated cars translate fuel efficiency additionally driving cars accelerate brake efficiently meaning fuel economy reducing wasted energy typically inefficient speed improvement vehicle energy efficiency translate reduction energy consumption positive environmental outcomes expected convenience automated vehicles encourages consumers travel induced demand partially offset fuel efficiency improvement brought automation consequences vehicle automation global energy demand emissions highly uncertain heavily depends combined consumer behavior policy intervention technological progress vehicle technology parking space manually driven vehicles reported 4–5 time parked unused remaining 95–96 time autonomous vehicles hand continuously reached destination dramatically reduce parking space los angeles 14 land parking equivalent 17 020 594 square meters combined potential reduced road space improved traffic flow tremendous amounts land urban parks recreational buildings cities livable effects reducing labor cost mobility service automated cars reduce cars individually owned replaced taxi pooling car sharing services dramatically reduce size automotive production industry environmental economic effects assuming increased efficiency offset increases demand efficient traffic flow roadway space support pedestrians cyclists vehicles increased awareness aid police reporting illegal passenger behavior enabling crimes deliberately crashing vehicle pedestrian lead expanded mass surveillance wide access granted parties data sets generated future passenger rail transport era automated cars potential limits obstacles sort hoped potential benefits increased vehicle automation limited foreseeable challenges disputes liability company operating vehicle accept driver responsible car project liability control time existing stock vehicles automated automated period humans autonomous vehicles sharing roads resistance individuals forfeit control cars concerns safety driverless practice implementation legal framework consistent global government regulations driving cars obstacles include skilling levels driver experience dealing dangerous situations anomalies ethical automated vehicle software forced unavoidable crash choose multiple harmful courses action trolley concerns people employed drivers unemployed time alternate blue collar occupations undermined automation potential intrusive mass surveillance location association travel result police intelligence agency access data sets generated sensors pattern recognition anonymous travel difficult insufficient understanding verbal sounds gestures verbal cues police drivers pedestrians technological obstacles automated cars social challenges include potential disadvantages direct impact widespread adoption automated vehicles loss driving jobs road transport industry resistance professional drivers unions threatened job losses addition job losses public transit services crash repair shops automobile insurance industry suffer technology aspects occupations obsolete frequently cited paper michael osborne carl benedikt frey automated cars jobs redundant privacy issue vehicle location position integrated interface people access addition risk automotive hacking sharing v2v vehicle vehicle v2i vehicle infrastructure protocols risk terrorist attacks driving cars loaded explosives bombs lack stressful driving productive time trip potential savings travel time cost incentive live cities land cheaper city core increasing travel distances inducing urban sprawl fuel consumption increase carbon footprint urban travel risk traffic congestion increase decrease public policies regulations zoning pricing urban design required avoid negative impacts increased suburbanization distance travel automation vehicles reaches levels reliable drivers pay attention road drivers automated cars react intervene critical situation compared driving manually depending capabilities automated vehicles frequency human intervention counteract increase safety compared human driving delivered factors ethical moral reasoning consideration programming software decides action car takes unavoidable crash automated car crash bus killing people swerve killing passengers nearby pedestrians question programmers systems difficult answer ordinary people ethicists decision car ‘smallest’ damage people lives proposed solution implementation ethics bots driving vehicles learn user preferences ultimately guide autonomous instruments owner values preferences ethics automated vehicles articulated lead controversy require closer consideration variability context dependency complexity deterministic nature human ethics human drivers ethical decisions driving avoiding harm putting risk protect decisions range rare extremes sacrifice criminal negligence routine decisions traffic flowing bad accidents road rage stress human reaction time slow detect risk upcoming fatal crash ethical implications options action implement ethical choice automated vehicle capacity correctly detect upcoming risk analyse options choose option bad choices human difficult predict assess difficulty level automated vehicle understanding ethical issues play road scenario sensed instant continuous stream synthetic physical predictions future dependent layers pattern recognition situational intelligence opaque human inspection origins probabilistic machine learning simple plain english human values logic parsable rules depth understanding predictive power ethical sophistication hard implement harder assess scale challenge effects entities marshal resources capacity meet capital automated vehicle market sustain operationally life vehicle legal government affairs capacity deal potential liability proportion traffic accidents narrowing opertors eroding presently diverse global vehicle market suppliers potential industries traditional automobile industry subject driven technology market demands include breakthrough technological advances market demands adopts technology rapid advance factors era incremental change recognized transition technology entrants automotive industry distinguished mobility providers uber lyft tech giants google nvidia entrants industry market uncertainty naturally occurs changing dynamics entrance tech giants alliances traditional car manufacturers variation innovation production process autonomous vehicles additionally entrance mobility providers caused ambiguous user preferences result rise mobility providers vehicles capita flatlined addition rise sharing economy contributes market uncertainty forecasters question private ownership vehicles relevant transportation technology mobility providers preferred consumers taxis aforementioned ambiguous user preference private ownership autonomous vehicles current mobility provider trend continue rises popularity established providers uber lyft industry entrants enter business opportunities healthcare car repair car insurance increasing reliance autonomous vehicles interconnectivity availability data usable form real time maps driving decisions faster prevent collisions government 94 vehicle accidents human failures result major implication healthcare industry apparent national safety council killed injured people roads multiplied average costs single incident reveal estimated 500 dollar loss imminent healthcare industry autonomous vehicles dominating roads anticipated decrease traffic accidents positively contribute widespread acceptance autonomous vehicles possibility allocate healthcare resources collisions occur risk human errors reduced repair industry enormous reduction reparation car frames generated data autonomous vehicle predict replaceable maintenance car owners repair industry proactively replace fail ‘asset efficiency service’ implicate productivity gain automotive repair industry collisions implicate money spent repair costs role insurance industry altered expected increased safety transport autonomous vehicles lead decrease payouts insurers positive industry payouts imply demand drop insurances insurance industry create insurance models future accommodate unexpected disadvantage widespread acceptance autonomous vehicles reduction organs transplant rescue emergency response military technique autonomous driving ensures life savings industries implementation autonomous vehicles rescue emergency response military applications led decrease deaths military personnel autonomous vehicles reach dangerous remote earth deliver fuel food supplies rescue people addition future implication adopting autonomous vehicles lead reduction deployed personnel lead decrease injuries technological development autonomous vehicles avs autonomous future implication reduction emergency drivers autonomous vehicles deployed trucks ambulances advantage real time traffic generated data determine execute routes efficiently human drivers time savings invaluable situations interior design entertainment interior design industry exciting times driver decreasingly focused actual driving implies interior design media entertainment industry reconsider passengers autonomous vehicles road vehicles redesigned prepared multipurpose usage practice travelers time business leisure increasing opportunities media entertainment industry demand attention advertisement business provide location based ads risking driver safety telecommunication energy autonomous vehicles producing enormous amounts data transferred analyzed upcoming 5g cellular network play pivotal role addition earlier mentioned entertainment industry highly dependent network active market segment implies revenues telecommunication industry autonomous vehicles rely electricity operate demand lithium batteries increases radar sensors lidar speed internet connectivity require auxiliary power vehicles manifests power draw batteries larger battery requirement increase supply type batteries chemical industry hand expected increase battery powered autonomous vehicles petroleum industry expected undergo decline demand implication depends adoption rate autonomous vehicles unsure extent implication disrupt industry transition phase oil electricity companies explore business opportunities energy ecosystem restaurant hotels airlines driver interactions vehicle common future distant future responsibility lie vehicle implications entertainment interior design industry roadside restaurants implication customers driving enter restaurant vanish autonomous vehicle double function accompanied rise disruptive platforms airbnb shaken hotel industry fast increase developments autonomous vehicle industry implication customer bases distant future implication motels decrease guests occur autonomous vehicles redesigned equipped bedrooms improvements interior vehicles additionally implications airline industry short haul flights waiting times customs gate imply lost time hassle customers improved convenience future car travel customers option causing loss customer bases airline industry elderly disabled children autonomous vehicles severe impact mobility options persons drive vehicle remain socially engaged society groceries elderly people depending caretakers drive addition perceived freedom elderly people future demand human aides decrease increased health elderly safe care centers experience decrease clients elderly people difficulties decreased physical abilities disabled people perceive benefits autonomous vehicles future causing dependency caretakers decrease industries depending informal caregivers relatives persons reliance time employers informal caregivers governments experience decrease costs allocated matter children teens drive vehicle benefiting introduction autonomous cars daycares schools automated pick drop systems causing decrease reliance parents childcare workers extent human actions driving vanish current vehicles require human actions extent driving school industry disrupted majority autonomous transportation switched emerged dominant design plausible distant future driving vehicle considered luxury implies structure industry based entrants market incidents tesla autopilot midoctober 2015 tesla motors rolled version software included tesla autopilot capability january 2016 tesla rolled version air update adding summon feature cars park parking locations driver car tesla automated driving features classified level driver assistance society automotive engineers sae international levels vehicle automation level car automated requires attention driver prepared control moment notice autopilot limited access highways fail detect lane markings disengage urban driving read traffic signals obey signs detect pedestrians cyclists 20 january 2016 fatal crash tesla autopilot occurred china hubei province china 163 news channel marked china accidental death tesla automatic driving initially tesla vehicle badly damaged impact recorder conclusively prove car autopilot time 163 factors car absolute failure evasive actions prior speed crash driver driving record strong likelihood car autopilot time fatal crash occurred months florida 2018 subsequent civil suit father driver killed tesla tesla deny car autopilot time accident evidence victim father documenting fatal accident involving vehicle driven williston florida 2016 tesla model electric car engaged autopilot mode occupant killed crash 18 wheel tractor trailer 28 june 2016 national highway traffic safety administration nhtsa formal investigation accident florida highway patrol nhtsa preliminary reports crash occurred tractor trailer left tesla intersection controlled access highway car failed apply brakes car continued travel passing truck trailer nhtsa preliminary evaluation examine design performance automated driving systems time crash involved population estimated 25 000 model cars july 2016 nhtsa requested tesla motors provide agency detailed design operation testing autopilot technology agency requested details design updates autopilot introduction tesla planned updates schedule months tesla autopilot driver noticed white tractor trailer brightly lit sky brake applied car attempted drive speed trailer trailer impacting windshield model tesla claimed tesla autopilot death driven customers autopilot engaged statement tesla refusing acknowledge claims january 2016 fatality hubei china result autopilot error tesla fatality type vehicles includes fatalities crashes instance motorcycle drivers pedestrians july 2016 national transportation safety board ntsb formal investigation fatal accident autopilot engaged ntsb investigative body power policy recommendations agency spokesman worth learn event automation introduced safest january 2017 ntsb released report concluded tesla fault investigation revealed tesla cars crash rate dropped 40 percent autopilot installed tesla starting 19 october 2016 tesla cars built hardware driving capability safety level sae level hardware includes surround cameras ultrasonic sensors addition facing radar enhanced processing capabilities operate shadow mode processing action send data tesla improve abilities software ready deployment air upgrades required testing tesla hopes enable driving 2019 conditions waymo waymo originated driving car project google august 2012 google announced vehicles completed 300 000 automated driving miles 500 000 km accident typically involving dozen cars road time starting single drivers pairs late 2014 google revealed prototype steering wheel gas pedal brake pedal automated google driven fleet automated mode total december 2016 google corporation announced technology spun company called waymo google waymo subsidiaries parent company called alphabet google accident reports 2016 cars involved 14 collisions drivers fault 13 times 2016 car software caused crash june 2015 brin confirmed 12 vehicles suffered collisions involved rear collisions sign traffic light vehicle swiped driver driver rolled sign google employee controlling car manually july 2015 google employees suffered minor injuries vehicle rear car driver failed brake traffic light time collision injuries 14 february 2016 google vehicle attempted avoid sandbags blocking path maneuver struck bus google stated bear responsibility car moved collision google characterized crash misunderstanding learning experience injuries reported crash uber march 2017 uber vehicle involved crash tempe arizona car failed yield flipping uber vehicle injuries accident 22 december 2017 uber completed automated mode 18 march 2018 elaine herzberg pedestrian killed driving car united hit uber vehicle tempe herzberg crossing crosswalk 400 feet intersection accidents include nighttime visibility driver distraction pedestrian crossing shadowed portion road crossing road speed limit checking cars crossing blindly crossing street night marks time individual auto piloted car killed car death essentially uninvolved party raise questions concerns safety automated cars experts human driver avoided fatal crash arizona governor doug ducey suspended company ability operate automated cars public roadways citing unquestionable failure expectation uber public safety priority uber pulled driving car testing california result accident 24 2018 national transport safety board issued preliminary report navya automated bus driving november 2017 navya automated driving bus passengers involved crash truck truck fault crash reversing stationary automated bus automated bus evasive actions apply defensive driving flash headlights sound horn passenger commented shuttle ability shuttle stayed policy implications urban planning wonkblog reporter automated cars commercially potential disruptive innovation major implications society likelihood widespread adoption unclear wide scale policy makers unresolved questions effects fundamental question travel behavior people increase car ownership car easier ultimately encourage urban sprawl ultimately total private vehicle argue easier share cars discourage outright ownership decrease total usage cars efficient forms transportation relation situation policy makers infrastructure built money allotted build automated vehicles traffic signals reduced adoption smart highways smart highways assistance smart technological advances implemented policy change dependence oil imports reduced time spent road individual cars policy energy hand automated vehicles increase cars road lead dependence oil imports smart systems curtail impact vehicles uncertainty future automated vehicles policy makers plan effectively implementing infrastructure improvements beneficial human drivers automated vehicles caution acknowledgment public transportation greatly reduced automated vehicles catered policy reform infrastructure job loss increased unemployment disruptive effects automated vehicles carry driving vans potential deliveries cheaper transforming retail commerce hypermarkets supermarkets redundant government defines automation levels starting level human driver level automated performs driving tasks current law manufacturers bear responsibility certify vehicles public roads vehicle compliant regulatory framework specific federal legal barriers highly automated vehicle offered sale iyad rahwan associate professor mit media lab people live cars minimize casualties car protect costs industry standards practice systems considered safe real conditions legislation 1968 vienna convention road traffic subscribed 70 countries worldwide establishes principles govern traffic laws fundamental principles convention concept driver control responsible behavior vehicle traffic progress technology assists takes functions driver undermining principle implying groundwork rewritten legal status united united signatory country vienna convention vehicle codes envisage prohibit highly automated vehicles clarify legal status regulate vehicles enacted specific laws 2016 nevada california florida michigan hawaii washington tennessee district columbia enacted laws automated vehicles incidents fatal accident tesla autopilot led discussion revising laws standards automated cars september 2016 national economic council department transportation released federal standards automated vehicles react technology fails protect passenger privacy riders protected event accident federal guidelines meant avoid patchwork laws avoiding overbearing stifle innovation june 2011 nevada legislature passed law authorize automated cars nevada jurisdiction automated vehicles legally operated public roads law nevada department motor vehicles ndmv responsible setting safety performance standards agency responsible designating automated cars tested legislation supported google effort legally conduct testing google driverless car nevada law defines automated vehicle motor vehicle artificial intelligence sensors global positioning coordinates drive active intervention human operator law acknowledges operator pay attention car operating google lobbied exemption ban distracted driving permit occupants send messages sitting wheel law nevada regulations require person wheel passenger seat tests april 2012 florida testing automated cars public roads california governor jerry brown signed law google headquarters mountain view december 2013 michigan fourth testing driverless cars public roads july 2014 city coeur alene idaho robotics ordinance includes provisions driving cars 19 february 2016 assembly 2866 introduced california automated vehicles operate road including driver steering wheel accelerator pedal brake pedal department motor vehicles comply regulations july 2018 rules pass house origin september 2016 department transportation released federal automated vehicles policy california published discussions subject october 2016 december 2016 california department motor vehicles uber remove driving vehicles road response red light violations uber blamed violations human error suspended drivers legislation europe 2013 government united kingdom permitted testing automated cars public roads testing robotic vehicles conducted private property 2014 government france announced testing automated cars public roads allowed 2015 2000 km road national territory bordeaux isère Île france strasbourg 2015 congress conference dedicated intelligent transport systems demonstration automated vehicles road france carried bordeaux october 2015 2015 preemptive lawsuit automobile companies ford toyota accused hawking vehicles vulnerable hackers hypothetically wrest control essential functions brakes steering spring 2015 federal department environment transport energy communications switzerland uvek allowed swisscom driverless volkswagen passat streets zurich april 2017 conduct public road tests development vehicles hungary construction  of closed track zala zone track suitable testing highly automated functions city zalaegerszeg legislation asia 2016 singapore land transit authority partnership automotive supplier delphi automotive plc launch preparations fleet automated taxis demand automated cab service 2017 liability driving car liability developing law policy determine liable automated car physical damage persons breaks road rules automated cars shift control driving humans automated car technology existing liability laws evolve identify parties responsible damage injury address potential conflicts human occupants operator insurers public purse increases automated car technologies advanced driver assistance systems prompt incremental shifts responsibility driving claimed proponents potential affect frequency road accidents difficult assess claim absence data substantial actual dramatic improvement safety operators seek project liability remaining accidents reward improvement obvious reason escape liability effects modest nonexistent purpose liability incentive party controlling avoid causing harm potential users reluctant trust operator seeks pass normal liability advised person controlling car level understandably reluctant accept liability control degree sharing control level advised person concerned vehicle pass control accident pass responsibility liability circumstances potential driver prospects avoiding crash vehicle paying close attention hard smart car hard human operators familiar ignore existing legal obligations motto eek forgiveness permission waymo uber expected avoid responsibility maximum degree potential attempt operators evade held liable accidents control levels automation commercially introduced level insurance industry proportion commercial product liability lines personal automobile insurance shrinks vehicular communication systems individual vehicles benefit vehicles vicinity relating traffic congestion safety hazards vehicular communication systems vehicles roadside units communicating nodes peer peer network providing cooperative approach vehicular communication systems cooperating vehicles effective 2010 study national highway traffic safety administration vehicular communication systems avoid 79 percent traffic accidents 2012 scientists university texas austin developing smart intersections designed automated cars intersections traffic lights signs programs communicate car road 2017 researchers arizona university developed scale intersection proposed intersection management technique called crossroads crossroads resilient network delay v2i communication worst execution time intersection manager 2018 robust approach introduced resilient model mismatch external disturbance wind bump connected cars unconnected weakest link increasingly banned busy speed roads predicted helsinki tank january 2016 public opinion surveys 2011 online survey 006 consumers accenture 49 comfortable driverless car 2012 survey 17 400 vehicle owners power associates 37 initially purchasing autonomous car figure dropped 20 told technology cost 000 2012 survey 000 german drivers automotive researcher puls 22 respondents positive attitude cars undecided 44 skeptical 24 hostile 2013 survey 500 consumers countries cisco systems 57 stated ride car controlled technology require human driver brazil india china trust automated technology 2014 telephone survey insurance quarters licensed drivers buying driving car rising 86 car insurance cheaper 31 continue drive automated car february 2015 survey auto journalists 46 predict tesla daimler market autonomous vehicle 38 daimler predicted functional safe demand autonomous vehicle 2015 questionnaire survey delft university technology explored opinion 000 people 109 countries automated driving respondents average manual driving enjoyable mode driving 22 respondents spend money automated driving respondents concerned software hacking misuse concerned legal issues safety finally respondents developed countries terms accident statistics education income comfortable vehicle transmitting data survey potential consumer opinion purchasing automated car stating 37 surveyed current owners purchasing automated car 2016 survey germany examined opinion 603 people representative terms age gender education german population partially highly automated cars women willingness anxiety joy automated cars women exact gender difference anxiety pronounced women decreased participants age 2016 pwc survey united opinion 584 people highlights 66 percent respondents autonomous cars smarter average human driver people worried safety car hacked 13 interviewees advantages cars pew center survey 135 adults conducted 1–15 2017 americans anticipate impacts automation technologies lifetimes—from widespread adoption automated vehicles replacement entire job categories robot workers moral issues emergence automated automobiles ethical issues introduction automated vehicles mass market inevitable untestable potential reduction crashes 90 potential accessibility disabled elderly passengers range ethical issues addressed include limited moral financial criminal responsibility crashes breaches law decisions car fatal crash privacy issues including potential mass surveillance potential massive job losses unemployment drivers skilling loss independence vehicle users exposure hacking malware concentration market data power hands global conglomerates capable consolidating capacity lobbying governments facilitate shift liability potential destruction existing occupations industries opinions held liable crash people hurt experts car manufacturers responsible crashes occur technical malfunction misconstruction car manufacturer source situation car crashes technical issue reason car manufacturers held responsible encourage innovate heavily invest fixing issues protection brand image financial criminal consequences voices argue owning vehicle held responsible risks involved vehicle experts introducing tax insurances protect owners users automated vehicles claims victims accident parties held responsible technical failure include software engineers programmed code automated operation vehicles suppliers components av question legal liability moral responsibility question arises automated vehicles programmed behave emergency situation passengers traffic participants pedestrians bicyclists drivers endangered moral dilemma software engineer car manufacturer programming operating software ethical experiment trolley conductor trolley choice staying planned track running people trolley track kill person assuming traffic driving car scenario driving passengers suddenly person appears car decide options person avoid hitting person swerving wall killing passengers main considerations addressed moral basis automated vehicle decisions translated software code researchers suggested ethical theories applicable behavior automated vehicles emergency deontology utilitarianism asimov laws robotics typical deontological ethics theory suggests automated car follow strict written rules follow situation utilitarianism suggests idea decision based goal maximize utility definition utility maximizing people surviving crash critics automated vehicles adapt mix multiple theories respond morally instance crash privacy issues interconnectivity automated cars mobile device gather individual gathering ranges tracking routes voice recording video recording preferences media consumed car behavioral patterns streams data communications infrastructure support vehicles capable surveillance coupled data sets advanced analytics implementation automated vehicles mass market cost jobs workforce jobs include drivers taxis buses vans trucks hailing vehicles industries auto insurance industry indirectly industry generates annual revenue 220 supporting 277 000 jobs perspective – mechanical engineering jobs potential loss majority jobs tremendous impact individuals involved india china bans automated cars citing protection jobs anticipated launch cars december 2015 tesla ceo elon musk predicted completely automated car introduced 2018 december 2017 announced launch driving tesla market fiction film automated occasionally sentient driving car story earned literary science fiction pop sci literature intelligent driving cars common theme science fiction literature examples include 
245960	computerscience	instruction level parallelism ilp measure instructions program executed simultaneously approaches instruction level parallelism hardware level dynamic parallelism software level static parallelism dynamic parallelism processor decides time instructions execute parallel static parallelism compiler decides instructions execute parallel pentium processor dynamic sequence parallel execution itanium processor static level parallelism program operation depends operations calculated completed operations depend operation calculated simultaneously assume operation completed unit time instructions completed total units time ilp goal compiler processor designers identify advantage ilp ordinary programs typically written sequential execution model instructions execute programmer ilp compiler processor overlap execution multiple instructions change instructions executed ilp exists programs application specific fields graphics scientific computing workloads cryptography exhibit parallelism micro architectural techniques exploit ilp include ilp exploited compiler hardware support compiler inherent implicit ilp programs hardware compilation optimization optimization techniques extracting ilp programs include scheduling register allocation renaming memory access optimization dataflow architectures class architectures ilp explicitly trips architecture ilp techniques provide performance improvements spite growing disparity processor operating frequencies memory access times ilp designs ibm 360 model 91 ilp techniques overcome limitations imposed register file presently cache penalty main memory costs hundreds cpu cycles principle ilp tolerate memory latencies resource power dissipation costs disproportionate complexity latency underlying hardware structures reduced operating frequency reducing benefits aforementioned techniques prove inadequate cpu stalling chip data industry heading exploiting levels parallelism exploited techniques multiprocessing multithreading 
246007	computerscience	dimensional stereoscopic film dimensional film 3d film s3d film motion picture enhances illusion depth perception adding dimension common approach production 3d films derived stereoscopic photography approach regular motion picture camera record images perspectives generated imagery generates perspectives post production special projection hardware eyewear limit visibility image viewer left eye 3d films limited theatrical releases television broadcasts direct video films incorporated methods advent 3d television blu ray 3d 3d films existed form 1915 relegated niche motion picture industry costly hardware processes required produce display 3d film lack standardized format segments entertainment business 3d films prominently featured 1950s american cinema experienced worldwide resurgence 1980s 1990s driven imax theaters disney themed venues 3d films successful 2000s culminating unprecedented success 3d presentations avatar december 2009 january 2010 timeline patents tests stereoscopic era motion pictures late 1890s british film pioneer william friese greene filed patent 3d film process patent films projected screen viewer looked stereoscope converge images obtrusive mechanics method theatrical practical frederic eugene ives patented stereo camera rig 1900 camera lenses coupled inches 45 centimeters june 1915 edwin porter william waddell tests audience astor theater york city red green anaglyph audience reels tests included rural scenes shots marie doro segment john mason playing passages jim penman film released famous players lasky 3d oriental dancers reel footage niagara falls adolph zukor 1953 autobiography public wrong 50 motion picture industry produced process tests systems stereoscopic filmmaking pre 1952 earliest confirmed 3d film house audience power love premiered ambassador hotel theater los angeles 27 september 1922 camera rig product film producer harry fairall cinematographer robert elder projected dual strip red green anaglyph format earliest film utilized dual strip projection earliest film anaglyph glasses fairall colored filters projection ports tinted prints unknown preview exhibitors press york city film dropped sight booked exhibitors considered lost december 1922 william van doren kelley inventor prizma color cashed growing 3d films started fairall demonstration shot footage camera design kelley struck deal samuel roxy rothafel premiere series plasticon shorts entitled movies future rivoli theater york city december 1922 laurens hammond inventor hammond organ premiered teleview trade press october teleview alternating frame 3d public left eye eye prints interlocked projectors left frames alternately projected pair times suppress flicker viewing devices attached armrests theater seats rotary shutters operated synchronously projector shutters producing clean stereoscopic result theater installed teleview selwyn theater york city short films exhibition live 3d shadows teleview feature weeks business novelty poor reviews teleview 1922 frederic eugene ives jacob leventhal releasing stereoscopic shorts period film entitled plastigrams distributed nationally educational pictures red blue anaglyph format ives leventhal produce stereoscopic shorts stereoscopiks series released pathé films 1925 zowie april luna 18 taxi december 17 ouch december 17 22 september 1924 luna released deforest phonofilm sound film late 1920s 1930s stereoscopic pictures paris louis lumiere shot footage stereoscopic camera september 1933 march exhibited remake 1895 short film arrivée du train time anaglyphic 3d meeting french academy science 1936 leventhal john norling hired based footage film mgm audioscopiks series prints technicolor red green anaglyph format narrated pete smith film audioscopiks premiered january 11 1936 audioscopiks premiered january 15 1938 audioscopiks nominated academy award category short subject novelty 1936 success audioscopiks films mgm produced short anaglyph 3d pete smith specialty called dimensional murder 1941 predecessors short shot studio built camera rig prints technicolor red blue anaglyph short notable live action appearances frankenstein monster conceived jack pierce universal studios company films printed color systems color color printing achieve anaglyph introduction polaroid attending harvard university edwin land conceived idea reducing glare polarizing light leave absence harvard set lab 1929 invented patented polarizing sheet 1932 introduced polaroid sheet commercial product original intention create filter reducing glare car headlights land underestimate utility newly dubbed polaroid filters stereoscopic presentations january 1936 land demonstration polaroid filters conjunction 3d photography waldorf astoria hotel reaction enthusiastic installation york museum science unknown film audiences exhibition polaroid filters meant form projection prints carrying left eye view synced projection external selsyn motor polarized light depolarized matte white screen silver screen screen reflective material correctly reflect separate images feature nozze vagabonde appeared italy germany zum greifen nah touch 1939 germany sechs mädel rollen ins wochenend girls drive weekend italian film gualtierotti camera german productions zeiss camera vierling shooting films exhibited polaroid filters zeiss company germany manufactured glasses commercial basis commencing 1936 independently time germany käsemann mahler 1939 john norling shot tune tomorrow commercial 3d film polaroid short premiered 1939 york fair created chrysler motors pavilion 1939 chrysler plymouth magically set music originally black white film popular shot color fair title dimensions 1953 reissued rko motor rhythm short utilized polaroid 3d process 1940 produced pennsylvania railroad golden gate international exposition produced john norling filmed jacob leventhal rig consisted shots views pennsylvania railroad trains 1940s war prioritized military applications stereoscopic photography burner producers minds golden era 1952–1954 aficionados golden era 3d late 1952 release color stereoscopic feature bwana devil produced written directed arch oboler film shot natural vision process created controlled gunzberg gunzberg built rig brother julian associates shopped success studios oboler feature production title lions gulu critically panned film highly successful audiences novelty 3d increased hollywood 3d period declining box office admissions practically features boom bwana devil projected dual strip polaroid filters 1950s familiar disposable anaglyph glasses cardboard comic books shorts exploitation specialist dan sonney shorts produced lippert productions lippert shorts dual strip format alternatively features utilized projectors capacity limit film loaded projector hour worth film meant intermission feature film intermission written script major plot christmas 1952 producer sol lesser premiered dual strip showcase called stereo techniques chicago lesser acquired rights dual strip shorts time glasses directed norman mclaren 1951 national film board canada films produced britain festival britain 1951 raymond spottiswoode solid explanation royal river black swan james mage pioneer 3d craze 16 mm 3d bolex premiered triorama program february 1953 shorts sunday stereo indian summer american life bolex stereo considered lost 3d film boom lippert productions short day country narrated joe besser composed footage lippert shorts dual strip anaglyph production released anaglyph april 1953 groundbreaking features 3d columbia dark warner bros house wax 3d feature stereophonic sound house wax cinerama time american audiences heard recorded stereophonic sound film typecast vincent price horror star king actor star 3d features mad magician dangerous mission son sinbad success films proved major studios method filmgoers theaters television sets causing steady decline attendance walt disney studios waded 3d 28 1953 release melody accompanied 3d western columbia fort ti los angeles disneyland fantasyland theater 1957 program disney short peanuts entitled jamboree hosted mousketeers color universal international released 3d feature 27 1953 outer space stereophonic sound paramount feature sangaree fernando lamas arlene dahl columbia released 3d westerns produced sam katzman directed william castle castle specialize technical theater gimmicks columbia allied artists features 13 ghosts house haunted hill tingler columbia produced slapstick comedies conceived 3d stooges starred spooks pardon backfire dialect comic harry mimmo starred hatch producer jules white optimistic possibilities 3d applied slapstick pies projectiles aimed audience stereoscopic shorts 3d hatch released conventional flat motion picture columbia printed hatch 3d film festivals john ireland joanne dru macdonald carey starred jack broder color production hannah lee premiered june 19 1953 film directed ireland sued broder salary broder counter sued claiming ireland production costs film famous entry golden era 3d dimensional pictures production robot monster film allegedly scribed hour screenwriter wyott ordung filmed period weeks shoestring budget shortcomings crew previous experience newly built camera rig luck cinematographer 3d photography film shot aligned robot monster notable score coming composer elmer bernstein film released june 24 1953 short stardust eyes starred nightclub comedian slick slavin 20th century fox produced 3d feature inferno 1953 starring rhonda fleming fleming starred redheads seattle jivaro shares spot actress 3d features patricia medina starred sangaree phantom rue morgue drums tahiti darryl zanuck expressed stereoscopic systems preparing premiere widescreen film cinemascope decline theatrical 3d craze started august september 1953 factors causing decline projection booth operators times careless preview screenings 3d films trade newspaper critics claimed films hard eyes sol lesser attempted follow stereo techniques showcase time shorts produced project called follies distributed rko financial difficulties loss 3d lesser canceled project summer 1953 3d film aborted production shorts shot carmenesque burlesque starring exotic dancer lili cyr fun sun sports short directed famed set designer director william cameron menzies directed 3d feature maze allied artists expensive install major competing realism process anamorphic utilized fox cinemascope september premiere robe anamorphic features single print synchronization issue cinerama competitor start quality control 3d owned company focused quality control 3d features summer 1953 released flat widescreen formats ranging 66 85 studio advertisements articles widescreen 3d formats widescreen systems referred 3d causing confusion scholars single instance combining cinemascope 3d 1960 film called september storm blow anamorphic negative september storm dual strip short space attack shot 1954 title adventures sam space december 1953 3d comeback release 3d films including mgm musical kiss kate kate hill 3d pass survive mgm tested theaters 3d flat trade ads time 3d version received film wide stereoscopic release publications including kenneth macgowan classic film reference book screen film regular release film adapted popular cole porter broadway musical starred mgm songbird team howard keel kathryn grayson leads supported ann miller keenan wynn bobby van james whitmore kurt kasznar tommy rall film prominently promoted stereophonic sound features helped 3d map month john wayne feature hondo distributed warner bros columbia sadie thompson rita hayworth paramount money dean martin jerry lewis paramount released cartoon shorts boo moon casper friendly ghost popeye ace space popeye sailor paramount pictures released 3d korean war film cease filmed actual korean locations 1953 banana based popular stage musical phil silvers brought screen original cast filmed stage production idea audience feel seat house color photography 3d film shot edited 3d united artists distributor production uneconomical stereoscopic form released film flat january 27 1954 remains golden era 3d features united artists feature southwest passage john ireland joanne dru considered lost flat versions survive string successful films filmed 3d wave exclusively flat highlights 3d final decline late spring 1954 reasons previous lull success widescreen formats theater operators polaroid created designed tale filter kit purpose recognizing adjusting sync phase 3d exhibitors uncomfortable focus processes cinemascope 3d feature released format golden era revenge creature february 23 1955 ironically film wide release 3d received box office revival 1960–1984 single strip format stereoscopic films remained dormant 1960s released anaglyph exploitation films film notoriety beaver champion warner bros production mask 1961 film shot enhance bizarre qualities dream induced main character cursed tribal mask scenes anaglyph 3d scenes printed technicolor red green anaglyph 3d films appeared sparsely 1960s true wave 3d cinema set motion arch oboler producer started craze 1950s technology called space vision 3d origin space vision 3d colonel robert vincent bernier forgotten innovator history stereoscopic motion pictures trioptiscope space vision lens gold standard production exhibition films 30 space vision 3d stereoscopic films printed images single academy ratio frame single strip projector fitted special lens called technique eliminated dual projector set produced widescreen darker vivid polarized 3d images earlier dual stay perfect synchronization improperly spliced repair arch oboler vision touch film entitled bubble starred michael cole deborah walley johnny desmond bwana devil critics panned bubble audiences flocked financially sound promote studios independents money expensive dual strip prints productions 1970 stereovision entity founded director inventor allan silliphant optical designer chris condon developed 35 mm single strip format printed images squeezed anamorphic lens widen pictures polaroid filters louis sher sherpix stereovision released softcore sex comedy stewardesses rated rated mpaa film cost 100 000 produce months markets eventually earning 27 million north america 140 million constant 2010 dollars 800 theaters profitable dimensional film purely relative terms profitable films released 70 mm 3d 36 films worldwide stereovision 25 widescreen anamorphic 70 mm 3d formats 2009 stewardesses remastered chris condon director meyer releasing xpand 3d reald cinema dolby 3d quality 1970s 3d films inventive softcore hardcore adult films horror films combination paul morrisey flesh frankenstein aka andy warhol frankenstein superlative combination 1981 1983 hollywood 3d craze started spaghetti western comin ya parasite released billed horror film 3d 20 horror films reissues 1950s 3d classics hitchcock dial murder dominated 3d releases sequel friday 13th series friday 13th iii released 3d considered cumbersome shortened titles jaws amityville emphasized screen effects annoying times flashlights shone eyes audience science fiction film expensive 3d film production costs star wars box office success causing craze fade spring 1983 sci fantasy films released including treasure crowns criticized poor editing plot holes feature spectacular closeups 3d releases craze included 1983 silent madness 1985 animated film plot borrow heavily star wars comin ya parasite friday 13th iii officially released vhs dvd 3d united amityville 3d 3d dvd release united kingdom 1980s 3d films classic 1950s films house wax released defunct video disc vhd format japan shutter glasses unofficially transferred dvd grey market sites ebay stereoscopic movies popular kuttichathan malayalam film shot stereoscopic 3d released 1984 rebirth 3d 1985–2003 mid 1980s imax producing fiction films nascent 3d business starting born stars roman kroitor 1985 key production subsequent imax productions emphasized mathematical correctness 3d rendition eliminated eye fatigue pain approximate geometries previous 3d incarnations addition contrast previous 35mm based 3d presentations field view imax allowed broader 3d stage arguably 3d film theatre walt disney company prominent 3d films special venues impress audiences magic journeys 1982 captain eo francis ford coppola 1986 starring michael jackson notable examples national film board canada production transitions colin created expo 86 vancouver imax presentation polarized glasses echoes sun roman kroitor 1990 imax film alternate eye shutterglass technology development required dome screen precluded polarized technology 1990 onward numerous films produced parties satisfy demands profile special attractions imax expanding 3d network films special note period include extremely successful deep graeme ferguson 1995 imax 3d fiction film wings courage 1996 director jean jacques annaud pilot henri guillaumet stereoscopic films produced period include 2004 54 imax theaters 133 248 capable 3d films shortly quality animation competition dvds media digital projection digital video capture sophisticated imax 70mm film projectors created opportunity wave 3d films mainstream resurgence 2003–present 2003 ghosts abyss james cameron released 3d imax feature filmed reality camera camera hd video cameras film built cameron vince pace specifications camera film 2003 aliens deep imax 2005 adventures sharkboy lavagirl 2005 2004 las vegas hilton released included films films borg invasion ty granoroli 3d august rap insane clown posse released ninth studio album pit versions album contained dvd featuring 3d short film track bowling balls shot definition video november 2004 polar express released imax animated 3d feature released 584 theaters 2d 66 imax locations return 3d theaters 25 total 3d version earned 14 times screen 2d version pattern continued prompted greatly intensified 3d 3d presentation animated films june 2005 mann chinese theatre hollywood commercial film theatre equipped digital 3d format singin rain polar express tested digital 3d format months november 2005 walt disney studio entertainment released chicken digital 3d format butler love short film directed david arquette starring elizabeth berkley thomas jane released june 23 2008 film shot industrial light magic studios kernerfx prototype kernercam stereoscopic camera rig ben walters suggests filmmakers film exhibitors regain 3d film 3d exhibition equipment dramatic films shot 3d format incentive technology mature shooting 3d format limited result stable incentive 2d ticket sales decline revenues 3d tickets continue grow entire history 3d presentations techniques convert existing 2d images 3d presentation existed effective survived combination digital digitized source material cost effective digital post processing spawned wave conversion products june 2006 imax warner bros released superman returns including 20 minutes 3d images converted 2d original digital footage george lucas announced release star wars films 3d based conversion process company 2011 announced lucas company prime focus conversion late 2005 steven spielberg told press involved patenting 3d cinema glasses based plasma screens splits film frame projects split images screen differing angles picked tiny angled ridges screen animated films season ant bully released analog 3d 2006 monster house nightmare christmas released xpand 3d reald dolby 3d systems 2006 19 2007 scar3d cannes film market produced 3d feature film completed real 3d film box office countries including russia 3d 295 screens january 19 2008 u2 3d released live action digital 3d film 3d films included journey center earth bolt january 16 2009 lionsgate released bloody valentine 3d horror film rated film projected real 3d released 033 3d screens format 501 regular screens rated film final destination released august screens series released hd 3d major 3d films 2009 included coraline monsters aliens final destination disney christmas carol avatar avatar expensive films time budget 237 grossing film time main technologies exhibit films released time real 3d dolby 3d xpand 3d masterimage 3d imax 3d march april 2010 major 3d releases clustered alice wonderland hitting theaters march 2010 train dragon march 26 2010 clash titans april 2010 13 china imax 3d film started shooting pre production 3d film shot france derrière les murs 2010 released mid 2011 october 2010 scar3d stereoscopic 3d video demand film released major cable broadcasters 3d televisions united released united 21 2010 shrek dreamworks animation paramount pictures real 3d released imax 3d expositions september 2003 sabucat productions organized exposition celebrating 50th anniversary original craze expo held grauman egyptian theatre week festival 30 50 golden era stereoscopic features shorts screened coming collection film historian archivist robert furmanek spent previous 15 painstakingly tracking preserving film original glory attendance stars film moved tears sold seating audiences film buffs remember previous glories 2006 exposition announced september film preservation fund favorites previous exposition newly discovered features shorts previous expo guests film expo announced locale premiere films 3d including diamond wizard universal short hawaiian nights mamie van doren pinky lee premieres films original release stereoscopic form included cease taza son cochise wings hawk redheads seattle lost shorts carmenesque day country 1953 william van doren kelley plasticon shorts 1922 1923 reported audience decline wake initial popularity increase screens films released 3d format instance 45 premiere weekend box office earnings kung fu panda 3d screenings opposed 60 shrek 2010 addition premiere cars weekend gross consisted 37 3d theatres harry potter deathly hallows – major releases achieved percentages 43 40 view trend box office analysis concluding implementation 3d presentation backfiring discouraging people film theatres brandon gray box office mojo notes 3d money people approach simply led money people motion picture association america record total 47 3d films released 2011 domestic box office receipts 18 2010 revenues increased 2012 bulk 2d presentations exemplified 50 filmgoers opting likes avengers 32 choosing brave 3d versions conflicting reasons offered studios exhibitors blame expensive 3d ticket prices argue quality films fault perceived decline 3d market studio chiefs optimistic receipts internationally appears strong appetite format studios 3d generate additional income films commercially successful releases involve conversion 2d disney reissued lion king beauty beast plans add titles titanic modified 3d plans star wars films jeffrey katzenberg producer 3d films leading proponents format blames oversaturation market inferior films photographed conventionally digitally processed post production claims films led audiences conclude format worth ticket price daniel engber columnist slate conclusion happened died acute septicemia—too crap global box office films combined 2d 3d versions achieved grosses 2011 2010 2009 film critic mark kermode detractor 3d surmised emerging policy distributors limit availability 2d versions railroading 3d format cinemas paying filmgoer likes prevalent release prometheus 2012 30 prints theatrical exhibition 2d suspicions reinforced substantial complaints dredd wished 2d denied opportunity july 2017 imax announced focus screening hollywood tentpole movies 2d 3d version 3d screenings movies north america citing moviegoers north america prefer 2d films 3d films techniques stereoscopic motion pictures produced variety methods popularity systems employed film theaters waxed waned anaglyph prior 1948 golden era 3d cinematography 1950s polarization single feature film united short film 21st century polarization 3d systems continued dominate scene 1960s 1970s classic films converted anaglyph theaters equipped polarization 3d television mid 1980s films short segments anaglyph 3d technical details methodologies employed notable 3d film systems developed producing 3d films live action standard shooting live action films 3d involves cameras mounted lenses average pair human eyes recording separate images left eye eye principle normal 2d cameras problematic real option invest stereoscopic cameras cinematographic tricks simple 2d camera impossible filming 3d cheap tricks replaced expensive cgi 2008 journey center earth live action feature film shot earliest fusion camera released digital 3d avatar 2009 shot 3d process based human eye image improvement existing 3d camera 3d camera rigs simply pair cameras rigs paired beam splitter camera lenses built unit digital cinema cameras requirement 3d predominant medium photographed film options include imax 3d cine 160 animation 1930s 1940s fleischer studio cartoons extensive stereoscopic 3d backgrounds including popeye betty boop superman cartoons mid 1950s major animation film studios operation experimented creating traditional 3d animated short subjects walt disney studio produced traditional animation short stereoscopic 3d cinemas 1952 donald duck cartoon peanuts 1953 warner brothers produced single cartoon 3d lumber jack rabbit 1953 starring bugs bunny famous studio produced cartoons 3d popeye cartoon popeye ace space 1953 casper friendly ghost cartoon boo moon 1954 walter lantz studio produced woody woodpecker cartoon hypnotic hick 1953 distributed universal late 1950s mid 2000s animation produced 3d display theaters films 3d backgrounds exception cgi animated films rendered stereoscopic 3d version virtual cameras motion animated 3d films photographed cameras live action 3d films 2004 polar express stereoscopic 3d animated feature film 3d version solely release imax theaters november 2005 walt disney studio entertainment released chicken digital 3d format disney cgi animated film 3d film converted 2d 3d post production nwave pictures fly moon 3d 2008 animated film created 3d released exclusively 3d digital theaters animation films released solely 3d 3d feature dreamworks animation monsters aliens 2009 digital rendering process called intru3d developed intel create realistic animated 3d images intru3d exhibit 3d films theaters reald 3d imax 3d 2d 3d conversion 2d cgi animated films generated 3d models return models generate 3d version 2d films techniques employed 3d release 1993 film nightmare christmas walt disney pictures scanned original frame manipulated produce left eye eye versions dozens films converted 2d 3d approaches 2d 3d conversion notably depth based methods conversion 3d unavailable 2d perspective view tvs 3d engine convert 2d content 3d frame rate content slower processors normal frame rate processor fast lag lead strange visual effects displaying 3d films anaglyph anaglyph images earliest method theatrical 3d commonly stereoscopy public theatrical 3d media comic books 3d television broadcasts polarization practical popular ease production exhibition anaglyph film invented 1915 edwin porter earliest theatrical presentations 3d films 1950s 1980s originally polarized anaglyph images superimposed additive light setting filters red cyan subtractive light setting images printed complementary colors white paper glasses colored filters eye separate images canceling filter color rendering complementary color black anaglyph images easier view parallel sighting crossed eye stereograms types offer bright accurate color rendering red component muted desaturated color anaglyphs compensating technique commonly anachrome transparent cyan filter patented glasses technique process reconfigures typical anaglyph image parallax alternative usual red cyan filter anaglyph colorcode patented anaglyph invented anaglyph image conjunction ntsc television standard red channel compromised colorcode complementary colors yellow dark blue screen colors glasses lenses amber dark blue polarization 3d standard theatrical presentations bwana devil 1952 imax presentations eclipse 1960s 1970s classic 3d films converted anaglyph special presentations polarization color fidelity ghosting anaglyph post 50s era anaglyph polarization feature presentations film 3d 3d segment 3d segments anaglyph printed materials 3d television broadcasts polarization practical 3d polarized televisions displays manufacturers 2008 generate polarization receiving polarization systems stereoscopic motion picture images projected superimposed screen polarizing filters viewer wears cost glasses pair polarizing filters oriented clockwise counterclockwise circular polarization 90 degree angles 45 135 degrees linear polarization filter passes light polarized blocks light polarized eye image produce dimensional projecting scene eyes depicted perspectives head tracking involved entire audience view stereoscopic images time additionally lenses color people dominant eye amblyopia eye 3d negated separation colors circular polarization advantage linear polarization viewer head upright aligned screen polarization properly linear polarization glasses sideways filters alignment screen filters causing image fade eye frame easily circular polarization polarizing viewer head aligned screen tilted sideways upside left eye image intended vice versa fading crosstalk 3d cinema films viewed head tilt head tilt result incorrect parallax prevent binocular fusion reald circularly polarizing liquid crystal filter switch polarity 144 times projector lens projector left eye images displayed alternately sony features called reald xls circular polarized images simultaneously single 4k projector 4096×2160 resolution displays 2k images 2048×1080 resolution time special lens attachment polarizes projects images optical attachments traditional 35mm projectors adapt projecting film format pair images stacked frame film images projected polarizers superimposed screen cost effective convert theater attachments depolarizing screen surface conversion digital projection thomson technicolor produces adapter type metallic screen systems reflection metallic surfaces destroys polarization light polarized stereoscopic pictures 1936 edwin land applied motion pictures called movie craze 1952 1955 offered theaters linear polarizing projection glasses minute total 3d films period anaglyph color filter method linear polarization consumer level stereo projectors polarization 3d revival 1980s 2000s animation competition dvds media digital projection sophisticated imax 70mm film projectors created opportunity wave polarized 3d films types polarization result darkening displayed image poorer contrast compared 3d images light lamps emitted random collection polarizations polarization filter passes fraction light result screen image darker darkening compensated increasing brightness projector light source initial polarization filter inserted lamp image generation element light intensity striking image element normal polarizing filter image contrast transmitted screen active shutter technology mechanism block light eye converse eye image projected screen technology originated eclipse method projector alternates left images closes shutters glasses viewer synchronization images screen basis teleview 1922 implementation eclipse method lcd shutter glasses glasses liquid crystal light synchronization images cinema television screen concept alternate frame sequencing method nvidia xpand 3d earlier imax systems drawback method person viewing wear expensive electronic glasses synchronized display wireless signal attached wire shutter glasses heavier polarized glasses lighter models heavier sunglasses deluxe polarized glasses systems require silver screen projected images liquid crystal light valves rotating light polarizing filters internal polarizers lcd shutter glasses darken display image lcd plasma projector image source result images dimmer contrast normal 3d viewing usage types displays bright poor grayish black levels lcd shutter glasses improve image quality interference filter technology dolby 3d specific wavelengths red green blue eye wavelengths red green blue left eye glasses filter specific wavelengths wearer 3d image technology eliminates expensive silver screens required polarized systems reald common 3d display theaters require expensive glasses polarized systems spectral comb filtering wavelength multiplex visualizationthe introduced omega 3d panavision 3d technology wider spectrum teeth comb eye omega panavision spectral bands eye eliminates color process image required dolby dividing visible spectrum eyes viewer relaxed feel light energy color balance 50 50 dolby omega white silver screens film digital projectors dolby filters digital color correcting processor dolby omega panavision claims glasses cheaper manufacture dolby june 2012 omega 3d panavision 3d discontinued dpvo theatrical marketed behalf panavision citing challenging global economic 3d market conditions dpvo dissolved business operations omega optical continues promoting selling 3d systems theatrical markets omega optical 3d projection filters 3d glasses addition passive stereoscopic 3d omega optical produced enhanced anaglyph 3d glasses omega red cyan anaglyph glasses complex metal oxide film coatings quality annealed glass optics autostereoscopy method glasses stereoscopic image lenticular lens parallax barrier technologies involve imposing images sheet narrow alternating strips screen blocks images strips parallax barriers equally narrow lenses bend strips image entire image lenticular prints produce stereoscopic person positioned eye images images projected gain corrugated screen reflects light acute angles stereoscopic image viewer sit narrow angle perpendicular screen limiting size audience lenticular theatrical presentation numerous shorts russia 1940–1948 1946 feature film robinson crusoe theatrical presentations limited lenticular variety novelty items amateur 3d photography includes fujifilm finepix real 3d autostereoscopic display released 2009 examples technology include autostereoscopic lcd displays monitors notebooks tvs mobile phones gaming devices nintendo 3ds health effects viewers complained headaches eyestrain watching 3d films motion sickness addition health concerns easily induced 3d presentations published study watch 3d films 55 experience varying levels headaches nausea disorientation primary effects 3d film unnatural human vision crosstalk eyes caused imperfect image separation mismatch convergence accommodation caused difference object perceived position screen real origin light screen believed 12 people unable properly 3d images variety medical conditions experiment 30 people weak stereoscopic vision preventing depth perception based stereo disparity nullifies greatly decreases immersion effects digital stereo discovered rods cones animal eyes measure distance object focus rod cone rod cone passive lidar light detection ranging lens selects object pixel distance measured humans 3d separately eye brain ability addition stereoscopic cues stereoscopic true 3d picture brain french national agency anr sponsored multidisciplinary understand effects 3d film viewing grammar acceptance criticism cues required provide humans relative depth traditional 2d films closer objects occlude distant objects desaturated hazy relative brain subconsciously distance objects height human figure subtending screen 2 m tall 10 cm tall close depth cues 2d films stereopsis parallax focus eyeball accommodation 3d film addresses accurate presentation stereopsis accommodation insufficient providing complete 3d illusion promising aimed overcoming shortcoming 2010 stereoscopic displays applications conference san jose film critic mark kermode argued 3d adds film avatar impressive film 3d kermode outspoken critic 3d film describing nonsense recommends left lenses 3d glasses cut pointy pointy 3d stereoscopic vision technique improve huge brightness loss 3d film versions glasses marketed article virtual space – movies future real life 3d stereoscopic vision depends distance eyes inches depth perception affords noticeable head – arms tasks threading needle films portraying real life close camera 3d noticeable forgotten film proceeds director christopher nolan criticised notion traditional film depth perception misnomer 3d 2d cinematic imagery dimensional 95 depth cues occlusion resolution color idea calling 2d movie 2d movie misleading nolan criticised shooting required digital video offer quality image 3d cameras equipped prime zoom lenses late film critic roger ebert repeatedly criticized 3d film dim distracting nausea inducing argued expensive technology adds film experience films provide sufficient illusion 3d ebert opposed option opposed replacement traditional film preferred technologies maxivision48 improve image resolution frames brightness concerns 3d systems cut brightness picture considerably – light loss 88 loss compensated running projector bulb power powerful bulbs 2d brightness cinema standard 14 foot lamberts 48 candela square metre set smpte standard 196m official standard 3d brightness industry facto standard acceptable brightness range 5 fl 12 cd m2 – 25 standard 2d brightness christopher nolan criticized huge brightness loss aware eye compensates struggled theaters proper brightness sticking polarized filters september 2012 dci standards body issued recommended practice calling 3d projection brightness 7 fl 24 cd m2 acceptable range 5–9 fl 17–31 cd m2 theaters achieve light levels current technology prototype laser projection systems reached 14 fl 48 cd m2 3d cinema screen studiodaily 2012 08 christie screen scorseses hugo 3d laser projection ibc post conversion major criticism films 21st century filmed 3d converted filming filmmakers criticized quality process include james cameron film avatar created 3d ground portions film created 2d credited revival 3d michael bay cameron quality 2d 3d conversions time director involved contrast animated films original models rendered 3d easily depth inferred approximated toy story 
253418	computerscience	dna computing branch computing dna biochemistry molecular biology hardware traditional silicon based technologies development concerns theory experiments applications dna computing term molectronics term earlier technology unsuccessful rival integrated circuits history field initially developed leonard adleman university southern california 1994 adleman demonstrated proof concept dna form computation solved hamiltonian path initial adleman experiments advances turing machines proven constructible initial approach tackle hard realized suited type computation proposals killer application approach 1997 scientist mitsunori ogihara biologist animesh ray suggested evaluation boolean circuits implementation 2002 researchers weizmann institute science rehovot israel unveiled programmable molecular computing machine composed enzymes dna molecules silicon microchips april 28 2004 ehud shapiro yaakov benenson binyamin gil uri ben dor rivka adar weizmann institute announced journal nature constructed dna coupled input output module theoretically capable diagnosing cancerous activity cell releasing anti cancer drug diagnosis january 2013 researchers store jpeg photograph set shakespearean sonnets audio file martin luther king jr speech dream dna digital data storage march 2013 researchers created transcriptor biological transistor august 2016 researchers crispr gene editing insert gif galloping horse rider dna living bacteria idea organisation complexity living based coding functioning key components dna molecule dna suited medium data processing calculations dna liter fluid grams dna memory capacity 3072 exabytes theoretical maximum data transfer speed enormous massive parallelism calculations 1000 petaflops reached powerful computers dozen 99 petaflops current record pros cons slow processing speed dna response time measured minutes hours days milliseconds compensated potential multiple parallel computations time complex calculation simple achieved millions billions molecules interact simultaneously harder analyze answers dna digital examples prototypes 1994 leonard adleman prototype dna 100 tube filled 100 microliters dna solution managed solve instance directed hamiltonian path aldeman experiment hamiltonian path implemented notationally “travelling salesman problem” purpose dna fragments created representing city visited fragments capable linkage fragments created dna fragments produced mixed tube fragments form bigger representing travel routes chemical reaction lasts days dna fragments representing routes eliminated remains solution current technical limitations prevent evaluation experiment isn’t suitable application proof concept combinatorial leonard adleman nasa jpl tic tac toe game 2002 macdonald stefanovic stojanovic created dna play tic tac toe human player calculator consists bins squares game bin substrate combinations dna enzymes substrate composed dna strand grafted fluorescent chemical repressor fluorescence active molecules substrate cut dna enzymes simulate logical functions dna unfold specific types dna strand introduced reproduce logic function default considered played central square human player starts types dna strands remaining boxes played play box human player pours bins strands input strands bind dna enzymes bins bins deformation dna enzymes binds substrate cuts bin fluorescent indicating box played dna dna enzymes divided bins insure human player achieve draw real tic tac toe neural network based computing kevin cherry lulu qian caltech developed dna based artificial neural network recognize 100 bit hand written digits achieve programming advance set weights represented varying concentrations weight molecules tube holds input dna strands capabilities dna computing form parallel computing takes advantage molecules dna possibilities specialized dna computers faster built mathematical computations demonstrated dna dna molecules utilized tackle assignment jian jun shu colleagues built dna gps conduct experiment magnetic fields enhance charge transport dna protein organisms sense magnetic fields aran nayebi implementation strassen matrix multiplication algorithm dna scaling addition caltech researchers created circuit 130 unique dna strands calculate square root 15 salehi coding referred fractional coding chemical reactions dna reactions compute polynomials fractional coding dna molecules represent variable dna computing provide capabilities standpoint computability theory study computationally solvable models computation space required solution grows exponentially size expspace von neumann machines grows exponentially size dna machines expspace dna required practical methods multiple methods building computing device based dna advantages disadvantages build basic logic gates digital logic dna basis bases include dnazymes deoxyoligonucleotides enzymes toehold exchange dnazymes catalytic dna deoxyribozyme dnazyme catalyze reaction interacting input matching oligonucleotide dnazymes build logic gates analogous digital logic silicon dnazymes limited input gates current implementation evaluating statements series dnazyme logic gate structure binds matching oligonucleotide fluorogenic substrate bonded cleaved materials models fluorescence based substrate easy detect single molecule limit fluorescence measured reaction dnazyme “used initiate reactions reactions device continuous stirred tank reactor product removed molecules commonly dnazymes named e6 17 popular cleaving substrate arbitrary location stojanovic macdonald e6 dnazymes build maya maya machines stojanovic demonstrated logic gates 17 dnazyme dnazymes demonstrated constructing logic gates limited metal cofactor function zn2 mn2 vivo design called stem loop consisting single strand dna loop dynamic structure closes piece dna bonds loop exploited create logic gates logic gates create computers maya maya play tic tac toe extent enzymes enzyme based dna computers form simple turing machine analogous hardware form enzyme software form dna benenson shapiro colleagues demonstrated dna foki enzyme expanded automata diagnose react prostate cancer expression genes ppap2b gstp1 expression pim1 hpn automata evaluated expression gene gene time positive diagnosis released single strand dna molecule ssdna antisense mdm2 mdm2 repressor protein 53 tumor suppressor negative diagnosis decided release suppressor positive diagnosis drug limitation implementation separate automata required administer drug entire process evaluation drug release hour complete method requires transition molecules foki enzyme requirement foki enzyme limits application vivo cells organisms oftware molecules reused toehold exchange dna computers constructed concept toehold exchange input dna strand binds sticky toehold dna molecule displace strand segment molecule creation modular logic components gates signal amplifiers linked arbitrarily computers class dna computers require enzymes chemical capability dna algorithmic assembly dna nanotechnology applied field dna computing dna tiles designed multiple sticky sequences chosen wang tiles dx array demonstrated assembly encodes xor operation dna array implement cellular automaton generates fractal called sierpinski gasket computation incorporated assembly dna arrays increasing scope simple periodic arrays alternative technologies partnership ibm caltech established 2009 aiming dna chips production caltech manufacturing nucleic acid based integrated circuits chips compute square roots compiler written perl 
253838	computerscience	prodos operating systems apple series personal computers original prodos renamed prodos version official operating usable bit apple series computers distributed 1983 1993 prodos 16 gap solution 16 bit apple replaced os prodos marketed apple meaning professional disk operating popular operating apple series computers months release january 1983 background prodos released address shortcomings earlier apple operating called simply dos age apple dos built support 25 floppy disks requires patches peripheral devices hard disk drives disk floppy disk drives including floppy drives prodos adds standard method accessing rom based drivers expansion cards disk devices expands maximum volume size 400 kilobytes 32 megabytes introduces support hierarchical subdirectories vital feature organizing hard disk storage space supports ram disks machines 128kb memory prodos addresses handling hardware interrupts includes defined documented programming expansion interface apple dos lacked prodos includes support real time clock rtc support unused release apple apple series include rtc board party clocks iie iic prodos earlier apple dos versions developmental roots sos operating fated apple iii released 1980 pre release documentation prodos including editions beneath apple prodos documented sos error codes notably switched disks prodos generate disk format programming interface completely apple dos prodos read write dos disks conversion utility level track sector format dos disks retained 25 inch disks level arrangement files directories completely reason machine language programs apple dos prodos basic programs require minor party program called dos master enables users multiple virtual dos partitions larger prodos volume release prodos support integer basic original apple model effectively supplanted applesoft basic apple dos loads built support basic programming prodos job separate program called basic launches write applesoft basic programs basic continued built apple roms basic command interpreter enhancement basic programs access prodos control output dos basic requires memory dos prodos kernel stowed language card ram usable ram basic programmers remains prodos dos prodos advantages users programmers resisted time investment learning ins outs apple dos apple dos based software data formats contributing reason prodos 15 characters filename compared apple dos 30 apple integrated software package appleworks released 1984 proved compelling reason switch 1985 software products released operating apple iis continued boot dos apple iigs boot dos floppies floppies hard disks prevalent users spent bulk time prodos apple iie released 1983 apple 64kb memory built apple shipped dos prodos computers original prodos renamed prodos prodos 16 released support 16 bit apple prodos 16 replaced os requirements editions prodos require apple series licensed compatible prodos requires 64kb memory original prodos requires 48kb kernel programs including basic applesoft basic require 64kb 48kb useless prodos practical matter support 48kb machines removed version prodos version requires 65c02 65802 65816 cpu prodos runs 64kb utility programs disk require 128kb systems 6502 cpu 65c02 prodos versions prior version unofficial prodos released august 16 2016 removes 65c02 requirement apple computers 64 kb ram basic requires applesoft rom prodos 16 requires apple iigs unlicensed apple clones release prodos version 01 check running official apple manufactured word apple rom firmware prodos load normal golden franklin elite prodos refuses locking boot splash screen measure apple discourage unlicensed apple clones versions prodos clones users apply byte patch successive version prodos users replacing physical rom chip illegal copied version apple rom failing custom patched rom apple disk support prodos natively supports disk compatible floppy drives ram drive 59kb computers 128k ram block devices controllers support pascal firmware protocol standardized method accepting block reads writes originally introduced ucsd category includes disk hard drives custom block device drivers hooked os file prodos file earlier apple sos apple iii sos prodos file native apple sos prodos prodos 16 os classic mac os versions file translator handle file volume allocated 512 byte blocks 25 floppy disks formatted 256 byte sectors format required controller rom boot disk prodos simply treats pairs 256 byte sectors single block drives volume capacity 32 megabytes file 16 megabytes volume floppy disk hard drive partition volume filename base directory volumes volume result conflicts prodos searches drives named volume subdirectories supported concept prefix directory current path subdirectories easier file directory volume names 15 characters starting letter letters digits periods file entry 16 bit byte pointer block file block 16 bit block count 24 bit byte file size bit byte filetype 16 bit auxiliary type meaning depends filetype creation modification timestamps data file stored volume sparse files supported files sparsified removing filled blocks volume header relevant volumes directories including root directory sequentially indexed block starting address previous block subsequent block root directory disks initialized blocks allowing 51 entries excluding volume header size manual intervention special tools subdirectories block grow automatically normal files progressively indexed single block files 513 bytes block directory entry block file data files 256 blocks 513 bytes 128 kb data single block directory entry list 256 data block addresses larger files master block list 256 block addresses apple iigs introduced storage format introduced files forks typical iigs program files directory entry informational block tells storage format forks files read written natively prodos volume remains compatible volume bitmap blocks central file allocation table prodos volume formatted apple tools boot sector supports booting prodos sos depending booted block apple boot block block boots sos disk boot apple apple iii computers putting operating kernels directory apple boot sector file prodos apple iii boot sector file sos kernel party formatting utilities provide sos boot block mark block user data prodos kernel support file systems conversion utility main disk transfer files individually prodos apple dos disks level disk format dos prodos transferring data dos disks prodos step process dos disk intermediary utilizing dos utility muffin 
253848	computerscience	apple dos family disk operating systems apple series microcomputers late 1978 1983 superseded prodos 1983 apple dos major releases dos dos dos releases minor bug release apple dos minor release receive version apple dos version apple dos 1980 1983 releases prior release apple dos apple users rely audio cassette tapes data storage retrieval method notoriously slow inconvenient unreliable version history apple introduced apple april 1977 disk drive disk operating dos apple founder steve wozniak designed disk controller late believed written dos founder steve jobs decided outsource task company considered digital cp wozniak sought operating easier april 1978 apple signed 13 000 contract shepardson microsystems write dos deliver 35 days apple detailed specifications apple employee randy wigginton closely shepardson paul laughton wrote operating punched cards minicomputer apple dos versions serially enumerated revisions development called builds 28 apple dos renamed issue version publicly released bugs dismay programmers apple published official documentation release apple dos publicly released june 1978 apple introduced disk based operating apple bug release addressing utility create apple dos master bootable disks built command created disks booted machines memory created includes relocating version dos boots apples memory configuration apple dos released 1979 reflect booting methods built successor apple apple firmware included auto start feature automatically disk controller booted powered earning autostart rom apple dos released 1980 improves functions release allowing gains floppy disk storage p5a p6a proms disk controller enabled reading writing data density 13 sectors 25 kib 16 sectors 4 kib data stored disk track increasing capacity 113 75 kb 140 kb disk 16 kb filesystem overhead dos dos formatted disk leaving 124 kb user programs data dos compatible read write dos disks address apple released utility called muffin migrate apple dos files programs version disks apple offered utility migrate apple dos files version disks wrote niffum utility commercial utilities files format eventually prodos release improves ability switch integer basic applesoft basic language card ram expansion firmware card technical details apple dos disks 13 sectors data track sector 256 b 35 tracks disk access floppy disk user flipped disk user total storage capacity 113 75 kb 10 kb store dos disk directory leaving 100 kb user programs compared modern operating systems apple dos primitive layer operating called rwts stands read write track sector layer consists subroutines track seeking sector reading writing disk formatting api called file manager built implements functions close read write delete lock write protect unlock write enable rename files verify file structural integrity catalog function listing files diskette init function formats disk dos storing dos tracks storing startup program called auto started disk booted file manager api main dos routines implemented hook machine basic interpreter intercept disk commands bload bsave brun storing loading running binary executables load save basic programs exec running based batch files consisting basic dos commands finally types files exist identified letters catalog listing additional file types additional supported dos recognizes types catalog listings direct manipulate types files type relocatable binary executable files programs support type data files relocatable software bit apple machine language programs concern code relocation apple multiple programs time modern computers programs written expect code memory location time relocatable code complicated difficult implement bit 6502 cpu apple dos accommodate varying amounts memory installed apple 16 kb 48 kb dos loads memory basic programs graphics capabilities machines 48 kb memory apple dos occupies region 9600 bfff space file buffers 10 kb software load memory memory comparison prodos loads language card ram requiring 64 kb machine vector table region 03d0–03ff programs dos loaded memory dos hooked basic cli stops functioning reinitialized calling location 03d0 976 traditional 3d0g 3d0 command return basic monitor boot loader process loading apple dos involves series tiny programs carries loading process steps passing control program chain integer basic applesoft floating basic support original apple included rom basic interpreter originally apple basic integer basic variables language handle integer ranging −32 768 32 767 16 bit binary values floating supported commands manipulating resolution graphics months apple release apple commissioned develop capable basic interpreter applesoft basic capable handling floating real digits precision base exponents 38 38 support resolution graphics capable applesoft basic integer basic programs causing users resist upgrading dos released applesoft basic standard rom apple apple designed support switching basic interpreters integer basic loaded ram language card apple iis typing fp basic user switch version decline apple dos 1980 apple dos entered stagnation apple products apple concentrated efforts fated apple iii sos operating apple iii abandoned company versions apple dos called dos bug fixes support apple iie model released mid 1983 party patches apple dos read floppy disks running 25 inch disk drive access media hard disk drives virtual ram drives inch floppy disk drives structure apple dos disks sector map restricted single sector 400 kb time drive major rewrite sections code main reason apple abandoned iteration dos 1983 apple dos replaced prodos prodos retains 16 sector level format dos 25 inch disks introduces level format suitable devices 32 mb suitable hard disks era inch floppies apple computers onward dos prodos requiring language card memory expansion prodos models built language card hardware prodos straight prodos includes software files apple dos disks people improvements prodos memory footprint continued apple dos clones 1983 apple convention storing bootable os single floppy disk commercial software matter os user owns program called dos master enables users multiple virtual dos partitions larger prodos volume floppy based dos programs hard disk shortly prodos apple withdrew permission parties redistribute dos granted company syndicomm exclusive license resell dos commercial games apple dos custom disk routines protection purposes performance performance improvements versions dos rwts routine read write track revolutions proper interleaving sector spinning disk passes read write head rwts routine decoding read sector encoding written missed sector dos wait entire revolution disk sector called blowing rev understood performance bottleneck disk systems avoid sectors dos disk arranged interleaved prodos arranged sectors reading decoding sector sector passes sector sector waiting reading sector unneeded sectors pass sector reading sector 15 drive wait extra revolution sector track sector track track arranged relative time decode read sector head sector average track read revolutions disk dos file manager subverted efficiency copying bytes read written file time disk buffer main memory requiring time dos constantly blowing revs reading writing files programs format disks modified sector interleaves disks dos time sectors data ameliorating programmers apple rewrote file manager routines avoid extra sectors file rwts instructed read write sectors main memory disk buffer sector transferred patch provide functionality published speedups load command times typical functionality appeared commercial products pronto dos diversi dos hyper dos david dos additional features official apple dos release functionality employed apple successor operating prodos apple iigs specific operating os eventually employ efficient scatter read technique read sector happened passing read head file read release source code 2013 35 apple debuted original apple dos source code released history museum paul laughton creator code donated 
254141	computerscience	compatible time sharing ctss time sharing operating systems developed mit computation center ctss demonstrated 1961 operated mit 1973 time mit influential project mac ctss spread sites ctss paper 1962 spring joint conference greatly influenced design time sharing systems experimental time sharing john backus 1954 summer session mit time sharing reading station user computers time ibm 704 powerful implement 1958 mit computation center typewriter input 704 intent programmer operator additional answers machine time sharing basis programs machine simultaneously june 1959 christopher strachey published paper time sharing fast computers unesco processing conference paris envisaged programmer debugging program console teletype connected program running time debugging programs time batch processing day submitting changed code john mccarthy wrote memo mit preliminary study committee committee established mit develop time sharing committees envisaged users time decided details implementing mit started development july 1961 time sharing commands operational computation center ibm 709 andin november 1961 fernando corbató demonstrated mit called experimental time sharing 1962 corbató daggett daley published paper spring joint conference robert daley peter bos programmers implemented operating partly based fortran monitor ibm 7090 modified herbert teager flexowriters user consoles timer users tape units user file directory dumping core program memory tape unit commands disk drives memory 27 36 bit users supervisor operating input consoles written buffers supervisor interrupts return character received control supervisor dumped running code tape decided console commands implemented time login logout input edit fap mad madtrn load start skippm listf printf xdump xundump initial version compatible time sharing evidently demonstration time sharing claims special purpose systems papers published compatibility ctss background jobs compute resources time sharing functions implementation kernel ctss modified ibm 7090 mainframe 32 768 32k 36 bit word banks core memory normal bank time sharing supervisory program user programs ctss protected mode kernel supervisor functions core memory bank called software interrupts modern operating systems causing memory protection interrupts software interrupts processor allocation scheduling quantum time unit 200 controlled multilevel feedback queue special memory management hardware clock interrupt ability trap instructions programming languages ctss assembler fap compiler mad fortran code translated mad code written mad programming languages lisp version algol file user directory directories people file names extension file modes temporary permanent read class read class read class differed user change mode files files linked directories user directory directory listing listf peripherals input output hardware standard ibm peripherals included data channels connecting influences multics developed project mac started 1960s successor ctss – inspired development unix 1969 technical terms inherited systems ctss daemon incompatible timesharing revolutionary influential mit time sharing produced people disagreed direction ctss multics parody ctss unix parody multics 
267753	computerscience	robocup annual international robotics competition proposed founded 1996 pre robocup university professors hiroaki kitano manuela veloso minoru asada aim competition consists promoting robotics offering publicly appealing formidable challenge “competition pushes advances technologies learn robots playing soccer navigating maze applied industry solve difficult real professor maurice pagnucco head school science engineering unsw robocup contraction competition robot soccer cup stages competition robocuprescue robocup robocupjunior 2016 competition held leipzig germany robocup 2017 held nagoya japan professor itsuki noda current president robocup 2014 official goal project robocup leagues contest major competition domains leagues subleagues team autonomous robocup leagues game starts input human referee robocup editions formal robocup preceded unacknowledged international micro robot cup soccer tournament mirosot held kaist taejon korea november 1996 american team newton labs competition cnn robocup asia pacific editions 12 december 18 december 
283853	computerscience	jersey institute technology njit public university newark jersey located 30 minutes manhattan rapid transit njit jersey science technology university initiatives operates enterprise development center edc largest tech oriented business incubators country founded 1881 support local industrialists inventors edward weston 334 patents njit newark technical school 1885 88 students application oriented inception school grew classic engineering college – newark college engineering nce – addition school architecture 1973 polytechnic university hosts colleges school fall 2018 university enrolls 11 400 students 000 live campus payscale 2018–19 njit ranks 21st engineering schools 29th universities salary potential ranked underrated college america business insider 2015 college country buzzfeed 2013 njit offers 53 undergraduate bachelor science arts majors 66 graduate masters phd programs honors college offers professional programs healthcare law collaboration nearby institutions including rutgers medical school seton hall law school njit offers cross registration rutgers university newark borders campus 2018 school faculty alumni include turing award winner 2011 dannie heineman prize mathematical physics winner 2015 national inventors hall fame national academy engineering national academy sciences astronaut national medal technology winner congressional gold medal winner multiple ieee medalists national academy inventors njit graduates goldwaters fulbrights truman whitakers gilmans njit association public land grant universities sea grant college association collegiate schools architecture participated mcnair scholars program 1999 19 varsity teams ncaa division highlanders compete atlantic sun conference history founding jersey institute technology history dating 19th century originally introduced essex county march 24 1880 revised input newark board trade 1881 jersey legislature essentially drew contest determine municipality urgently technical school challenge straightforward stake 000 000 municipality matched investment earn establish school newark board trade jointly newark city council launched campaign win school dozens city industrialists private citizens eager force resource town threw support fund raiser 1884 collaboration public private sectors produced success newark technical school ready doors 88 students evening students attended classes rented building 21 west park street facility inadequate house expanding student body meet growing school fund raiser—the institution capital campaign—was launched support construction dedicated building newark technical school 1886 leadership school dynamic director dr charles colton cornerstone laid intersection street summit story building named weston hall honor institution benefactor laboratory building called colton hall campus 1911 newark college engineering dr allan cullimore led institution 1920 1949 transforming newark technical school newark college engineering 1930 campbell hall erected 1925 depression war newark orphan asylum eberhardt hall purchased renovated college succeeding decades cullimore left unpublished history institution dated 1955 1946 75 freshman class served armed forces cullimore hall built 1958 weston hall razed replaced current story structure doctoral level programs introduced 1966 building expansion completed jersey institute technology addition jersey school architecture 1973 institution evolved technological university emphasizing broad range graduate undergraduate degrees dedicated public service president william hazell jr school communicate dynamic evolution alumni solicited suggestions rename institution winning suggestion coming joseph anderson 25 anderson suggestion – jersey institute technology – cogently emphasized increasing scope educational initiatives preeminent jersey university board trustees approved transition september 1974 newark college engineering officially jersey institute technology january 1975 anderson received personal congratulations president hazell time newark college engineering retained njit engineering school history 2003 robert altenkirch inaugurated president succeeded saul fenster named university’s sixth president 1978 altenkirch retired 2011 january 2012 njit trustees named joel bloom president 2003 campus center hazell hall centralized campus social events construction atrium bookstore desk dining hall lab student organization offices continued 2004 2005 row automobile chop shops adjacent campus demolished 2006 construction campus residence hall american campus communities commenced chop shops location hall 2007 dubbed university centre 2005 eberhardt hall renovated inaugurated alumni center symbolic door university restored tower logo newark college engineering designed kevin boyajian scott nelson rebranding campaign current slogan njit – jersey science technology university – edge knowledge launched emphasize njit’s unique position jersey preeminent science technology focused university school changed accredited management school aacsb accredited business school business school focuses utilizing technology serve business school benefits proximity york city wall street minutes school strong academic collaboration nearby rutgers business school 2008 njit program heritage institute technology hit west bengal india 20 hit students njit summer internships 2009 jersey school architecture reorganized college architecture design coad college jersey school architecture continues joined newly established school art design june 2010 njit officially completed purchase central school building sits njit rutgers–newark campuses completion purchase summit street warren street street converted pedestrian walkway subsequently central school building extensively renovated preserved updated campus master plan included tearing kupfrian hall create greenery facilities 2016 18 include 209 000 sq ft multi purpose wellness events center wec features retractable seating arena accommodate 500 spectators 000 event participants 24 000 sq ft life sciences engineering center 000 sq ft makerspace parking garage spaces 933 cars university awarded 951 degrees 2017 including 1512 bachelor 1281 master 59 phds enrollment 11 423 projected reach 12 200 2020 academics admissions admission criteria consists average sat score math verbal enrolling freshmen fall 2018 1288 662 math 626 verbal average sat score math verbal enrolling freshmen honors college fall 2018 1470 minimum sat score math verbal enrolling freshmen accelerated program – combined jersey medical school rutgers – 1450 male female student ratio student faculty ratio 20 colleges schools comprising colleges school university organized 21 departments biological sciences history theater arts federated rutgers newark campus borders njit student population 15 international njit ethnically diverse national universities country multiple study options extensive op internship service opportunities newark college engineering nce newark college engineering established 1919 largest professional engineering schools united offers 13 undergraduate degree programs 16 master doctoral degree programs undergraduate enrollment 500 100 enrolled graduate study 150 faculty includes engineers scholars recognized fields estimated professional engineers jersey nce alumni nce 40 000 living alumni college science liberal arts csla college science liberal arts formed 1982 originally college preceded newark college engineering jersey school architecture 1986 changed college science liberal arts result sharply defined mission direction growing steadily csla spawned njit colleges albert dorman honors college evolved honors program founded csla 1985 college computing sciences developed csla science department college consists academic departments csla houses college architecture design coad college architecture design houses school architecture soa school art design college offers undergraduate degrees architecture digital design industrial design interior design graduate degrees architecture infrastructure planning urban systems coad college njit designated library library materials majors offered coad form periodicals reference materials rare books visual materials architectural drawings prints postcards maps digital databases materials library college offers pre college summer program school students ying wu college computing sciences science department ying wu college computing sciences largest njit comprising student population largest science department universities york metropolitan department offers range degree programs science phd addition emerging interdisciplinary programs telecommunication bioinformatics computing business bioinformatics degree pre med option martin tuchman school management som school management established 1988 accredited association advance collegiate schools business 1997 offers programs finance accounting marketing management systems international business technological entrepreneurship corporate communications conjunction rutgers university degrees include bachelor science program 124 credits master science management program 30 credits master business administration mba programs regular 48 credits time students time students accelerated 18 month executive mba program managers professionals albert dorman honors college 1985 njit established honors program encourage challenge brightest motivated students dr richard sher professor history associate dean college science liberal arts director approach stimulate students intellectually balanced education special activities rigorous courses lectures colloquium series program 28 honors students studies fall 1985 growing 160 1990 graduates succeeded academically jobs prominent corporations chosen education entering graduate training schools medicine law ruth baker succeeded dr sher director honors program 1991 baker direction assistance dr dennis donahue faculty coordinator honors advisor president saul fenster dr william mech national collegiate honors council deans faculty formulate honors college president fenster engaged albert dorman class 45 development njit college dorman special generous endowment helped create albert dorman honors college 1995 dorman endowment gifts allowed honors college attract students growing 230 1995 700 students honors scholarships created strong educational foundation fashioned dr joel bloom vice president academic student services named dean honors college included stronger active honors student council additional staff support student opportunities activities including variety colloquium lectures study trips activities publications time honors college major growth honors honors enhanced courses projects undertaken students programs including accelerated programs medicine dentistry optometry physical therapy law diversity offerings honors residence hall goal strategic plan september 2013 2015–2020 strategic plan created guidance dean katia passerini emphasizes academic excellence learner centered education leadership professional development community engagement visibility technological outreach partnerships college’s strategic plan board visitors 2001 plan 2008 plan enrollment goals met plan emphasizes academic enhancements students individual education plans innovative honors courses dual majors minors increased student leadership programs international study njit expenditures 142 2017 170 2018 focus include applied mathematics materials science biomedical engineering cybersecurity solar terrestrial physics – center solar terrestrial leader key agent regional economic development njit hosts enterprise development center edc campus business incubator houses 90 start jersey innovation institute njii offers services business university performed nanotechnology solar terrestrial physics polymer science development smart gun technology university centers include national center transportation industrial productivity smartcampus university hosts metro york robotics office university hosts center solar terrestrial owns operates bear solar observatory largest solar observatory located bear lake california operates owens valley solar array bishop california njit computerized conferencing communications center cccc center specialized mediated communication systems electronic exchange continuations electronic exchange eies2 tailorable electronic exchange teies foremost developments eies virtual classroom term coined dr starr roxanne hiltz learning platform unique evolved existing communications created missions completed cccc eies terminated mid 90s university operates class cleanroom class 1000 cleanroom campus academic purposes including counter bioterrorism university maintains advanced 67 node supercomputer cluster mathematics department purposes njit conducts cybersecurity including cross domain sharing data security privacy data mining malware detection geospatial security secure social networks secure cloud computing university designated national center academic excellence cae cyber defense education 2020 academic national security agency department homeland security libraries archives supporting njit’s main library robert van houten library located central avenue building facility quiet study researching browsing print online sources 1997 van houten commons housed 120 workstations barbara leonard littman library architecture design located weston hall houses core collection includes print electronic books journals maps drawings models images materials samples 70 000 slides included njit resources university historical archive including items developed manufactured edward weston scientist prolific inventor founding board trustees university dr weston collection artifacts rare books housed van houten library scholars history science technology residence life living campus 80 njit students commute campus residence life campus community includes 200 students residence halls njit campus redwood hall constructed 1978 cypress oak laurel constructed 1997 extended 1999 cypress redwood freshman students laurel oak house upperclassmen warren street village fall 2013 housing dorman honors college students greek houses provide space 600 students warren street village houses albert dorman honors college living campus campus resident hall university center american campus communities completed 2007 located njit guttenberg technologies center gitc building houses students njit rutgers–newark jersey medical school rutgers seton hall university students local institutions housing nearby neighborhoods towns including harrison kearny fairmount east orange food service food services campus gourmet dining services campus facilities include taco bell spice cafe leafs grains salad shop starbucks tech cafe store convenience store newly smash burger warren street building gourmet dining operates highlander club aka pub floor campus center offers variety burgers wings personal pizzas pub includes 21 offers alcohol beverages grease trucks regularly stationed campus variety cafe style restaurants short walk campus athletics njit sponsors 19 varsity sports teams including club level teams njit teams called highlanders school colors red white blue accent njit teams compete ncaa division level atlantic sun conference sun joining sun njit ncaa division basketball independent – left 2010–13 ncaa conference realignment demise west conference schools sun conference located southeast teams affiliations sun volleyball swimming diving compete eastern intercollegiate volleyball association eiva coastal collegiate swimming association ccsa fencing team mid atlantic collegiate fencing association macfa 2016 women fencing team independent independent lacrosse team ncaa division competing northeast conference 2019 20 season december 2014 njit basketball team unranked independent headlines national sports reports defeated nationally ranked 17 michigan wolverines division sports njit club level sports include notable alumni founding 1881 njit issued degrees 77 000 graduates njit alumni pursue distinguished careers sectors 
288500	computerscience	seventh edition unix called version unix version v7 release unix operating v7 released 1979 bell laboratories release widespread distribution commercialization unix corporation 1980s v7 originally developed digital equipment corporation pdp 11 minicomputers ported platforms overview unix versions bell labs designated edition user manual accompanied released 1979 seventh edition preceded sixth edition version licensed commercial users development unix continued eighth edition incorporated development 1bsd tenth edition bell labs researchers concentrated developing plan v7 portable version unix era minicomputers architectural variations market 16 bit microprocessors ports completed release sun workstations based motorola 68010 v7 port unisoft version xenix intel 8086 derived v7 onyx systems produced zilog z8000 running v7 vax port v7 called unix 32v direct ancestor popular 4bsd family unix systems university wollongong ported v6 interdata 32 ported v7 machine interdata sold port edition vii commercial unix offering dec distributed pdp 11 version v7 called v7m modified v7m developed dec original unix engineering ueg contained enhancements kernel pdp 11 computers including improved hardware error recovery additional device drivers ueg evolved developed ultrix reception power elegant simplicity time unix users remember v7 pinnacle unix development dubbed true unix improvement preceding unices time release greatly extended feature set expense decrease performance compared v6 corrected user community calls version 50 unix unix systems continued add released software 2002 caldera international released v7 foss permissive bsd software license bootable images v7 downloaded modern hosts pdp 11 emulators simh x86 port developed nordier associates paul allen maintains publicly accessible historic systems including pdp 11 70 running unix version request login running version unix original equipment features version features introduced version portable compiler pcc earlier pdp 11 specific compiler ritchie appeared unix lineage version versions picked pwb unix multiplexed files feature survive pipes inter process communication multiplexed files process create special type file codice processes file channel denoted file descriptor communicate process created multiplexed file mpx files considered experimental enabled default kernel disappeared versions offered sockets bsd cb unix ipc facilities mpx files 1bsd 
291161	computerscience	communications acm monthly journal association computing machinery acm established 1958 saul rosen managing editor acm articles intended readers backgrounds science systems focus practical implications advances technology management issues acm publishes variety theoretical journals magazine straddles boundary science magazine trade magazine scientific journal content subject peer review articles published summaries published material published accessible relevant broad readership 1960 onward cacm published algorithms expressed algol collection algorithms collected algorithms acm 
291807	computerscience	bertrand meyer born 21 november 1950 french academic author consultant field languages created eiffel programming language idea design contract education academic career bertrand meyer received master degree engineering École polytechnique paris master degree stanford university phd université nancy technical managerial career Électricité france faculty university california santa barbara october 2001 2016 professor software engineering eth zürich swiss federal institute technology pursued building trusted components reusable software elements guaranteed level quality chair eth science department 2004 2006 13 2003–15 taught introduction programming eth science students disseminated programming textbook touch class springer professor polytechnic university milan arrived erc advanced investigator grant project activities include associate professorships innopolis university 2015–16 chair excellence university toulouse 1998 2003 adjunct professor monash university melbourne australia french academy technologies active consultant object oriented design architectural reviews technology assessment trainer object technology software topics conference speaker active issues education policy founding president 2006–11 informatics europe association european science departments languages meyer pursues ideal simple elegant user friendly languages earliest vocal proponents object oriented programming oop book object oriented software construction considered oop books written include eiffel language description eiffel language object success discussion object technology managers reusable software discussion reuse issues solutions introduction theory programming languages touch class authored numerous articles edited conference proceedings initial designer eiffel method language continued participate evolution originator design contract development method experiences object technology simula language abstract data types formal specification including notation background development eiffel eiffel influential development languages including java python awards 2005 meyer senior award winner aito dahl nygaard award prize named creators object technology awarded annually senior junior researchers technical contributions field object orientation meyer received honorary doctorates itmo university saint petersburg russia 2004 university york 2015 2006 meyer received software award acm impact software quality recognition design eiffel 2008 fellow acm 2009 recipient harlan mills award ieee society wikipedia hoax 28 december 2005 anonymous user falsely announced meyer death german wikipedia biography meyer hoax reported days heise news ticker article corrected major news media outlets germany switzerland picked story meyer publish positive evaluation wikipedia concluding succumbed potential flaws healed affect picture rumors wikipedia downfall grossly exaggerated 
296950	computerscience	cross language retrieval clir subfield retrieval dealing retrieving written language language user query term cross language retrieval synonyms frequent cross lingual retrieval translingual retrieval multilingual retrieval term multilingual retrieval refers technology retrieval multilingual collections technology moved handle material language cross language retrieval refers users formulate language retrieves relevant documents clir systems translation techniques clir techniques classified categories based translation resources clir systems improved accurate multi lingual cross lingual adhoc retrieval systems effective monolingual systems access tasks media monitoring filtering routing sentiment analysis extraction require sophisticated models typically processing analysis items processing aware specifics target languages deployed mechanisms variation human language pose coverage challenges retrieval systems texts collection treat topic terms expressions match expression user true mono lingual true cross lingual retrieval users target language extent benefits clir technology users poor moderate competence target language fluent specific technologies clir services include morphological analysis handle inflection decompounding compound splitting handle compound terms translations mechanisms translate query language workshop clir held zürich sigir 96 conference workshops held yearly 2000 meetings cross language evaluation forum clef researchers convene annual retrieval conference trec discuss findings systems methods retrieval conference served reference clir subfield google search cross language search feature removed 2013 
299329	computerscience	grammar theory model symbol strings originated computational linguistics aiming understand structure natural languages probabilistic context grammars pcfgs applied probabilistic modeling rna structures 40 introduced computational linguistics pcfgs extend context grammars hidden markov models extend regular grammars production assigned probability probability derivation parse product probabilities productions derivation probabilities viewed parameters model convenient learn parameters machine learning probabilistic grammar validity constrained context training dataset pcfgs application diverse natural language processing study structure rna molecules design programming languages designing efficient pcfgs weigh factors scalability generality issues grammar ambiguity resolved grammar design accuracy grammar parsing algorithms time memory requirements definitions derivation process recursive generation strings grammar parsing finding valid derivation automaton parse tree alignment grammar sequence parser pcfg grammars pushdown automaton algorithm parses grammar nonterminals left stack manner brute force approach efficient rna secondary structure prediction variants cocke–younger–kasami cyk algorithm provide efficient alternatives grammar parsing pushdown automata pcfg parser stanford statistical parser trained treebank formal definition cfg probabilistic context grammar defined quintuple relation hidden markov models pcfgs models extend context grammars hidden markov models extend regular grammars algorithm analogue algorithm computes total probability derivations consistent sequence based pcfg equivalent probability pcfg generating sequence intuitively measure consistent sequence grammar algorithm model parametrization estimate prior frequencies observed training sequences rnas dynamic programming variants cyk algorithm viterbi parse rna sequence pcfg model parse derivation sequence pcfg grammar construction context grammars represented set rules inspired attempts model natural languages rules absolute typical syntax representation backus–naur form production rules consist terminal terminal symbols blank production rules cfg pcfg left nonterminal string terminal nonterminals pcfg nulls excluded grammar grammar shortened character terminals grammar grammar rules terminal symbol transformed string terminals terminals grammar read terminal emission generate derivation ambiguous grammar result ambiguous parsing applied homographs word sequence interpretation pun sentences newspaper headline iraqi head seeks arms ambiguous parses strategy dealing ambiguous parses originating grammarians pāṇini add rules prioritize rule takes precedence drawback proliferating rules difficult manage difficulty overgeneration unlicensed structures generated probabilistic grammars circumvent ranking productions frequency weights winner interpretation usage patterns altered diachronic shifts probabilistic rules learned updating grammar assigning probability production rules pcfg probabilities informed observing distributions training set composition language modeled samples broad language probabilistic grammars probabilities estimated data typically outperform hand crafted grammars cfgs contrasted pcfgs applicable rna structure prediction incorporate sequence structure relationship lack scoring metrics reveal sequence structural potential weighted context grammar weighted context grammar wcfg category context grammar production numeric weight weight specific parse tree wcfg product sum rule weights tree rule weight included rule tree special wcfgs pcfgs weights logarithms probabilities extended version cyk algorithm lightest weight derivation string wcfg tree weight product rule weights wcfgs pcfgs express set probability distributions applications rna structure prediction energy minimization pcfg provide predicting rna secondary structure comparable performance structure prediction pcfgs scored probabilistically minimum energy calculation pcfg model parameters derived frequencies features observed databases rna structures experimental determination energy minimization methods types structure modeled pcfg include range interactions pairwise structure nested structures pseudoknots modeled pcfgs extend cfg assigning probabilities production rule maximum probability parse tree grammar implies maximum probability structure rnas preserve structures primary sequence rna structure prediction guided combining evolutionary comparative sequence analysis biophysical knowledge structure plausibility based probabilities search structural homologs pcfg rules scored pcfg derivations probabilities building grammar model behavior base pairs single stranded regions starts exploring features structural multiple sequence alignment rnas grammar generates string fashion basepair furthest extremes terminal derived string derived generating distal moving inwards pcfg model extendibility constraining structure prediction incorporating expectations features rna expectation reflect propensity assuming structure rna incorporation increase pcfg space memory complexity desirable pcfg based model simple string grammar generates assigned probability weight 11 pcfg model 12 sum probabilities grammar productions 13 scores paired unpaired residue explain likelihood secondary structure formations production rules scoring loop lengths base pair stacking explore range generations including suboptimal structures grammar accept reject structures based score thresholds implementations rna secondary structure implementations based pcfg approaches utilized implementation approaches exist pfold secondary structure prediction rna sequences covariance models searching databases homologous sequences rna annotation classification rnapromo cmfinder teiser finding stable structural motifs rnas design considerations pcfg design impacts secondary structure prediction accuracy structure prediction probabilistic model based pcfg maintain simplicity compromise prediction accuracy complex model excellent performance single sequence scale grammar based model multiple parse trees grammar denotes grammar ambiguity revealing base pair structures grammar optimal structure correspondence parse tree secondary structure types ambiguities distinguished parse tree ambiguity structural ambiguity structural ambiguity affect thermodynamic approaches optimal structure selection basis lowest energy scores parse tree ambiguity concerns existence multiple parse trees sequence ambiguity reveal base paired structures sequence generating parse trees finding optimal structural ambiguity multiple parse trees secondary structure obscures cyk algorithm decision finding optimal structure correspondence parse tree structure unique grammar ambiguity checked conditional algorithm building pcfg model probabilistic context grammar consists terminal nonterminal variables feature modeled production rule assigned probability estimated training set rna structures production rules recursively applied terminal residues left starting terminal 14 produces loops rest grammar proceeds parameter 15 decide loop start stem single stranded region parameter 16 produces paired bases formalism simple pcfg application pcfgs predicting structures multi step process addition pcfg incorporated probabilistic models rna evolutionary history search homologous sequences databases evolutionary history context inclusion prior distributions rna structures structural alignment production rules pcfg facilitates prediction accuracy summary steps utilizing pcfgs scenarios algorithms algorithms dealing aspects pcfg based probabilistic models rna structure prediction exist instance algorithm cyk algorithm algorithm recursive dynamic programming scoring algorithm follow expectation maximization paradigms computes total probability derivations consistent sequence based pcfg scores subtrees parse tree subsequences probabilities pcfg scores probability complete parse tree sequence cyk modifies scoring note term cyk algorithm describes cyk variant algorithm optimal parse tree sequence pcfg extends actual cyk algorithm probabilistic cfgs algorithm calculates 20 probabilities 21 parse subtree rooted 22 subsequence 23 algorithm calculates 24 probabilities complete parse tree sequence root excluding calculation 23 variables refine estimation probability parameters pcfg reestimate pcfg algorithm finding expected times derivation summing products divided probability sequence model 11 expected times production rule expectation maximization utilizes values cyk algorithm calculates 27 probable parse tree 28 yields 29 memory time complexity pcfg algorithms rna structure predictions 30 31 restricting pcfg alter requirement database searches methods pcfg homology search covariance models cms special type pcfgs applications database searches homologs annotation rna classification cms build pcfg based rna profiles rnas represented consensus secondary structure rna analysis package infernal profiles inference rna alignments rfam database cms classifying rnas families based structure sequence cms designed consensus rna structure indels unlimited alignment terminals constitute transition probabilities indels considered grammars model grammar includes types secondary structure probabilities terminals connected transitions ideally current node connect insert subsequent node connect insert insertion base insert connect score model algorithms cms implementation cyk log odds emission scores optimum parse tree 38 calculated emitting scores function sequence discriminative measure recover optimum parse tree probability score 40 reached limiting maximum sequence aligned calculating log odds relative computation time step linear database size algorithm memory complexity 41 evolutionary guide structure prediction 99 algorithm knudsen hein lays basis pfold approach predicting rna secondary structure approach parameterization requires evolutionary history derived alignment tree addition probabilities columns mutations grammar probabilities observed training dataset estimate column probabilities paired unpaired bases structural alignment probabilities unpaired bases columns paired bases columns independent columns counting bases single base positions paired positions obtains frequencies bases loops stems basepair occurrence 42 counted occurrence 43 identical basepairs 44 counted calculate mutation rates paired unpaired bases pairing sequences mutation rates estimated recover plausible mutations sequence identity threshold comparison sequences approach 85 identity threshold pairing sequences single base positions differences gapped columns sequence pairs counted position sequences bases count difference incremented sequence unpaired bases mutation rate matrix satisfies mutation flow reversible basepairs 16 16 rate distribution matrix generated pcfg predict prior probability distribution structure posterior probabilities estimated algorithm structure cyk algorithm estimate alignment probabilities calculating column prior probabilities alignment probability estimated summing secondary structures column secondary structure 48 sequence 49 scored respect alignment tree mutational model prior distribution pcfg 50 phylogenetic tree calculated model maximum likelihood estimation note gaps treated unknown bases summation dynamic programming assign production probabilities rule grammar structure grammar assigned production probabilities devised structures training dataset prior probabilities weight predictions accuracy times rule depends observations training dataset grammar feature probabilities written parenthesis grammar formalism rule total 100 instance predict structure likelihood prior alignment frequencies data structure ensemble predicted grammar computed maximizing 58 cyk algorithm structure predicted correct predictions reported consensus structure pfold improvements 99 algorithm pcfg based approaches desired scalable compromising speed accuracy minimal pfold addresses limitations 99 algorithm respect scalability gaps speed accuracy protein sequence analysis pcfgs proved powerful tools predicting rna secondary structure usage field protein sequence analysis limited size amino acid alphabet variety interactions proteins grammar inference challenging consequence applications formal language theory protein analysis restricted production grammars expressive power model simple functional patterns based local interactions protein structures commonly display dependencies including nested crossing relationships exceed capabilities cfg development pcfgs expressing dependencies providing ability model wider range protein patterns main obstacles inferring protein grammar size alphabet encode 20 amino acids proposed address physico chemical properties amino acids reduce combinations symbols production rules levels quantitative property utilised 20 amino acid types medium van der waals volume based scheme pcfgs produced generate binding helix helix contact descriptors feature grammars analysis rules parse trees provide biologically meaningful 
300462	computerscience	alan jay perlis april 1922 – february 1990 american scientist professor purdue university carnegie mellon university yale university pioneering programming languages recipient turing award biography perlis born jewish family pittsburgh pennsylvania graduated taylor allderdice school 1939 1943 received bachelor degree chemistry carnegie institute technology renamed carnegie mellon university war served army mathematics earned master degree 1949 1950 mathematics massachusetts institute technology mit doctoral dissertation titled integral equations solution iteration analytic continuation 1952 participated project whirlwind joined faculty purdue university 1956 moved carnegie institute technology chair mathematics head science department 1962 elected president association computing machinery awarded inaugural turing award 1966 citation influence advanced programming techniques compiler construction reference team developed programming language algol 1971 perlis moved yale university chair science hold eugene higgins chair 1977 elected national academy engineering 1982 wrote article epigrams programming association computing machinery acm sigplan journal describing sentence distillations learned programming career epigrams quoted remained yale death 1990 publications publications selection 
301999	computerscience	natural language generation nlg natural language processing task generating natural language machine representation knowledge base logical form psycholinguists prefer term language production formal representations interpreted models mental representations nlg translator converts data natural language representation methods produce final language compiler inherent expressivity natural languages nlg existed time commercial nlg technology nlg viewed natural language understanding natural language understanding disambiguate input sentence produce machine representation language nlg decisions concept simple systems generate form letters typically involve grammar rules generate letter consumer stating credit card spending limit reached simple systems template word document mail merge complex nlg systems dynamically create natural language processing explicit models language grammars domain statistical models derived analysing human written texts pollen forecast scotland simple simplenlg essentially template takes input predicted pollen levels indifferent scotland generates short textual summary ofpollen levels output historical data july 2005 software producesgrass pollen levels friday increased moderate levels yesterday values country northern pollen levels moderate values contrast actual forecast written human meteorologist data waspollen counts expected remain level scotland level south east relief northern isles northeast mainland scotland medium levels pollen count comparing illustrates choices nlg systems furtherdiscussed stages process generate simple keeping list canned copied pasted linked glue satisfactory simple domains horoscope machines generators personalised business letters sophisticated nlg include stages planning merging enable generation natural repetitive typical stages natural language generation proposed dale reiter content determination deciding mention instance pollen deciding explicitly mention pollenlevel south east document structuring organisation convey deciding todescribe pollen levels pollen levels aggregation merging sentences improve readability naturalness instance merging sentences single sentence lexical choice putting concepts deciding medium moderate describing pollen level referring expression generation creating referring expressions identify objects regions deciding northern isles northeast mainland scotland refer region scotland task includes decisions pronouns types ofanaphora realization creating actual correctaccording rules ofsyntax morphology orthography futuretense alternative approach nlg machine learning build separate stages build nlg training machine learning algorithm lstm data set input data human written output texts approach successful image captioning automatically generating textual image applications popular media paid attention nlg systems generate jokes computational humor commercial perspective successful nlg applicationshave data systems generate textual summaries databases data sets thesesystems perform data analysis generation textual summaries effective graphs visuals decision support generated texts superior reader perspective human written texts commercial data systems produced weather forecasts weather data earliest bedeployed fog environment canada generate weather forecasts french english 1990s success fog triggered commercial applications include met office enhanced forecast considerable commercial nlg summarise financial business data gartner nlg standard feature 90 modern analytics platforms nlg commercially automated journalism chatbots generating product descriptions commerce sites summarising medical records enhancing accessibility describing graphs data sets blind people interactive nlg wysiwym framework stands meant users manipulate continuously rendered view nlg output underlying formal language document nlg input editing formal language learning content generation systems assist human writers writing process efficient effective content generation tool based mining search engines apis built tool imitates cut paste writing scenario writer forms content search relevance verification essential filter irrelevant search based matching parse tree query parse trees candidate answers alternative approach level structure human authored automatically build template topic automatically written wikipedia article companies started 2009 build systems transform data narrative nlg techniques include phrasetech arria nlg automated insights narrative science retresco visual nlg yseop evaluation scientific fields nlg researchers systems modules algorithms called evaluation basic techniques evaluating nlg systems ultimate goal nlg systems helping people techniques task based evaluations time consuming expensive difficult carry require subjects specialised expertise doctors nlp task based evaluations exception norm researchers assessing human ratings metrics correlate predict task based evaluations conducted context generation challenges shared task events initial human ratings metrics regard human ratings predict task effectiveness degree exceptions ratings produced metrics predict task effectiveness preliminary human ratings popular evaluation technique nlg contrast machine translation metrics 
302444	computerscience	fhi japanese multinational corporation conglomerate involved terrestrial aerospace transportation manufacturing subaru automobiles company aerospace division serves defense contractor japanese government manufacturing boeing lockheed martin helicopters airplanes license division global development manufacturing partner companies history fuji heavy industries traces roots nakajima aircraft company leading supplier airplanes japanese government war war nakajima broken allied occupation government keiretsu legislation 1950 separated operation fuji heavy industries fhi incorporated july 15 1953 japanese companies fuji kogyo fuji jidosha kogyo omiya fuji kogyo utsunomiya sharyo tokyo fuji sangyo joined form japan largest manufacturers transportation equipment late 1980s company major supplier military aerospace railroad equipment japan 80 sales automobiles sales 1989 fell 15 1990 company faced loss 500 industrial bank japan main bank company nissan motor owned company step nissan isamu kawai president nissan diesel motor charge fhi 1991 fhi started contract manufacturing nissan pulsar nissan sunny europe sedans hatchbacks company subaru brand cars aerospace division boeing helicopters japanese defense force raytheon hawker eclipse aviation business jets 2003 company logo subaru division worldwide corporate symbol october 2005 toyota purchased fhi shares motors owned 20 1999 divested remaining 11 stake market sever ties fhi fhi stated 27 shares acquired start trading unknown party october 2005 speculation suggested bank automaker involved purchase toyota announced contract subaru march 13 2006 underutilized subaru manufacturing facility lafayette indiana usa plans hire 000 workers set assembly camry quarter 2007 june 2014 company entered contract boeing major japanese companies contracted build boeing 777x aircraft 2016 fuji heavy industries announced change subaru corporation change effective april 2017 divisions subaru main divisions leadership presidents 
302812	computerscience	color vision ability organism machine distinguish objects based wavelengths frequencies light reflect emit transmit colors measured quantified person perception colors subjective process brain responds stimuli produced incoming light reacts types cone cells eye essence people illuminated object light source wavelength hue detection isaac newton discovered white light split component colours passed dispersive prism recombined white light passing prism characteristic colours short wavelengths correspondingly frequency red orange yellow green blue violet sufficient differences wavelength difference perceived hue noticeable difference wavelength varies 1 nm blue green yellow wavelengths 10 nm red shorter blue wavelengths human eye distinguish hues pure spectral colors mixed diluted white light distinguishable chromaticities light levels vision scotopic light detected rod cells retina rods maximally sensitive wavelengths 500 nm play role colour vision brighter light daylight vision photopic light detected cone cells responsible colour vision cones sensitive range wavelengths sensitive wavelengths 555 nm regions mesopic vision play rods cones provide signals retinal ganglion cells shift colour perception dim light daylight rise differences purkinje effectthe perception white formed entire spectrum visible light mixing colours wavelengths animals types colour receptors humans white light perceived combining wavelengths red green blue pair complementary colours blue yellow physiology color perception perception color specialized retinal cells pigments spectral sensitivities cone cells humans types cones sensitive spectra trichromatic color vision individual cone pigments composed opsin apoprotein covalently linked 11 cis hydroretinal rarely 11 cis dehydroretinal cones conventionally labeled wavelengths peaks spectral sensitivities short medium cone types types correspond colors perception color achieved complex process starts differential output cells retina finalized visual cortex associative brain cones referred simply red receptors microspectrophotometry peak sensitivity greenish yellow region spectrum cones correspond blue green rgb color model convenient representing color based types cones human eye peak response human cone cells varies individuals called normal color vision human species polymorphic variation adaptive theories complementary theories color vision trichromatic theory opponent process theory trichromatic theory young–helmholtz theory proposed 19th century thomas hermann von helmholtz mentioned retina types cones preferentially sensitive blue green red ewald hering proposed opponent process theory 1872 visual interprets color antagonistic red green blue yellow black white theories accepted valid describing stages visual physiology visualized adjacent diagram green ←→ magenta blue ←→ yellow scales mutually exclusive boundaries exist negative positive single eye perceive bluish yellow reddish green cone cells human eye range wavelengths light stimulates receptor types varying degrees yellowish green light stimulates cones equally stimulates cones weakly red light hand stimulates cones cones cones blue green light stimulates cones cones cones bit peak stimulant rod cells blue light stimulates cones red green light cones weakly brain combines type receptor rise perceptions wavelengths light opsins photopigments cones encoded chromosome defective encoding leads common forms color blindness opn1lw gene codes opsin cones highly polymorphic study verrelli tishkoff 85 variants sample 236 percentage women extra type color receptor alleles gene opsin chromosome chromosome inactivation opsin expressed cone cell types occur women degree tetrachromatic color vision variations opn1mw codes opsin expressed cones rare observed variants spectral sensitivity color human brain color processing level visual retina initial color opponent mechanisms helmholtz trichromatic theory hering opponent process theory correct trichromacy arises level receptors opponent processes level retinal ganglion cells hering theory opponent mechanisms refer opposing color red–green blue–yellow light–dark visual activity receptor types opposed midget retinal ganglion cells oppose cone activity corresponds loosely red–green opponency runs axis blue green magenta bistratified retinal ganglion cells oppose input cones input cones correspond blue–yellow opponency runs color axis yellow green violet visual brain retinal ganglion cells optic nerve optic chiasma optic nerves meet temporal contralateral visual field crosses brain optic chiasma visual tracts referred optic tracts enter thalamus synapse lateral geniculate nucleus lgn lateral geniculate nucleus divided laminae zones types laminae consisting cells laminae consisting cells koniocellular laminae cells receive balanced input cones retina fovea midget cells synapsing laminae koniocellular laminae receive axons bistratified ganglion cells synapsing lgn visual tract continues primary visual cortex v1 located brain occipital lobe v1 distinct band striation referred striate cortex cortical visual regions referred collectively extrastriate cortex stage color processing complicated v1 simple color segregation break cells v1 respond spectrum color tuning depending adaptation visual cell respond wavelength light light bright responsive wavelengths stimulus dim color tuning cells stable population neurons v1 responsible color vision specialized color cells receptive fields compute local cone ratios double opponent cells initially goldfish retina nigel daw existence primates suggested david hubel torsten wiesel subsequently proven bevil conway margaret livingstone david hubel double opponent cells clustered localized regions v1 called blobs flavors red–green blue–yellow red–green cells compare relative amounts red–green scene red–green adjacent scene responding local color contrast red green modeling studies double opponent cells ideal candidates neural machinery color constancy explained edwin land retinex theory v1 blobs color cells visual v2 cells v2 color tuned clustered stripes blobs v1 stain enzyme cytochrome oxidase separating stripes interstripes stripes concerned visual motion resolution form neurons v2 synapse cells extended v4 includes v4 posterior inferior temporal cortex anterior v3 dorsal posterior inferior temporal cortex posterior teo v4 initially suggested semir zeki exclusively dedicated color incorrect presence v4 orientation selective cells led view v4 involved processing color form color color processing extended v4 occurs millimeter sized color modules called globs brain color processed terms range hues color space anatomical studies neurons extended v4 provide input inferior temporal lobe cortex integrate color shape form difficult define criteria claim murkiness characterize pathway v1 v2 v4 ventral stream pathway distinguished dorsal stream pathway analyze motion features subjectivity color perception categorically distinguishes visible spectrum electromagnetic radiation invisible portions broader spectrum sense color property electromagnetic radiation feature visual perception observer arbitrary mapping wavelengths light visual spectrum human experiences color people assumed mapping philosopher john locke recognized alternatives hypothetical inverted spectrum experiment inverted spectrum experience green 700 nm light experience red green 530 nm light synesthesia ideasthesia atypical illuminating examples subjective color experience triggered input light sounds shapes possibility clean dissociation color experience properties reveals color subjective psychological phenomenon himba people categorize colors euro americans easily distinguish close shades green barely discernible people himba created color scheme divides spectrum dark shades zuzu himba light vapa vivid blue green buru dry colors adaptation specific life perception color depends heavily context perceived object white blue pink purple light reflect blue pink purple light eye brain compensates lighting based color shift surrounding objects interpret white conditions phenomenon color constancy animal species species light frequencies human visible spectrum bees insects detect ultraviolet light helps nectar flowers plant species depend insect pollination owe reproductive success ultraviolet colors patterns colorful humans birds ultraviolet 300–400 nm sex dependent markings plumage visible ultraviolet range animals ultraviolet range red light reddish wavelengths bees visible spectrum 590 nm orange wavelengths start birds red wavelengths light spectrum humans incorrect popular belief common goldfish animal infrared ultraviolet light color vision extends ultraviolet infrared basis variation cone types species mammals color vision limited type red green color blindness types cones humans primates marsupials extended range colors comparison mammals mammalian vertebrate species distinguish colors humans species birds fish reptiles amphibians invertebrates cone types superior color vision humans catarrhini monkeys apes—primates closely humans types color receptors cone cells trichromatic color vision primates humans trichromats primates including monkeys mammals dichromats color vision mammals active day felines canines ungulates nocturnal mammals color vision trichromat primate mammals rare invertebrates color vision honeybees bumblebees trichromatic color vision insensitive red sensitive ultraviolet osmia rufa possess trichromatic color foraging pollen flowers view color vision bees expect receptor sensitivities reflect specific visual ecology types flowers visit main hymenopteran insects excluding ants bees wasps sawflies types photoreceptor spectral sensitivities honeybee papilio butterflies possess types photoreceptors pentachromatic vision complex color vision animal kingdom stomatopods mantis shrimp 12 spectral receptor types multiple dichromatic units vertebrate animals tropical fish birds complex color vision systems humans subtle colors exhibit serve direct signals fish birds signal mammals bird vision tetrachromacy achieved cone types depending species single cone main types vertebrate cone photopigment lws mws rh2 sws2 sws1 colored oil droplet segment brightly colored oil droplets cones shift narrow spectral sensitivity cell suggested pigeons pentachromats reptiles amphibians cone types occasionally colors humans addition nocturnal geckos capability color dim light evolution mammals segments color vision lost species primates regained gene duplication eutherian mammals primates dogs mammalian farm animals effective receptor dichromatic color perception systems distinguish blue green yellow—but distinguish oranges reds evidence mammals cats redeveloped ability distinguish wavelength colors limited amino acid mutations opsin genes adaptation reds primate mammals leads identification fruits newly sprouting reddish leaves nutritious primates color vision differs monkeys primates including monkeys apes vision humans monkeys color sensitivity level species males dichromats 60 females trichromats owl monkeys cone monochromats sexes howler monkeys trichromats visual sensitivity differences males females single species gene yellow green sensitive opsin protein confers ability differentiate red green residing sex chromosome marsupials fat tailed dunnart sminthopsis crassicaudata trichromatic color vision marine mammals adapted light vision single cone type monochromats evolution color perception mechanisms highly dependent evolutionary factors prominent satisfactory recognition food sources herbivorous primates color perception essential finding proper immature leaves hummingbirds flower types recognized color hand nocturnal mammals developed color vision adequate light cones function properly evidence ultraviolet light plays color perception branches animal kingdom insects optical spectrum encompasses common electronic transitions matter collecting environment evolution trichromatic color vision primates occurred ancestors modern monkeys apes humans switched diurnal daytime activity consuming fruits leaves flowering plants color vision uv discrimination arthropods—the terrestrial animals vertebrates possess trait animals distinguish colors ultraviolet spectrum uv spectrum falls human visible range cataract surgery patients birds turtles lizards fish rodents uv receptors retinas animals uv patterns flowers wildlife invisible human eye ultraviolet vision adaptation birds birds spot prey distance navigate avoid predators forage flying speeds birds utilize broad spectrum vision recognize birds sexual selection mathematics color perception physical color combination pure spectral colors visible range principle infinitely distinct spectral colors set physical colors infinite dimensional vector space hilbert space space color technically space physical colors considered mathematical cone simplex vertices spectral colors white centroid simplex black apex cone monochromatic color vertex vertex apex depending brightness element color function range visible wavelengths—considered interval real min max —to real assigning wavelength min max intensity humanly perceived color modeled extents types cones stimulated humanly perceived color dimensional euclidean space space r3color wavelength stimulates types cone cells extent extents represented functions response cone cells finally beam light composed wavelengths determine extent physical color color stimulates cone cell calculate integral respect interval min max triple associates physical color element color perceived color single r3color association easily linear easily elements physical space color result single perceived color r3color perceived color unique physical color human color perception determined specific unique linear mapping infinite dimensional hilbert space color dimensional euclidean space r3color technically image mathematical cone simplex vertices spectral colors linear mapping mathematical cone r3color moving vertex cone represents maintaining chromaticity increasing intensity cross cone yields 2d chromaticity space 3d cone projection cross convex sets mixture spectral colors color practice difficult physiologically measure individual cone responses physical color stimuli psychophysical approach specific benchmark lights typically calibrate human perceptual space scientists allowed human subjects match physical color dials create specific combinations intensities lights resp match physical colors spectral linear combination spectral colors matched linear combination matches note practice intensity physical color combination matched linear combination remaining lights individuals color blindness matchings identical combinations intensities subset space model human perceptual color space formed note color intensity counted negative mathematical cone quadric rays origin space passing convex set cone property moving origin corresponds increasing intensity lights proportionately cross cone planar shape definition space chromaticities informally distinct colors cross constant cie 1931 color space cie chromaticity diagram implies hue spectral color boundary chromaticity diagram infinitely distinct physical spectra perceived hue color combination spectral colors perceive specific version tan infinitely possibilities produce exact color boundary colors pure spectral colors perceived response light purely wavelength boundary colors purples generated specific ratio pure violet pure red visible spectral colors cie chromaticity diagram horseshoe shaped curved edge spectral colors spectral locus remaining straight edge saturated purples mixtures red violet chromatic adaptation color science chromatic adaptation estimation representation object light source recorded common application chromatic adaptation transform cat recording neutral object neutral color balance keeping colors realistic chromatic adaptation transforms converting images icc profiles white adobe photoshop bradford cat color vision chromatic adaptation refers color constancy ability visual preserve appearance object wide range light sources 
308428	computerscience	history nippon gakki yamaha corporation established 1887 piano reed organ manufacturer torakusu yamaha hamamatsu shizuoka prefecture incorporated october 12 1897 company origins musical instrument manufacturer reflected logo—a trio interlocking tuning forks war company president genichi kawakami repurposed remains company war time production machinery company expertise metallurgical technologies manufacture motorcycles ya aka akatombo red dragonfly 125 built production 1954 named honour founder 125cc single cylinder stroke street bike patterned german dkw rt125 british munitions firm bsa copied post war era manufactured bantam harley davidson hummer 1955 success ya founding yamaha motor splitting motorcycle division company 1954 yamaha music school founded yamaha grown largest manufacturer musical instruments including pianos silent pianos drums guitars brass instruments woodwinds violins violas celli vibraphones leading manufacturer semiconductors audio visual products sporting appliances specialty metals industrial robots 1988 yamaha shipped recorder yamaha purchased sequential circuits 1988 bought majority stake 51 competitor korg 1987 bought korg 1993 late 1990s yamaha released series portable battery operated keyboards pss psr range keyboards yamaha pss 14 pss 15 keyboards upgrades yamaha pss notable short demo songs short selectable phrases funny sound effects distortion crackly sounds progressing volume levels battery power 2002 yamaha closed archery product business started 1959 archers olympic games gold medals products acquired german audio software manufacturers steinberg january 2005 pinnacle systems july 2007 yamaha bought minority shareholding kemble family yamaha kemble music yamaha import musical instrument professional audio equipment sales arm company renamed yamaha music autumn 2007 kemble piano sales manufacturing arm unaffected december 20 2007 yamaha agreement austrian bank bawag bawag purchase shares bösendorfer intended 2008 yamaha intends continue manufacturing bösendorfer facilities austria acquisition bösendorfer announced namm los angeles january 28 2008 february 2008 bösendorfer klavierfabrik gmbh operates subsidiary yamaha corp yamaha corporation music teaching programme 1950s yamaha electronics proven successful popular respected products yamaha ypg 625 awarded keyboard product 2007 music sound retailer magazine noteworthy yamaha electronics include shs keytar consumer priced keytar offered midi output features expensive keyboards companies yamaha include yamaha music foundation yamaha music foundation organization established 1966 authority japanese ministry education purpose promoting music education music popularization continued program music classes begun yamaha corporation 1954 products yamaha expanded diverse businesses product venture major category listed synthesizers samplers yamaha announced singing synthesizer vocaloid time german fair musikmesse march 5–9 2003 yamaha involved sale production vocaloid applications lily lily sold internet involvement continued vy series vy1 released deluxe standard editions september 2010 vy series series designed quality product professional musicians series designed intention set standard vocaloids sex set voice designed complete song vy1 approach software handled database samples improved performance vocaloid engine yamaha announced version vocaloid software iphone ipad exhibited y2 autumn 2010 digital content expo japan version software released vy1 voice vy2 released version software factory locations japan company maintains factories musical instrument manufacture engine vehicle manufacture motorcycles marine products factories located shizuoka prefecture 
309954	computerscience	network diskless desktop device oracle corporation 1996 2000 devices designed manufactured alliance included sun microsystems ibm devices designed minimum specifications based network reference profile brand employed marketing term popularize design enterprise consumers brand intended inspire range desktop computers suppliers virtue diskless design inexpensive components software cheaper easier manage standard fat client desktops commoditization standard desktop components increasing availability popularity software options desktops diskless nodes clients hybrid clients network brand achieved popularity hoped oracle eventually mothballed term network diskless desktop client history failure impact scale predicted larry ellison caused factors firstly prices pcs fell 1000 competition hard software ncs mature thirdly idea simply time launch 1996 typical internet connection 28 kbit modem dialup simply insufficient delivery executable content wide considered mainstream breakout 1998 prior internet service providers advertised mainstream press usa knowledge internet limited held uptake niche device obvious appeal ncs umb terminals intended replace proprietary backend infrastructure 1990s era ncs network booted minimal unix serve terminal purists suboptimal hardware ncs terminals considerably cheaper purpose built terminal hardware standards drafts reference profile initial network computing standard network reference profile ncref required appliances supported java jpeg key standards standards ncs intel cpus software intel developed competing standard called netpc alternatives ncref webref motorola hds network systems odin national semiconductor hds workstation stated ship june 1996 implementations acorn network acorn network oracle initial reference implementation development subcontracted british company acorn computers adapted create ncos acorn local partner companies ant icon technology design edge fulfil contract macintosh 1997 apple announced mac attempt develop pippin network platform 1997 steve jobs discontinued macintosh clone efforts effectively killing pippin key components mac technology inherited original imac netproducts netstation generation netstation design netstation trademark licensed nchannel consumer equipment internet service infrastructure market months nchannel split entities netchannel internet service netproducts consumer hardware netproducts started acorn develop generation product netstation started developing email set box tvemail netproducts voluntary liquidation 1998 project completed sun microsystems javastation sun microsystems developed javastation javaos based based sparc hardware initially sun range unix workstations ibm network station ibm launched network station september 1996 reference design network station netbsd based ncos booted lan 400 ibm pc server network station supported local execution basic applications browser console addition capability implemented locally remotely applications machine practice lack real applications meant hardware terminal ibm network station originally based powerpc architecture final models intel pentium processors contemporary analogy idea existing contemporary times cloud computing google chrome os wired magazine daniel roth claims failure network eventually led development cloud computing contribution transition attributed eric schmidt cto sun microsystems proponent network eventually ceo google google purveyor cloud technology notably google docs spreadsheets 
312810	computerscience	mathematical morphology theory technique analysis processing geometrical structures based set theory lattice theory topology random functions commonly applied digital images employed graphs surface meshes solids spatial structures topological geometrical continuous space concepts size shape convexity connectivity geodesic distance introduced continuous discrete spaces foundation morphological image processing consists set operators transform images characterizations basic morphological operators erosion dilation closing originally developed binary images extended grayscale functions images subsequent generalization complete lattices accepted theoretical foundation history 1960s sorts schemes nonlinear processing images discussed communities originally popular earth environmental sciences mathematical morphology based dilation data consisting structuring element σ signdata dual operation erosion mathematical morphology developed 1964 collaborative georges matheron jean serra École des mines paris france matheron supervised phd thesis serra devoted quantification mineral characteristics cross sections practical approach theoretical advancements integral geometry topology 1968 centre morphologie mathématique founded École des mines paris fontainebleau france led matheron serra rest 1960s 1970s dealt essentially binary images treated sets generated binary operators techniques hit transform dilation erosion closing granulometry thinning skeletonization ultimate erosion conditional bisector random approach developed based image models period developed fontainebleau mid 1970s mid 1980s generalized grayscale functions images extending main concepts dilation erosion functions generalization yielded operators morphological gradients hat transform watershed main segmentation approach 1980s 1990s gained wider recognition centers countries adopt investigate method started applied imaging applications 1986 serra generalized time theoretical framework based complete lattices generalization brought flexibility theory enabling application larger structures including color images video graphs meshes time matheron serra formulated theory morphological filtering based lattice framework 1990s 2000s theoretical advancements including concepts connections levelings 1993 international symposium mathematical morphology ismm barcelona spain ismms organized 2–3 fontainebleau france 1994 atlanta usa 1996 amsterdam netherlands 1998 palo alto usa 2000 sydney australia 2002 paris france 2005 rio janeiro brazil 2007 groningen netherlands 2009 intra verbania italy 2011 uppsala sweden 2013 reykjavik iceland 2015 fontainebleau france 2017 binary morphology binary morphology image viewed subset euclidean space integer grid dimension structuring element basic idea binary morphology probe image simple pre defined shape drawing conclusions shape fits misses shapes image simple probe called structuring element binary image subset space grid examples structuring elements denoted basic operators basic operations shift invariant translation invariant operators minkowski addition euclidean space integer grid binary image erosion erosion binary image structuring element defined translation vector structuring element center disk square center located origin erosion understood locus reached center moves erosion square centered origin disc radius centered origin square centered origin erosion expression application assume received fax dark photocopy written pen bleeding erosion process thicker lines skinny detect hole letter dilation dilation structuring element defined dilation commutative 11 center origin dilation understood locus covered center moves dilation square disk radius square 14 rounded corners centered origin radius rounded corners dilation 12 denotes symmetric 13 application dilation dual operation erosion figures lightly drawn dilated easiest imagine fax written thicker pen erosion dilation image 15 locus translations structuring element image square disc radius structuring element square rounded corners corner radius application assume written note soaking paper writing growing tiny hairy roots essentially removes outer tiny hairline leaks restores rounds sharp edges start disappear closing closing dilation erosion structure closing 17 denotes complement relative 18 closing complement locus translations symmetric structuring element image properties basic operators properties basic binary morphological operators dilation erosion closing grayscale morphology grayscale morphology images functions mapping euclidean space grid 32 33 set reals 34 element larger real 35 element real grayscale structuring elements functions format called structuring functions denoting image structuring function grayscale dilation bywhere denotes supremum erosion bywhere inf denotes infimum binary morphology closing byflat structuring functions common flat structuring elements morphological applications flat structuring functions functions formwhere 41 dilation erosion greatly simplified byin bounded discrete grid bounded supremum infimum operators replaced maximum minimum dilation erosion statistics filters dilation returning maximum moving window symmetric structuring function support erosion returning minimum moving window flat structuring element morphological operators depend relative pixel values numerical values suited processing binary images grayscale images light transfer function operators tools combining operators algorithms image processing tasks feature detection image segmentation image sharpening image filtering classification continuous morphology mathematical morphology complete lattices complete lattices partially sets subset infimum supremum element element denoted universe adjunctions dilation erosion 44 complete lattice infimum supremum symbolized 45 46 universe element symbolized 47 48 collection elements dilation operator 49 distributes supremum preserves element erosion operator 52 distributes infimum preserves universe dilations erosions form galois connections dilation 55 erosion 56 satisfiesfor 58 erosion dilation satisfying connection operators satisfy connection 55 dilation 56 erosion pairs erosions dilations satisfying connection called adjunctions erosion adjoint erosion dilation vice versa closing adjunction 61 morphological 62 morphological closing 63 defined morphological closing algebraic simply algebraic closing simply closing algebraic openings operators idempotent increasing anti extensive algebraic closings operators idempotent increasing extensive binary morphology lattice morphology power set euclidean space grid set subsets 66 set inclusion infimum set intersection supremum set union grayscale morphology set functions mapping 32 66 46 45 wise supremum infimum functions 71 72 infimum 73 74 supremum 75 76 
313741	computerscience	3d projection method mapping dimensional dimensional plane current methods displaying graphical data based planar pixel bitplanes dimensional media type projection widespread graphics engineering drafting graphical projection protocol technical drawing image dimensional object projected planar surface aid numerical calculation overview projection achieved imaginary projectors projected mental image technician vision desired finished picture protocol technician produce envisioned picture planar surface drawing paper protocols provide uniform imaging procedure people trained technical graphics mechanical drawing aided design graphical projection categories protocol parallel projection parallel projection lines sight object projection plane parallel lines parallel dimensional space remain parallel dimensional projected image parallel projection corresponds perspective projection infinite focal distance camera lens focal zoom images drawn parallel projection rely technique axonometry measure axes pohlke theorem image oblique rays perpendicular image plane special result orthographic rays perpendicular image plane axonometry confused axonometric projection english literature refers specific class pictorials orthographic projection orthographic projection derived principles descriptive geometry dimensional representation dimensional object parallel projection lines projection parallel reality projection plane projection type choice drawings multiview projection multiview projections pictures called primary views object produced projection plane parallel coordinate axes object views positioned relative schemes angle angle projection appearances views projected planes form sided box object drawn views drawing 3d object views view view view terms elevation plan axonometric projection orthographic projection ancillary category orthographic pictorial axonometric projection axonometric projections image object viewed skew direction reveal directions axes space picture axonometric instrument drawings approximate graphical perspective projections attendant distortion approximation pictorial projections innately distortion instrument drawings pictorials liberties economy effort axonometric projection subdivided categories isometric projection dimetric projection trimetric projection depending exact angle view deviates orthogonal typical characteristic orthographic pictorials axis space displayed vertical axonometric projections auxiliary views opposed primary views multiview projections isometric projection isometric pictorials protocols isometric projection direction viewing axes space equally foreshortened common angle 120° distortion caused foreshortening uniform proportionality lengths preserved axes share common scale enables measurements read drawing dimetric projection dimetric pictorials protocols dimetric projection direction viewing axes space equally foreshortened attendant scale angles presentation determined angle viewing scale direction vertical determined separately approximations common dimetric drawings trimetric projection trimetric pictorials protocols trimetric projection direction viewing axes space unequally foreshortened scale axes angles determined separately dictated angle viewing approximations trimetric drawings common oblique projection oblique projections parallel projection rays perpendicular viewing plane orthographic projection strike projection plane angle degrees orthographic oblique projection parallel lines space parallel projected image simplicity oblique projection exclusively pictorial purposes formal drawings oblique pictorial drawing displayed angles axes foreshortening factors scale arbitrary distortion created attenuated aligning plane imaged object parallel plane projection creating true shape size image chosen plane special types oblique projections cavalier projection cavalier projection cavalier perspective view object represented coordinates drawing represented coordinates x″ y″ flat drawing axes figure perpendicular axes drawn scale dimetric projections axonometric projection axis drawn diagonal arbitrary angle x″ axis 30 45° axis scaled cabinet projection term cabinet projection cabinet perspective stems illustrations furniture industry cavalier perspective projected object parallel viewing plane axis projected angle typically 30° 45° arctan    63 4° cavalier projection axis cabinet projection receding lines cut military projection variant oblique projection called military projection horizontal sections isometrically drawn floor plans distorted verticals drawn angle military projection rotation xy plane vertical translation limitations parallel projection objects drawn parallel projection larger extend closer viewer advantageous architectural drawings measurements image result perceived distortion perspective projection eyes photography easily result situations depth altitude difficult gauge illustration isometric drawing blue sphere units red difference elevation apparent covers picture boxes serve clues suggesting height obscured visual ambiguity exploited op art impossible object drawings escher waterfall 1961 strictly parallel projection channel water travel unaided downward path paradoxically fall returns source water appears disobey law conservation energy extreme depicted film inception forced perspective trick immobile stairway connectivity orthographic projection human eye scene objects distance objects close orthographic projection ignores creation scale drawings construction engineering orthographic projections set transforms profile precise measurements dimensional object common names orthographic projections include plane cross bird eye elevation normal viewing plane camera direction parallel primary axes axis mathematical transformation project 3d 2d orthographic projection parallel axis positive represents direction profile view equations vector arbitrary scale factor arbitrary offset constants optional properly align viewport matrix multiplication equations orthographically projected images represent dimensional nature object projected represent object recorded photographically perceived viewer observing parallel lengths orthographically projected image scale virtual viewer result lengths foreshortened perspective projection weak perspective projection weak perspective projection principles orthographic projection requires scaling factor ensuring closer objects bigger projection vice versa hybrid orthographic perspective projection perspective projection individual depths replaced average constant depth simply orthographic projection scaling weak perspective model approximates perspective projection simpler model pure unscaled orthographic perspective reasonable approximation depth object sight compared distance camera field view conditions assumed 3d object distance camera errors projection compared perspective model equationassuming focal 13 perspective projection perspective projection linear projection dimensional objects projected picture plane distant objects nearer objects lines parallel nature meet infinity intersect projected image railways pictured perspective projection converge single called vanishing photographic lenses human eye perspective projection realistic perspective projection categorized perspective depending orientation projection plane axes depicted object graphical projection methods rely duality lines straight lines determine determine straight orthogonal projection eye picture plane called principal vanishing scheme left italian term punto principale coined renaissance relevant principal vanishing vanishing horizontal lines perpendicular picture plane vanishing horizontal lines lie horizon picture plane vertical vertical lines drawn vertically finite vanishing picture plane graphical methods easily envisaged projecting geometrical scenes lines traced eye 45° picture plane intersect circle radius distance eye plane tracing circle aids construction vanishing 45° lines intersection circle horizon consists distance drawing chessboard floors serve locating base objects scene perspective geometric solid choosing principal vanishing —which determines horizon line— 45° vanishing left drawing completes characterization equally distant view lines drawn orthogonal projection vertex 45° 90° picture plane intersecting ground lines distance 45° principal 90° intersection locates projection map natural heights measured ground projected meet vertical map orthographic projection ignores perspective accurate measurements perspective projection distant objects provide additional realism perspective projection requires involved definition compared orthographic projections conceptual aid understanding mechanics projection imagine 2d projection object viewed camera viewfinder camera position orientation field view control behavior projection transformation variables defined transformation 20 21 3d vector 22 projected 2d vector 23 compute 18 define vector 25 position respect coordinate defined camera origin rotated 26 respect initial coordinate achieved subtracting 27 28 applying rotation 29 result transformation called expressed expressing rotation terms rotations axes calculations assume axes left handed axes representation corresponds rotating euler angles properly tait–bryan angles xyz convention interpreted rotate extrinsic axes axes scene reading left rotate intrinsic axes axes camera reading left note camera rotated 31 matrices drop identities reduces simply shift 32alternatively matrices replace  −  abbreviate cos  θ sin  θ transformed projected 2d plane projection plane literature matrix form homogeneous coordinates systemin conjunction argument triangles leads division homogeneous coordinate givingthe distance viewer display surface 37 relates field view 38 viewed angle note assumes map corners viewing surface equations rewritten 40 display size 41 recording surface size ccd film 42 distance recording surface entrance pupil camera center 43 distance 3d projected entrance pupil subsequent clipping scaling operations map 2d plane display media diagram determine screen coordinate corresponds 44 multiply coordinates camera 3d screen coordinate substituting diagram equation 
313845	computerscience	formal concept analysis fca principled deriving concept hierarchy formal ontology collection objects properties concept hierarchy represents objects sharing set properties concept hierarchy represents subset objects superset properties concepts term introduced rudolf wille 1980 builds mathematical theory lattices sets developed garrett birkhoff 1930s formal concept analysis practical application fields including data mining mining machine learning knowledge management semantic software development chemistry biology overview history original motivation formal concept analysis search real meaning mathematical theory possibility nature data tables transformed algebraic structures called complete lattices utilized data visualization interpretation data table represents heterogeneous relation objects attributes tabulating pairs form object attribute considered basic data type referred formal context theory formal concept defined pair set objects called extent set attributes intent thatin formal concept analysis formalizes semantic notions extension intension formal concepts formal context can—as explained below—be hierarchy called formally context concept lattice concept lattice graphically visualized diagram helpful understanding data lattices visualization mathematical theory formal concept analysis helpful decomposing lattice pieces loss embedding structure easier interpret theory form 1980s led rudolf wille bernhard ganter peter burmeister technische universität darmstadt basic mathematical definitions introduced 1930s garrett birkhoff lattice theory previous approaches idea arose french darmstadt normalised field systematically mathematical theory philosophical foundations refer charles peirce port royal logic motivation philosophical background article restructuring lattice theory 1982 initiating formal concept analysis mathematical discipline wille starts discontent current lattice theory pure mathematics production theoretical results—often achieved elaborate mental gymnastics —were impressive connections neighboring domains theory weaker aim traces educationalist hartmut von hentig 1972 pleaded restructuring sciences view teaching sciences mutually specialized knowledge critiqueable origins formal concept analysis aims interdisciplinarity democratic control corrects starting lattice theory development formal logic 19th century then—and model theory—a concept unary predicate reduced extent philosophy concepts abstract intent formal concept analysis oriented categories extension intension linguistics classical conceptual logic formal concept analysis aims clarity concepts charles peirce pragmatic maxim unfolding observable elementary properties subsumed objects late philosophy peirce assumed logical thinking aims perceiving reality triade concept judgement conclusion mathematics abstraction logic develops patterns realities support rational communication background wille defines data semantic field study kinds bodies water systematically categorized attributes purpose simplified data table represents formal context diagram concept lattice formal definitions follow   diagram consists circles connecting segments labels circles represent formal concepts lines read subconcept superconcept hierarchy object attribute label diagram objects attributes concept circles attribute reached object ascending path object attribute diagram object reservoir attributes stagnant constant attributes temporary running natural maritime puddle characteristics temporary stagnant natural original formal context reconstructed labelled diagram formal concepts extent concept consists objects ascending path leads circle representing concept intent consists attributes ascending path concept circle diagram diagram concept left label reservoir intent stagnant natural extent puddle maar lake pond tarn pool lagoon sea formal contexts concepts formal context triple set objects set attributes ⊆ binary relation called incidence expresses objects attributes subsets ⊆ objects subsets ⊆ attributes defines derivation operators ∈ gim ∈ dually ∈ gim ∈ applying derivation operator constitutes closure operators   ↦     ⊆   extent closure   ↦     ⊆   intent closure derivation operators define galois connection sets objects attributes french concept lattice called treillis galois galois lattice derivation operators wille elegant definition formal concept pair formal concept context ⊆   ⊆   ′     ′ equivalently intuitively formal concept precisely computing purposes formal context naturally represented matrix rows correspond objects columns correspond attributes entry equals object attribute matrix representation formal concept corresponds maximal submatrix contiguous elements equal misleading formal context boolean negated incidence object attribute concept forming defined reason values true false avoided representing formal contexts symbol express incidence concept lattice formal context concepts context partially inclusion extents equivalently dual inclusion intents ≤ concepts defined concepts ≤ precisely ⊆ equivalently ≤ ⊇ set formal concepts common subconcept meet extent consists objects common extents set dually set formal concepts common superconcept intent comprises attributes objects set concepts meet operations satisfy axioms defining lattice complete lattice conversely complete lattice concept lattice formal context isomorphism attribute values negation real data form object attribute table attributes values formal concept analysis handles data transforming basic type valued formal context method called conceptual scaling negation attribute attribute ¬ extent complement extent ¬ g   m assumed negated attributes concept formation pairs attributes negations naturally occur contexts derived conceptual scaling negations formal concepts concept algebras implications implication relates sets attributes expresses object possessing attribute attribute formal context subsets set attributes ⊆ implication valid a′ ⊆ b′ finite formal context set valid implications canonical basis irredundant set implications valid implications derived natural inference armstrong rules attribute exploration knowledge acquisition method based implications arrow relations formal concept analysis elaborate mathematical foundations field versatile basic mention arrow relations simple easy compute defined ∈ ∈ ↗  ⇔  ¬ gim ⊆n ≠ gin dually ↙  ⇔  ¬ gim ⊆h ≠ incident object attribute pairs relations conveniently recorded table representing formal context lattice properties read arrow relations including distributivity generalizations reveal structural determining congruence relations lattice algorithms tools simple fast algorithms generating formal concepts constructing navigating concept lattices survey kuznetsov obiedkov book ganter obiedkov pseudo code formal concepts exponential size formal context complexity algorithms respect output size concept lattices elements handled fca software applications main purpose tools varies formal context creation formal concept mining generating concepts lattice formal context implications association rules tools academic source applications analytical techniques bicliques formal context naturally interpreted bipartite graph formal concepts correspond maximal bicliques graph mathematical algorithmic formal concept analysis theory maximal bicliques notion bipartite dimension complemented bipartite graph translates ferrers dimension formal context dimension concept lattice applications boolean matrix factorization biclustering multidimensional clustering object attribute numerical data table goal biclustering objects values attributes gene expression data genes objects share common behavior subset biological situations attributes produce local patterns characterize biological processes overlap gene involved processes remark applies recommender systems local patterns characterizing users share tastes subset items bicluster binary object attribute data table pair consisting inclusion maximal set objects inclusion maximal set attributes objects attributes vice versa formal concepts considered rigid biclusters objects attributes vice versa surprising bicluster definitions coming practice definitions formal concept bicluster values numerical object attribute data table defined pair consisting inclusion maximal set objects inclusion maximal set attributes values objects pair represented inclusion maximal rectangle numerical table modulo rows columns permutations biclusters values correspond triconcepts triadic context dimension scale represents numerical attribute values binary attributes generalized dimensional dimensional clusters values dimensional data represented dimensional concepts reduction standard definitions algorithms multidimensional concept analysis computing multidimensional clusters knowledge spaces theory knowledge spaces assumed knowledge space family knowledge union closed complements knowledge form closure represented extents formal context hands experience formal concept analysis formal concept analysis qualitative method data analysis fba 1980s fba tu darmstadt gained experience 200 projects fba 2005 including fields medicine cell biology genetics ecology software engineering ontology library sciences office administration law linguistics political science examples formal concept analysis foundations applications conference papers regular conferences international conference formal concept analysis icfca concept lattices applications cla international conference conceptual structures iccs 
315021	computerscience	simultaneous multithreading smt technique improving efficiency superscalar cpus hardware multithreading smt permits multiple independent threads execution utilize resources modern processor architectures details multithreading ambiguous multiple threads executed simultaneously cpu core multiple tasks tables task segments protection rings permissions running core completely separated multithreading concept preemptive multitasking implemented thread level execution modern superscalar processors simultaneous multithreading smt main implementations multithreading form temporal multithreading super threading temporal multithreading thread instructions execute pipeline stage time simultaneous multithreading instructions thread executed pipeline stage time basic processor architecture main additions ability fetch instructions multiple threads cycle larger register file hold data multiple threads concurrent threads decided chip designers concurrent threads cpu core common processors support concurrent threads core efficiency technique inevitably increases conflict shared resources measuring agreeing effectiveness difficult measured energy efficiency smt parallel native managed workloads historical 130 nm 32 nm intel smt hyper threading implementations 45 nm 32 nm implementations smt extremely energy efficient inorder atom processors modern systems smt effectively exploits concurrency additional dynamic power performance gains minimal power consumption savings considerable researchers extra threads proactively seed shared resource cache improve performance single thread claim smt increase efficiency smt provide redundant computation level error detection recovery current smt hiding memory latency increasing efficiency increasing throughput computations hardware taxonomy processor design increase chip parallelism resource requirements superscalar technique exploit instruction level parallelism ilp multithreading approach exploiting thread level parallelism tlp superscalar executing multiple instructions time thread level parallelism tlp executes instructions multiple threads processor chip time support thread chip key factor distinguish instructions processor issue cycle threads instructions sun microsystems ultrasparc t1 niagara november 14 2005 release multicore processor combined fine grain multithreading technique simultaneous multithreading core issue instruction time historical implementations multithreading cpus 1950s simultaneous multithreading researched ibm 1968 acs 360 project major commercial microprocessor developed smt alpha 21464 ev8 microprocessor developed dec coordination dean tullsen university california san diego susan eggers henry levy university washington microprocessor released alpha microprocessors discontinued shortly hp acquired compaq acquired dec dean tullsen develop hyper threading hyper threading technology htt versions intel pentium 4 microprocessors northwood prescott modern commercial implementations intel pentium modern desktop processor implement simultaneous multithreading starting 06 ghz model released 2002 introduced processors intel calls functionality hyper threading basic thread smt engine intel claims 30 speed improvement compared identical smt pentium 4 performance improvement application dependent running programs require attention processor programs slows hyper threading replay pentium 4 tying valuable execution resources increasing contention resources bandwidth caches tlbs buffer entries equalizing processor resources programs adds varying execution time pentium 4 prescott core gained replay queue reduces execution time replay completely overcome performance hit imagination technologies mips architecture designs include smt mips mips heavyweight virtual processing elements lighter weight hardware microthreads rmi cupertino based startup mips vendor provide processor soc based cores runs threads threads fine grain mode thread executed cycle threads assigned priorities imagination technologies mips cpus smt threads core ibm blue gene smt ibm power5 announced 2004 dual core dual chip module dcm quad core oct core multi chip module mcm core including thread smt engine ibm implementation sophisticated previous assign priority threads fine grained smt engine dynamically execute workloads smt processor increase performance ibm implementation hardware multithreading 2010 ibm released systems based power7 processor cores simultaneous intelligent threads switches threading mode thread threads threads depending process threads scheduled time optimizes core minimum response time maximum throughput ibm power8 intelligent simultaneous threads core smt8 ibm z13 threads core smt people reported sun microsystems ultrasparc t1 niagara 14 november 2005 release defunct processor codenamed rock originally announced 2005 delays cancelled 2009 implementations sparc focused exploiting smt cmp techniques niagara smt sun refers combined approaches cmt concept throughput computing niagara cores core pipeline fine grained multithreading smt instructions multiple threads share issue window cycle processor robin policy issue instructions active thread cycle barrel processor sun microsystems rock processor complex cores pipeline oracle corporation sparc t3 fine grained threads core sparc t4 sparc t5 sparc m5 m6 m7 fine grained threads core executed simultaneously fujitsu sparc64 coarse grained vertical multithreading vmt sparc vii smt intel itanium montecito coarse grained multithreading tukwila smt dual domain multithreading intel xeon phi smt time multiplexed multithreading hardware based threads disabled regular hyperthreading intel atom released 2008 intel product feature smt marketed hyper threading supporting instruction reordering speculative execution register renaming intel reintroduced hyper threading nehalem microarchitecture absence core microarchitecture amd bulldozer microarchitecture flexfpu shared l2 cache multithreaded integer cores module single threaded partial smt implementation amd zen microarchitecture smt visc architecture virtual software layer translation layer dispatch single thread instructions global splits instructions virtual hardware threadlets dispatched separate virtual cores virtual cores send resources physical cores multiple virtual cores push threadlets reorder buffer single physical core split partial instructions data multiple threadlets execution ports time virtual core track position relative output form multithreading increase single threaded performance allowing single thread resources cpu allocation resources dynamic single cycle latency level cycles depending change allocation depending individual application virtual cores competing resources algorithms determine resources allocated disadvantages depending design architecture processor simultaneous multithreading decrease performance shared resources bottlenecks performance critics argue considerable burden software developers simultaneous multithreading bad application situations insert extra logic decreases performance current operating systems lack convenient api calls purpose preventing processes priority resources security concern simultaneous multithreading implementations intel hyperthreading netburst based processors vulnerability application steal cryptographic key application running processor monitoring cache sophisticated machine learning exploits implementation allegedly explained black hat 2018 
318413	computerscience	national institute science automation inria french national institution focusing science applied mathematics created institut recherche en informatique en automatique iria 1967 rocquencourt paris plan calcul historical premises shape central command nato military forces 1979 iria inria 2011 styled inria inria public scientific technical establishment epst double supervision french ministry national education advanced instruction ministry economy finance industry administrative status inria centers bordeaux grenoble inovallée lille nancy paris rocquencourt rennes saclay sophia antipolis contributes academic teams centers december 2007 centers bordeaux lille saclay formed single center called inria futurs october 2010 inria pierre marie curie university paris diderot university started irill center innovation initiative software inria employs 3800 people 1300 researchers 1000 students 500 postdoctorates inria theoretical applied science process produced programs 
318439	computerscience	mining referred data mining roughly equivalent analytics process deriving quality quality typically derived devising patterns trends statistical pattern learning mining involves process structuring input parsing addition derived linguistic features removal subsequent insertion database deriving patterns structured data finally evaluation interpretation output quality mining refers combination relevance novelty typical mining tasks include categorization clustering concept entity extraction production granular taxonomies sentiment analysis document summarization entity relation modeling learning relations named entities analysis involves retrieval lexical analysis study word frequency distributions pattern recognition tagging annotation extraction data mining techniques including link association analysis visualization predictive analytics overarching goal essentially data analysis application natural language processing nlp analytical methods typical application scan set documents written natural language model document set predictive classification purposes populate database search extracted analytics term analytics describes set linguistic statistical machine learning techniques model structure content textual sources business intelligence exploratory data analysis investigation term roughly synonymous mining ronen feldman modified 2000 description mining 2004 analytics term frequently business settings mining earliest application dating 1980s notably life sciences government intelligence term analytics describes application analytics respond business independently conjunction query analysis fielded numerical data truism 80 percent business relevant originates unstructured form techniques processes discover knowledge – business rules relationships – locked textual form impenetrable automated processing analysis processes subtasks—components larger analytics effort—typically include applications mining technology broadly applied wide variety government business mining records management searching documents relevant daily activities legal professionals mining discovery governments military mining national security intelligence purposes scientific researchers incorporate mining approaches efforts organize sets data addressing unstructured data determine ideas communicated sentiment analysis social media support scientific discovery fields life sciences bioinformatics business applications support competitive intelligence automated placement numerous activities security applications mining software packages marketed security applications monitoring analysis online plain sources internet news blogs national security purposes involved study encryption decryption biomedical applications range mining applications biomedical literature including computational approaches assist studies protein docking protein interactions protein disease associations addition patient textual datasets clinical field datasets demographic population studies adverse event reports mining facilitate clinical studies precision medicine mining algorithms facilitate stratification indexing specific clinical events patient textual datasets symptoms effects comorbidities electronic health records event reports reports specific diagnostic tests online mining application biomedical literature pubgene publicly accessible search engine combines biomedical mining network visualization gopubmed knowledge based search engine biomedical texts mining techniques enable extract unknown knowledge unstructured documents clinical domainsoftware applications mining methods software researched developed major firms including ibm automate mining analysis processes firms search indexing improve public sector effort concentrated creating software tracking monitoring terrorist activities online media applications mining media companies tribune company clarify provide readers search experiences increases stickiness revenue additionally editors benefiting share associate package news properties increasing opportunities monetize content business marketing applications mining starting marketing analytical customer relationship management coussement van den poel 2008 apply improve predictive analytics models customer churn customer attrition sentiment analysis sentiment analysis involve analysis movie reviews estimating favorable review movie analysis labeled data set labeling affectivity resources affectivity concepts wordnet conceptnet detect emotions affective computing based approaches affective computing multiple corpora students evaluations children stories news stories scientific literature mining academic applications issue mining publishers hold databases indexing retrieval true scientific disciplines highly specific contained written initiatives nature proposal mining interface otmi national institutes health common journal publishing document type definition dtd provide semantic cues machines answer specific queries contained removing publisher barriers public access academic institutions involved mining initiative methods scientific literature mining computational methods developed assist retrieval scientific literature published approaches include methods searching determining novelty clarifying homonyms technical reports digital humanities computational sociology automatic analysis vast textual corpora created possibility scholars analyzemillions documents multiple languages limited manual intervention key enabling technologies parsing machine translation topic categorization machine learning automatic parsing textual corpora enabled extraction actors relational networks vast scale textual data network data networks thousands nodes analyzed tools network theory identify key actors key communities parties properties robustness structural stability network centrality nodes automates approach introduced quantitative narrative analysis subject verb object triplets identified pairs actors linked action pairs formed actor object content analysis traditional social sciences media studies time automation content analysis allowed data revolution field studies social media newspaper content include millions news items gender bias readability content similarity reader preferences mood analyzed based mining methods millions documents analysis readability gender bias topic bias demonstrated flaounas topics gender biases levels readability possibility detect mood patterns vast population analyzing twitter content demonstrated software mining programs commercial source companies sources list mining software intellectual property law situation europe lack flexibilities european copyright database law mining copyright mining permission copyright owner illegal 2014 recommendation hargreaves review government amended copyright law mining limitation exception country japan introduced mining specific exception 2009 restriction copyright directive exception content mining commercial purposes copyright law provision overridden contractual terms conditions european commission facilitated stakeholder discussion data mining 2013 title licenses europe focus solution legal issue licenses limitations exceptions copyright law led representatives universities researchers libraries civil society access publishers leave stakeholder dialogue 2013 situation united contrast europe flexible nature copyright law fair mining america fair countries israel taiwan south korea viewed legal mining transformative meaning supplant original viewed lawful fair google book settlement presiding judge ruled google digitization project copyright books lawful transformative digitization project displayed—one data mining implications websites based searches documents specific user defined phrases semantic mining content based meaning context specific word additionally mining software build dossiers specific people events datasets based data extracted news reports built facilitate social networks analysis counter intelligence mining software capacity intelligence analyst librarian albeit limited scope analysis mining email spam filters determining characteristics messages advertisements unwanted material mining plays role determining financial market sentiment future increasing paid multilingual data mining ability gain languages cluster items linguistic sources meaning popular analytics tools includes accern lexalytics repustate challenge exploiting proportion enterprise originates unstructured form recognized decades recognized earliest definition business intelligence october 1958 ibm journal article luhn business intelligence describes utilize data processing machines auto abstracting auto encoding documents creating profiles action organization incoming internally generated documents automatically abstracted characterized word pattern automatically action management systems developed starting 1960s emerged 80s 90s software category field practice emphasis numerical data stored relational databases surprising unstructured documents hard process emergence analytics current form stems refocusing late 1990s algorithm development application prof marti hearst paper untangling data mining decade computational linguistics community viewed collections resource tapped produce analysis algorithms paper attempted emphasis online collections discover trends progress artificial intelligent analysis mixture computationally driven user guided analysis door exciting hearst 1999 statement describes analytics technology practice decade 
319504	computerscience	speculative execution optimization technique performs task prevent delay incurred reverted objective provide concurrency extra resources approach employed variety including branch prediction pipelined processors prediction exploiting locality prefetching memory files optimistic concurrency control database systems overview modern pipelined microprocessors speculative execution reduce cost conditional branch instructions schemes predict execution path program based history branch executions improve performance utilization resources instructions scheduled time determined instructions executed branch variants speculative computation earlier concept eager execution eager execution form speculative execution conditional branch executed committed predicate true unlimited resources eager execution oracle execution theory provide performance perfect branch prediction limited resources eager execution employed carefully resources grows exponentially level branch executed eagerly predictive execution predictive execution form speculative execution outcome predicted execution proceeds predicted path actual result prediction true predicted execution allowed commit misprediction execution unrolled executed common forms include branch predictors memory dependence prediction generalized form referred prediction lazy execution lazy execution involve speculation incorporation speculative execution implementations haskell programming language current topic eager haskell designed idea speculative execution 2003 phd thesis ghc support speculative execution abortion mechanism bad choice called optimistic execution deemed complicated 
327567	computerscience	versatile real time executive vrtx real time operating developed marketed company mentor graphics vrtx suitable traditional board based embedded systems soc architectures superseded nucleus rtos history vrtx operating product hunter ready company founded james ready colin hunter 1980 ready systems firm merged microtec 1993 public 1994 firm acquired mentor graphics 1995 vrtx mentor product 1980s chief rival vrtx vxworks wind river systems product vxworks mid 1980s compiler assembly language tools supplement vrtx vrtx vxworks wind river created offering real time kernel vrtx vrtx vrtx flavors companies developing software vrtx arm mips powerpc risc microprocessors implementations vrtx runs hubble space telescope vrtx runs wide augmentation vrtx operating ported amd am29000 vrtx core motorola proprietary p2k rus operating runs company devices motorola v60 t280i motorola razr2 v9x runs hardware platforms including lte motorola v300 v500 v600 e398 razr v3 featuring arm7 processor lte2 motorola l7 upcoming devices 176x220 screen resolution rainbow pog 3g phones featuring mcore processor motorola e1000 razr v3x argon 3g phones 532 mhz arm11 processor motorola razr maxx v6 v3xx 
331512	computerscience	theory computation mealy machine finite machine output values determined current current inputs contrast moore machine output values determined solely current mealy machine deterministic finite transducer input transition history mealy machine named george mealy concept 1955 paper “a method synthesizing sequential circuits” formal definition mealy machine tuple consisting formulations transition output functions coalesced single function diagram diagram mealy machine associates output transition edge contrast diagram moore machine associates output input output alphabet associate mealy automata helix directed graph graph vertices couples letters nodes degree successor automata letter automata output instate reads letter graph union disjoint cycles automaton bireversible examples simple simple mealy machine input output transition edge labeled input red output blue machine starts output exclusive input values machine implements edge detector outputting time input flips complex complex mealy machines multiple inputs multiple outputs applications mealy machines provide rudimentary mathematical model cipher machines input output alphabet latin alphabet mealy machine designed string letters sequence inputs process ciphered string sequence outputs mealy model enigma diagram complex provide feasible designing complex ciphering machines moore mealy machines dfas output tick clock modern cpus computers cell phones digital clocks basic electronic devices machines finite machine control simple software systems represented regular expressions modeled finite machines simple systems vending machines basic electronics finding intersection finite machines design simple manner concurrent systems exchange messages instance traffic light consists multiple subsystems traffic lights concurrently examples applications 
331680	computerscience	edge detection includes variety mathematical methods aim identifying digital image image brightness sharply formally discontinuities image brightness sharply typically organized set curved segments termed edges finding discontinuities dimensional signals step detection finding signal discontinuities time change detection edge detection fundamental tool image processing machine vision vision feature detection feature extraction motivations purpose detecting sharp image brightness capture events properties assumptions image formation model discontinuities image brightness correspond ideal result applying edge detector image lead set connected curves boundaries objects boundaries surface markings curves correspond discontinuities surface orientation applying edge detection algorithm image reduce data processed filter regarded relevant preserving structural properties image edge detection step successful subsequent task interpreting contents original image simplified ideal edges real life images moderate complexity edges extracted trivial images hampered fragmentation meaning edge curves connected missing edge segments false edges phenomena image – complicating subsequent task interpreting image data edge detection fundamental steps image processing image analysis image pattern recognition vision techniques edge properties edges extracted dimensional image dimensional scene classified viewpoint dependent viewpoint independent viewpoint independent edge typically reflects inherent properties dimensional objects surface markings surface shape viewpoint dependent edge change viewpoint typically reflects geometry scene objects occluding typical edge instance border block red color block yellow contrast extracted ridge detector pixels color unchanging background edge simple edge model literature considered detection ideal step edges edges natural images ideal step edges effects researchers gaussian smoothed step edge error function simplest extension ideal step edge model modeling effects edge blur practical applications dimensional image edge modeled left edge intensity edge isformula scale parameter called blur scale edge ideally scale parameter adjusted based quality image avoid destroying true edges image trivial task illustrate edge detection trivial task detecting edges dimensional signal intuitively edge 4th 5th pixels intensity difference 4th 5th pixels intensity differences adjacent neighboring pixels easy edge region argue edges firmly specific threshold intensity change neighbouring pixels edge pixels simple reasons edge detection trivial objects scene simple illumination conditions controlled edges extracted image girl approaches methods edge detection categories search based crossing based search based methods detect edges computing measure edge strength derivative expression gradient magnitude searching local directional maxima gradient magnitude computed estimate local orientation edge gradient direction crossing based methods search crossings derivative expression computed image edges crossings laplacian crossings linear differential expression pre processing step edge detection smoothing stage typically gaussian smoothing applied noise reduction edge detection methods published types smoothing filters applied measures edge strength computed edge detection methods rely computation image gradients types filters computing gradient estimates directions survey edge detection methods ziou tabbone 1998 encyclopedia articles edge detection encyclopedia mathematics encyclopedia science engineering canny john canny considered mathematical deriving optimal smoothing filter criteria detection localization minimizing multiple responses single edge optimal filter assumptions sum exponential terms filter approximated derivatives gaussians canny introduced notion maximum suppression presmoothing filters edge defined gradient magnitude assumes local maximum gradient direction crossing 2nd derivative gradient direction proposed haralick decades modern geometric variational meaning operator links marr–hildreth crossing laplacian edge detector observation ron kimmel alfred bruckstein days vision canny edge detector including variations art edge detector edge detectors perform canny require computation times parameters canny–deriche detector derived mathematical criteria canny edge detector starting discrete viewpoint leading set recursive filters image smoothing exponential filters gaussian filters differential edge detector reformulation canny method viewpoint differential invariants computed scale space representation leading advantages terms theoretical analysis pixel implementation aspect log gabor filter choice extract boundaries natural scenes methods gradient operators applied estimate image gradients input image smoothed version simplest approach central differences application filter masks image data earlier sobel operator based filters estimates image derivatives gradient magnitude computed gradient orientation estimated asother difference operators estimating image gradient proposed prewitt operator roberts cross kayyali operator frei chen operator extend filters dimension avoid issue recognizing edge snr image cost operation loss terms resolution examples extended prewitt 7x7 thresholding linking computed measure edge strength typically gradient magnitude stage apply threshold decide edges image threshold edges detected result increasingly susceptible noise detecting edges irrelevant features image conversely threshold subtle edges result fragmented edges edge applied gradient magnitude image edges type edge thinning post processing edges detected maximum suppression edge curves definition edge pixels linked edge polygon edge linking edge tracking procedure discrete grid maximum suppression stage implemented estimating gradient direction derivatives rounding gradient direction multiples 45 degrees finally comparing values gradient magnitude estimated gradient direction commonly approach handle thresholds thresholding thresholding hysteresis method multiple thresholds edges upper threshold start edge start trace path edge image pixel pixel marking edge threshold marking edge falls threshold approach assumption edges continuous curves follow faint edge meaning noisy pixel image marked edge choosing thresholding parameters suitable thresholding values vary image edge thinning edge thinning technique remove unwanted spurious edges image technique employed image filtered noise median gaussian filter edge operator applied detect edges edges smoothed threshold removes unwanted applied carefully pixel edge elements advantages popular algorithms passes direction chosen level accuracy desired approaches edge detection operators based derivatives intensity essentially captures rate change intensity gradient ideal continuous detection crossings derivative captures local maxima gradient marr–hildreth operator based detection crossings laplacian operator applied gaussian smoothed image operator return false edges local minima gradient magnitude operator poor localization curved edges operator historical differential refined edge detection approach automatically detects edges pixel accuracy differential approach detecting crossings directional derivative gradient direction differential geometric expressing requirement maximum suppression proposed lindeberg introduce image local coordinate 12 13 direction parallel gradient direction assuming image pre smoothed gaussian smoothing scale space representation 14 scale 15 computed require gradient magnitude scale space representation equal directional derivative 13 direction 17 directional derivative 13 direction equal zerowhile directional derivative 13 direction 17 negative written explicit expression terms local partial derivatives 23 edge definition expressed crossing curves differential invariantthat satisfy sign condition differential invariantdenote partial derivatives computed scale space representation 27 smoothing original image gaussian kernel edges automatically continuous curves pixel accuracy hysteresis thresholding applied differential subpixel edge segments practice derivative approximations computed central differences derivatives computed scale space representation 27 filter masks derivatives sign condition analogous fashion phase congruency based development edge detection techniques takes frequency domain approach finding edge locations phase congruency phase coherence methods attempt locations image sinusoids frequency domain phase locations correspond location perceived edge edge represented change intensity spatial domain key benefit technique responds mach bands avoids false positives typically roof edges roof edge discontinuity derivative grey level profile physics inspired phase stretch transform pst physics inspired computational approach signal image processing utilities feature detection classification pst spin time stretch dispersive fourier transform pst transforms image emulating propagation diffractive medium engineered 3d dispersive property refractive operation relies symmetry dispersion profile understood terms dispersive eigenfunctions stretch modes pst performs functionality phase contrast microscopy digital images pst applicable digital images temporal time series data subpixel increase precision edge detection subpixel techniques proposed including curve fitting moment based reconstructive partial methods methods characteristics curve fitting methods computationally simple easily noise moment based methods integral based approach reduce noise require computations reconstructive methods horizontal gradients vertical gradients build curve peak curve pixel edge partial methods based hypothesis pixel depends edge pixel producing accurate individual estimation edge pixel variants moment based technique accurate isolated edges 
332378	computerscience	led genichi kawakami company’s president yamaha motor production product ya 1955 125cc motorcycle 3rd mount fuji ascent race class company products includes motorcycles scooters motorized bicycles boats sail boats personal water craft swimming pools utility boats fishing boats outboard motors wheel atvs recreational road vehicles kart engines golf carts multi purpose engines electrical generators water pumps snowmobiles snow throwers automobile engines surface mounters intelligent machinery industrial unmanned helicopters electrical power units wheelchairs helmets company involved import sales types products development tourist businesses management leisure recreational facilities services yamaha’s motorcycle sales largest outboard motor yamaha leader water vehicle sales history 1955 motorcycle division yamaha founded 1955 headed genichi kawakami yamaha initial product cycle single cylinder motorcycle ya german dkw rt 125 ya competitive success racing winning 125cc class fuji ascent sweeping podium japan autobike endurance road race success racing set tone yamaha competition varieties motorcycle racing key endeavor company history fueled strong rivalry honda japanese manufacturers yamaha competing internationally 1956 entered catalina grand prix ya sixth ya ya 1957 125cc stroke improved frame suspension yd 1957 250cc stroke twin cylinder motorcycle resembling ya larger powerful motor performance version bike yds housed 250cc stroke twin double downtube cradle frame offered speed transmission japanese motorcycle period yamaha offer outboard marine engine success growth 1960s 1963 yamaha dedication stroke engine racing paid victory international competition belgium 250cc class success sales impressive yamaha set international subsidiaries period thailand 1964 netherlands 1968 1965 release 305cc stroke twin flagship company lineup featured separate oil supply injected oil gasoline prior combustion traditionally riders pre mix oil gasoline filling gas tank stroke engines 1967 larger displacement model range 350cc stroke twin 1968 yamaha launched stroke motorcycle xs yamaha xs 650cc stroke twin larger powerful machine equaled displacement performance popular british bikes era triumph bonneville bsa gold star yamaha continued stroke stroke twins time japanese manufacturers increasingly moving cylinder stroke machines trend led honda 1969 legendary cb 750 stroke cylinder cycle stroke era 1970s 1976 yamaha answer japanese brands multi cylinder stroke xs 750 850 750cc triple cylinder machine shaft final drive introduced honda breakthrough bike yamaha cylinder model xs 1100 1978 shaft drive heavier touring oriented rivals produced impressive string victories endurance racing 1970s dedicated road bikes road racing recreation yamaha innovator dirt bike technology introduced single shock rear suspension trademarked monoshock 1973 appeared production 1974 yamaha yz 250 model continued production updates 2015 yamaha continuous model yamaha continued racing 1960s 1970s increasing success formats decade 1970s capped xt500 winning paris dakar rally 1979 1980s diversification innovation 1980 combination consumer preference environmental regulation strokes increasingly popular suzuki production stroke series including flagship water cooled stroke 750cc 750 1977 kawasaki considerable success 1970s stroke triples 250cc 350cc 500cc 750cc production road strokes 1980 yamaha bucked trend continued refine sell strokes street 1980s bikes performance oriented water cooled twin cylinder machines designed achieve excellent performance advantage weight strokes rz 250 1980 progenitor series rz 350 largest displacement model popular hot rod bike 1980s continued sold countries 1990s 1980s motorcycle industry gradually building basic versatile models designed roles offering specialized machines designed excel niches included racing performance street riding touring motocross racing enduro recreational road riding cruising yamaha branched ujms universal japanese motorcycle start decade larger set offerings defined markets decade xv750 1981 featured air cooled twin stroke engine cruiser styling japanese cruiser style motorcycles 1980s yamaha offered dozens cruiser styled bikes variety displacements engine configurations rzv500 repli racers kenny roberts competition bike featured liquid cooled stroke motor 500cc displacement v4 configuration perimeter frame fairing popular practical performance model street introduced 1985 fz750 innovative 750cc stroke inline cylinder model motorcycle feature valve cylinder head yamaha featured cylinder block canted 45 degrees box steel perimeter frame production fz continued 1991 1990s performance bikes spin brand 1998 yamaha marketed 1000cc cylinder road bike called yzf r1 model introduced style gearbox design shortened motor gearbox compact unit allowed motor frame designed improve handling short wheel based frame 1995 yamaha announced creation star motorcycles brand cruiser series motorcycles american market markets star motorcycles sold yamaha brand attempt create brand identity closely aligned cruiser market segment largest lucrative usa 2000s expansion consolidation 2007 yamaha established philippine operations distributes yamaha motorcycles corporate yamaha motor philippines 20 worldwide subsidiaries operating continents india india yamaha motor private limited iym wholly owned indian subsidiary yamaha motor company headquartered chennai india yamaha motor company japan initial foray india 1985 joint venture escorts august 2001 100 subsidiary yamaha motor japan ymc 2008 mitsui entered agreement ymc joint investor india produces range motorcycles domestic consumption export including fz saluto fazer yzf yamaha plants manufacture wheelers india faridabad haryana surajpur uttar pradesh chennai tamilnadu plants yamaha handles production motorcycles domestic overseas markets faridabad plants started 1965 surajpur plants inception 1984 chennai 2014 scooters manufactured yamaha india yamaha ray upgrade yamaha ray alpha fascino motorcycle racing highlights motorcycle racing yamaha championships including motogp preceding 500 cc stroke class superbike addition yamaha recorded 208 victories isle head list victories sidecar 40 yamaha riders include giacomo agostini bob hannah heikki mikkola bruce anstey kenny roberts eddie lawson wayne rainey jeremy mcgrath stefan merriman dave molyneux ian hutchinson phil read chad reed ben spies jorge lorenzo current lineup consists time champion valentino rossi maverick viñales yamaha yz450f ama supercross championship row 2008 chad reed 2009 james stewart yamaha build production monoshock motocross bike 1975 250 400 1976 125 water cooled motocross production bike 1977 bikes 1981 shelf bikes yamaha motocross competition stroke bike yz400f 1998 usa outdoor national championship factory rider doug henry 1962 yamaha production road racing grand prix motorcycles licensed road racer purchase 1970 factory privateer teams dominated 250 cc championship britain rodney gould winning title yamaha td2 yamaha sponsors professional atv riders racing cross country racing motocross yamaha success cross country yfz450 ridden ballance winning straight titles 2000 yamaha major rider traci cecco ridden yfz450 titles 2000 atv motocross yamaha success dustin nelson pat brown race yfz450 pat brown season 3rd title 2007 nelson 1st titles yamaha itp quadcross 2006 2008 yamaha produced engines 1989 1997 initially zakspeed team 1991 brabham bt60y 1992 jordan 192 1993 1996 tyrrell 1997 arrows a18 race drivers including damon hill ukyo katayama mark blundell mika salo scored acceptable engines unreliable regarded powerful divisions yamaha motors highly diversified company produces products industries consumer market segments automobile engines yamaha built engines manufacturers vehicles development production toyota 2000gt 1967 cylinder head toyota 4a engine developed yamaha built toyota shimayama plant 4a 2a engines 1984 executives yamaha motor corporation signed contract ford motor company develop produce supply compact 60° liter dohc v6 engines transverse application 1989–95 ford taurus sho 1993 1995 sho engine produced liter versions yamaha jointly designed liter dohc engine ford 1996–99 sho ford yamaha developed zetec branded cylinder engines ford cars sports car ford puma 2005 2010 yamaha produced litre v8 volvo b8444s engines xc90 s80 models adapted 0l configuration volvo foray v8 supercars s60 british sportscar maker noble turbo version volvo v8 m600 performance oriented cylinder heads toyota lexus engines designed built yamaha examples 1lr gue engine 2010–2012 lexus lfa 2ur gse lexus isf 3s gte engine toyota celica gt4 2zz engine 1999–2006 toyota celica toyota 4gr fse engine lexus is250 yamaha tunes engines manufacturers toyota yamaha logos toyota engines snowmobiles 2007 yamaha snowmobile manufacturer stroke united – vk 540 model remained stroke markets yamaha introduced strokes 2003 release rx cylinder model performance oriented stroke snowmobile market modern stroke snowmobile produced honor belongs arctic cat yellowstone special released 2000 designed rental sled meet yellowstone national park stringent emission requirement yamaha received criticism weight disadvantage compared strokes fuel economy range torque yamaha stroke technology introduce 80fi engine equipped phazer venture lite models provide displacement horsepower models marketed riders engine specific output stroke production 160 hp yamaha achieves forced induction yamaha key player stroke wars series advertisements opponent ski doo claim tec equipped strokes cleaner efficient strokes yamaha claims strokes cleaner reliable yamaha broke multi absence sno cross winter 2006 2007 introduction factory race team headed arctic cat racer robbie malinoski yamaha brand win stroke snowmobile professional snowcross race 2006 wpsa snowcross championship current 2019 partnership arctic cat owned textron yamaha motor company supplies 050cc cylinder 135 hp 998cc cylinder turbocharged 180 hp engines collaborative chassis sold brand similarities respective manufacturers models differences viper arctic cat 7000 series equivalent sidewinder arctic cat 9000 series equivalent models equipped yamaha clutches plastic body panels color suspension set windshield intercooler housing turbocharged models suspension layout chassis gauge package handlebar switchgear remain yamaha arctic cat snowmobiles partnership established 2014 model introduction 2014 viper arctic cat 7000 series 2017 arctic cat yamaha introduced powerful snowmobile engine release sidewinder 9000 series sidewinder srx le spring sidewinder ltx le spring ltx season sport ltx dx season comfort sidewinder xtx le spring xtx season sidewinder btx le spring sidewinder mtx le spring viper ltx season vk 540 season sno scoot 120 sno scoot 200 historic japan built models apex rs vector lineups viper models removed production support sale hold units previous models msrp industry support dealerships sell previous model snowmobiles remained unsold 
339992	computerscience	theory formal languages myhill–nerode theorem sufficient condition language regular theorem named john myhill anil nerode proved university chicago 1958 statement theorem language pair strings define distinguishing extension string thatexactly strings xz yz belongs define relation rl strings rule rl distinguishing extension easy rl equivalence relation strings divides set strings equivalence classes myhill–nerode theorem regular rl finite equivalence classes deterministic finite automaton dfa recognizing equal equivalence classes rl implies unique minimal dfa minimum proof regular language definition dfa recognizes finitely partition set finite strings subsets subset set strings input automaton strings belong subset choice string automaton reaches input xz reaches input yz accept inputs xz yz reject string distinguishing extension rl subset equivalence class rl combining equivalence classes belongs sets relation equivalence classes implying equivalence classes finite direction suppose rl finitely equivalence classes design deterministic finite automaton equivalence class start automaton corresponds equivalence class string transition function input symbol takes automaton equivalence class string xy arbitrarily chosen string equivalence class definition myhill–nerode relation implies transition function defined matter representative string chosen transition function result automaton accepting equivalence class string definition relation implies strings equivalence class belong string distinguishing string pairs strings class existence finite automaton recognizing implies myhill–nerode relation finite equivalence classes equal automaton existence finite equivalence classes implies existence automaton consequences myhill–nerode theorem language regular proving equivalence classes rl finite exhaustive analysis string distinguishing extensions additional equivalence classes language consisting binary representations divided regular string 00 11 01 distinguishing extensions classes remainders divided step distinguishing extension minimal automaton accepting language equivalence classes corollary theorem language defines infinite set equivalence classes regular corollary frequently prove language regular generalization myhill–nerode theorem generalized trees tree automaton 
346382	computerscience	image analysis extraction meaningful images digital images digital image processing techniques image analysis tasks simple reading bar coded tags sophisticated identifying person computers indispensable analysis amounts data tasks require complex computation extraction quantitative hand human visual cortex excellent image analysis apparatus extracting level applications including medicine security remote sensing human analysts replaced computers reason image analysis tools edge detectors neural networks inspired human visual perception models digital digital image analysis image analysis electrical device automatically studies image note device electrical circuit digital camera mobile phone involves fields machine vision medical imaging heavy pattern recognition digital geometry signal processing field science developed 1950s academic institutions mit lab originally branch artificial intelligence robotics quantitative qualitative characterization dimensional 2d dimensional 3d digital images 2d images analyzed vision 3d images medical imaging field established 1950s—1970s pioneering contributions azriel rosenfeld herbert freeman jack bresenham king sun fu techniques techniques automatically analysing images technique range tasks methods image analysis generic wide ranges tasks compared abilities human image analysing capabilities examples image analysis techniques fields include applications applications digital image analysis continuously expanding science industry including object based object based image analysis obia employs main processes segmentation classification traditional image segmentation pixel basis obia pixels homogeneous objects objects shapes scale objects statistics classify objects statistics include geometry context texture image objects analyst defines statistics classification process generate land cover technique implemented software ecognition orfeo toolbox applied earth images obia geographic object based image analysis geobia defined discipline geoinformation science devoted partitioning remote sensing rs imagery meaningful image objects assessing characteristics spatial spectral temporal scale international geobia conference held biannually 2006 object based image analysis applied fields cell biology medicine instance detect cellular shapes process cell differentiation land cover mapping land cover land change detection remote sensing geospatial data baseline assessing climate change impacts habitats biodiversity natural resources target 
347832	computerscience	generation systems future fgcs initiative japan ministry international trade industry begun 1982 create massively parallel computing processing result massive government industry project japan 1980s aimed create epoch supercomputer performance provide platform future developments artificial intelligence unrelated russian project named generation kronos trip report paper prof ehud shapiro focused fgcs project concurrent logic programming software foundation project captured rationale motivations driving huge project japan effort leader industry institute generation technology launched revolutionary plan development systems applicable knowledge processing systems generation computers built concepts logic programming refute accusation japan exploits knowledge contributing project stimulate original international community term generation intended convey leap existing machines history computing hardware computers vacuum tubes called generation transistors diodes integrated circuits microprocessors fourth previous generations focused increasing logic elements single cpu generation believed time massive cpus performance project create period considered investment sixth generation project opinions outcome divided failure time history late 1960s 1970s talk generations hardware generations taxonomy zeroth generation based metal gears ibm 407 mechanical relays mark post generation computers based scale integrated vlsi circuits parallel set generations software multiple generations 1990s japan follower computing arena building computers british leads ministry international trade industry miti decided attempt break follow leader pattern mid 1970s started scale future computing japan processing development center jipdec future directions 1979 offered contract carry depth studies industry academia period term generation started prior 1970s miti guidance successes improved steel industry creation oil supertanker automotive industry consumer electronics memory miti decided future technology japanese language written spoken form major obstacles computers hurdles lightly miti held conference invited people primary fields investigation initial project project imagined epoch supercomputer performance massively parallel computing processing aim build parallel computers artificial intelligence applications concurrent logic programming fgcs project vast findings contributed greatly development concurrent logic programming field target defined fgcs project develop knowledge processing systems roughly meaning applied artificial intelligence chosen tool implement goal logic programming logic programming approach characterized maarten van emden – founders – technically summed equations axioms typically universal axioms restricted form called horn clauses definite clauses statement proved computation existential statement proof constructive values existentially quantified variables values constitute output computation logic programming unified gradients science software engineering databases architecture artificial intelligence logic programming missing link knowledge engineering parallel architectures 1982 visit icot ehud shapiro invented concurrent prolog concurrent programming language integrated logic programming concurrent programming concurrent prolog logic programming language designed concurrent programming parallel execution process oriented language embodies dataflow synchronization guarded command indeterminacy basic control mechanisms shapiro language report marked icot technical report 003 concurrent prolog interpreter written prolog shapiro concurrent prolog inspired change direction fgcs focusing parallel implementation prolog focus concurrent logic programming software foundation project inspired concurrent logic programming language guarded horn clauses ghc ueda basis kl1 programming language finally designed implemented fgcs project core programming language project imagined parallel processing running massive databases opposed traditional filesystem logic programming language define access data envisioned building prototype machine performance 100m 1g lips lips logical inference time typical workstation machines capable 100k lips proposed build machine period initial building subsystems final complete prototype 1982 government decided project established institute generation technology icot joint investment japanese companies implementation ingrained belief parallel computing future performance gains generation project generated deal apprehension field japanese consumer electronics field 1970s automotive 1980s japanese 1980s reputation invincibility parallel projects set strategic computing initiative microelectronics technology corporation mcc alvey europe european strategic program technology esprit ecrc european centre munich collaboration icl britain bull france siemens germany running parallel inference machines pim eventually produced pim pim pim pim pim project produced applications systems parallel database management kappa legal reasoning helic automated theorem prover mgtp applications bioinformatics failure fgcs project meet commercial success reasons lisp machine companies thinking machines highly parallel architecture eventually surpassed speed specialized hardware sun workstations intel x86 machines project produce generation promising japanese researchers fgcs project miti stopped funding scale projects momentum developed fgcs project dissipated miti icot embarked sixth generation project 1990s primary choice concurrent logic programming bridge parallel architecture logic knowledge representation solving language applications happened cleanly languages developed limitations committed choice feature concurrent constraint logic programming interfered logical semantics languages existing cpu performance pushed obvious barriers experts perceived 1980s parallel computing dropped time niche situations workstations increasing capacity designed built project lifespan outperformed shelf units commercially project suffered wrong technology curve lifespan guis mainstream computers internet enabled locally stored databases distributed simple projects real data mining project promises logic programming negated committed choice period project spent ¥50 400 1992 exchange rates terminated met goals workstations appeal market purpose systems job outrun parallel lisp machine market rule based systems clips purpose computers expensive lisp machines unnecessary time spite possibility project failure approaches envisioned generation project logic programming distributed massive knowledge bases interpreted current technologies ontology language owl employs layers logic based knowledge representation systems appears technologies reinvented leveraged approaches investigated generation initiative 21st century flavors parallel computing proliferate including multi core architectures massively parallel processing clock speeds cpus 3–5 ghz range cpu power dissipation ability industry produce faster single cpu systems linked moore law periodic doubling transistor counts threatened ordinary consumer machines game consoles parallel processors intel core amd k10 cell microprocessor graphics card companies nvidia amd introducing parallel systems cuda developments facilitated generation project summary strong generation project time debatable counters justifies claims failure 
348692	computerscience	eigenfaces set eigenvectors vision human recognition approach eigenfaces recognition developed sirovich kirby 1987 matthew turk alex pentland classification eigenvectors derived covariance matrix probability distribution dimensional vector space images eigenfaces form basis set images construct covariance matrix produces dimension reduction allowing set basis images represent original training images classification achieved comparing represented basis set history eigenface approach search dimensional representation images sirovich kirby 1987 principal component analysis collection images form set basis features basis images eigenpictures linearly combined reconstruct images original training set training set consists images principal component analysis form basis set images reconstruction error reduced increasing eigenpictures chosen generate eigenfaces training set images image proportions features eigenfaces image1 23 e1 e2 51 e3 en 1991 turk pentland expanded eigenface method recognition addition designing automated recognition eigenfaces calculating eigenvectors covariance matrix computers time perform eigen decomposition images images occupy dimensional space conventional principal component analysis intractable data sets turk pentland paper demonstrated extract eigenvectors based matrices sized images pixels established eigenface method expanded include methods preprocessing improve accuracy multiple manifold approaches build sets eigenfaces subjects features eyes generation set eigenfaces generated performing mathematical process called principal component analysis pca set images depicting human informally eigenfaces considered set standardized ingredients derived statistical analysis pictures human considered combination standard composed average eigenface 55 eigenface eigenface remarkably eigenfaces combined achieve fair approximation person recorded digital photograph list values eigenface database space person eigenfaces created light dark arranged specific pattern pattern features singled evaluated scored pattern evaluate symmetry style facial hair hairline evaluate size nose mouth eigenfaces patterns simple identify image eigenface technique creating eigenfaces recognition recognition technique handwriting recognition lip reading voice recognition sign language hand gestures interpretation medical imaging analysis term eigenface prefer eigenimage practical implementation create set eigenfaces eigenfaces represent existing project subtracted image eigenfaces record differs eigenvalues eigenface represent images training set vary image direction lose projecting image subset eigenvectors minimize loss keeping eigenfaces largest eigenvalues instance 100 100 image 000 eigenvectors practical applications typically identified projection 100 150 eigenfaces 000 eigenvectors discarded matlab code calculating eigenfaces extended yale database evade computational storage bottleneck images sampled factor 4x4 16 note covariance matrix generates eigenfaces fraction represent majority represent 95 total variation images 43 eigenfaces calculate result implement code computing eigenvectors performing pca covariance matrix images computationally infeasible images 100 × 100 pixels image 000 dimensional space covariance matrix matrix 000 × 000  108 elements rank covariance matrix limited training examples training examples  − 1 eigenvectors eigenvalues training examples dimensionality images principal components computed easily matrix preprocessed training examples column subtracted image covariance matrix computed ttt eigenvector decomposition byhowever ttt matrix eigenvalue decomposition ofthen notice pre multiplying equation obtainmeaning ui eigenvector ttt vi   tui eigenvector training set 300 images 100 × 100 pixels matrix ttt 300 × 300 matrix manageable 000 × 000 covariance matrix notice vectors normalised normalisation required applied extra step connection svd denote data matrix column image vector subtracted singular decomposition svd eigenvalue decomposition 
352818	computerscience	architecture delay slot instruction slot executed effects preceding instruction common form single arbitrary instruction located branch instruction risc dsp architecture instruction execute preceding branch design instructions execute illogical incorrect typical assemblers automatically reorder instructions default hiding awkwardness assembly developers compilers branch delay slots branch instruction involved location delay slot instruction pipeline called branch delay slot branch delay slots dsp architectures risc architectures mips risc etrax cris superh sparc risc architectures single branch delay slot powerpc arm alpha risc dsp architectures single branch delay slot include dsp µpd77230 tms320c3x sharc dsp mips double branch delay slot processor execute pair instructions branch instruction branch takes delayed branches assembly language sharc dsp registers r0 r9 cleared register cleared r6 r7 r9 instruction executes goal pipelined architecture complete instruction clock cycle maintain rate pipeline instructions times branch delay slot pipelined architectures branch hazard branch resolved instruction pipeline simple design insert stalls pipeline branch instruction branch target address computed loaded program counter cycle stall inserted considered branch delay slot sophisticated design execute program instructions dependent result branch instruction optimization performed software compile time moving instructions branch delay slots memory instruction stream hardware supports special handling managing breakpoints instructions stepping debugging branch delay slot ideal branch delay slots pipeline implementation dictated pipeline stages presence register forwarding stage pipeline branch conditions computed branch target buffer btb factors software compatibility requirements dictate architecture change delay slots generation inevitably requires hardware implementations extra hardware ensure architectural behavior relevant load delay slot load delay slot instruction executes load register memory wait result load load delay slots uncommon load delays highly unpredictable modern hardware load satisfied ram cache slowed resource contention load delays risc processor designs mips isa implemented r2000 r3000 microprocessors suffers mips assembly code load delay slot branch delay slot 
353020	computerscience	theory computation moore machine finite machine output values determined current contrast mealy machine output values determined current values inputs moore machine named edward moore concept 1956 paper “gedanken experiments sequential machines ”formal definition moore machine defined tuple consisting moore machine regarded restricted type finite transducer visual representation table transition table table relation input diagram diagram moore machine moore diagram diagram associates output moore machine output producer relationship mealy machines moore mealy machines types finite machines equally expressive type parse regular language difference moore machines mealy machines output transition determined combination current current input input opposed current input represented diagram moore machine 13 equivalent mealy machine transitions output function 14 takes input pair 15 yields 16 17 13 output function mealy machine converted equivalent moore machine converted equivalent moore machine outputs shifted time labels paired transition labels form input output pairs transition 19 20 21 input causing transition 19 labels edge 23 output input label 20 notice source transition input output fixed input received depends solely original definition moore common mistake label 21 output transition 19 examples types inputs outputs simple simple moore machines input output digital electronic systems designed clocked sequential systems clocked sequential systems restricted form moore machine global clock signal typically current stored flip flops global clock signal connected clock input flip flops clocked sequential systems solve metastability typical electronic moore machine includes combinational logic chain decode current outputs lambda instant current ripple chain instantaneously output updated design techniques ensure glitches occur outputs period rippling chain systems designed glitches transition time irrelevant outputs stay indefinitely leds stay bright power stays connected motors solenoids stay energized moore machine sequential network input output output remains occurred inputs moore machine description initial final table complex complex moore machines multiple inputs multiple outputs gedanken experiments moore paper gedanken experiments sequential machines 27 automata machines defined 29 30 input symbols 31 output symbols theorems proved structure experiments machines moore machines paper task stated improvement bounds theorems moore theorem formulated arbitrary 27 machine distinguishable exists experiment 37 determines experiment 1957 karatsuba proved theorems completely solved moore improvement bounds experiment theorem theorem 27 machine distinguishable exists branched experiment 41 determine experiment theorem exists 27 machine distinguishable shortest experiments establishing machine experiment equal 41 theorems basis student fourth karatsuba automata theory distinguished testimonial reference competition student faculty mechanics mathematics moscow lomonosow university 1958 paper karatsuba journal uspekhi mat nauk 17 december 1958 published june 1960 day 2011 karatsuba result experiments exact nonlinear result automata theory computational complexity theory 
354374	computerscience	parallel translation translations parallel alignment identification sentences halves parallel loeb classical library clay sanskrit library examples dual language series texts reference bibles original languages translation translations ease comparison study origen hexapla greek sixfold versions testament famous rosetta stone collections parallel texts called parallel corpora corpus alignments parallel corpora sentence level prerequisite linguistic translation sentences split merged deleted inserted reordered translator alignment trivial task types parallel corpora main corpora types distinguished noisy parallel corpus bilingual sentences perfectly aligned poor quality translations contents bilingual translations specific document comparable corpus built sentence aligned untranslated bilingual documents documents topic aligned quasi comparable corpus includes heterogeneous parallel bilingual documents topic aligned rarest parallel corpora corpora translations document languages aligned sentence level noise corpora corpora training sets machine translation algorithms extracted bodies sources databases news articles written languages describing events extracted fragments noisy extra elements inserted corpus extraction techniques differentiate bilingual elements represented corpora monolingual elements represented corpus extract cleaner parallel fragments bilingual elements comparable corpora knowledge translation purposes quality parallel data difficult resourced languages bitext field translation studies bitext merged document composed source target language versions bitexts generated piece software called alignment tool bitext tool automatically aligns original translated versions tool matches texts sentence sentence collection bitexts called bitext database bilingual corpus consulted search tool bitexts translation memories concept bitext similarities translation memory salient difference bitext translation memory translation memory database segments matched sentences stored totally unrelated original context original sentence lost bitext retains original sentence implementations translation memory translation memory exchange tmx standard xml format exchanging translation memories assisted translation cat programs preserving original sentences bitexts designed consulted human translator machine alignment errors minor discrepancies translation memory fail original 1988 article harris posited bitext represents translators hold source target texts mental memoriesas progress hypothesis 
360030	computerscience	question answering science discipline fields retrieval natural language processing nlp concerned building systems automatically answer questions posed humans natural language overview implementation program construct answers querying structured database knowledge knowledge base commonly systems pull answers unstructured collection natural language documents examples natural language document collections systems include attempts deal wide range question types including list definition hypothetical semantically constrained cross lingual questions history systems baseball lunar baseball answered questions baseball league period lunar answered questions geological analysis rocks returned apollo moon missions systems effective chosen domains lunar demonstrated lunar science convention 1971 answer 90 questions domain posed people untrained restricted domain systems developed common feature systems core database knowledge hand written experts chosen domain language abilities baseball lunar techniques eliza doctor chatterbot programs shrdlu highly successful question answering program developed terry winograd late 60s 70s simulated operation robot toy blocks offered possibility robot questions strength choice specific domain simple rules physics easy encode program 1970s knowledge bases developed targeted narrower domains knowledge systems developed interface expert systems produced repeatable valid responses questions knowledge expert systems closely resembled modern systems internal architecture expert systems rely heavily expert constructed organized knowledge bases modern systems rely statistical processing unstructured natural language corpus 1970s 1980s development comprehensive theories computational linguistics led development ambitious projects comprehension question answering unix consultant uc developed robert wilensky berkeley late 1980s answered questions pertaining unix operating comprehensive hand crafted knowledge base domain aimed phrasing answer accommodate types users project lilog understanding operated domain tourism german city systems developed uc lilog projects stage simple demonstrations helped development theories computational linguistics reasoning specialized natural language systems developed eagli health life scientists wolfram alpha online computational knowledge engine answers factual queries computing answer externally sourced curated data architecture 2001 systems typically included question classifier module determines type question type answer multiagent question answering architecture proposed domain represented agent answer questions account specific knowledge meta–agent controls cooperation question answering agents chooses relevant answer question answering methods dependent search corpus documents answer sense larger collection sizes lend performance question domain orthogonal collection notion data redundancy massive collections nuggets phrased differing contexts documents leading benefits question answering systems rely heavily automated reasoning question answering systems designed prolog logic programming language artificial intelligence domain question answering retrieval domain question answering aims returning answer response user question returned answer form short texts list relevant documents combination techniques computational linguistics retrieval knowledge representation finding answers takes natural language question input set keywords national day china sentence transformed query logical form input form natural language question user friendly harder implement question types identify correct answer assigning question type question crucial task entire answer extraction process relies finding correct question type correct answer type keyword extraction step identifying input question type question type answers type person location word answer type pos speech tagging syntactic parsing techniques determine answer type subject chinese national day predicate adverbial modifier answer type interrogative answer types represent type situations question considered meaning question lexical dictionary wordnet understanding context question type identified retrieval set documents correct key tagger verb chunker verify correct entities relations mentioned documents questions named entity recogniser relevant person location names retrieved documents relevant paragraphs selected ranking vector space model strategy classifying candidate answers check answer correct type determined question type analysis stage inference technique validate candidate answers score candidates question close candidate closer answer translated compact meaningful representation parsing previous expected output answer 1st oct issues 2002 researchers unpublished unsourced report funding support document roadmap current question answering field time progress systems extended encompass additional domains knowledge systems developed automatically answer temporal geospatial questions questions definition terminology biographical questions multilingual questions questions content audio images video current topics include ibm question answering watson defeated jeopardy champions brad rutter ken jennings margin facebook drqa source license domain question answering wikipedia knowledge source 
364093	computerscience	robot wars robot combat competition broadcast british television 1998 2004 2016 2018 series centred sport robot combat involves teams amateur professional roboteers operating constructed remote controlled robots fight avoiding arena hazards powerful house robots bound weight weapon limits contestants earlier series included assault trial courses competing robots ceased extreme series onwards broadcast bbc 20 february 1998 23 february 2001 bbc choice october 2001 february 2003 repeated bbc channel november 2003 28 march 2004 revived 2016 broadcast bbc 24 july 2016 january 2018 broadcast main series centred single competition extreme series unconnected events special episodes jeremy clarkson series master mayhem craig charles seventh series philippa forrester hosted series extreme forrester hosted spin series robot wars revealed 1998 1999 fourth series extreme hosted julia reed seventh jayne middlemiss jonathan pearce commentary series revived series hosted dara Ó briain angela scanlon additional series filmed venue specific sectors global market including series robot wars extreme warriors american competitors tnn network hosted mick foley rebecca grant serving pit reporter dutch robot wars distribution netherlands single series germany fourth series robot wars tnn robot wars grand champions 2002 hosted joanie laurer merchandising commercially successful popular selling toy ranges 2002 included mini arena pullback friction ripcord toys radio controlled versions house robots 2003 roboteers formed fighting robot association event organizers carry participating competitions audiences 2013 roaming robots purchased rights robot wars brand robot wars llc operated travelling robotic combat robot wars live ceased 2017 renamed extreme robots peak audience viewers late 1990s format worldwide success 45 countries including australia canada china india germany italy march 2003 dropped bbc series mentorn announced 22 episodes channel concluding championships broadcast march 2004 channel axed series ratings july 2016 returned bbc arena house robots presenters episode received trending topic twitter evening viewers episode 23rd series gear 8pm sunday slot weeks earlier revived series march 2018 history robot wars events robot wars brainchild marc thorpe designer lucastoys division lucasfilm 1992 thorpe initial idea robot combat sport unsuccessfully attempting create radio controlled vacuum cleaner 1994 marc thorpe created robot wars held competition fort mason center san francisco month prior event thorpe formed partnership york based record company communications profile records additional funding 1995 1997 robot wars events america 1995 profile records partnered production company mentorn produce televise robot wars event mentorn acquired worldwide television rights profile 1995 tom gutteridge head mentorn amateur tape san francisco event original television series gutteridge producers steve carsey created television format based robot wars concept produced live event bbc television centre wood lane shepherd bush london hired derek foxwell build combat robots named mouse grunt eventually series robot wars american robots thor machine master veterans original american competition controller bbc michael jackson attended event filmed promised commission series 1998 subsequent controller bbc mark thompson fulfilled jackson promise commissioned episodes gutteridge carsey producers foxwell technical supervisor senior technical consultant drafted rules regulations charge pit technical team scrutinised robots stage helped contestants prepare repair robots mat irvine initially technical team served judging panel 2002 2003 person judging panel consisted noel sharkey head judge series 1998–2003 2016– eric dickinson 1998 adam harper 1998–99 martin smith 1999–2003 myra wilson 2000–01 mat irvine 2001–03 sethu vijayakumar 2016– lucy rogers 2016– profile sought input consent thorpe aggravated troubled relationship thorpe profile records indirectly spurred legal disagreements surrounding ownership robot wars concept legal proceedings surrounding february 2002 mentorn thorpe consultant series initial series robot wars broadcast weeks february march 1998 hit viewers 18 episodes commissioned bbc 155 episodes produced total 26 countries series produced national network paramount network version nickelodeon series produced european countries series directors producers produced mentorn executive produced tom gutteridge steve carsey initial series staged film studios london stage pit fit conventional studios filming moved aircraft hangar raf newton viewing figures dropped 2000s reaching sixth series final broadcast bbc channel november 2003 airing sunday night slot launched viewers ratings fell 800 000 moving saturday nights episodes robot wars edited hour version series aired fox kids jetix 2004 revival 13 january 2016 bbc confirmed rebooting series revived series hosted dara Ó briain angela scanlon jonathan pearce returning commentator episode broadcast 24 july 8pm slot gear robots original series returned including behemoth storm original house robots upgraded heavier faster armed 2016 series filmed warehouse westway park renfrew scotland episode received viewers trending topic twitter 20 000 tweets rebooted series commissioned celebrity special 16 celebrities olympians kadeena cox alistair brownlee jonny brownlee presenters suzi perry neil oliver maggie aderin pocock singer jordan stevens radio presenters scott mills robbie savage bespoke robots designed major roboteers mentored specials original airing rebooted series referred series completely starting 2017 bbc referring series series appropriately dubbed series acknowledging continuation original battle rules robot lose match knockout format format changed times rules remained series competitions format extreme series robot wars extreme focus single championship presenters series robot wars jeremy clarkson hosted philippa forrester keeping edgy persona established gear clarkson frequently tongue cheek jokes competitors robots remarking contestant robot called skarab looked cheese toast clarkson left robot wars series replaced craig charles charles playing character dave lister science fiction themed sitcom red dwarf programme contestants clarkson enthusiastic charles close episode poem robot wars charles robot wars ceased production 2004 comparison charles background science fiction philippa forrester host science technology programme tomorrow role robot wars pit reporter speak contestants robots battles forrester pit reporter series julia reed role series extreme forrester unable participate programme pregnancy forrester returned series series extreme programme moved channel seventh series forrester return unknown reasons jayne middlemiss pit reporter duties jonathan pearce commentator entire commentated loud enthusiastic manner football commentaries programme phrases roboteers stand activate cease phrases announced director stuart mcdonald recognisable series entire duration 2016 dara Ó briain angela scanlon announced hosts eighth series jonathan pearce returning commentator reprised roles ninth tenth series house robots series house robots acted obstacles competing robots battles challenges house robots permitted attack robots corner patrol zones corners arena submission competing robot house robots intrinsic programme success merchandising robots highly successful house robots subject weight limit weapon rules contestant robots adhere notable sergeant bash flamethrower fourth wars competitive refbot fights robot conveyed officiating signals counting immobile competitors arena occasional nudges battles deploy extinguisher series versions matilda shunt dead metal sir killalot constructed considerably heavier improved weaponry house robots weight sir killalot weighs visually predecessors differences dead metal head enlarged glowing eyes matilda mounted fins replaced crocodilian scales spikes frill eyes red head flips shunt enlarged wheel protectors metal chimneys replacing smokestack sir killalot armour helmet redesigned actual shape sir killalot head helmet wearing house robots return series bold house robots returned series arena hazards arenas numerous arena incarnations original robot wars bbc arenas international versions robot wars extreme warriors united arena series arena enclosed audience raised arena increasing sophistication weaponry contestant robots notably demonstrated hypno disc series arena hazards prompted producers enclose arena perspex box series onwards protect audience production team debris 2004 robot wars arena purchased television production firm mentorn company called robot arenas based organization set competitor robot wars continue sport robot combat arena valued originally £11 000 sold scrap 2005 £250 owners raf newton air base arena housed suit filed raf newton robot arenas raf newton acted matter owed compensation robot arenas 2016 arena constructed warehouse renfrew outskirts glasgow rebooted series arena square steel floor bulletproof walls harder robots thrown arena hazards robot wars arena hazards introduced amended hazards proved ineffective series hazards proved success pit oblivion floor flipper drop zone retained assorted hazards arena changed series included merchandise toys pullback friction toys house robots exception cassius chrome toys stopped production introduced seventh wars toys resumed production series happen hexbug late 2018 pullback ripcord toys chaos dantomkia firestorm hypno disc panic attack pussycat razer stinger tornado wheely cheese terminator accessory remote controlled versions shunt matilda sir killalot growler remote control battlers immobilisation spots rear toy sgt bash competitor robot tornado remote control robots mentioned customisable kit toys house robot matilda competitors hypno disc panic attack sergeant bash pitstop kit prototyped released minibots series die cast replica robots range included series house robots competitor robots chaos dominator firestorm iii gemini hypno disc mega morg panic attack plunderbird pussycat razer suicidal tendencies tornado wheely cheese wild terminator interactive replica arena additional playsets media vhs videos released included war series championship released exclusively video time ultimate warrior collection featuring exclusive access teams chaos hypno disc razer footage battles lines ultimate archive collection released exclusive footage house robots operators battles embarrassing moments ultimate warrior collection ultimate archive collection war released dvd footage content remained vhs releases series released dvd blu ray 29 august 2016 series robot wars released media released digitally series battle stars specials released 11 december 2017 disc dvd box set video games game based released game boy color 2000 2001 playstation windows game boy advance titles sold 250 000 copies fourth final game released game boy advance windows xbox 2002 called huge array merchandise produced success items included mugs glasses mobile phone covers toiletries stationery clocks watches bedding curtains clothing produced unsuccessful single peaked 51 singles charts december 2000 called sir killalot robo babe robot wars android love custom game officially licensed robot wars llc started october 2013 video game base engine featured robots series robots competing live events included original robot wars arena live arenas released public september 2015 updated version included robots released february 2016 update released january 2017 adding robots update august 2017 robot wars arena current series arena unreleased robots beta robots released cancelled expansion windows transmissions episodes announced jonathan pearce extreme series extreme episodes premiered bbc choice notes references notesreferences 
371215	computerscience	yahoo babel fish based multilingual translation application 2012 replaced bing translator queries redirected yahoo transitioned babel fish translation services bing translator sell translation application outright online language translator service translated 36 pairs 13 languages including english simplified chinese traditional chinese dutch french german greek italian japanese korean portuguese russian spanish internet service derived babel fish fictional species douglas adams book radio series hitchhiker guide galaxy instantly translate languages fictional creature refers biblical account confusion languages arose city babel history december 1997 digital equipment corporation dec systran launched altavista translation service babelfish altavista developed team researchers dec february 2003 altavista bought overture services july 2003 overture yahoo address babel fish remained babelfish altavista 2008 address changed babelfish yahoo 30 2012 address changed time redirecting babelfish yahoo microsofttranslator bing translator replaced yahoo babel fish yahoo babel fish confused babel fish corporation founded oscar jofre operated url babelfish created 1995 june 2013 babelfish yahoo redirected bing translator refers main yahoo 
376707	computerscience	programming language software environment statistical computing graphics supported foundation statistical computing language statisticians data miners developing statistical software data analysis polls data mining surveys studies scholarly literature databases substantial increases popularity ranks 12th tiobe measure popularity programming languages gnu package source code software environment written fortran freely gnu public license pre compiled binary versions operating systems command interface graphical user interfaces rstudio integrated development environment history implementation programming language combined lexical scoping semantics inspired scheme created john chambers 1976 bell labs differences code written runs unaltered created ross ihaka robert gentleman university auckland zealand developed development core team chambers named partly names authors partly play project conceived 1992 initial version released 1995 stable beta version 2000 statistical features libraries implement wide variety statistical graphical techniques including linear nonlinear modelling classical statistical tests time series analysis classification clustering easily extensible functions extensions community active contributions terms packages standard functions written easy users follow algorithmic choices computationally intensive tasks fortran code linked called time advanced users write java python code manipulate objects highly extensible user submitted packages specific functions specific study heritage stronger object oriented programming facilities statistical computing languages extending eased lexical scoping rules strength static graphics produce publication quality graphs including mathematical symbols dynamic interactive graphics additional packages latex documentation format supply comprehensive documentation online formats hard programming features interpreted language users typically access command interpreter user types codice command prompt presses enter replies calculation interpreted sum single element vectors single element vector prefix codice list elements starts element vector feature output extends multiple lines languages apl matlab supports matrix arithmetic data structures include vectors matrices arrays data frames tables relational database lists arrays stored column major extensible object includes objects regression models time series geo spatial coordinates scalar data type data structure scalar represented vector features derive scheme expressions represent data code functions class manipulated data objects facilitating meta programming multiple dispatch variables lexically scoped dynamically typed supports procedural programming functions functions object oriented programming generic functions generic function acts depending classes arguments passed generic function dispatches function method specific class object generic codice function print class object simple codice syntax statisticians practitioners requiring environment statistical computation software development operate matrix calculation toolbox – performance benchmarks comparable gnu octave matlab packages capabilities extended user created packages specialised statistical techniques graphical devices import export capabilities reporting tools knitr sweave packages developed java fortran packaging researchers create compendia organise data code report files systematic sharing public archiving core set packages included installation 15 000 additional packages comprehensive archive network cran bioconductor omegahat github repositories task views subject list cran lists wide range tasks fields finance genetics performance computing machine learning medical imaging social sciences spatial statistics applied packages identified fda suitable interpreting data clinical package resources include crantastic community rating reviewing cran packages forge central platform collaborative development packages software projects forge hosts unpublished beta packages development versions cran packages bioconductor project packages analysis genomic data affymetrix cdna microarray object oriented data handling analysis tools started provide tools analysis data generation throughput sequencing methods milestones list releases maintained news files cran highlights listed major releases interfaces commonly graphical integrated development environment rstudio development interface tools visual studio interfaces approach include rattle gui commander rkward common editors varying levels support include eclipse emacs emacs speaks statistics kate lyx notepad visual studio code winedt tinn functionality accessible scripting languages python perl ruby julia interfaces level programming languages java implementations main implementation written fortran implementations aimed improving speed increasing extensibility closely implementation pqr pretty quick radford neal improved memory management support automatic multithreading renjin fastr java implementations java virtual machine cxxr rho riposte implementations renjin riposte pqr attempt improve performance multiple processor cores form deferred evaluation alternative implementations experimental incomplete users compared main implementation maintained development core team tibco built runtime engine called terr spotfire compatible distribution modifications multi threaded computations communities vibrant active local communities worldwide users network share ideas learn regular user meetups focused ladies promotes gender diversity user conferences official annual gathering users called user event user 2004 2004 vienna austria skipping 2005 user conference held annually alternating locations europe north america subsequent conferences included future conferences planned journal journal access refereed journal project statistical computing features short medium articles development including packages programming tips cran news foundation news comparison sas spss stata comparable popular commercial statistical packages sas spss stata users charge software license january 2009 york times article charting growth reasons popularity data scientists threat poses commercial statistical packages sas june 2017 data scientist robert muenchen published depth comparison software packages popularity data science software commercial support source project supported community developing companies strive provide commercial support extensions customers examples companies 2007 richard schultz martin schultz steve weston kirk mettler founded revolution analytics provide commercial support revolution distribution includes components developed company major additional components include parallelr productivity environment ide revoscaler data analysis revodeployr services framework ability reading writing data sas file format revolution analytics offer distribution designed comply established oq pq criteria enables clients pharmaceutical sector validate installation revolution 2015 corporation completed acquisition revolution analytics integrated programming language sql server 2016 sql server 2017 power azure sql database azure cortana intelligence server visual studio 2017 october 2011 oracle announced data appliance integrates apache hadoop oracle linux nosql database exadata hardware oracle enterprise components oracle advanced analytics option oracle data mining ibm offers support hadoop execution programming model massively parallel database analytics major commercial software systems supporting connections integration include jmp mathematica matlab power pentaho spotfire spss statistica platform symphony sas tableau software esri arcgis dundas statgraphics tibco offers runtime version spotfire mango offers validation package validr compliant drug approval agencies fda agencies statistical software submissions software validated vendor sponsor examples basic syntax examples illustrate basic syntax language command interface preferred assignment operator arrow characters codice codice structure function r’s strengths ease creating functions objects function body remain local function data type returned user created function mandelbrot set short code calculating mandelbrot set 20 iterations equation plotted complex constants demonstrates 
376795	computerscience	flex fast lexical analyzer generator source software alternative lex program generates lexical analyzers scanners lexers frequently lex implementation berkeley yacc parser generator bsd derived operating systems codice codice posix gnu bison version yacc bsd ports linux distributions bison flex gnu project released gnu public license history flex written vern paxson 1987 translating ratfor generator led jef poskanzer lexical analyzer flex scanner instructional programming language tokens recognized codice codice codice codice codice codice codice codice codice 11 codice 12 codice 13 codice 14 codice 15 codice 16 codice 17 codice 18 codice 19 identifiers codice 20 keywords codice 21 codice 22 codice 23 codice 24 codice 25 codice 26 codice 27 codice 28 codice 29 codice 30 codice 31 internals programs perform character parsing tokenizing deterministic finite automaton dfa dfa theoretical machine accepting regular languages machines subset collection turing machines dfas equivalent read moving turing machines syntax based regular expressions nondeterministic finite automaton issues time complexity flex lexical analyzer time complexity input performs constant operations input symbol constant gcc generates 12 instructions dfa match loop note constant independent token regular expression size dfa reject macro scanner potential match extremely tokens flex generate scanner linear performance feature optional programmer explicitly told flex matched input dfa backtrack accept reject feature enabled default performance implications discouraged flex manual reentrancy default scanner generated flex reentrant programs generated scanner threads overcome issue options flex achieve reentrancy detailed description options flex manual usage unix environments generated scanner references unistd header file unix specific avoid generating code includes unistd option nounistd issue isatty unix library function generated code option interactive forces flex generate code isatty flex languages flex generate code scanner code generated flex languages language binding tool swig flex flex lexical scanner included flex package generated code depend runtime external library memory allocator malloc user supplied alternative input depends embedded situations traditional operating runtime facilities flex generated scanner includes header file codice 32 defines interfaces generated classes 
378193	computerscience	coprocessor processor supplement functions primary processor cpu operations performed coprocessor floating arithmetic graphics signal processing string processing cryptography interfacing peripheral devices offloading processor intensive tasks main processor coprocessors accelerate performance coprocessors computers customized customers extra performance pay functionality coprocessors vary degree autonomy fpus rely direct control coprocessor instructions embedded cpu instruction stream independent processors capable asynchronously optimized purpose code incapable limited instruction set focused accelerating specific tasks common driven dma host processor building command list playstation emotion engine contained unusual dsp simd vector unit capable modes operation history mainframe processor time input output tasks delegated separate systems called channel mainframe require processing set parameters input output operation signal channel processor carry operation dedicating simple processors handle time consuming formatting processing performance improved coprocessors floating arithmetic appeared desktop computers 1970s common 1980s 1990s bit 16 bit processors software carry floating arithmetic operations coprocessor supported floating calculations carried times faster math coprocessors popular purchases users aided design cad software scientific engineering calculations floating units amd 9511 intel i8231 weitek fpus treated peripheral devices intel 8087 motorola 68881 national 32081 closely integrated cpu form coprocessor video display coprocessor atari bit family texas instruments ti 99 4a msx computers called video display controllers commodore amiga custom chipset included unit copper blitter accelerating bitmap manipulation memory microprocessors developed cost integrating floating arithmetic functions processor declined processor speeds closely integrated coprocessor difficult implement separately packaged mathematics coprocessors uncommon desktop computers demand dedicated graphics coprocessor grown increasing demand realistic 3d graphics games intel original ibm pc included socket intel 8087 floating coprocessor aka fpu popular option people pc cad mathematics intensive calculations architecture coprocessor speeds floating arithmetic fiftyfold users pc word processing saved cost coprocessor accelerated performance manipulation operations 8087 tightly integrated 8086 8088 responded floating machine code operation codes inserted 8088 instruction stream 8088 processor 8087 interpret instructions requiring separate versions programs fpu fpu systems time detect fpu select mathematical library functions coprocessor 8086 8088 central processor 8089 input output coprocessor programming technique 8087 input output operations transfer data memory peripheral device reducing load cpu ibm ibm pc design intel stopped development type coprocessor intel 80386 microprocessor optional math coprocessor 80387 perform floating operations hardware intel 80486dx processor included floating hardware chip intel released cost reduced processor 80486sx floating hardware sold 80487sx coprocessor essentially disabled main processor installed 80487sx complete 80486dx set pin connections intel processors 80486 integrated floating hardware main processor chip advances integration eliminated cost advantage selling floating processor optional element difficult adapt circuit board techniques adequate 75 mhz processor speed meet time delay power consumption radio frequency interference standards required gigahertz range clock speeds chip floating processors referred coprocessors operate parallel main cpu era 16 bit desktop computers common source floating coprocessors weitek coprocessors instruction set intel coprocessors socket motherboards supported weitek processors provide transcendental mathematics functions trigonometric functions intel x87 family required specific software libraries support functions motorola motorola 68000 family 68881 68882 coprocessors floating speed acceleration intel processors computers 68000 family equipped hardware floating processor trap emulate floating instructions software slower allowed binary version program distributed 68451 memory management coprocessor designed 68020 processor modern coprocessors dedicated graphics processing units gpus form graphics cards commonplace models sound cards fitted dedicated processors providing digital multichannel mixing real time dsp effects 1990 1994 gravis ultrasound sound blaster awe32 typical examples sound blaster audigy sound blaster examples 2006 ageia announced add card computers called physx ppu physx designed perform complex physics computations cpu gpu perform time consuming calculations designed video games mathematical theoretically developed 2008 nvidia purchased company phased physx card functionality software allowing gpus render physx cores graphics processing nvidia physx engine software 2006 bigfoot systems unveiled pci add card christened killernic special linux kernel freescale powerquicc running 400 mhz calling freescale chip network processing unit npu spursengine media oriented add card coprocessor based cell microarchitecture spus vector coprocessors 2008 khronos released opencl aim support purpose cpus ati amd nvidia gpus accelerators single common language compute kernels 2010s mobile computation devices implemented sensor hub coprocessor examples coprocessors handling sensor integration mobile devices include apple m7 m8 motion coprocessors qualcomm snapdragon sensor core qualcomm hexagon holographic processing unit hololens 2012 intel announced intel xeon phi coprocessor companies developing coprocessors aimed accelerating artificial neural networks vision cognitive tasks vision processing units truenorth zeroth 2018 chips smartphones apple android phone vendors trends time cpus tended grow absorb functionality popular coprocessors fpus considered integral processors main pipeline simd units multimedia acceleration role dsp accelerator cards gpus integrated cpu dies specialized units remain popular desktop machines additional power continued evolution independently main processor product lines 
382535	computerscience	harold hal abelson born april 26 1947 professor electrical engineering science mit fellow ieee founding director creative commons software foundation directed implementation logo apple language personal computers 1981 published selling book logo 1982 gerald jay sussman abelson developed mit introductory science subject structure interpretation programs aka 001 subject organized notion language formal medium expressing ideas methodology perform operations abelson sussman cooperate codirecting mit project mathematics computation mit opencourseware ocw project spearheaded hal abelson mit faculty abelson led internal investigation school choices role prosecution aaron swartz fbi concluded mit legally wrong recommended mit changing internal policies education abelson holds ab degree princeton university phd degree mathematics mit tutelage mathematician dennis sullivan science education abelson longstanding computation conceptual framework teaching directed implementation logo apple language personal computers 1981 published selling book logo 1982 book turtle geometry written andrea disessa 1981 computational approach geometry cited step revolutionary change entire teaching learning process march 2015 abelson 1969 implementation turtle graphics sold algorithm auction world’s auction algorithms gerald jay sussman abelson developed mit introductory science subject structure interpretation programs subject organized notion language formal medium expressing ideas methodology perform operations textbook videotapes lectures availability personal computers scheme dialect lisp teaching worldwide impact university science education visiting faculty google app inventor android team educational program aiming easy people programming background write mobile phone applications explore change nature introductory computing author book app inventor david wolber ellen spertus liz looney published reilly media 2011 computational tools abelson sussman cooperate codirecting mit project mathematics computation project mit science artificial intelligence laboratory joint project lab lcs csail components goal project create computational tools scientists engineers powerful numerical computers exploring complex physical systems requires substantial human effort human judgement prepare simulations interpret numerical students abelson sussman combining techniques numerical computation symbolic algebra heuristic programming develop programs perform massive numerical computations interpret computations discuss qualitative terms programs form basis intelligent scientific instruments monitor physical systems based level behavioral descriptions lead generation computational tools autonomously explore complex physical systems play future practice science engineering time programs incorporate computational formulations scientific knowledge form foundations teach science engineering software movement abelson sussman software movement including serving board directors software foundation abelson involved publishing andrew huang hacking xbox keith winstein perl decss script qrpff lamp mit campus wide music distribution mit opencourseware ocw project spearheaded hal abelson mit faculty aaron swartz investigation january 2013 access activist aaron swartz committed suicide arrested mit facing 35 imprisonment alleged crime downloading jstor articles mit access campus network response mit appointed professor hal abelson lead internal investigation school choices role prosecution aaron swartz fbi report delivered july 26 2013 concluded mit legally wrong recommended mit changing internal policies affiliations abelson founding director creative commons public knowledge director center democracy technology external links entry initially based autobiography hal abelson posted permission 
383162	computerscience	extraction task automatically extracting structured unstructured semi structured machine readable documents activity concerns processing human language texts natural language processing nlp activities multimedia document processing automatic annotation content extraction images audio video extractiondue difficulty current approaches focus narrowly restricted domains extraction newswire reports corporate mergers denoted formal relation online news sentence broad goal computation unstructured data specific goal logical reasoning draw inferences based logical content input data structured data semantically defined data chosen target domain interpreted respect category context extraction puzzle deals devising automatic methods management transmission storage display discipline retrieval developed automatic methods typically statistical flavor indexing document collections classifying documents complementary approach natural language processing nlp solved modelling human language processing considerable success account magnitude task terms difficulty emphasis deals tasks nlp terms input assumes existence set documents document template describes entities events manner documents differing details newswire articles latin american terrorism article presumed based terroristic acts define task template set frame hold contained single document terrorism template slots perpetrator victim weapon terroristic event happened required “understand” attack article data slots template history extraction dates late 1970s days nlp commercial mid 1980s jasper built reuters aim providing real time financial news financial traders 1987 spurred series message understanding conferences muc competition based conference focused domains considerable support defense advanced projects agency darpa wished automate mundane tasks performed government analysts scanning newspapers links terrorism significance significance pertains growing unstructured form tim berners lee inventor wide refers existing internet documents advocates content data transpires consists unstructured documents lacking semantic metadata knowledge contained documents accessible machine processing transformation relational form marking xml tags intelligent agent monitoring news data feed requires transform unstructured data reasoned typical application scan set documents written natural language populate database extracted tasks subtasks applying extraction linked simplification create structured view goal create easily machine readable process sentences typical tasks subtasks include note list exhaustive exact meaning activities commonly accepted approaches combine multiple tasks achieve wider goal machine learning statistical analysis natural language processing documents increasingly topic extracted multimedia documents expressed level structure naturally leads fusion extracted multiple kinds documents sources wide applications focus muc conferences proliferation intensified developing systems people cope enormous data online systems perform online meet requirements cost flexibility development easy adaptation domains muc systems fail meet criteria linguistic analysis performed unstructured exploit xml tags layout formats online texts result linguistically intensive approaches developed wrappers sets highly accurate rules extract content manually developing wrappers proved time consuming task requiring level expertise machine learning techniques supervised unsupervised induce rules automatically wrappers typically handle highly structured collections product catalogs telephone directories fail type structured common effort adaptive extraction motivates development systems handle types structured common wrappers fail including mixed types systems exploit shallow natural language knowledge applied structured texts development visual extraction relies rendering browser creating rules based proximity regions rendered helps extracting entities complex exhibit visual pattern lack discernible pattern source code approaches standard approaches accepted numerous approaches exist including hybrid approaches combine standard approaches listed 
387199	computerscience	source intelligence osint data collected publicly sources intelligence context intelligence community term refers overt publicly sources opposed covert clandestine sources source software public intelligence osint hundreds advent instant communications rapid transfer deal actionable predictive intelligence public unclassified sources principles source intelligence osint collection analysis gathered public sources osint national security law enforcement business intelligence functions analysts sensitive intelligence answering classified unclassified proprietary intelligence requirements previous intelligence disciplines osint sources divided categories flow osint distinguished applies process intelligence create tailored knowledge supportive specific decision specific individual definition osint defined director national intelligence department defense dod produced publicly collected exploited disseminated timely manner audience purpose addressing specific intelligence requirement political scientist jeffrey richelson “open source acquisition involves procuring verbal written electronically transmitted material legally addition documents videos internet human source allied forced control facility operated foreign government terrorist ”security researcher mark lowenthal defines osint “any derived overt collection types media government reports documents scientific reports commercial vendors internet main qualifiers source require type clandestine collection techniques meet copyright commercial requirements vendors applicable history osint united traces origins creation foreign broadcast monitoring service fbms agency responsible monitoring foreign broadcasts reflected application correlation price oranges paris railway bridges bombed aspin brown commission stated 1996 access sources severely deficient priority funding dci attention july 2004 september 11 attacks 11 commission recommended creation source intelligence agency march 2005 iraq intelligence commission recommended creation source directorate cia recommendations november 2005 director national intelligence announced creation dni source center center established collect internet databases press radio television video geospatial data photos commercial imagery addition collecting openly train analysts center absorbed cia existing foreign broadcast service fbis originally established 1941 fbis head douglas naquin named director center events 11 intelligence reform terrorism prevention merged fbis elements office director national intelligence creating source enterprise private sector invested tools aid osint collection analysis tel central intelligence agency supported venture capital firm arlington assisted companies develop monitoring predictive analysis tools december 2005 director national intelligence appointed eliot jardines assistant deputy director national intelligence source serve intelligence community senior intelligence officer source provide strategy guidance oversight national source enterprise jardines established national source enterprise authored intelligence community directive 301 2008 jardines returned private sector succeeded dan butler addni os jardines senior advisor policy risks practitioners main hindrance practical osint volume deal explosion data distributed increases rate difficult evaluate sources intelligence analysis accredited journalists protection questions researching recognized media outlets imprisoned executed seeking osint private individuals illegally collecting data foreign military intelligence agency considered espionage countries espionage treason betraying country citizenship tool statecraft ancient times osint valuable rigorous processing exploitation processes timelines technical intelligence disciplines humint sigint masint geoint additionally osint collects valuable variety opinions encompasses variety sources commission intelligence capabilities united weapons mass destruction report submitted march 2005 osint included source intelligence process reasons stated report process osint highly diverse form intelligence collection analysis agency units scattered department defense department osint collectors precautions collecting internet form vpn anonymize identity collect discreetly evaluating sources osint collection analysis process osint analyst intelligence evaluation determine true process expose false process affect predicting future finally analysts evaluated intelligence incorporated finished classified unclassified proprietary intelligence product collection osint collection intelligence disciplines obtaining raw analyzed major difficulty cooperative targets osint chief difficulty identifying relevant reliable sources vast publicly challenge access local knowledge leverage human experts create tailored knowledge fly osint community disciplines united government source activities government frequently source activities media monitoring media analysis internet public surveys source library congress sponsors federal division frd conducts deal tailored source fee service basis executive branch intelligence intelligence community source activities national source enterprise dictated intelligence community directive 301 promulgated director national intelligence directive establishes authorities responsibilities assistant deputy director national intelligence source addni os dni source center national source committee prior establishment national source enterprise foreign broadcast service fbis established 1941 government primary source unit transcribing translating foreign broadcasts absorbed defense department joint publications service jprs function foreign printed materials including newspapers magazines technical journals armed forces secretary defense intelligence dr stephen cambone encouraged defense science board reports strategic communication transition hostilities created defense source program dosp current secretary defense intelligence assigned executive agency program defense intelligence agency military offices engage osint activities include homeland security department homeland security active source intelligence unit congressional testimony house homeland security committee intelligence sharing terrorism risk assessment subcommittee undersecretary homeland security charles allen february 14 2007 established domestic source enterprise support department osint local tribal partners law enforcement law enforcement osint community applies source intelligence osint prediction prevention investigation prosecution criminals including terrorists additionally fusion centers increasingly utilizing osint support intelligence generation investigations examples successful law enforcement osint include scotland yard osint royal canadian mounted police rcmp osint interpol europol experimented osint units time atrophied departure individual champions york police department nypd osint unit los angeles county sheriff department housed emergency operations bureau affiliated joint regional intelligence center business business osint encompasses commercial intelligence competitor intelligence business intelligence chief practice private intelligence agencies businesses brokers private investigators collect analyze relevant business purposes include media deep commercial content private specialized business assisting criminal justice field business united relies osint commercial bail bond industry industry servicing court business intelligence sector osint bail bond agencies employ private fugitive recovery agency locate apprehend absent client criminal defendant failed court subsequently warrant arrest issued osint method discovery locate defendant initial interviewing bond signers defendant relatives friends lacking osint gathering leads investigator discover alternate hypothesis analyze match relevant data prediction fugitive location data scrubbed access facebook entries twitter messages snapchat methods fail step seek specialized behavioral intelligence services reference osint aid establishing veracity subjects forensic interview create behavioral profile osint data correlated interview data include variety behavioral patterns list daily personal contacts habits activities visited vehicles favorite involvements director psychologist forensic interviewer behavioral intelligence agency 2016 osint data base critically filtered analyzed applied investigative interviewing interrogation source intelligence analysis software categories tools intended osint analysis category source tools query multiple search engines simultaneously inteltechniques search engines provide separately duckduckgo category includes social media search engines search engines domains people pipl whois informer category designed data analytics platforms datawalk automatically combine osint insight local internal data visual analysis search hidden connections billions records 
390468	computerscience	buffer rob tomasulo algorithm instruction execution instructions committed stages instructions issue execute write result tomasulo algorithm additional stage commit stage instructions stored register memory write result stage buffer contents buffer executing instructions depending additional fields entry buffer additional benefits buffer include precise exceptions easy rollback control target address mispredictions branch jump rob storing instructions original fetched rob accessed reservation station tomasulo algorithm additional parameter instruction rob jump prediction correct nonrecoverable exception encountered instruction stream rob cleared instructions reservation stations initialized 
390562	computerscience	tomasulo’s algorithm architecture hardware algorithm dynamic scheduling instructions execution enables efficient multiple execution units developed robert tomasulo ibm 1967 implemented ibm 360 model 91’s floating unit major innovations tomasulo’s algorithm include register renaming hardware reservation stations execution units common data bus cdb computed values broadcast reservation stations developments improved parallel execution instructions stall scoreboarding earlier algorithms robert tomasulo received eckert–mauchly award 1997 algorithm implementation concepts concepts implementation tomasulo algorithm common data bus common data bus cdb connects reservation stations functional units tomasulo preserves precedence encouraging concurrency effects instruction instructions issued sequentially effects sequence instructions exceptions raised instructions occur processor executed sequentially register renaming tomasulo algorithm register renaming correctly perform execution purpose reservation station registers hold real placeholder real unavailable destination register issue stage placeholder initially placeholder tag indicating reservation station produce real unit finishes broadcasts result cdb placeholder replaced real functional unit single reservation station reservation stations hold execute single instruction including operation operands functional unit processing source operands instruction real exceptions practically speaking exceptions status exception processor raise special exception called imprecise exception imprecise exceptions occur oooe implementations processor changed program risc pipeline exceptions programs experience precise exceptions specific instruction exception determined restart execute exception experience imprecise exceptions restart execute determine specific instruction exception instruction lifecycle stages listed stages instruction passes time issued time execution complete stage issue issue stage instructions issued execution operands reservation stations ready stalled registers renamed step eliminating war waw hazards stage execute execute stage instruction operations carried instructions delayed step operands eliminating raw hazards program correctness maintained effective address calculation prevent hazards memory stage write result write result stage alu operations written registers store operations written memory algorithm improvements concepts reservation stations register renaming common data bus tomasulo algorithm advancements design performance computers reservation stations responsibility waiting operands presence data dependencies inconsistencies varying storage access time circuit speeds freeing functional units improvement overcomes floating delays memory accesses algorithm tolerant cache misses additionally programmers freed implementing optimized code result common data bus reservation station preserve dependencies encouraging concurrency tracking operands instructions reservation stations register renaming hardware algorithm minimizes read write raw eliminates write write waw write read war architecture hazards improves performance reducing wasted time required stalls equally improvement algorithm design limited specific pipeline structure improvement algorithm multiple issue processors additionally algorithm easily extended enable branch speculation applications legacy tomasulo algorithm ibm unused implementation 360 model 91 architecture vast increase usage 1990s reasons modern processors implement dynamic scheduling schemes derivative tomasulo’s original algorithm including popular intel x86 64 chips 
390569	computerscience	domain central processing unit cpu design hazards instruction pipeline cpu microarchitectures instruction execute clock cycle lead incorrect computation common types hazards data hazards structural hazards control hazards branching hazards methods deal hazards including pipeline stalls pipeline bubbling operand forwarding execution scoreboarding method tomasulo algorithm background instructions pipelined processor performed stages time instructions processed stages pipeline fetch execute instruction pipeline microarchitectures instructions executed hazard occurs simultaneous instructions conflict types data hazards data hazards occur instructions exhibit data dependence modify data stages pipeline ignoring potential data hazards result race conditions termed race hazards situations data hazard occur instructions i1 i2 i1 occurring i2 program read write raw read write raw data hazard refers situation instruction refers result calculated retrieved occur instruction executed prior instruction prior instruction processed partly pipeline instruction calculating saved register r2 compute result register r4 pipeline operands fetched 2nd operation saved data dependency occurs data dependency occurs instruction i2 dependent completion instruction i1 write read war write read war data hazard represents concurrent execution situation chance i2 finish i1 concurrent execution ensured result register r5 stored i1 chance fetch operands write write waw write write waw data hazard occur concurrent execution environment write wb i2 delayed i1 finishes executing structural hazards structural hazard occurs processor hardware instructions time canonical single memory unit accessed fetch stage instruction retrieved memory memory stage data written read memory resolved separating component orthogonal units separate caches bubbling pipeline detected hazard control unit control hazards branch hazards branching hazards termed control hazards occur branches instruction pipeline microarchitectures processor outcome branch insert instruction pipeline fetch stage eliminating hazards generic pipeline bubbling bubbling pipeline termed pipeline break pipeline stall method preclude data structural branch hazards instructions fetched control logic determines hazard occur true control logic inserts operations nops pipeline instruction hazard executes prior sufficient time finish prevent hazard nops equals stages pipeline processor cleared instructions proceed hazards forms stalling introduce delay processor resume execution flushing pipeline occurs branch instruction jumps memory location invalidating prior stages pipeline prior stages cleared allowing pipeline continue instruction branch data hazards main solutions algorithms resolve data hazards execution algorithm task removing data dependencies delegated compiler nop instructions dependent instructions ensure correct operation instructions examples write register add register store result register execution register i1 write register exit pipeline i2 starts executing r1 i2 performs addition event i2 adds register register 13 error occurs i2 reads register i1 committed stored result write operation register i2 reading contents register register forwarding helps correct errors depending output i1 subsequent instructions committed stored register forwarding applied wait commit store output i1 register output output subsequent instruction i2 i2 correct register commit store pipelined forwarding enabled instruction decode execution stage pipeline inputs read register register register stage instruction execute memory access mem control logic determine input control hazards branch hazards avoid control hazards microarchitectures event branch pipeline bubble incorrect instructions entered pipeline care prevent wrongly loaded instructions processor excluding energy wasted processing discovered loaded incorrectly techniques memory latency factor designers attend delay reduce performance types memory accessing time memory choosing suitable type memory designers improve performance pipelined data path 
405562	computerscience	ray solomonoff theory universal inductive inference theory prediction based logical observations predicting symbol based series symbols assumption theory environment unknown computable probability distribution mathematical formalization occam razor principle multiple explanations prediction completely bayesian framework universal prior calculated computable sequences—this universal priori probability distribution computable hypothesis probability bayes rule causation predicting continuation computable sequence origin philosophical theory based philosophical foundations founded ray solomonoff 1960 mathematically formalized combination occam razor principle multiple explanations computable theories perfectly previous observations calculate probability observation weight shorter computable theories marcus hutter universal artificial intelligence builds calculate expected action mathematical proof razor based mathematical properties probability distribution countable set properties relevant infinite set programs denumerable set sum probabilities programs equal definition probability probabilities roughly decrease enumerate infinite set programs strictly precise probability programs preclude programs probability fundamental ingredients theory concepts algorithmic probability kolmogorov complexity universal prior probability prefix computable sequence sum probabilities programs universal compute starting computable unknown probability distribution sampled universal prior bayes theorem predict unseen optimal fashion modern applications artificial intelligence solomonoff inductive inference computable aixi derived algorithms approximate modern computing power closer predictions predictions inductive inference mathematical limit solomonoff inductive inference direction inductive inference based mark gold model learning limit 1967 developed models learning scenario class computable functions learner recursive functional input form outputs hypothesis respect agreed acceptable numbering computable functions indexed function required consistent values learner learns function hypotheses generates function learns learns basic recursively enumerable classes functions learnable class rec computable functions learnable models considered learning classes recursively enumerable sets positive data topic studied gold pioneering paper 1967 onwards reaching extension gold’s approach developed schmidhuber theory generalized kolmogorov complexities kinds super recursive algorithms turing machines mathematically based direction inductive inference theory automata computation context process inductive inference performed abstract automaton called inductive turing machine burgin 2005 inductive turing machines represent step development science providing models contemporary computers networks burgin 2001 forming class super recursive algorithms satisfy conditions definition algorithm inductive turing machines type effective method definite list defined instructions completing task initial proceed defined series successive eventually terminating difference inductive turing machine turing machine produce result turing machine inductive turing machine stopping stephen kleene called procedures stopping calculation procedure algorithm kleene 1952 137 kleene demanded algorithm eventually exhibit object kleene 1952 137 condition satisfied inductive turing machines exhibited finite steps inductive turing machines step result simple inductive turing machines equivalent models computation advanced inductive turing machines powerful proved burgin 2005 limiting partial recursive functions trial error predicates turing machines simple inductive turing machines equivalent models computation simple inductive turing machines turing machines direct constructions computing automata grounded physical machines contrast trial error predicates limiting recursive functions limiting partial recursive functions syntactic systems symbols formal rules manipulation simple inductive turing machines turing machines limiting partial recursive functions trial error predicates turing machines partial recursive functions lambda calculus note simple inductive turing machines structure functioning semantics output mode turing machines types inductive turing machines essentially advanced structure structured memory powerful instructions utilization inference learning achieving efficiency reflects learning people burgin klinger 2004 researchers confuse computations inductive turing machines stopping computations infinite time computations computations inductive turing machines halt conventional turing machines halting computations result stopping computations inductive turing machines rules inductive turing machines determine computation stopping stopping result inductive turing machine produces output time time output stops changing considered result computation descriptions rule papers incorrect instance davis 2006 128 formulates rule result stopping correct output produced subsequent output simply repeat correct result contrast widespread misconception inductive turing machines finite steps finite time contrast infinite infinite time computations main distinctions conventional turing machines simple inductive turing machines distinction simple inductive turing machines conventional turing machines distinction conventional turing machine informs halting coming final result simple inductive turing machine inform reaching result conventional turing machine helpless inform people illusion informs halting result contrast users decide computed result continue computations everyday desktop applications word processors spreadsheets spend time waiting event loops terminate directed users evolutionary inductive turing machines evolutionary approach inductive inference accomplished class automata called evolutionary inductive turing machines burgin eberbach 2009 2012 evolutionary inductive turing machine infinite sequence inductive turing machines generations xwhich coded alphabet machines goal build “population” satisfying inference condition automaton called component level automaton represents encodes level evolutionary algorithm input generations population applying variation operators selection operator generation input processed automaton generates produces generation transfer output automaton  1  2  3   automaton receives generation  − 1 input  − 1 applies variation operator selection operator producing generation    1 sending    1 continue evolution 
406624	computerscience	time series series data indexed listed graphed time commonly time series sequence successive equally spaced time sequence discrete time data examples time series heights ocean tides counts sunspots daily closing dow jones industrial average time series frequently plotted charts time series statistics signal processing pattern recognition econometrics mathematical finance weather forecasting earthquake prediction electroencephalography control engineering astronomy communications engineering domain applied science engineering involves temporal measurements time series analysis comprises methods analyzing time series data extract meaningful statistics characteristics data time series forecasting model predict future values based observed values regression analysis employed theories current values independent time series affect current time series type analysis time series called time series analysis focuses comparing values single time series multiple dependent time series time interrupted time series analysis analysis interventions single time series time series data natural temporal time series analysis distinct cross sectional studies natural observations explaining people wages reference respective education levels individuals data entered time series analysis distinct spatial data analysis observations typically relate geographical locations accounting house prices location intrinsic characteristics houses stochastic model time series reflect observations close time closely observations addition time series models natural time values period expressed deriving values future values time reversibility time series analysis applied real valued continuous data discrete numeric data discrete symbolic data sequences characters letters english language methods analysis methods time series analysis divided classes frequency domain methods time domain methods include spectral analysis wavelet analysis include auto correlation cross correlation analysis time domain correlation analysis filter manner scaled correlation mitigating operate frequency domain additionally time series analysis techniques divided parametric parametric methods parametric approaches assume underlying stationary stochastic process structure parameters autoregressive moving average model approaches task estimate parameters model describes stochastic process contrast parametric approaches explicitly estimate covariance spectrum process assuming process structure methods time series analysis divided linear linear univariate multivariate panel data time series type panel data panel data class multidimensional data set time series data set dimensional panel cross sectional dataset data set exhibit characteristics panel data time series data data record unique records answer time data field time series data set candidate determining unique record requires time data field additional identifier unrelated time student stock symbol country code panel data candidate differentiation lies time identifier data set cross sectional data set candidate analysis types motivation data analysis time series purposes motivation context statistics econometrics quantitative finance seismology meteorology geophysics primary goal time series analysis forecasting context signal processing control engineering communication engineering signal detection estimation context data mining pattern recognition machine learning time series analysis clustering classification query content anomaly detection forecasting exploratory analysis clearest examine regular time series manually chart tuberculosis united spreadsheet program standardized rate 100 000 percent change rate calculated steadily dropping tb incidence decreasing percent change rate varied urges 1975 1990s vertical axes comparison time series graphic techniques include curve fitting curve fitting process constructing curve mathematical function fit series data subject constraints curve fitting involve interpolation exact fit data required smoothing smooth function constructed fits data topic regression analysis focuses questions statistical inference uncertainty curve fit data observed random errors fitted curves aid data visualization infer values function data summarize relationships variables extrapolation refers fitted curve range observed data subject degree uncertainty reflect method construct curve reflects observed data construction economic time series involves estimation components dates interpolation values benchmarks earlier dates interpolation estimation unknown quantity quantities historical data drawing conclusions missing reading lines interpolation data surrounding missing data trend seasonality term cycles series relevant dates alternatively polynomial interpolation spline interpolation piecewise polynomial functions fit time intervals fit smoothly closely interpolation approximation complicated function simple function called regression main difference regression interpolation polynomial regression single polynomial models entire data set spline interpolation yield piecewise continuous function composed polynomials model data set extrapolation process estimating original observation range variable basis relationship variable interpolation produces estimates observations extrapolation subject uncertainty risk producing meaningless function approximation function approximation select function defined class closely matches approximates target function task specific distinguish major classes function approximation target functions approximation theory branch numerical analysis investigates functions special functions approximated specific class functions polynomials rational functions desirable properties inexpensive computation continuity integral limit values target function unknown explicit set time series form depending structure domain codomain techniques approximating applicable operation real techniques interpolation extrapolation regression analysis curve fitting codomain range target set finite set dealing classification online time series approximation summarize data pass construct approximate representation support variety time series queries bounds worst error extent regression classification fitness approximation received unified treatment statistical learning theory viewed supervised learning prediction forecasting statistics prediction statistical inference approach inference predictive inference prediction undertaken approaches statistical inference description statistics transferring knowledge sample population population populations prediction time transferred time specific time process forecasting classification assigning time series pattern specific category identify word based series hand movements sign language signal estimation approach based harmonic analysis filtering signals frequency domain fourier transform spectral density estimation development accelerated war mathematician norbert wiener electrical engineers rudolf kálmán dennis gabor filtering signals noise predicting signal values time kalman filter estimation theory digital signal processingsegmentation splitting time series sequence segments time series represented sequence individual segments characteristic properties audio signal conference partitioned pieces times person speaking time series segmentation goal identify segment boundary time series characterize dynamical properties segment approach change detection modeling time series sophisticated markov jump linear models models time series data forms represent stochastic processes modeling variations level process broad classes practical autoregressive models integrated models moving average models classes depend linearly previous data combinations ideas produce autoregressive moving average arma autoregressive integrated moving average arima models autoregressive fractionally integrated moving average arfima model generalizes extensions classes deal vector valued data heading multivariate time series models preceding acronyms extended including initial vector var vector autoregression additional set extensions models observed time series driven forcing time series causal observed series distinction multivariate forcing series deterministic experimenter control models acronyms extended final exogenous linear dependence level series previous data partly possibility producing chaotic time series importantly empirical investigations advantage predictions derived linear models linear models nonlinear autoregressive exogenous models references nonlinear time series analysis kantz schreiber abarbanel types linear time series models models represent variance time heteroskedasticity models represent autoregressive conditional heteroskedasticity arch collection comprises wide variety representation garch tarch egarch figarch cgarch variability predicted values observed series contrast representations locally varying variability variability modelled driven separate time varying process doubly stochastic model model analyses wavelet transform based methods locally stationary wavelets wavelet decomposed neural networks gained favor multiscale referred multiresolution techniques decompose time series attempting illustrate time dependence multiple scales markov switching multifractal msmf techniques modeling volatility evolution hidden markov model hmm statistical markov model modeled assumed markov process unobserved hidden hmm considered simplest dynamic bayesian network hmm models speech recognition translating time series spoken notation notations time series analysis common notation time series indexed natural writtenanother common notation iswhere set conditions sets conditions theory built ideas stationarity expanded ideas strict stationarity stationarity models applications developed conditions models considered partly addition time series analysis applied series seasonally stationary stationary situations amplitudes frequency components change time dealt time frequency analysis time–frequency representation time series signal tools tools investigating time series data include measures time series metrics features time series classification regression analysis visualization time series visualized categories chart overlapping charts separated charts overlapping charts display time series layout separated charts layouts aligned comparison purpose software time series data common statistical analysis software result offerings commercial source examples include 
413102	computerscience	folding fah distributed computing project disease simulates protein folding computational drug design types molecular dynamics project idle processing resources thousands personal computers owned volunteers installed software systems main purpose determine mechanisms protein folding process proteins reach final dimensional structure examine protein misfolding academic major implications medical alzheimer disease huntington disease forms cancer diseases lesser extent folding predict protein final structure determine molecules interact applications drug design folding developed operated pande laboratory stanford university direction prof vijay pande shared scientific institutions laboratories project pioneered graphics processing units gpus playstation 3s message passing interface computing multi core processors sony xperia smartphones distributed computing scientific project statistical simulation methodology paradigm shift traditional computing methods performance scale computing network allowed researchers computationally costly atomic level simulations protein folding thousands times achieved launch october 1 2000 pande lab produced 206 scientific papers direct result folding project simulations agree experiments distributed computing projects folding quantitatively assesses user computing contributions project credit units protein project uniform base credit determined benchmarking units project official reference machine project released user receives base completing unit passkey receive bonus reliably rapidly completing units demanding computationally scientific priority users receive credit clients multiple machines attempts align awarded credit scientific users register contributions team combine user start team existing team team community driven sources recruitment internet forum foster friendly competition individuals teams compute project benefit folding community accelerate scientific redistribution binaries party modified binary patched decompiling recompiling modification binary files – transport channel – signed recipient person verify digital signature unwarranted modifications detectable folding input data output result processed client software digitally signed integrity verified independently integrity client software folding cosm software libraries networking v7 v7 client seventh generation folding client software rewrite unification prior clients windows macos linux operating systems released march 22 2012 predecessors v7 folding background priority allowing applications cpu resources designed installation start operation user friendly novices offer scientific flexibility researchers prior clients v7 trac managing bug tickets users development process provide feedback v7 consists integrated elements user typically interacts v7 source gui named fahcontrol novice advanced expert user interface modes ability monitor configure control remote folding clients fahcontrol directs fahclient application manages fahslot slot slot acts replacement distinct folding v6 uniprocessor smp gpu clients download process upload units independently fahviewer function modeled ps3 viewer displays real time rendering protein processed google chrome 2014 client google chrome chromium browsers released allowing users folding browser client google native client nacl feature chromium based browsers folding code native speed sandbox user machine android july 2015 client android mobile phones released google play devices running android kitkat comparison molecular simulators rosetta distributed computing project aimed protein structure prediction accurate tertiary structure predictors 1002 prot 21804 1002 prot 22210 conformational rosetta software initialize markov model starting folding simulations conversely structure prediction algorithms improved thermodynamic kinetic models sampling aspects protein folding simulations 1371 journal pone 0005840 rosetta predict final folded folding proceeds rosetta folding complementary address molecular questions anton special purpose supercomputer built molecular dynamics simulations october 2011 anton folding powerful molecular dynamics systems anton unique ability produce single ultra computationally costly molecular trajectories 1021 ja207470h 2010 reached millisecond range 1145 1654059 1654099 1126 science 1187409 trajectories helpful types biochemical 1145 1364782 1364802 1146 annurev biophys 042910 155245 anton markov models msm analysis 2011 pande lab constructed msm 100 µs anton simulations alternative folding pathways visible anton traditional analysis concluded difference msms constructed limited trajectories assembled shorter trajectories 1021 ja207470h june 2011 folding sampling anton simulation effort determine methods compare anton forum 7610 7611 beta folding shorter trajectories amenable distributed computing parallelizing methods trajectories require adaptive sampling sample protein phase space combination anton folding simulation methods provide sampling space 1021 ja207470h 
413119	computerscience	qrio quest curiosity originally named sony dream robot sdr bipedal humanoid entertainment robot developed marketed sold sony follow success aibo entertainment robot qrio stood 6 m feet tall weighed 3 kg 16 pounds qrio slogan life fun happy january 26 2006 day announced discontinuation aibo products sony announced development qrio cancelled qrio reported numerous development testing scalability phases intent commercially development qrio prototypes developed manufactured sony intelligence dynamics laboratory prototypes existence unknown qrio performing dance routine confirmed sony representative museum science boston january 22 2006 numerous videos fourth generation qrio prototype robots featured dancing music video recording artist beck prototypes lacked camera center forehead improved hands wrists prototypes programmers weeks program choreography qrio capable voice recognition remember people likes dislikes video qrio speaking children qrio 23 cm credited guinness records 2005 edition bipedal robot capable running defines moving legs ground time 4th generation qrio internal battery lasts hour fiction 2005 qrio robots appeared music video beck robots dance music 2009 series finale reimagined television series battlestar galactica virtual virtual baltar coda set modern day earth comment cycle violence perpetuated humanity interaction technology amok final scene montage real life robots starting sony qrio 
416129	computerscience	architecture branch predictor digital circuit guess branch if–then–else structure definitively purpose branch predictor improve flow instruction pipeline branch predictors play critical role achieving effective performance modern pipelined microprocessor architectures x86 branching implemented conditional jump instruction conditional jump continue execution branch code conditional jump jump program memory branch code stored conditional jump condition calculated conditional jump passed execution stage instruction pipeline fig branch prediction processor wait conditional jump instruction passed execute stage instruction enter fetch stage pipeline branch predictor attempts avoid waste time guess conditional jump branch guessed fetched speculatively executed detected guess wrong speculatively executed partially executed instructions discarded pipeline starts correct branch incurring delay time wasted branch misprediction equal stages pipeline fetch stage execute stage modern microprocessors tend pipelines misprediction delay 20 clock cycles result pipeline increases advanced branch predictor time conditional jump instruction encountered base prediction branch predictor records branches encounters conditional jump times base prediction history branch predictor recognize conditional jump time branch prediction branch target prediction branch prediction attempts guess conditional jump branch target prediction attempts guess target conditional unconditional jump computed decoding executing instruction branch prediction branch target prediction combined circuitry implementation static branch prediction static prediction simplest branch prediction technique rely dynamic history code executing predicts outcome branch based solely branch instruction implementations sparc mips commercial risc architectures single direction static branch prediction predict conditional jump fetch sequential instruction branch jump evaluated instruction pointer set sequential address cpus evaluate branches decode stage single cycle instruction fetch result branch target recurrence cycles machine fetches instruction branch architectures define branch delay slots utilize fetched instructions advanced form static prediction presumes branches branches branch target address address technique prediction accuracy loops branches processors branch prediction hints inserted code static prediction intel pentium accepts branch prediction hints feature abandoned intel processors static prediction fall technique processors dynamic branch prediction dynamic predictors sufficient motorola mpc7450 g4e intel pentium technique fall static prediction decisions compile time execution program dynamic branch prediction dynamic branch prediction branches gathered time predict outcome branch random branch prediction random pseudorandom bit pure guess guarantee branch 50 correct prediction rate improved worsened reordering instructions simplest static prediction assume compilers reorder instructions 50 correct prediction timing nondeterministic prediction superscalar processors mips r8000 alpha 21264 alpha 21464 ev8 fetch instructions pointer predictor handles branch target prediction branch direction prediction predictor aligned instructions branch target instruction fetched initial instructions fetched wasted assuming simplicity uniform distribution branch targets instructions fetched discarded branch instruction aligned instructions branch delay slot discarded assuming uniform distribution branch instruction placements instructions fetched discarded discarded instructions branch destination lines add complete fetch cycle single cycle predictor level branch prediction saturating counter bit saturating counter essentially flip flop records outcome branch simple version dynamic branch predictor accurate bit saturating counter machine branch evaluated machine updated branches evaluated change branches evaluated change advantage bit counter scheme bit scheme conditional jump deviate prediction loop closing conditional jump mispredicted original mmx intel pentium processor saturating counter imperfect implementation spec 89 benchmarks bimodal predictors saturate 93 correct branch maps unique counter predictor table indexed instruction address bits processor fetch prediction instruction instruction decoded level predictor level branch predictor referred correlation based branch predictor dimensional table counters called pattern history table table entries bit counters level adaptive predictor codice statement executed times decision execution depend previous scenarios level adaptive predictor efficiently saturation counter conditional jumps time regularly recurring pattern predicted saturating counter level adaptive predictor remembers history occurrences branch saturating counter 2n history patterns method illustrated figure n  occurrences branch stored bit shift register branch history register binary values 00 01 11 pattern history table entries branch 22  branch histories entry table bit saturating counter type figure branch branch history register choosing saturating counters history 00 counter history 11 counters assume conditional jump time branch sequence 001001001 entry 00 pattern history table indicating zeroes entry 01 indicating 01 entry entry 11 consecutive rule level adaptive predictor bit history predict repetitive sequence period bit sequences advantage level adaptive predictor learn predict arbitrary repetitive pattern method invented yeh yale patt university michigan initial publication 1991 method popular variants prediction method modern microprocessors local branch prediction local branch predictor separate history buffer conditional jump instruction level adaptive predictor history buffer separate conditional jump instruction pattern history table separate shared conditional jumps intel pentium mmx pentium pentium iii local branch predictors local bit history local pattern history table 16 entries conditional jump spec 89 benchmarks local predictors saturate 97 correct global branch prediction global branch predictor separate history record conditional jump shared history conditional jumps advantage shared history correlation conditional jumps predictions disadvantage history diluted irrelevant conditional jumps uncorrelated history buffer include bits branch branches level adaptive predictor scheme saturating counter scheme table sizes rarely local prediction history buffer prediction size pattern history table grows exponentially size history buffer pattern history table shared conditional jumps level adaptive predictor globally shared history buffer pattern history table called gshare predictor xors global history branch pc gselect concatenates global branch prediction amd processors intel pentium core core silvermont based atom processors alloyed branch prediction alloyed branch predictor combines local global prediction principles concatenating local global branch histories bits program counter tests nano processor technique agree predictor agree predictor level adaptive predictor globally shared history buffer pattern history table additional local saturating counter outputs local global predictors xored final prediction purpose reduce contentions pattern history table branches prediction happen share entry pattern history table agree predictor version intel pentium 4 abandoned hybrid predictor hybrid predictor called combined predictor implements prediction mechanism final prediction based meta predictor remembers predictors predictions majority vote function based odd predictors scott mcfarling proposed combined branch prediction 1993 paper spec 89 benchmarks predictor thelocal predictor predictors gshare multiple table entries track behavior branch multiplication entries branches map table entry situation called aliasing prediction accuracy suffer branches multiple predictors beneficial arrange predictor aliasing patterns predictor aliasing combined predictors indexing functions predictors called gskew predictors analogous skewed associative caches data instruction caching loop predictor conditional jump controls loop predicted special loop predictor conditional jump loop repeats times times conditional jump loop times conditional jump times detected loop behavior conditional jump predicted easily simple counter loop predictor hybrid predictor meta predictor detects conditional jump loop behavior microprocessors loop predictors indirect branch predictor indirect jump instruction choose branches processors specialized indirect branch predictors processors intel amd predict indirect branches level adaptive predictor instruction contributes bit history buffer zec12 architecture processors ibm support instruction preload branch predictor entry instruction branch target address constructed adding contents purpose register displacement processors mechanism simply predict indirect jump target time prediction function returns function return called return instruction indirect jump reads target address stack microprocessors separate prediction mechanism return instructions mechanism based called return stack buffer local mirror stack size return stack buffer typically 16 entries overriding branch prediction trade fast branch prediction branch prediction dealt branch predictors branch predictor fast simple branch predictor slower complicated bigger tables override wrong prediction predictor alpha 21264 alpha ev8 microprocessors fast single cycle predictor handle branch target recurrence provide simple fast branch prediction predictor inaccurate branch resolution recurrence takes cores cycle secondary branch predictors override prediction predictor cost single lost fetch cycle intel core i7 branch target buffers branch predictors neural branch prediction machine learning branch prediction lvq multi layer perceptrons called neural branch prediction proposed lucian vintan lucian blaga university sibiu developed perceptron branch predictor neural branch predictor developed daniel jimenez 2001 perceptron predictor feasible implement hardware commercial implementation perceptron branch predictor amd piledriver microarchitecture main advantage neural predictor ability exploit histories requiring linear resource growth classical predictors require exponential resource growth jimenez reports global improvement mcfarling style hybrid predictor gshare perceptron overriding hybrid predictors main disadvantage perceptron predictor latency advantage speed arithmetic tricks computation latency compared clock period modern microarchitectures reduce prediction latency jimenez proposed 2003 fast path neural predictor perceptron predictor chooses weights current branch path branch pc researchers developed concept seznec monchiero tarjan skadron desmet akkary aasaraai michael black art branch predictors perceptron predictor intel championship branch prediction competition intel implements idea ia 64 simulators 2003 amd ryzen processor includes neural branch predictor history ibm 7030 stretch designed late 1950s pre executes unconditional branches conditional branches depended registers conditional branches production models implemented predict untaken subsequent models changed implement predictions based current values indicator bits condition codes stretch designers considered static hint bits branch instructions project decided misprediction recovery lookahead unit stretch stretch reputation stellar performance blamed time required misprediction recovery subsequent ibm designs branch prediction speculative execution ibm 3090 1985 bit predictors introduced tom mcwilliams curt widdoes 1977 lawrence livermore national lab supercomputer independently jim smith 1979 cdc microprogrammed processors popular 1960s 1980s multiple cycles instruction require branch prediction addition ibm 3090 examples microprogrammed designs incorporated branch prediction burroughs b4900 microprogrammed cobol machine released 1982 pipelined branch prediction b4900 branch prediction history stored memory instructions program execution b4900 implements branch prediction semantically equivalent branch opcodes represent branch operator type opcode history branch instruction hardware determines branch prediction branch updated rewrites opcode semantically equivalent opcode hinted proper history scheme obtains 93 hit rate granted scheme vax 9000 announced 1989 microprogrammed pipelined performs branch prediction commercial risc processors mips r2000 r3000 earlier sparc processors trivial branch prediction branch delay slots fetched instruction cycle execute performance loss r4000 trivial branch prediction loses cycles branch branch resolution recurrence cycles branch prediction introduction pipelined superscalar processors intel pentium dec alpha 21064 mips r8000 ibm power series processors rely bit simple bimodal predictors dec alpha 21264 ev6 predictor overridden combined local predictor global predictor combining choice bimodal predictor amd k8 combined bimodal global predictor combining choice bimodal predictor processor caches base choice bimodal predictor counters bits l2 cache ecc result effectively base choice predictor tables parity ecc instructions l2 cache parity design sufficient instruction suffering parity error invalidated refetched memory alpha 21464 ev8 cancelled late design minimum branch misprediction penalty 14 cycles complex fast predictor overridden combined bimodal majority voting predictor majority vote bimodal gskew predictors 2018 catastrophic security vulnerability called spectre public google project researchers virtually modern cpus vulnerability involves extracting private data leftover data caches branch mispredictions 
416612	computerscience	cross validation called rotation estimation sample testing model validation techniques assessing statistical analysis generalize independent data set settings goal prediction estimate accurately predictive model perform practice prediction model dataset data training training dataset dataset unknown data data model tested called validation dataset testing set goal cross validation model’s ability predict data estimating flag overfitting selection bias insight model generalize independent dataset unknown dataset instance real cross validation involves partitioning sample data complementary subsets performing analysis subset called training set validating analysis subset called validation set testing set reduce variability methods multiple rounds cross validation performed partitions validation combined averaged rounds estimate model’s predictive performance summary cross validation combines averages measures fitness prediction derive accurate estimate model prediction performance purpose cross validation suppose model unknown parameters data set model fit training data set fitting process optimizes model parameters model fit training data independent sample validation data population training data model fit validation data fits training data size difference size training data set parameters model cross validation estimate size linear regression real response values yn dimensional vector covariates x1 components vector denoted ip squares fit function form hyperplane βtx data  1 ≤   ≤  assess fit squared error mse mse estimated parameter values β training set  1 ≤   ≤  isif model correctly mild assumptions expected mse training set  −   − 1        1    1 times expected mse validation set expected distribution training sets fit model compute mse training set optimistically biased assessment model fit independent data set biased estimate called sample estimate fit cross validation estimate sample estimate linear regression compute factor  −   − 1        1 training mse underestimates validation mse assumption model specification valid cross validation checking model overfitted mse validation set exceed anticipated cross validation context linear regression select optimally regularized cost function regression procedures logistic regression simple compute expected sample fit cross validation applicable predict performance model unavailable data numerical computation theoretical analysis common types cross validation types cross validation distinguished exhaustive exhaustive cross validation exhaustive cross validation exhaustive cross validation methods cross validation methods learn divide original sample training validation set leave cross validation leave cross validation lpo involves observations validation set remaining observations training set repeated cut original sample validation set observations training set lpo cross validation requires training validating model times observations original sample binomial coefficient moderately lpo computationally infeasible 100 30 30 percent 100 suggested 4leave cross validation leave cross validation loocv leave cross validation    1 process jackknife cross validation computes statistic left sample jackknifing computes statistic samples loo cross validation requires computation time lpo cross validation passes passes require computation time approaches fold cross validation pseudo code algorithm input output steps err ← 0for ← define cross validation subsetsx ← − ← − yx ← xy ← interpolate err ← err − 2end forerr ← err nnon exhaustive cross validation exhaustive cross validation methods compute splitting original sample methods approximations leave cross validation fold cross validation fold cross validation original sample randomly partitioned equal sized subsamples subsamples single subsample retained validation data testing model remaining  − 1 subsamples training data cross validation process repeated times subsamples validation data averaged produce single estimation advantage method repeated random sampling observations training validation observation validation fold cross validation commonly remains unfixed parameter setting     fold cross validation fold cross validation randomly shuffle dataset sets sets equal size implemented shuffling data array splitting train validate training validating on      observations fold cross validation leave cross validation stratified fold cross validation folds selected response equal folds binary classification fold roughly proportions types class labels holdout method holdout method randomly assign data sets called training set set size sets arbitrary typically set training set train build model evaluate performance typical cross validation multiple runs model testing averaged contrast holdout method isolation involves single caution averaging multiple runs achieve highly misleading indicator predictive accuracy tend unstable smoothed multiple iterations indicators specific role played predictor variables values regression coefficients tend unstable holdout method framed simplest cross validation sources classify holdout type simple validation simple degenerate form cross validation repeated random sampling validation method monte carlo cross validation randomly splits dataset training validation data split model fit training data predictive accuracy assessed validation data averaged splits advantage method fold cross validation proportion training validation split dependent iterations folds disadvantage method observations selected validation subsample selected validation subsets overlap method exhibits monte carlo variation meaning vary analysis repeated random splits random splits approaches infinity result repeated random sampling validation leave cross validation stratified variant approach random samples generated response dependent variable regression equal training testing sets responses dichotomous unbalanced representation response values data measures fit goal cross validation estimate expected level fit model data set independent data train model estimate quantitative measure fit data model binary classification validation set predicted correctly incorrectly situation misclassification error rate summarize fit measures positive predictive predicted continuously distributed squared error root squared error median absolute deviation summarize errors statistical properties suppose choose measure fit cross validation produce estimate expected fit ef model independent data set drawn population training data imagine sampling multiple independent training sets distribution values vary statistical properties result variation cross validation estimator unbiased ef reason biased training set cross validation actual data set loocv training set size  − 1 observed situations bias conservative estimated fit biased direction suggesting poorer fit practice bias rarely concern variance reason statistical procedures compared based cross validation note procedure estimated performance procedures ef progress constructing confidence intervals cross validation estimates considered difficult computational issues forms cross validation straightforward implement implementation prediction method studied prediction method black box – access internals implementation prediction method expensive train cross validation slow training carried repeatedly squares kernel regression cross validation sped pre computing values repeatedly training fast updating rules sherman–morrison careful preserve total blinding validation set training procedure bias result extreme accelerating cross validation occurs linear regression cross validation closed form expression prediction residual error sum squares press limitations misuse cross validation yields meaningful validation set training set drawn population human biases controlled applications predictive modeling structure studied evolves time stationary introduce systematic differences training validation sets model predicting stock values trained data period unrealistic treat subsequent period draw population suppose model developed predict individual risk diagnosed disease model trained data study involving specific population people males applied population cross validation training set greatly actual predictive performance applications models incorrectly vary function modeler biases arbitrary choices occurs illusion external samples reason model missed critical predictor included confounded predictor evidence cross validation predictive external validity form experimental validation swap sampling control human bias predictive external validity defined maqc study 30 000 models swap sampling incorporates cross validation sense predictions tested independent training validation samples models developed independent samples modelers blinded mismatch models developed swapped training validation samples frequently maqc predictive poor external predictive validity traditional cross validation reason success swapped sampling built control human biases model building addition placing faith predictions vary modelers lead poor external validity confounding modeler effects cross validation misused cross validation time series models data cross validation problematic time series models approach chaining performance single summary statistic approach statistic bootstrap accept interval time series return summary statistic stationary bootstrap interval applications cross validation compare performances predictive modeling procedures suppose optical character recognition support vector machines svm nearest neighbors knn predict true character image handwritten character cross validation objectively compare methods terms respective fractions misclassified characters simply compared methods based sample error rates knn method perform flexible prone overfitting compared svm method cross validation variable selection suppose expression levels 20 proteins predict cancer patient respond drug practical goal determine subset 20 features produce predictive model modeling procedures compare feature subsets sample error rates performance occur 20 features cross validation model fit include subset features deemed informative development medical statistics meta analysis forms basis validation statistic statistical validity meta analysis summary estimates conventional sense meta analysis estimate prediction error meta analysis 
417031	computerscience	david courtnay marr 19 january 1945 – 17 november 1980 british neuroscientist physiologist marr integrated psychology artificial intelligence neurophysiology models visual processing influential computational neuroscience led resurgence discipline biography born woodford essex educated rugby school admitted trinity college cambridge october 1963 awarded lees knowles rugby exhibition awarded coutts trotter scholarship 1966 mathematics phd physiology giles brindley 1972 brain theory visual processing doctoral dissertation submitted 1969 model function cerebellum based anatomical physiological data garnered book eccles subsequently massachusetts institute technology faculty appointment department psychology 1977 subsequently tenured professor 1980 marr proposed understanding brain requires understanding solutions emphasised avoid theoretical debates focus understanding specific marr died leukaemia cambridge massachusetts age 35 findings collected book vision computational investigation human representation processing visual finished 1979 summer published 1982 death issued 2010 mit press book key role rapid growth computational neuroscience field married lucia vaina boston university department biomedical engineering neurology academic awards prizes named honour marr prize prestigious awards vision david marr medal awarded applied vision association cognitive science society awards marr prize student paper annual conference theories cerebellum hippocampus neocortex marr vision topic published seminal papers proposing computational theories cerebellum 1969 neocortex 1970 hippocampus 1971 papers ideas continue influence modern theoretical thinking cerebellum theory motivated unique features cerebellar anatomy cerebellum vast tiny granule cells receiving inputs mossy fibers purkinje cells cerebellar cortex receive tens thousands inputs parallel fibers input single climbing fiber extremely strong marr proposed granule cells encode combinations mossy fibre inputs climbing fibres carry teaching signal instructs purkinje cell targets modify strength synaptic connections parallel fibres ideas universally accepted form essential elements viable modern theories theory neocortex motivated discoveries david hubel torsten wiesel types feature detectors primary visual cortex marr proposed generalising observation cells neocortex flexible categorizers—that learn statistical structure input patterns sensitive combinations frequently repeated theory hippocampus marr called archicortex motivated discovery william scoville brenda milner destruction hippocampus produced amnesia memories events left intact memories events occurred earlier marr called theory simple memory basic idea hippocampus rapidly form memory traces simple type strengthening connections neurons remarkably marr paper preceded paper tim bliss terje lømo report term potentiation hippocampus type synaptic plasticity marr hypothesized marr paper footnote mentioning preliminary report discovery details marr theory errors understanding hippocampal anatomy basic concept hippocampus temporary memory remains modern theories paper marr promised follow paper relations hippocampus neocortex paper appeared levels analysis marr treated vision processing concert tomaso poggio idea understand processing systems distinct complementary levels analysis idea cognitive science marr tri level hypothesis vision 1982 freeman company tomaso poggio adds level computational level learning stages vision marr vision proceeding dimensional visual array retina dimensional description output stages vision include 5d sketch stereopsis optic flow motion parallax 5d sketch represents reality surroundings construct viewer centered dimensional view environment 5d sketch called paraline drawing technique data visualization referred generic term axonometric isometric drawing modern architects designers 
421044	computerscience	ipx spx stands internetwork packet exchange sequenced packet exchange ipx spx networking protocols networks novell netware operating systems protocol layers ipx spx derived xerox network systems idp spp protocols ipx network layer protocol layer osi model spx transport layer protocol layer osi model spx layer sits ipx layer connection oriented services nodes network spx client–server applications ipx spx provide connection services tcp ip ipx protocol similarities ip spx similarities tcp ipx spx designed local networks lans efficient protocol purpose typically spx performance exceeds tcp lan congestion windows confirmatory acknowledgements spx simple naks tcp ip facto standard protocol superior performance wide networks internet tcp ip exclusively tcp ip mature protocol designed purpose mind protocols association netware required netware communication netware exclusively netware networks netware communication requires ncp implementation ipx spx tcp ip transport implementations novell responsible ipx popular networking protocol dominance network operating software market novell netware late 1980s mid 1990s dos novell original netware client written dos initial versions required hard linked protocol stack separate executable created network administrator network card configuration network executable loaded boot time remain resident memory shut implementations allowed network stack loaded unloaded dynamically pre existing modules greatly simplified maintenance client workstations network ipx spx facto standard dos era multi user network games games longevity extended tunneling programs kali kahn allowed played internet lan dosbox emulates ipx udp windows ipx spx prevalence lans 1990s support protocols windows networking stack starting windows workgroups windows nt named implementation nwlink implying inclusion layer transports netware connectivity reality protocols supported native transport windows smb netbios netware connectivity required additional installation ncp client basic netware client windows 95 automatically installed initially supported netware bindery mode nwlink windows including windows server 2003 included supported windows vista discouraged windows networking transport netbios deprecated novell 32 bit windows client software eschewed nwlink alternative developed novell versions permit ipx spx implementation warnings potential incompatibility novell supplied native netware client os structure client dos novell published ipx client classic mac os called macipx mac netware client games doom warcraft iii multiplayer play implementations written flavors unix linux novell vendors novell unixware supported ipx spx natively unixware client netware servers applications optionally support ipx spx transport unixware provide ability share files printers netware network additional software package enterprise server linux support ipx spx linux kernel source freebsd operating includes ipx spx stack support netware file client nwfs netware server mars nwe providing functionality openbsd dropped support version compile ipx legacy ipx usage declined rise internet tcp ip ubiquitous novell initial attempt support tcp ip client protocol called netware ip simply tunneled ipx ip packets allowing netware clients servers communicate pure tcp ip networks complex implementation loss performance tunnelling overhead netware ip mechanism route ipx tcp ip routers wan links netware introduced native support ncp tcp ip preferred configuration successor netware enterprise server flavors oes netware legacy support ipx spx deprecated oes linux supports tcp ip novell support proxy server isa server bordermanager ipx spx intranet protocol communicate firewall machine client software access internet tcp ip installed locally client software emulates native tcp ip stack winsock support local applications browsers communicates firewall ipx spx addition simplifying migration legacy ipx lans measure security ipx protocol internal network natural barrier intruders firewall compromised ipx remains bypassing vpn connections security policies prohibit communication lan devices printers network attached storage tcp ip 
432225	computerscience	embedded configurable operating ecos source real time operating intended embedded systems applications process multiple threads designed customizable precise application requirements time performance hardware implemented compatibility layers application programming interfaces posix µitron design ecos designed devices memory sizes range tens kilobytes applications real time requirements ecos runs wide variety hardware platforms including arm calmrisc hitachi h8 ia 32 motorola 68000 matsushita am3x mips nec v8xx nios powerpc sparc superh ecos distribution includes redboot source application ecos hardware abstraction layer provide bootstrap firmware embedded systems history ecos initially developed 1997 cygnus solutions bought red hat 2002 red hat ceased development ecos laid staff project laid staff continued ecos formed companies providing services software january 2004 request ecos developers red hat agreed transfer ecos copyrights software foundation october 2005 process finally completed 2008 versions ecospro real time operating commercial fork ecos created ecoscentric incorporates proprietary software components claimed stable tested certified supported version additional features released software pi day 2017 ecoscentric announced ported ecospro raspberry pi models demonstrations embedded trade fair nuremberg germany releases commercial follow criticisms freebsd tcp ip network stack included ecos circa 2001 exposes systems numerous security stability vulnerabilities freebsd releng release ipv4 freebsd origin kame ipv6 official ecos maintainers monitor freebsd kame security stability updates rely minimal insufficient bug reports users ecos snmp package rudimentary age 
434274	computerscience	mit science artificial intelligence laboratory csail institute massachusetts institute technology formed 2003 merger laboratory science artificial intelligence laboratory housed stata center csail largest campus laboratory measured scope membership activities csail activities organized semi autonomous headed professors scientists divided addition csail hosts wide consortium w3c history computing mit vannevar bush differential analyzer claude shannon electronic boolean algebra 1930s wartime radiation laboratory post war project whirlwind laboratory electronics rle lincoln laboratory sage 1950s mit researches field artificial intelligence late 1950s project mac july 1963 project mac project mathematics computation backronymed multiple access machine aided cognitions launched grant defense advanced projects agency darpa project mac original director robert fano mit laboratory electronics rle fano decided mac project laboratory reasons internal mit politics – mac called laboratory difficult raid mit departments staff program manager responsible darpa grant licklider mit conducting rle succeed fano director project mac project mac famous groundbreaking operating systems artificial intelligence theory computation contemporaries included project genie berkeley stanford artificial intelligence laboratory university southern california usc sciences institute including marvin minsky director john mccarthy inventor lisp talented community programmers incorporated newly formed project mac principally vision mechanical motion manipulation language view intelligent machines 1960s 1970s shared initially pdp pdp built time sharing operating called incompatible timesharing project mac community included fano minsky licklider fernando corbató community programmers enthusiasts drew inspiration colleague john mccarthy founders envisioned creation utility computational power reliable electric utility corbató brought time sharing compatible time sharing ctss mit computation center darpa funding purchase ibm 7094 focuses project mac development successor ctss multics availability developed industry consortium including electric bell laboratories 1966 scientific american featured project mac september thematic issue devoted science published book form time 100 tty terminals campus private homes 30 users logged time project enlisted students classes terminals simultaneously solving simulations multi terminal communications tests multi access computing software developed lcs lab late 1960s minsky artificial intelligence seeking space unable satisfaction project director licklider university space allocation politics minsky project mac single entity additional space split form laboratory entitled office space result mit lab formed 1970 minsky colleagues left project mac laboratory remaining form laboratory science lcs talented programmers richard stallman guy steele jr teco write emacs flourished lab time researchers lab formed laboratory science continued operating systems programming languages distributed systems theory computation professors hal abelson gerald jay sussman chose remain neutral – referred variously switzerland project mac 30 lab led lisp machines attempted commercialization companies 1980s symbolics lisp machines divided lab camps hiring talented programmers incident inspired richard stallman gnu project envisioned lab hacker wiped   basis software movement – experience life lived mit lab – human knowledge standing disseminating human knowledge csail fortieth anniversary project mac establishment july 2003 lcs merged lab form mit science artificial intelligence laboratory csail merger created largest laboratory 600 personnel mit campus regarded reuniting diversified elements project mac outreach activities imara swahili word power sponsors variety outreach programs bridge global digital divide aim implement term sustainable solutions increase availability educational technology resources domestic international communities projects aegis csail staffed mit volunteers training install donate setups boston massachusetts kenya native american indian tribal reservations american southwest navajo nation middle east fiji islands communitech project strives empower served communities sustainable technology education mit factory ucf providing refurbished computers served families families accessing technology classes trains families familiar comfortable technology notable researchers notable alumni project mac alumni revolutionize industry 
435356	computerscience	corpus linguistics collocation sequence terms occur expected chance phraseology collocation type phraseme phraseological collocation propounded michael halliday expression strong tea meaning conveyed roughly equivalent powerful tea expression considered excessive awkward english speakers conversely expression technology powerful preferred strong phraseological collocations confused idioms idiom meaning derived convention stand collocation mere popular composition ability english effectively involves awareness distinctive feature language collocation collocation behaviour language speech writing main types collocations adjective noun noun noun collective nouns verb noun adverb adjective verbs prepositional phrase phrasal verbs verb adverb collocation extraction computational technique collocations document corpus computational linguistics elements resembling data mining expanded definition collocations partly fixed expressions established repeated context dependent terms crystal middle management nuclear family cosmetic surgery examples collocated pairs collocations syntactic relation verb–object ecision lexical relation antonymy linguistically defined relation knowledge collocations vital competent language grammatically correct sentence stand awkward collocational preferences violated collocation language teaching mobile version collocation dictionary published google play corpus linguists key word context kwic identify surrounding idea processing collocations involves parameters measure association evaluates occurrence purely chance statistically random nature language collocations classed association scores simply rank commonly measures association include mutual scores log likelihood select single definition gledhill proposes collocation involves perspectives occurrence statistical view collocation recurrent appearance node collocates construction collocation correlation lexeme lexical grammatical pattern relation base collocative partners iii expression pragmatic view collocation conventional unit expression form perspectives contrast usual collocation phraseological studies traditionally speaking collocation explained terms perspectives continuum dictionaries 1933 harold palmer interim report english collocations highlighted collocation key producing natural sounding language learning foreign language 1940s onwards recurrent word combinations standard feature monolingual learner dictionaries dictionaries word centred phrase centred attention paid collocation trend supported 21st century availability corpora intelligent corpus querying software provide systematic account collocation dictionaries tools dictionaries macmillan english dictionary longman dictionary contemporary english included boxes panels lists frequent collocations specialized dictionaries devoted describing frequent collocations language include spanish redes diccionario combinatorio del español contemporaneo 2004 french le robert dictionnaire des combinaisons mots 2007 english ltp dictionary selected collocations 1997 macmillan collocations dictionary 2010 statistically collocation student determine occurrence collocation corpus statistically bigram unconditional probability occurrence corpus size unconditional probability occurrence corpus score bigram calculated 8where sample occurrence 11 occurrences 13 probability hypothesis independently 17 sample variance equivalent 
435852	computerscience	architecture register renaming technique abstracts logical registers physical registers logical register set physical registers programmer assembly language refers instance logical register syntaxhighlight inline accu syntaxhighlight processor transposes specific physical register fly physical registers opaque referenced canonical names technique eliminate false data dependencies arising reuse registers successive instructions real data dependencies elimination false data dependencies reveals instruction level parallelism instruction stream exploited complementary techniques superscalar execution performance approach register machine programs composed instructions operate values instructions values distinguish typical instruction “add result 3” instruction names storage locations compact instruction encoding processor instruction sets set special locations referred special names registers x86 instruction set architecture 8 integer registers x86 64 16 riscs 32 ia 64 128 processors names locations correspond elements register file instructions amounts time processor execute hundreds instructions single load main memory progress shorter instructions executed load outstanding finish instructions finishing original program execution performance cpus achieve speed gains piece code running cpu syntaxhighlight lang asm r1 ≔ r1 ≔ r1 ≔ r1 r1 ≔ r1 ≔ r1 ≔ r1 syntaxhighlight instructions final lines independent instructions processor finish syntaxhighlight inline r1 ≔ muntil preceding syntaxhighlight inline 1032 ≔ r1 syntaxhighlight write wrong restriction eliminated changing names registers syntaxhighlight lang asm r1 ≔ r1 ≔ r1 ≔ r1 r2 ≔ r2 ≔ r2 ≔ r2 syntaxhighlight instruction executed parallel program faster obliterating stalling false data dependency performance cpus implement renaming hardware achieve additional parallelism targets data flow detection compilers detect independent instruction sequences choose registers code generation data hazards instruction references location operand reading input writing output executing instructions original program lead kinds data hazards delaying write reads completed copies location maintained reads precede program write reads follow write false dependency broken additional opportunities execution created reads satisfied discarded essential concept register renaming read written renamed purpose floating registers discussed flag status registers individual status bits commonly renamed memory locations renamed commonly extent practiced register renaming transmeta crusoe processor gated store buffer form memory renaming programs refrained reusing registers register renaming instruction sets ia 64 registers reason limitations approach code size increases program code larger instruction cache misses processor stalls waiting instructions architectural physical registers machine language programs reads writes limited set registers instruction set architecture isa instance alpha isa specifies 32 integer registers 64 bits wide 32 floating registers 64 bits wide architectural registers programs written processors running alpha instruction set operations reading writing 64 registers programmer stops program debugger observe contents 64 registers status registers determine progress machine processor implements isa alpha 21264 80 integer 72 floating physical registers alpha 21264 chip 80 physically separate locations store integer operations 72 locations store floating operationsthe describes styles register renaming distinguished circuit holds data ready execution unit renaming schemes machine converts architectural registers referenced instruction stream tags architectural registers bits tags bit rename file read port input instruction renamed cycle write port output instruction renamed cycle size register file grows square ports rename file physically consumes power tag indexed register file style register file data values register tag machine 80 physical registers bit tags 48 tag values unused style instruction issued execution unit tags source registers physical register file values tags read execution unit reservation station style associative register files inputs execution unit operand instruction issue queue register files style instruction issued execution unit register file entries issue queue entry read forwarded execution unit reorder buffers data data ful willamette rob rob entries registers physical register file prf book keeping design andy glew illinois harrm p6 rob rob entries data separate prf data values rob copied rob rrf retirement temporal locality rob entries instructions close von neumann instruction sequence write close time perform write combining rob entries ports separate rob prf difference prf banked robs associative logic robs designed andy glew cams keith diefendorff insisted robs complex associative logic rob proposal cams tag indexed register file renaming style mips r10000 alpha 21264 fp amd athlon renaming stage architectural register referenced read write looked architecturally indexed remap file file returns tag ready bit tag ready queued instruction write executed read operands tag takes architectural register instruction register write tag pulled tag fifo mapping written remap file future instructions reading architectural register refer tag tag marked unready instruction executed previous physical register allocated architectural register saved instruction reorder buffer fifo holds instructions program decode graduation stages instructions issue queues instructions executed tags broadcast issue queues match tags tags ready source operands match operand ready remap file matches tags mark physical registers ready operands instruction issue queue ready instruction ready issue issue queues pick ready instructions send functional units cycle ready instructions stay issue queues unordered removal instructions issue queues power consuming issued instructions read tag indexed physical register file bypassing broadcast operands execute execution written tag indexed physical register file broadcast bypass network preceding functional unit graduation previous tag written architectural register queue reused newly decoded instruction exception branch misprediction remap file remap valid instruction combination snapshots cycling previous tags pre graduation queue mechanism required recover remap instruction graduated branch mispredictions handled branch reaches graduation hiding branch misprediction latency reservation stations style integer amd k7 k8 designs renaming stage architectural register referenced reads looked architecturally indexed future file rename file future file read register outstanding instruction write ready instruction issue queue values read future file written entries reservation stations register writes instruction ready tag written rename file tag serially allocated instruction order—no tag fifo tag indexed scheme issue queues wait ready operands matching tag broadcasts tag indexed scheme matching tags broadcast written issue queue entry reservation station issued instructions read arguments reservation station bypass broadcast operands execute mentioned earlier reservation station register files entries execution written reorder buffer reservation stations issue queue entry matching tag future file instruction target architectural register register marked ready graduation copies reorder buffer architectural register file sole architectural register file recover exceptions branch mispredictions exceptions branch mispredictions recognized graduation architectural file copied future file registers marked ready rename file reconstruct future file instruction intermediate decode graduation recovery branch mispredictions comparison schemes schemes instructions inserted issue queues removed queues collapse slots unused entries require sort variable priority encoding multiple instructions simultaneously ready queues collapse holes simpler priority encoding require simple circuitry advance instructions queue reservation stations latency rename execute rename stage register values finding physical register latency component branch misprediction latency reservation stations latency instruction issue execution local register file central file tag indexed scheme tag generation exception processing simpler reservation station scheme discussed physical register files reservation stations collapse unused entries parallel issue queue serve register files larger aggregate consume power complicated simpler register files tag indexed scheme worse entry reservation station written result bus reservation station machine issue queue entries functional unit typically times bypass networks equivalent tag indexed machine result forwarding consumes power tag indexed design reservation station scheme future file reservation station reorder buffer architectural file result stored tag indexed scheme physical register file functional units broadcast storage locations reach larger locations machine tag indexed scheme function consumes power time machines equipped accurate branch prediction schemes execute latencies major concern reservation stations remarkably history ibm 360 model 91 machine supported execution instructions tomasulo algorithm register renaming power1 microprocessor register renaming execution 1990 original r10000 design collapsing issue queues variable priority encoding suffered starvation result—the instruction queue issued instruction decode stopped completely lack rename registers instruction issued revisions design starting r12000 partially variable priority encoder mitigate machines separate renaming rob prf storage functions matter earliest sohi ruu metaflow dcaf combined scheduling renaming storage structure modern machines renaming ram indexing map table logical register p6 future files data storage structure earlier machines content addressable memory cam renamer hpsm rat register alias table essentially cam logical register combination versions register story microarchitecture cams progressively eliminated cams cams impractical p6 microarchitecture microarchitecture intel implement execution register renaming p6 microarchitecture pentium pro pentium pentium iii pentium core core microprocessors cyrix m1 released october 1995 x86 processor register renaming execution x86 processors nexgen nx686 amd k5 released 1996 featured register renaming execution risc operations native x86 instructions 
439697	computerscience	optical mark recognition called optical mark reading omr process capturing human marked data document forms surveys tests read questionnaires multiple choice examination paper form lines shady omr background traditional omr devices dedicated scanner device shines beam light form paper contrasting reflectivity predetermined positions detect marked reflect light blank paper omr devices forms preprinted transoptic paper measure light passes paper mark paper reduce light passing paper contrast dedicated omr device desktop omr software user create forms word processor print laser printer omr software common desktop image scanner document feeder process forms filled omr distinguished optical character recognition ocr complicated pattern recognition engine required marks constructed chance reading marks correctly require image contrast easily recognizable irrelevant shape field omr ocr recognition barcodes upc bar code product packaging familiar applications optical mark recognition pencil hb europe bubble optical answer sheets multiple choice question examinations students mark answers personal darkening circles marked pre printed sheet sheet automatically graded scanning machine united european countries horizontal vertical tick rectangular lozenge commonly type omr form familiar application united kingdom national lottery form lozenge marks technology advantage easier mark easier erase bubble marks legacy technology omr machines insensitive mark required reliability asian countries special marker optical answer sheet students mark answers darkening circles marked pre printed sheet sheet automatically graded scanning machine omr applications involve people filling specialized forms forms optimized scanning careful registration printing careful design ambiguity reduced minimum extremely error rate cost ease omr popular method tallying votes omr marks items physical mail folder inserter equipment marks facing odd mail document consist sequence black dashes folder inserter equipment scans determine mail folded inserted envelope omr software omr software software application omr desktop image scanner process surveys tests attendance sheets checklists plain paper forms printed laser printer omr software capture data omr sheets data capturing scanning devices focus factors thickness paper dimensions omr sheet designing pattern commercial omr softwareone omr software packages images common image scanners remark office omr gravic originally named principia products remark office omr released 1991 omr software originated optical mark recognition systems dedicated scanners special pre printed forms drop colors registration marks forms typically cost 19 contrast omr software users design mark sense forms word processor built form editor print locally printer save thousands dollars forms identifying optical marks form processing census forms offered forms processing batch transaction capture companies late 1980s based bitonal image pixel count minimum maximum pixel counts eliminate extraneous marks erased dirty eraser converted black white image bitonal legitimate mark method user mind products started grayscale identify intent marker—internally scantron ncs scanners grayscale omr software adding omr marks mail documents scanned folder inserter equipment omr software mail markup developer funasset limited software user configure select omr sequence apply omr marks mail documents prior printing commercial omr software products source omr software omr software products developed distributed source licenses history optical mark recognition omr scanning paper detect presence absence mark predetermined position optical mark recognition evolved technologies 19th century 20th century patents machines aid blind omr input device data entry forms omr paper tape punch cards actual holes punched medium pencil filled circles medium paper tape 1857 input device telegraph punch cards created 1890 input devices computers punch cards declined greatly 1970s introduction personal computers modern omr presence pencil filled bubble recognized recognition optical scanner mark sense scanner ibm 805 scoring machine read marks sensing electrical conductivity graphite pencil lead pairs wire brushes scanned 1930s richard warren ibm experimented optical mark sense systems scoring documented patents 150 256 filed 1932 granted 1939 010 653 filed 1933 granted 1935 successful optical mark sense scanner developed everett franklin lindquist documented patent 050 248 filed 1955 granted 1962 lindquist developed numerous standardized educational tests scoring machine standard ibm 805 rights lindquist patents held measurement center 1968 university iowa sold operation westinghouse corporation period ibm developed successful optical mark sense scoring machine documented patent 944 734 filed 1957 granted 1960 ibm commercialized ibm 1230 optical mark scoring reader 1962 variety machines allowed ibm migrate wide variety applications developed mark sense machines optical technology applications included variety inventory management trouble reporting forms dimensions standard punched card players educational testing arena focused selling scanning services scantron corporation founded 1972 model distribute inexpensive scanners schools profits selling forms result people mark sense forms optically sensed scantron forms scantron operates subsidiary worldwide mfw testing assessment systems services data collection analysis services educational institutions businesses government 1983 westinghouse learning corporation acquired national systems ncs 2000 ncs acquired pearson education omr technology formed core pearson data management february 2008 worldwide purchased data management pearson scantron brand omr situations mentioned omr inventory systems transition punch cards bar codes purpose omr extensively surveys testing usage omr limited schools data collection agencies businesses health care agencies omr streamline data input processes reduce input error omr ocr icr technologies provide data collection paper forms omr omr discrete read head scanner imaging scanner applications applications omr examples field types omr fields provide format questioner desires fields include capabilities requirements presently omr systems require special paper special ink special input reader bergeron 1998 restricts types questions variability form input progress omr users create print forms scanner preferably document feeder read user arrange questions format suits easily input data omr systems approach percent accuracy milliseconds average recognize marks users squares circles ellipses hexagons mark zone software set recognize filled bubbles crosses check marks omr personal printers market print photos user selects filling bubbles size paper selection sheet printed sheet filled individual sheet scanner scanned printer print photos marks disadvantages disadvantages limitations omr user gather amounts omr complicates data collection possibility missing data scanning process incorrectly unnumbered lead scanned wrong safeguards rescanned providing duplicate data skewing data result widespread adoption ease omr standardized examinations consist multiple choice questions changing nature tested 
452582	computerscience	arimaa player strategy board game designed playable standard chess set difficult computers easy learn fun play humans 2004 arimaa community held annual tournaments championship humans championship computers arimaa challenge human 2015 challenge decisively sharp david wu players agreeing computers game humans prerequisite prize awarded wu published paper describing algorithm icga journal issue 38 dedicated topic algorithm combined traditional alpha–beta pruning changing ply heuristic functions manually written analysing human expert games arimaa invented 2003 omar syed indian american engineer trained artificial intelligence syed inspired garry kasparov defeat hands chess deep blue design game played standard chess set difficult computers play rules simple son aamir understand arimaa aamir spelled initial arimaa awards including games magazine 2011 abstract strategy game creative child magazine 2010 strategy game 2010 parents choice approved award subject papers rules arimaa played 8×8 board trap squares kinds pieces ranging elephant strongest rabbit weakest stronger pieces push pull weaker pieces stronger pieces freeze weaker pieces pieces captured dislodging trap square orthogonally adjacent pieces players gold silver control sixteen pieces strongest weakest elephant camel horses dogs cats rabbits represented king queen rooks bishops knights pawns plays chess set objective main object game rabbit color rank opponent goal gold wins moving gold rabbit eighth rank silver wins moving silver rabbit rank difficult usher rabbit goal board pieces intermediate objective capture opposing pieces pushing pulling trap squares game capturing opponent rabbits elimination depriving opponent legal moves immobilization compared goal uncommon setup game board gold sixteen gold pieces configuration ranks silver sixteen silver pieces configuration seventh eighth ranks diagram initial placement movement pieces board players alternate starting gold consists steps step piece unoccupied square space left rabbits step steps single piece distributed pieces change position step step piece effectively passing evading zugzwang create position player created rule situational super ko rule game prevents endless loops contrast chess endless loops considered draws prohibitions passing repetition arimaa drawless game pushing pulling diagram game initial position helps illustrate remaining rules movement player consecutive steps dislodge opposing piece stronger friendly piece adjacent cardinal directions player dog dislodge opposing rabbit cat dog horse camel elephant stronger piece pull push adjacent weaker piece pulling stronger piece steps square square occupied weaker piece silver elephant d5 step d4 c5 e5 pull gold horse d6 d5 pushing weaker piece moved adjacent square square occupied stronger piece gold elephant d3 push silver rabbit d2 e2 occupy d2 note rabbit d2 pushed d1 c2 d3 squares friendly pieces dislodged piece push pull simultaneously gold elephant d3 simultaneously push silver rabbit d2 e2 pull silver rabbit c3 d3 elephant dislodged stronger freezing piece adjacent cardinal direction stronger opposing piece frozen adjacent friendly piece frozen pieces moved owner dislodged opponent frozen piece freeze weaker piece silver rabbit a7 frozen d2 adjacent silver piece gold rabbit b7 frozen gold cat c1 dogs a6 b6 freeze equal strength elephant frozen stronger elephant capturing piece enters trap square captured removed game friendly piece orthogonally adjacent silver capture gold horse d6 pushing c6 elephant d5 piece trap square captured adjacent friendly pieces silver rabbit c4 silver horse c2 voluntarily dislodged silver rabbit c3 captured note piece voluntarily step trap square captured step pulling maneuver completed piece pulling captured step silver step silver rabbit f4 g4 support pieces f3 step silver horse f2 f3 captures horse horse pull gold rabbit f1 f2 strategy tactics insights play karl juhnke arimaa champion written book titled arimaa introduction arimaa tactics strategies jean daligault time arimaa champion wrote arimaa strategies tactics geared started playing arimaa improve game annual tournaments championship 2004 arimaa community held championship tournament tournament played internet current champion matthew craven united america champion title holders championship 2004 2015 arimaa community held championship tournament tournament played internet current champion bot sharp developed david wu usa champion title holders arimaa challenge arimaa challenge cash prize 000 annually 2020 program win human arimaa challenge conditions prize program standard shelf hardware arimaa challenge held times starting 2004 match syed changed format require software win games players reduce psychological pressure individual volunteer defenders syed called sponsorship arimaa challenge build bigger prize fund challenge cycles david fotland programmer arimaa championship play prize money program beaten decisively 2009 fotland program surpassed programs strongest clueless jeff bacher humanity margin dominance computers appeared widen 2004 2008 human players improved 2009 arimaa challenge competitive clueless bot win games challenge match 2010 mattias hultgren bot marwin edged clueless championship challenge match marwin bot win games single human defender bot win games 2011 marwin games received material handicap 2012 challenger briareus program defeat player sweeping games ranked human 2013 humans struck marwin sweeping including handicap win 31 winning games 2014 bounced win games albeit matches 2015 sharp substantial leap playing strength scored games rivals previous sharp undefeated tournaments 2015 including 13 finishers sharp dominated pre challenge screening human opponents winning 27 29 games challenge sharp clinched victory mini matches winning games finishing winning arimaa challenge patent trademark syed stated intend restrict noncommercial released license called arimaa public license declared intent arimaa public domain game protecting commercial usage items covered license patent trademark 
454305	computerscience	mhi products include aerospace components air conditioners aircraft automotive components forklift trucks hydraulic equipment machine tools missiles power generation equipment printing machines ships space launch vehicles defense activities 23rd largest defense contractor measured 2011 defense revenues largest based japan november 28 2018 company south korea supreme court pay compensation forced labor company oversaw japanese occupation korea history 1857 request tokugawa shogunate dutch engineers nagasaki yotetsusho modern western style foundry shipyard dutch settlement dejima nagasaki renamed nagasaki seitetsusho 1860 construction completed 1861 meiji restoration 1868 shipyard control government meiji japan dry dock completed 1879 1884 yataro iwasaki founder mitsubishi leased nagasaki seitetsusho japanese government renamed nagasaki shipyard machinery entered shipbuilding business scale iwasaki purchased shipyards outright 1887 1891 mitsubishi heavy industries yokohama machinery started yokohama dock company main business ship repairs ship servicing 1897 renamed mitsubishi shipyard mitsubishi goshi kaisha 1893 additional dry docks completed 1896 1905 mitsubishi heavy industries shimonoseki shipyard machinery established 1914 produced industrial machinery merchant ships nagasaki company renamed mitsubishi shipbuilding engineering company 1917 renamed mitsubishi heavy industries 1934 largest private firm japan active manufacture ships heavy machinery airplanes railway cars mitsubishi heavy industries merged yokohama dock company 1935 inception mitsubishi nagasaki shipyards heavily involved contracts imperial japanese navy largest battleship musashi completed nagasaki 1942 kobe shipyard mitsubishi goshi kaisha established 1905 kobe shipyard merged mitsubishi heavy industries 1934 kobe shipyard constructed ocean liner argentina maru repurposed aircraft carrier kaiyo submarines 19 25 dissolution zaibatsu surrender japan war mitsubishi divided companies mitsubishi nagasaki west japan heavy industries nagasaki shipyard renamed mitsubishi shipbuilding engineering 1952 mitsubishi kobe shipyard central japan heavy industries 1950 1964 independent companies 1950 break merged company mitsubishi heavy industries nagasaki renamed nagasaki shipyard engine kobe renamed mitsubishi heavy industries kobe shipyard machinery 1970 mhi automobile department independent company mitsubishi motors 1974 tokyo headquarters targeted bombing killed people mhi participated ¥540 emergency rescue mitsubishi motors january 2005 partnership mitsubishi corporation mitsubishi tokyo financial rescue mhi acquired ¥50 mitsubishi motors stock increasing ownership stake 15 percent automaker affiliate october 2009 mhi announced 100 regional jets united based airline trans holdings mhi entered talks hitachi august 2011 potential merger companies largest merger japanese companies history talks subsequently broke suspended november 2012 mitsubishi heavy industries hitachi agreed merge thermal power generation businesses joint venture owned 65 mitsubishi heavy industries 35 hitachi joint venture operations february 2014 june 2014 siemens mitsubishi heavy industries announced formation joint ventures bid alstom troubled energy transportation businesses locomotives steam turbines aircraft engines rival bid electric criticized french government sources alstom operations vital national moment french unemployment level stands voters operations aerospace mhi aerospace facilities nagoya aichi komaki aichi mississauga ontario canada 1950s company enter aerospace industry earnest major japanese companies involved design production namc ys 11 japanese airliner enter production war 1956 started design mitsubishi company postwar aircraft design defense sector mhi produced jet fighters japan air defense force anti submarine helicopters japan maritime defense force aero engines missiles torpedoes produced north american 86 sabre lockheed 104 starfighter mcdonnell douglas phantom fighters manufactured 139 mitsubishi 15j fighter aircraft 1981 produced 200 sikorsky 70 family mitsubishi 60 helicopters 1989 license production company plays role japanese ballistic missile defense program space systems sector mhi producer iia iib launch vehicles japan main rockets launch services jaxa launch vehicles company involved international space station program april 2008 mhi established mitsubishi aircraft corporation subsidiary develop produce mrj mitsubishi regional jet 70 90 passenger regional airliner mhi majority shareholder company toyota motor corporation owning december 12 2012 mitsubishi heavy industries bought goodrich turbine business owned united technologies civil aircraft sector mhi develops manufactures major airframe components including fuselage panels boeing 777 composite material wing boxes 787 june 2014 company joined major japanese companies signing agreement build boeing 777x aircraft defense 2010 mhi commenced production type advanced main battle tank cost 11 unit replace type 90 tank energy nuclear business mhi operates facilities cities kobe takasago hyogo prefecture yokohama kanagawa prefecture operates nuclear fuel manufacturing plant tōkai ibaraki processes 440 metric tons uranium mhi developed mitsubishi apwr design mhi signed memorandum understanding areva establishment joint venture atmea reactor design atmea1 mhi selected core company develop generation fast breeder reactors fbr japanese government announcement mhi established company mitsubishi fbr systems mfbr development realization fbr technology starting aggressive corporate venture fbr generation iv reactor technology mhi developing 15 nuclear power plant sinop turkey partnership itochu engie overseas nuclear project mhi attempted acquire energy business alstom 2014 develop service network southeast asia mhi remains acquisitions crude oil gas sectors 2015 financial difficulties areva mhi announced 2015 proposal minority ownership stake areva shipbuilding shipbuilding core historical founding activity mitsubishi heavy industries formally started 1884 mitsubishi leased acquired nagasaki shipyard machinery company founded 1857 nagasaki yotetsusho foundry subsequently mitsubishi progressively major japanese shipbuilding companies building commercial military ships including yamato class battleship musashi yamato imperial japanese navy war mhi shipbuilding facilities nagasaki kobe shimonoseki japan primary shipbuilding division mhi produces specialized commercial vessels including lng carriers passenger cruise ships december 2017 mitsubishi heavy industries mhi announced launch wholly owned companies january 2018 conjunction reorganization shipbuilding business subsidiary mitsubishi shipbuilding created undertake construction ships require intensive outfitting advanced technologies based yokohama shimonoseki nagasaki shipyards separately mitsubishi heavy industries marine structure engage manufacture ships marine structures wind power mhi installed 282 worldwide december 2009 turbines company developing turbines offshore wind power tests planned 2013 europe september 27 2013 mhi vestas wind systems announced joint venture develop offshore wind energy based vestas v164 0mw turbine products mhi products include korean compensation november 28 2018 mitsubishi heavy industries south korea supreme court pay 150m 133 000 £104 000 compensation surviving koreans victims forced labor company oversaw japanese occupation korea eighteen family victims forced labour mitsubishi heavy industries oversaw sued 2008 awarded compensation plaintiffs filed lawsuit japan lawsuit dismissed supreme court japan 2008 
470752	computerscience	statistics expectation–maximization em algorithm iterative method maximum likelihood maximum posteriori map estimates parameters statistical models model depends unobserved latent variables em iteration alternates performing expectation step creates function expectation log likelihood evaluated current estimate parameters maximization step computes parameters maximizing expected log likelihood step parameter estimates determine distribution latent variables step history em algorithm explained classic 1977 paper arthur dempster nan laird donald rubin method proposed times special circumstances earlier authors earliest gene counting method estimating allele frequencies cedric smith detailed treatment em method exponential families published rolf sundberg thesis papers collaboration martin löf anders martin löf dempster–laird–rubin paper 1977 generalized method sketched convergence analysis wider class earlier inventions innovative dempster–laird–rubin paper journal royal statistical society received enthusiastic discussion royal statistical society meeting sundberg calling paper brilliant dempster–laird–rubin paper established em method tool statistical analysis convergence analysis dempster–laird–rubin algorithm flawed correct convergence analysis published jeff wu 1983 wu proof established em method convergence exponential family claimed dempster–laird–rubin introduction em algorithm local maximum likelihood parameters statistical model equations solved typically models involve latent variables addition unknown parameters data observations missing values exist data model formulated simply assuming existence unobserved data mixture model simply assuming observed data unobserved data latent variable mixture component data belongs finding maximum likelihood solution typically requires derivatives likelihood function respect unknown values parameters latent variables simultaneously solving equations statistical models latent variables impossible result typically set interlocking equations solution parameters requires values latent variables vice versa substituting set equations produces unsolvable equation em algorithm proceeds observation solve sets equations numerically simply pick arbitrary values sets unknowns estimate set values estimate set alternating values converge fixed obvious proven context derivative likelihood arbitrarily close maximum saddle multiple maxima occur guarantee global maximum likelihoods singularities nonsensical maxima solutions em mixture model involves setting components variance parameter component equal data description statistical model generates set observed data set unobserved latent data missing values vector unknown parameters likelihood function maximum likelihood estimate mle unknown parameters determined maximizing marginal likelihood observed datahowever quantity intractable sequence events values grows exponentially sequence exact calculation sum extremely difficult em algorithm seeks mle marginal likelihood iteratively applying steps typical models em applied latent variable indicating membership set apply em sorts models motive parameters latent variables maximizing log likelihood values simply iterating algorithm viterbi algorithm hidden markov models conversely latent variables estimate parameters easily typically simply observed data latent variable averaging values function values suggests iterative algorithm unknown algorithm monotonically approaches local minimum cost function properties speaking expectation step bit misnomer calculated step fixed data dependent parameters function parameters determined maximized step em algorithm em iteration increase observed data marginal likelihood function guarantee exists sequence converges maximum likelihood estimator multimodal distributions em algorithm converge local maximum observed data likelihood function depending starting values variety heuristic metaheuristic approaches exist escape local maximum random restart hill climbing starting random initial estimates θ applying simulated annealing methods em likelihood exponential family step sum expectations sufficient statistics step involves maximizing linear function derive closed form expression updates step sundberg published rolf sundberg unpublished martin löf anders martin löf em method modified compute maximum posteriori map estimates bayesian inference original paper dempster laird rubin methods exist maximum likelihood estimates gradient descent conjugate gradient variants gauss–newton algorithm em methods typically require evaluation derivatives likelihood function proof correctness expectation maximization improve improving 31 improvements imply improvements probability 33 writewe expectation values unknown data current parameter estimate 36 multiplying 37 summing integrating left hand expectation constant 40 defined negated sum replacing equation holds including 42 subtracting equation previous equation giveshowever gibbs inequality tells 45 conclude thatin choosing improve 49 31 decrease 51 marginal likelihood data decreasing maximization maximization procedure em algorithm viewed alternating maximization steps coordinate ascent function arbitrary probability distribution unobserved data entropy distribution function written aswhere 54 conditional distribution unobserved data observed data 55 56 kullback–leibler divergence steps em algorithm viewed applications em frequently data clustering machine learning vision natural language processing prominent instances algorithm baum welch algorithm hidden markov models algorithm unsupervised induction probabilistic context grammars em frequently parameter estimation mixed models notably quantitative genetics psychometrics em indispensable estimating item parameters latent abilities item response theory models ability deal missing data observe unidentified variables em tool price manage risk portfolio em algorithm faster variant subset expectation maximization medical image reconstruction positron emission tomography single photon emission computed tomography faster variants em structural engineering structural identification expectation maximization stride algorithm output method identifying natural vibration properties structural sensor data operational modal analysis filtering smoothing em algorithms kalman filter typically estimation minimum variance smoother employed batch estimation minimum variance solutions require estimates space model parameters em algorithms solving joint parameter estimation filtering smoothing em algorithms repeating step procedure suppose kalman filter minimum variance smoother operates measurements single input single output possess additive white noise updated measurement noise variance estimate maximum likelihood calculationwhere 64 scalar output estimates calculated filter smoother scalar measurements 65 update applied updating poisson measurement noise intensity auto regressive process updated process noise variance estimate calculated bywhere 64 68 scalar estimates calculated filter smoother updated model coefficient estimate viathe convergence parameter estimates studied variants methods proposed accelerate slow convergence em algorithm conjugate gradient modified newton methods newton–raphson em constrained estimation methods parameter expanded expectation maximization px em algorithm speed covariance adjustment correct analysis step capitalising extra captured imputed complete data expectation conditional maximization ecm replaces step sequence conditional maximization steps parameter θ maximized individually conditionally parameters remaining fixed extended expectation conditional maximization ecme algorithm idea extended generalized expectation maximization gem algorithm sought increase objective function step step maximization maximization procedure gem developed distributed environment promising em algorithm subclass majorize minimize minorize maximize depending context algorithm machinery developed α em algorithm function em algorithm based log likelihood regarded log em algorithm log likelihood generalized α log likelihood ratio α log likelihood ratio observed data expressed equality function α log likelihood ratio α divergence obtaining function generalized step maximization generalized step pair called α em algorithmwhich log em algorithm subclass α em algorithm yasuo matsuyama exact generalization log em algorithm computation gradient hessian matrix α em faster convergence log em algorithm choosing α α em algorithm leads faster version hidden markov model estimation algorithm α hmm relation variational bayes methods em partially bayesian maximum likelihood method final result probability distribution latent variables bayesian style estimate θ maximum likelihood estimate posterior mode bayesian version probability distribution θ latent variables bayesian approach inference simply treat θ latent variable paradigm distinction steps disappears factorized approximation variational bayes solving iterate latent variable including θ optimize time steps iteration latent variables graphical models easy variable depends markov blanket local message passing efficient inference geometric interpretation geometry step step interpreted projections dual affine connections called connection connection kullback–leibler divergence understood terms examples gaussian mixture 70 sample 71 independent observations mixture multivariate normal distributions dimension 72 73 latent variables determine component observation originates wherethe aim estimate unknown parameters representing mixing gaussians covariances incomplete data likelihood function isand complete data likelihood function isorwhere 82 indicator function 83 probability density function multivariate normal equality indicator 84 equal indicator equal sum reduces term step current estimate parameters θ conditional distribution determined bayes theorem proportional height normal density weighted τ called membership probabilities considered output step function step corresponds setting function expectation 87 sum respect probability density function 88 89 training set step step 90 computed equation step conditional expectation calculated step τ Σ separate linear terms maximized independently step θ θ quadratic form determining maximizing values θ straightforward τ μ1 Σ μ2 Σ maximized independently separate linear terms τ constraint τ τ form mle binomial distribution sofor estimates μ1 Σ form weighted mle normal distribution soand symmetrytermination conclude iterative process 98 99 preset threshold generalization algorithm illustrated generalized mixtures multivariate normal distributions truncated censored regression em algorithm implemented underlying linear regression model exists explaining variation quantity values observed censored truncated versions represented model special model include censored truncated observations normal distribution alternatives em typically converges local optimum global optimum bound convergence rate arbitrarily poor dimensions exponential local optima exists alternative methods guaranteed learning dimensional setting alternatives em exist guarantees consistency termed moment based approaches called spectral techniques moment based approaches learning parameters probabilistic model increasing enjoy guarantees global convergence conditions em plagued issue stuck local optima algorithms guarantees learning derived models mixture models hmms spectral methods spurious local optima occur true parameters consistently estimated regularity conditions 
478091	computerscience	von neumann architecture—also von neumann model princeton architecture—is architecture based 1945 description mathematician physicist john von neumann draft report edvac document describes design architecture electronic digital components word evolved stored program instruction fetch data operation occur time share common bus referred von neumann bottleneck limits performance design von neumann architecture machine simpler harvard architecture machine—which stored program dedicated set address data buses reading writing memory set address data buses fetch instructions stored program digital program instructions data read write random access memory ram stored program computers advancement program controlled computers 1940s colossus eniac programmed setting switches inserting patch cables route data control signals functional units vast majority modern computers memory data program instructions von neumann harvard distinction applies cache architecture main memory split cache architecture history earliest computing machines fixed programs simple computers design simplicity training purposes desk calculator principle fixed program basic mathematics word processor games changing program fixed program machine requires rewiring restructuring redesigning machine earliest computers programmed designed task reprogramming —when all—was laborious process started flowcharts paper notes detailed engineering designs arduous process physically rewiring rebuilding machine weeks set debug program eniac proposal stored program changed stored program includes design instruction set store memory set instructions program details computation stored program design modifying code motivation facility program increment modify address portion instructions operators manually designs registers indirect addressing usual features machine architecture embed frequently data instruction stream addressing modifying code fallen favor hard understand debug inefficient modern processor pipelining caching schemes capabilities scale ability treat instructions data assemblers compilers linkers loaders automated programming tools programs write programs sophisticated hosting computing ecosystem flourish von neumann architecture machines level languages lisp leverage von neumann architecture providing abstract machine independent manipulate executable code runtime runtime tune time compilation languages hosted java virtual machine languages embedded browsers scale repetitive operations bitblt pixel vertex shaders accelerated purpose processors time compilation techniques modifying code remained popular development stored program concept mathematician alan turing alerted mathematical logic lectures max newman university cambridge wrote paper 1936 entitled computable application entscheidungsproblem published proceedings london mathematical society hypothetical machine called universal computing machine universal turing machine hypothetical machine infinite store memory terminology contained instructions data john von neumann acquainted turing visiting professor cambridge 1935 turing phd institute advanced study princeton jersey 1936 – 1937 turing paper 1936 time 1936 konrad zuse anticipated patent applications machine instructions stored storage data independently presper eckert john mauchly developing eniac moore school electrical engineering university pennsylvania wrote stored program concept december 1943 von neumann involved manhattan project los alamos national laboratory required huge amounts calculation drew eniac project summer 1944 joined ongoing discussions design stored program edvac wrote description titled draft report edvac based eckert mauchly unfinished colleague herman goldstine circulated von neumann consternation eckert mauchly paper read dozens von neumann colleagues america europe influenced designs jack copeland considers historically inappropriate refer electronic stored program digital computers von neumann machines los alamos colleague stan frankel von neumann regard turing ideas time draft report circulated turing producing report entitled proposed electronic calculator engineering programming idea machine called automatic computing engine ace executive committee british national physical laboratory february 19 1946 turing wartime experience bletchley park proposed feasible secrecy surrounding colossus subsequently maintained decades prevented successful implementations ace design produced von neumann turing papers stored program computers von neumann earlier paper achieved circulation architecture outlined von neumann architecture 1953 publication faster symposium digital computing machines edited bowden chapter computers america reads machine institute advanced studies princetonin 1945 professor von neumann moore school engineering philadelphia built issued behalf workers report logical design digital computers report contained detailed proposal design machine electronic discrete variable automatic machine completed america von neumann report inspired construction electronic delay storage automatic calculator cambridge 130 1947 burks goldstine von neumann published report outlined design type machine parallel machine time exceedingly fast capable 20 000 operations outstanding constructing machine development suitable memory instantaneously accessible contents suggested special vacuum tube—called selectron —which princeton laboratories rca invented tubes expensive difficult von neumann subsequently decided build machine based williams memory machine—completed june 1952 princeton—has popularly maniac design machine inspired dozen machines built america affectionately johniacs book paragraphs chapter ace read automatic computation national physical laboratoryone modern digital computers embodies developments improvements technique automatic electronic computing demonstrated national physical laboratory teddington designed built team mathematicians electronics engineers staff laboratory assisted production engineers english electric company limited equipment erected laboratory pilot model larger installation automatic computing engine comparatively bulk 800 thermionic valves judged plates xii xiii xiv extremely rapid versatile calculating machine basic concepts abstract principles computation machine formulated dr turing paper1 read london mathematical society 1936 machines britain delayed war 1945 examination national physical laboratory womersley superintendent mathematics division laboratory joined dr turing staff specialists 1947 preliminary planning advanced warrant establishment special mentioned april 1948 electronics laboratory charge colebrook von neumann architecture computers draft design universities corporations construct computers computers illiac ordvac compatible instruction sets stored program computers chronology difficult proper dates running program dates time demonstrated completed dates delivery installation evolution decades 1960s 1970s computers faster led evolutions architecture memory mapped input output devices treated memory single bus provide modular cost called streamlining architecture subsequent decades simple microcontrollers omit features model cost size larger computers features performance design limitations von neumann bottleneck shared bus program memory data memory leads von neumann bottleneck limited throughput data transfer rate central processing unit cpu memory compared memory single bus access classes memory time throughput rate cpu limits effective processing speed cpu required perform minimal processing amounts data cpu continually forced wait data memory cpu speed memory size increased faster throughput bottleneck severity increases generation cpu von neumann bottleneck john backus 1977 acm turing award lecture backus surely primitive store pushing vast von neumann bottleneck tube literal bottleneck data traffic importantly intellectual bottleneck tied word time thinking encouraging terms larger conceptual units task hand programming basically planning detailing enormous traffic von neumann bottleneck traffic concerns data mitigations methods mitigating von neumann performance bottleneck improve performance sidestepped parallel computing uniform memory access numa architecture—this approach commonly employed supercomputers intellectual bottleneck backus criticized changed 1977 backus proposed solution major influence modern functional programming object oriented programming geared pushing vast earlier languages fortran internally computers spend time highly parallel supercomputers 1996 database benchmark study cpu cycles spent waiting memory researchers expect increasing simultaneous instruction streams multithreading single chip multiprocessing bottleneck worse context multi core processors additional overhead required maintain cache coherence processors threads modifying code von neumann bottleneck program modifications harmful accident design simple stored program designs malfunctioning program damage programs operating leading crash memory protection forms access control protect accidental malicious program modification 
486432	computerscience	architecture processor register accessible location central processing unit cpu registers consist fast storage registers specific hardware functions read write registers typically addressed mechanisms main memory assigned memory address dec pdp ict 1900 computers load store architecture load data larger memory registers arithmetic operations manipulated tested machine instructions manipulated data stored main memory instruction subsequent modern processors static dynamic ram main memory accessed cache levels processor registers memory hierarchy provide fastest access data term refers registers encoded instruction defined instruction set modern performance cpus duplicates architectural registers improve performance register renaming allowing parallel speculative execution modern x86 design acquired techniques 1995 releases pentium pro cyrix 6x86 nx586 amd k5 common property programs locality reference refers accessing values repeatedly holding frequently values registers improve performance fast registers caches meaningful allocating frequently variables registers critical program performance register allocation performed compiler code generation phase manually assembly language programmer register size registers measured bits hold bit register 32 bit register 64 bit register instruction sets registers operate modes breaking storage memory 32 bit bit instance multiple data vector dimensional array data loaded operated time typically implemented adding extra registers map memory bigger processors ability execute single instruction multiple data called vector processors types registers processor kinds registers classified content instructions operate hardware registers occur cpus architectures sparc mips register integer register file pseudo register hardwired return read simplify indexing modes overwritten alpha floating register file result register files commonly quoted register usable 32 registers quoted 31 fit definition register examples table registers mainstream cpu architectures note x86 compatible processors stack pointer esp counted integer register limited instructions operate contents caveats apply architectures listed architectures basic arrangement von neumann architecture proposed hungarian american mathematician john von neumann noteworthy registers gpus cpus register usage registers processor operations performed registers impact efficiency code generated optimizing compilers strahler expression tree minimum registers required evaluate expression tree 
486489	computerscience	osek offene systeme und deren schnittstellen für die elektronik kraftfahrzeugen english systems interfaces electronics motor vehicles standards body produced specifications embedded operating communications stack network management protocol automotive embedded systems produced specifications osek designed provide standard software architecture electronic control units ecus car osek founded 1993 german automotive company consortium bmw robert bosch gmbh daimlerchrysler opel siemens volkswagen university karlsruhe 1994 french cars manufacturers renault psa peugeot citroën project called vdx vehicle distributed executive joined consortium official osek vdx standard osek standard published consortium founded automobile industry osek standardized iso 17356 documents current osek standard specifies interfaces multitasking functions—generic peripheral access—and remains architecture dependent osek systems expected chips memory protection features osek implementation configured compile time application tasks stacks mutexes statically configured create time osek recognizes types tasks threads compliance levels basic tasks enhanced tasks basic tasks block completion coroutine enhanced tasks sleep block event objects events triggered tasks basic enhanced interrupt routines static priorities allowed tasks fifo scheduling tasks equal priority deadlocks priority inversion prevented priority ceiling priority inheritance specification iso ansi syntax implementation language services application binary interface abi comment claims contradictory static priorities allowed tasks priority ceiling protocol temporarily raising priorities tasks situations requires scheduler supports dynamic priority scheduling german version entry osek os scheduling configured preemptive scheduling task preempted priority task preemptive scheduling task preempted prefixed compile time cooperative scheduling mixed mode autosar autosar consortium reuses osek specifications operating compatible superset osek os covers functionality osektime communication module derived osek osektime specifies standard optional time triggered real time operating systems osektime triggered callbacks priority osek tasks 
500894	computerscience	asimo advanced step innovative mobility humanoid robot created honda 2000 displayed miraikan museum tokyo development honda developing humanoid robots 1980s including prototypes preceded asimo company goal create walking robot e0 bipedal legged model produced honda series experimental regulating humanoid walking robot wireless movements created 1986 1993 honda series robots produced 1993 1997 series led creation asimo development honda wako fundamental technical center japan 1999 asimo unveiled october 2000 form asimo stands tall weighs conducted honda ideal height mobility assistant robot 120 cm height average adult conducive operating door knobs light switches asimo powered rechargeable 51 8 v lithium ion battery operating time hour switching nickel metal hydride 2004 increased time asimo operate recharging asimo dimensional processor created honda consists stacked die processor signal converter memory controls asimo movement housed robot waist controlled pc wireless controller voice commands abilities asimo ability recognize moving objects postures gestures surrounding environment sounds enables interact humans robot detect movements multiple objects visual captured camera eyes head determine distance direction feature asimo follow person approached robot interprets voice commands human gestures enabling recognize handshake offered person waves respond asimo ability distinguish voices sounds identify companions asimo respond recognizes sounds falling object collision robot person spoken sound asimo responds questions nodding providing verbal answer languages recognize address sensors assist autonomous navigation cameras head visual sensor detect obstacles portion torso ground sensor comprises laser sensor infrared sensor laser sensor detect ground surface infrared sensor automatic shutter adjustment based brightness detect pairs floor markings confirm navigable paths planned map pre loaded map detection floor markings robot precisely identify location continuously adjust position rear ultrasonic sensors sense obstacles sensor located portion torso ground sensor rear sensor located backpack impact technologies honda asimo led walking assist devices innovations stride management assist bodyweight support assist honor asimo 10th anniversary november 2010 honda developed application iphone android smartphones called asimo users learn development asimo virtually walking robot steps race sharing lap times twitter facebook public appearances asimo introduced 2000 robot traveled performed international audiences asimo public appearance 2002 rang bell trade sessions york stock exchange january 2003 march 2005 robot toured canada demonstrating abilities 130 000 people 2003 2004 asimo north american educational tour visited science technology museums academic institutions north america goal tour encourage students study science live highlighted asimo abilities additionally robot visited engineering science colleges universities usa asimo technology circuit tour effort encourage students scientific careers 2004 asimo inducted carnegie mellon robot hall fame march 2005 robot walked red carpet premiere animated film robots june 2005 asimo feature called honda asimo disneyland innoventions attraction tomorrowland park permanent installation asimo north america innoventions closed april 2015 robot visited united kingdom january 2004 public demonstrations science museum london asimo continued tour stops countries spain united arab emirates russia south africa australia october 2008 asimo greeted prince charles visit miraikan museum tokyo performed minute step dance routine demonstration honda tokyo headquarters 2007 company demonstrated intelligence technologies enabled multiple asimo robots demonstration robot ability identify avoid oncoming people asimo recognize recharge battery perform tasks carrying tray pushing cart 2008 asimo conducted detroit symphony orchestra performance impossible dream bring attention partnership orchestra support performing arts detroit 49 foot replica asimo natural materials lettuce seed rice carnations led 120th rose parade celebration honda 50th operation usa robot appearance italy genoa science festival january 2010 honda debuted living robots documentary sundance film festival park city utah film focuses experience human interaction robots asimo asimo attended ars electronica festival linz austria september 2010 allowed honda study human robot interaction guide development future versions robot april 2011 asimo demonstrated championship louis missouri encourage students pursue studies math science engineering asimo visited ontario science center toronto 2011 demonstrated abilities canadian students robot traveled ottawa unveiling exhibit canadian museum civilization 19 22 2011 asimo appeared guest british quiz qi december 2011 serving water host stephen fry dancing comedian brand asimo 32 asimo inspiration 2012 film robot frank robot assists aging commit job cat burglar robot film portrayed actor costume appearance asimo robot march 24 2017 honda revealed asimo disneyland autopia attraction 
503726	computerscience	digital image numeric representation binary dimensional image depending image resolution fixed vector raster type term digital image refers raster images bitmapped images opposed vector images raster raster images finite set digital values called picture elements pixels digital image fixed rows columns pixels pixels individual element image holding antiquated values represent brightness color specific typically pixels stored memory raster image raster map dimensional array integers values transmitted stored compressed form raster images created variety input devices techniques digital cameras scanners coordinate measuring machines seismographic profiling airborne radar synthesized arbitrary image data mathematical functions dimensional geometric models major graphics field digital image processing study algorithms transformation raster file formats users contact raster images digital cameras image file formats digital cameras access data captured camera raw image format universal photographic imaging guidelines updig suggests formats raw files produce quality images file formats photographer processing agent level control accuracy output inhibited prevalence proprietary trade secrets camera makers initiatives openraw influence manufacturers release records publicly alternative digital negative dng proprietary adobe product public archival format digital camera raw data format universally accepted support product growing increasingly professional archivists conservationists respectable organizations variously recommend dng archival purposes vector vector images mathematical geometry vector mathematical terms vector consists direction raster vector elements combined image billboard vector photographs raster image viewing image viewer software displays images browsers display standard internet image formats including gif jpeg png svg format standard w3c format internet slow common provide preview image load replaced main image preliminary impression internet fast preview image seldom scientific images instance 46 gigapixel size image milky 194 size images difficult download browsed online complex interfaces viewers offer slideshow utility display sequence images history digital fax machines bartlane cable picture transmission preceded digital cameras computers decades picture scanned stored recreated digital pixels displayed standards eastern automatic seac nist advancement digital imagery continued 1960s development space program medical projects jet propulsion laboratory mit bell labs university maryland digital images advance satellite imagery wirephoto standards conversion medical imaging videophone technology character recognition photo enhancement rapid advances digital imaging introduction microprocessors 1970s progress storage display technologies computerized axial tomography cat scanning rays produce digital image slice dimensional object medical diagnostics origination digital images digitization analog images allowed enhancement restoration archaeological artifacts fields diverse nuclear medicine astronomy law enforcement defence industry advances microprocessor technology paved development marketing charge coupled devices ccds wide range image capture devices gradually displaced analog film tape photography videography 20th century computing power process digital image capture allowed generated digital images achieve level refinement close photorealism 
503883	computerscience	digital color image digital image includes color pixel visually acceptable sufficient provide samples color channels pixel interpreted coordinates color space rgb color space commonly displays spaces ycbcr hsv contexts color image values channels pixel measure intensity chrominance light actual stored digital image data brightness spectral band color image representation color image stored memory raster map dimensional array integer triplets rarely separate raster maps channel bits sample 24 bits pixel adequate faint banding artifacts visible smoothly varying images subject processing demanding applications bits sample hand image file formats graphics cards bits pixel 256 colors 2–3 bits channel converting continuous tone images photographs formats requires dithering yields grainy fuzzy graphics cards support 16 bits pixel provide 65536 distinct colors 5–6 bits channel resolution satisfactory professional dithering 
505717	computerscience	vision image segmentation process partitioning digital image multiple segments sets pixels super pixels goal segmentation simplify change representation image meaningful easier analyze image segmentation typically locate objects boundaries lines curves images precisely image segmentation process assigning label pixel image pixels label share characteristics result image segmentation set segments collectively cover entire image set contours extracted image edge detection pixels region respect characteristic computed property color intensity texture adjacent regions respect characteristic applied stack images typical medical imaging contours image segmentation create 3d reconstructions interpolation algorithms marching cubes applications practical applications image segmentation purpose algorithms techniques developed image segmentation techniques typically combined domain specific knowledge effectively solve domain segmentation thresholding simplest method image segmentation called thresholding method method based clip level threshold gray scale image binary image balanced histogram thresholding key method select threshold values multiple levels selected popular methods industry including maximum entropy method otsu method maximum variance clustering methods developed thresholding computed tomography ct images key idea otsu method thresholds derived radiographs reconstructed image methods suggested usage multi dimensional fuzzy rule based linear thresholds decision pixel membership segment based multi dimensional rules derived fuzzy logic evolutionary algorithms based image lighting environment application clustering methods algorithm iterative technique partition image clusters basic algorithm isin distance squared absolute difference pixel cluster center difference typically based pixel color intensity texture location weighted combination factors selected manually randomly heuristic algorithm guaranteed converge return optimal solution quality solution depends initial set clusters motion interactive segmentation motion based segmentation technique relies motion image perform segmentation idea simple differences pair images assuming object moving difference object improving idea kenney proposed interactive segmentation robotics tu berlin fileadmin fg170 publikationen pdf 2009 icra pdf robot poke objects generate motion signal motion based segmentation interactive segmentation interactive perception framework proposed dov katz oliver brock robotics tu berlin menue team oliver brock compression based methods compression based methods postulate optimal segmentation minimizes segmentations coding data connection concepts segmentation patterns image regularity image compress method describes segment texture boundary shape components modeled probability distribution function coding computed segmentation image scheme yields bits required encode image based segmentation segmentations image goal segmentation produces shortest coding achieved simple agglomerative clustering method distortion lossy compression determines coarseness segmentation optimal image parameter estimated heuristically contrast textures image textures image camouflage images stronger sensitivity quantization required histogram based methods histogram based methods efficient compared image segmentation methods typically require pass pixels technique histogram computed pixels image peaks valleys histogram locate clusters image color intensity measure refinement technique recursively apply histogram seeking method clusters image divide clusters operation repeated clusters clusters formed disadvantage histogram seeking method difficult identify peaks valleys image histogram based approaches adapted apply multiple frames maintaining single pass efficiency histogram multiple fashions multiple frames considered approach frame applied multiple merged peaks valleys difficult identify distinguishable histogram applied pixel basis determine frequent color pixel location approach segments based active objects static environment type segmentation video tracking edge detection edge detection developed field image processing region boundaries edges closely sharp adjustment intensity region boundaries edge detection techniques base segmentation technique edges identified edge detection disconnected segment object image closed region boundaries desired edges boundaries objects spatial taxons spatial taxons granules consisting crisp pixel region stationed abstraction levels hierarchical nested scene architecture gestalt psychological designation figure ground extended include foreground object objects salient object edge detection methods applied spatial taxon region manner applied silhouette method disconnected edge illusory contoursegmentation methods applied edges edge detectors lindeberg developed integrated method segments edges straight curved edge segments based object recognition based minimum description mdl criterion optimized split merge method candidate breakpoints complementary junction cues partitions segments dual clustering method method combination characteristics image partition image based histogram analysis checked compactness clusters objects gradients borders purpose spaces introduced space dimensional histogram brightness space – dual dimensional space original image space measure compact distributed brightness image calculating minimal clustering kmin threshold brightness kmin defines binary black white image – bitmap ≥ bitmap object dual space bitmap measure defined reflecting compact distributed black white pixels goal objects borders measure mdc k×l calculated difference brightness object background borders gradient borders maximum mdc defines segmentation region growing methods region growing methods rely assumption neighboring pixels region values common procedure compare pixel neighbors similarity criterion satisfied pixel set belong cluster neighbors selection similarity criterion influenced noise instances method statistical region merging srm starts building graph pixels connectedness edges weighted absolute intensity difference initially pixel forms single pixel region srm sorts edges priority queue decide merge current regions belonging edge pixels statistical predicate region growing method seeded region growing method method takes set seeds input image seeds mark objects segmented regions iteratively grown comparison unallocated neighboring pixels regions difference pixel intensity region measure similarity pixel difference measured assigned respective region process continues pixels assigned region seeded region growing requires seeds additional input segmentation dependent choice seeds noise image seeds region growing method unseeded region growing method modified algorithm require explicit seeds starts single region 2—the pixel chosen markedly influence final segmentation iteration considers neighboring pixels seeded region growing differs seeded region growing minimum predefined threshold respective region pixel considered current regions region created pixel variant technique proposed haralick shapiro 1985 based pixel intensities scatter region intensity candidate pixel compute statistic statistic pixel region region’s scatter recomputed pixel rejected form region special region growing method called connected segmentation lambda connectedness based pixel intensities neighborhood linking paths degree connectivity connectedness calculated based path formed pixels pixels called connected path linking pixels connectedness path connectedness equivalence relation split merge segmentation based quadtree partition image called quadtree segmentation method starts root tree represents image uniform homogeneous split child squares splitting process contrast child squares homogeneous merged connected components merging process node tree segmented node process continues recursively splits merges special data structure involved implementation algorithm method time complexity reach 13 optimal algorithm method partial differential equation based methods partial differential equation pde based method solving pde equation numerical scheme segment image curve propagation popular technique category numerous applications object extraction object tracking stereo reconstruction central idea evolve initial curve lowest potential cost function definition reflects task addressed inverse minimization cost functional trivial imposes smoothness constraints solution expressed geometrical constraints evolving curve parametric methods lagrangian techniques based parameterizing contour sampling strategy evolve element image internal terms techniques fast efficient original purely parametric formulation kass witkin terzopoulos 1987 snakes criticized limitations choice sampling strategy internal geometric properties curve topology curve splitting merging addressing dimensions nowadays efficient discretized formulations developed address limitations maintaining efficiency energy minimization conducted steepest gradient descent derivatives computed finite differences level set methods level set method initially proposed track moving interfaces dervieux thomassetin 1979 1981 reinvented osher sethian 1988 spread imaging domains late 1990s efficiently address curve surface propagation implicit manner central idea represent evolving contour signed function corresponds actual contour motion equation contour easily derive flow implicit surface applied level reflect propagation contour level set method affords numerous advantages implicit parameter direct estimate geometric properties evolving structure change topology intrinsic define optimization framework proposed zhao merriman osher 1996 conclude convenient framework addressing numerous applications vision medical image analysis level set data structures led efficient implementations method fast marching methods fast marching method image segmentation model improved permitting positive negative speed propagation speed approach called generalized fast marching method variational methods goal variational methods segmentationwhich optimal respect specific energy functional functionals consist data fitting term regularizing terms classical representative potts modeldefined image 14 bya minimizer 16is piecewise constant image optimal tradeoffbetween squared l2 distance image 14and total jump set jump set 16 defines segmentation relative weight energies tuned parameter 19 binary variant potts model range offormula 20 restricted values called chan vese model generalization mumford shah modelgiven bythe functional sum total segmentation curve 22 smoothness approximation 20 distance original image 14 weight smoothness penalty adjusted 25 potts model calledpiecewise constant mumford shah modelas degenerate caseformula 26 optimization hard generalbut minimizing strategies practice classical algorithms graduated convexityand ambrosio tortorelli approximation graph partitioning methods graph partitioning methods effective tools image segmentation model impact pixel neighborhoods cluster pixels pixel assumption homogeneity images methods image modeled weighted undirected graph pixel pixels nodes edge weights define dis similarity neighborhood pixels graph image partitioned criterion designed model clusters partition nodes pixels output algorithms considered object segment image popular algorithms category normalized cuts random walker minimum cut isoperimetric partitioning minimum spanning tree based segmentation segmentation based object categorization markov random fields application markov random fields mrf images suggested 1984 geman geman strong mathematical foundation ability provide global optima defined local features proved foundation domain image analysis noising segmentation mrfs completely characterized prior probability distributions marginal probability distributions cliques smoothing constraint criterion updating values criterion image segmentation mrfs restated finding labelling scheme maximum probability set features broad categories image segmentation mrfs supervised unsupervised segmentation supervised image segmentation mrf map terms image segmentation function mrfs seek maximize probability identifying labelling scheme set features detected image restatement maximum posteriori estimation method generic algorithm image segmentation map optimization algorithms optimization algorithm adaptation models variety fields set unique cost functions common trait cost functions penalize change pixel difference pixel label compared labels neighboring pixels iterated conditional modes gradient descent icm algorithm reconstruct ideal labeling scheme changing values pixel iteration evaluating energy labeling scheme cost function penalty change pixel label penalty difference label betweenneighboring pixels chosen pixel 28 neighborhood pixel kronecker delta function major issue icm gradient descent tendency rest local maxima globally optimal labeling scheme simulated annealing derived analogue annealing metallurgy change pixel label iterations estimates difference energy newly formed graph initial data newly formed graph profitable terms energy cost 29newformula 30oldthe algorithm selects newly formed graph simulated annealing requires input temperature schedules speed convergence energy threshold minimization occur alternative algorithms range methods exist solving simple mrfs include maximization posterior marginal multi scale map estimation multiple resolution segmentation likelihood estimates graph cut maximum flow highly constrained graph based methods exist solving mrfs unsupervised image segmentation mrf expectation maximization subset unsupervised machine learning expectation–maximization algorithm utilized iteratively estimate posterior probabilities distributions labeling training data estimate segmentation model formed approach histograms represent features image proceed outlined step algorithm mentioned random estimate model parameters supervised learning utilized step estimate class statistics based random segmentation model defined compute conditional probability belonging label feature set calculated naive bayes theorem 32here 33 set labels step established relevance feature set labeling scheme compute priori estimate label algorithm actual total labels unknown training data set hidden estimate labels user utilized computations 34where 35 set features watershed transformation watershed transformation considers gradient magnitude image topographic surface pixels gradient magnitude intensities gmis correspond watershed lines represent region boundaries water pixel enclosed common watershed flows downhill common local intensity minimum lim pixels draining common minimum form catch basin represents segment model based segmentation central assumption model based approaches thestructures tendency shape seek probabilistic model characterizes shape variation segmenting image constraints imposed model prior task involve registration training examples common pose probabilistic representation variation registered samples iii statistical inference model image methods literature model based segmentation include active shape models active appearance models multi scale segmentation image segmentations computed multiple scales scale space propagated coarse fine scales scale space segmentation segmentation criteria arbitrarily complex account global local criteria common requirement region connected sense dimensional hierarchical signal segmentation witkin seminal scale space included notion dimensional signal unambiguously segmented regions scale parameter controlling scale segmentation key observation crossings derivatives minima maxima derivative slope multi scale smoothed versions signal form nesting tree defines hierarchical relations segments scales slope extrema coarse scales traced features fine scales slope maximum slope minimum annihilate larger scale segments separated merge segment defining hierarchy segments image segmentation primal sketch numerous reached applied interactive manual intervention application medical imaging automatically overview main ideas current approaches based nesting structure witkin specific dimensional signals trivially transfer dimensional images idea inspired authors investigate coarse fine schemes image segmentation koenderink proposed study iso intensity contours evolve scales approach investigated lifshitz pizer intensity image features scales implies hard trace coarse scale image features finer scales iso intensity lindeberg studied linking local extrema saddle scales proposed image representation called scale space primal sketch explicit relations structures scales explicit image features stable ranges scale including locally scales bergholm proposed detect edges coarse scales scale space trace finer scales manual choice coarse detection scale fine localization scale gauch pizer studied complementary ridges valleys multiple scales developed tool interactive image segmentation based multi scale watersheds multi scale watershed application gradient map investigated olsen nielsen carried clinical dam vincken proposed hyperstack defining probabilistic relations image structures scales stable image structures scales ahuja workers automated automatic brain segmentation algorithm based closely ideas multi scale watersheds undeman lindeberg extensively tested brain databases ideas multi scale image segmentation linking image structures scales picked florack kuijper bijaoui rué associate structures detected scale space minimum noise threshold object tree spans multiple scales corresponds feature original signal extracted features accurately reconstructed iterative conjugate gradient matrix method semi automatic segmentation segmentation user outlines region mouse clicks algorithms applied path fits edge image techniques siox livewire intelligent scissors snaps segmentation alternative semi automatic segmentation algorithms return spatial taxon foreground object object object selected user designated prior probabilities trainable segmentation segmentation methods based color pixels image humans knowledge image segmentation implementing knowledge cost considerable computation time require huge domain knowledge database addition traditional segmentation methods trainable segmentation methods model knowledge neural network segmentation relies processing image artificial neural network set neural networks processing decision mechanism marks image category recognized neural network type network designed kohonen map pulse coupled neural networks pcnns neural models proposed modeling cat’s visual cortex developed performance biomimetic image processing 1989 eckhorn introduced neural model emulate mechanism cat’s visual cortex eckhorn model simple effective tool studying visual cortex mammals recognized application potential image processing 1994 eckhorn model adapted image processing algorithm johnson termed algorithm pulse coupled neural network decade pcnns utilized variety image processing applications including image segmentation feature generation extraction motion detection region growing noise reduction pcnn dimensional neural network neuron network corresponds pixel input image receiving pixel’s color intensity external stimulus neuron connects neighboring neurons receiving local stimuli external local stimuli combined internal activation accumulates stimuli exceeds dynamic threshold pulse output iterative computation pcnn neurons produce temporal series pulse outputs temporal series pulse outputs input images utilized image processing applications image segmentation feature generation compared conventional image processing pcnns merits including robustness noise independence geometric variations input patterns capability bridging minor intensity variations input patterns source implementations trainable segmentation segmentation images videos images photo album sequence video frames semantically objects scenes beneficial exploit correlations task simultaneously segmenting scenes images video frames termed segmentation typically human action localization conventional bounding box based object detection human action localization methods provide finer grained typically image segmentation masks delineating human object action category segment tube techniques dynamic markov networks cnn lstm employed exploit inter frame correlations methods methods segmentation multispectral segmentation connectivity based segmentation based dti images segmentation benchmarking segmentation benchmarks comparing performance segmentation methods art segmentation methods standardized sets 
507144	computerscience	computing address space defines range discrete addresses correspond network host peripheral device disk sector memory cell logical physical entity software programs save retrieve stored data unit data address individually located program unable manipulate data address spaces depend underlying address structure limited architecture address spaces created combining uniquely identified qualifiers address unambiguous address space person physical address address space combination locations neighborhood town city country elements address space element address addresses space reference entities multiple buildings address 32 main street towns demonstrating towns arranged street address spaces address space partitioning regions mathematical structure total memory addresses simply chunks nested domain hierarchies directed tree domain directory structure hierarchical design postal addresses internet internet assigned authority iana allocates ranges ip addresses registries enable manage global internet address space examples addresses include limited address mapping translation common feature address spaces mappings translations forming numerous layers level address translated level file logical disk operates linear sector translated absolute lba sector addresses simple addition partition sector address disk drive connected parallel ata converted logical cylinder head sector address interface historical shortcomings converted lba disk controller finally physical cylinder head sector domain maps names network specific addresses ip addresses mapped link layer network addresses address resolution protocol network address translation occur edge ip spaces local network internet iconic virtual physical address translation virtual memory virtual address space map file main memory physical address space numerically virtual addresses refer physical address physical byte ram single virtual address maps physical address references 192 168 login 
507174	computerscience	geoffrey everest hinton born december 1947 english canadian cognitive psychologist scientist artificial neural networks 2013 divides time google google brain university toronto david rumelhart ronald williams hinton author highly cited paper applied backpropagation algorithm developed seppo linnainmaa 1970 multi layer neural networks cite inventor method viewed leading figure deep learning community referred godfather deep learning dramatic image recognition milestone alexnet designed student alex krizhevskyfor imagenet challenge 2012 helped revolutionize field vision education hinton educated king college cambridge graduating 1970 bachelor arts experimental psychology continued study university edinburgh awarded phd artificial intelligence 1978 supervised christopher longuet higgins career phd university sussex difficulty finding funding britain university california san diego carnegie mellon university founding director gatsby charitable foundation computational neuroscience unit university college london professor science department university toronto holds canada chair machine learning advisor learning machines brains program canadian institute advanced hinton taught online neural networks education platform coursera 2012 hinton joined google march 2013 company dnnresearch acquired planning divide time university google hinton investigates neural networks machine learning memory perception symbol processing authored authored 200 peer reviewed publications hinton professor carnegie mellon university 1982–1987 david rumelhart hinton ronald williams applied propagation algorithm reverse mode automatic differentiation published seppo linnainmaa 1970 multi layer neural networks experiments networks learn internal representations data paper cite inventor method period hinton invented boltzmann machines david ackley terry sejnowski contributions neural network include distributed representations time delay neural network mixtures experts helmholtz machines product experts 2007 hinton coauthored unsupervised learning paper titled unsupervised learning image transformations accessible introduction geoffrey hinton articles scientific american september 1992 october 1993 october november 2017 hinton published access papers theme capsule neural networks hinton finally notable phd students postdoctoral researchers include richard zemel brendan frey radford neal ruslan salakhutdinov ilya sutskever yann lecun zoubin ghahramani honours awards hinton elected fellow royal society frs 1998 winner rumelhart prize 2001 certificate election royal society reads 2001 hinton awarded honorary doctorate university edinburgh 2005 recipient ijcai award excellence lifetime achievement award awarded 2011 herzberg canada gold medal science engineering 2013 hinton awarded honorary doctorate université sherbrooke 2016 elected foreign national academy engineering contributions theory practice artificial neural networks application speech recognition vision received 2016 ieee rse wolfson james clerk maxwell award bbva foundation frontiers knowledge award 2016 communication technologies category pioneering highly influential endow machines ability learn personal life hinton grandson logician george boole eventually foundations modern science surgeon author james hinton father howard hinton middle relative george everest nephew economist colin clark lost wife ovarian cancer 1994 views hinton moved canada disillusionment ronald reagan era politics disapproval military funding artificial intelligence believes political systems terrorize people hinton petitioned lethal autonomous weapons existential risk artificial intelligence hinton stated superintelligence 50 warns track record intelligent controlling intelligence 2015 continues grave concerns hinton stated usual arguments truth prospect discovery sweet hinton stated hard predict advances bring 
507928	computerscience	inferno distributed operating started bell labs developed maintained vita nuova holdings software inferno based experience gained plan bell labs bell labs operating systems languages fly compilers graphics security networking portability operating programs current company inspired dante alighieri divine comedy inferno programs portable broad mix hardware networks environments defines virtual machine dis implemented real machine limbo type safe language compiled portable byte code includes virtual operating supplies interfaces infernoruns natively hardware runs user program operating communications protocol called styx applied uniformly access local remote resources programs calling standard file operations read write close fourth edition inferno styx identical plan version hallmark 9p protocol 9p2000 design principles inferno created 1995 bell labs science division bring ideas plan bell labs wider range devices networks inferno distributed operating based basic principles drawn plan handle diversity network environments intended designers decided virtual machine component conclusion oak project java arrived independently dis virtual machine register machine intended closely match architecture runs opposed stack machine java virtual machine advantage approach relative simplicity creating time compiler architectures virtual machine memory management designed efficient devices mib memory memory mapping hardware garbage collector hybrid reference counting real time coloring collector gathers cyclic data inferno kernel virtual machine fly compiler scheduler devices protocol stacks space evaluator process file space root file hierarchy kernel includes built modules provide interfaces virtual operating calls graphics security math modules bell labs technical journal paper introducing inferno listed dimensions portability versatility os design choices directed provide standard interfaces content service providers concern details diverse hardware software networks content delivered history inferno descendant plan shares design concepts source code kernel devices styx 9p2000 protocol inferno shares plan unix heritage bell labs unix philosophy command tools inferno plan tools translated limbo mid 1990s plan development set favor inferno existence leaked dennis ritchie 1996 development publicly competitor java time bell labs parent company licensed java technology sun microsystems march–april 1997 ieee internet computing included advertisement inferno networking software claimed devices communicate network including internet telecommunications lans advertisement stated video games talk computers –a playstation pictured–cell phones access email voice mail lucent inferno internal products lucent vpn firewall brick lucent pathstar phone switch initially sell source code licenses inferno buyers lucent marketing missed internet inferno relation time sun microsystems heavily marketing java programming language targeting market analogous technology browsers filled demand object oriented languages popular time lucent licensed java sun claiming inferno devices java java byte code dis byte code translator written facilitate inferno customers inferno business unit closed sold vita nuova vita nuova continued development offered commercial licenses complete downloads licenses gpl compatible kernel vm ported software hardware focused distributed applications eventually vita nuova released source gpl license inferno operating libre source software project ports inferno runs native hardware application providing virtual operating runs platforms programs developed inferno platforms modification recompilation native ports include architectures x86 mips arm powerpc sparc hosted virtual os ports include windows linux freebsd plan mac os solaris irix unixware inferno hosted plugin internet explorer vita nuova plugins browsers development released inferno ported openmoko nintendo ds sheevaplug android license inferno 4th edition released 2005 software dual licensed licenses users set software licenses proprietary license software license scheme covered licenses including gnu public license gnu lesser public license lucent public license mit license subsequently vita nuova acquire entire excluding fonts licensed bigelow holmes gplv2 license options external links portsof historical 
514556	computerscience	μclinux variation linux kernel maintained fork targets microcontrollers memory management unit mmu integrated main development 46 project continues develop patches tools microcontrollers lists linux kernel releases mainline letters μc microcontroller pronounced linux pronouncing letter greek history μclinux originally created jeff dionne kenneth albanowski 1998 initially targeted motorola dragonball family embedded 68k processors 68ez328 series motorola palmpilot 33 linux kernel releasing initial developer community sprang extending kernels microprocessor architectures 1999 support motorola freescale coldfire family embedded microprocessors arm processor support originally targeting series linux kernels ports based linux linux linux ports ported 36 linux kernel michael leslie evan stawnyczy rt control μclinux extensions applied series kernels version 46 linux kernel major μclinux integrated main kernel processor architectures greg ungerer originally ported μclinux motorola coldfire family processors continues maintain actively push core μclinux support series linux kernels regard μclinux essentially separate fork linux project continues develop patches supporting tools linux microcontrollers μclinux support architectures forms basis products network routers security cameras dvd mp3 players voip phone gateways scanners card readers supported architectures current list includes 
528352	computerscience	translation lookaside buffer tlb memory cache reduce time access user memory location chip’s memory management unit mmu tlb stores translations virtual memory physical memory called address translation cache tlb reside cpu cpu cache cpu cache main memory levels multi level cache majority desktop laptop server processors include tlbs memory management hardware processor utilizes paged segmented virtual memory tlb implemented content addressable memory cam cam search key virtual address search result physical address requested address tlb cam search yields match retrieved physical address access memory called tlb hit requested address tlb translation proceeds table process called walk walk time consuming compared processor speed involves reading contents multiple memory locations compute physical address physical address determined walk virtual address physical address mapping entered tlb powerpc 604 set associative tlb data loads stores processors instruction data address tlbs overview tlb fixed slots table entries segment table entries table entries map virtual addresses physical addresses intermediate table addresses segment table entries map virtual addresses segment addresses intermediate table addresses table addresses virtual memory memory space process space split fixed size paged memory commonly segments variable sizes segmented memory table stored main memory track virtual stored physical memory method memory accesses table entry byte access byte table looked frame frame offset actual address straightforward virtual memory scheme doubling memory access time tlb reduce time access memory locations table method tlb cache table representing subset table contents referencing physical memory addresses tlb reside cpu cpu cache cpu cache primary storage memory levels multi level cache placement determines cache physical virtual addressing cache virtually addressed requests cpu cache tlb accessed cache cache physically addressed cpu tlb lookup memory operation physical address cache harvard architecture modified harvard architecture separate virtual address space memory access hardware exist instructions data lead distinct tlbs access type instruction translation lookaside buffer itlb data translation lookaside buffer dtlb benefits demonstrated separate data instruction tlbs tlb fast lookup hardware cache figure tlb entry tlb consists tag tag incoming virtual address matches tag tlb returned tlb lookup instruction pipeline searches fast essentially performance penalty search instruction pipeline tlb common optimization physically addressed caches perform tlb lookup parallel cache access virtual memory reference hardware checks tlb held tlb hit translation frame returned access memory tlb table checked depending cpu automatically hardware interrupt operating frame access memory addition add frame tlb reference tlb suitable block selected replacement replacement methods lru fifo address translation cache article details virtual addressing pertains caches tlbs performance implications cpu access main memory instruction cache data cache tlb simplest desired cache virtual physical translation tlb slow access slower level memory hierarchy functioning tlb tlb expensive instruction data cache load main memory walk requiring memory accesses flowchart explains tlb tlb cpu checks table table entry bit set main memory processor retrieve frame table entry form physical address processor updates tlb include table entry finally bit set desired main memory fault issued fault interrupt called executes fault handling routine set fit tlb tlb thrashing occurs frequent tlb misses occur newly cached displacing degrading performance thrashing instruction data cache tlb thrashing occur instruction cache data cache thrashing occurring cached size units instructions data cached blocks cache lines entire address lookup level code data sets fit cache sets fragmented virtual address set fit tlb causing tlb thrashing sizing tlb requires size instruction data caches fragmented multiple multiple tlbs caches tlbs multiple levels cpus nowadays built multiple tlbs l1 tlb associative extremely fast larger l2 tlb slower instruction tlb itlb data tlb dtlb cpu itlb1 dtlb1 tlb2 tlbs instance intel nehalem microarchitecture set associative l1 dtlb 64 entries 4 kib 32 entries 4 mib l1 itlb 128 entries 4 kib associativity 14 associative entries 4 mib itlb divided statically threads unified 512 entry l2 tlb 4 kib associative tlbs separate sections huge tlb handling schemes handling tlb misses commonly modern architectures itanium architecture option software hardware managed tlbs alpha architecture tlb managed palcode operating palcode processor processor specific operating specific versions palcode implement table formats operating systems requiring tlb format instructions control tlb architecture typical tlb typical performance levels tlb tlb hit takes clock cycle takes 30 clock cycles rate effective memory cycle rate average 30 clock cycles memory access address space switch address space switch occurs process switch thread switch tlb entries invalid virtual physical mapping simplest strategy deal completely flush tlb switch tlb memory reference time running speed cpus effective strategies marking process entry process runs short time jumps process valid entries saving time reload alpha 21264 tlb entry tagged address space asn tlb entries asn matching current task considered valid intel pentium pro global enable pge flag register cr4 global flag directory table entry prevent frequently automatically invalidated tlbs task switch load register cr3 2010 westmere microarchitecture intel 64 processors support 12 bit process context identifiers pcids retaining tlb entries multiple linear address spaces match current pcid address translation selective flushing tlb option software managed tlbs option hardware tlbs tlb intel 80386 complete flushing tlb address space switch hardware tlbs tlb intel 80486 x86 processors tlb arm processors flushing individual entries tlb indexed virtual address flushing tlb security mechanism memory isolation processes ensure process access data stored memory process memory isolation critical switches privileged operating kernel process user processes highlighted meltdown security vulnerability mitigation strategies kernel table isolation kpti rely heavily performance impacting tlb flushes benefit greatly hardware enabled selective tlb entry management pcid virtualization x86 tlb advent virtualization server consolidation lot effort x86 architecture easier virtualize ensure performance virtual machines x86 hardware entries x86 tlbs address space implicitly refer current address space time change address space context switch entire tlb flushed maintaining tag associates tlb entry address space software comparing tag tlb lookup tlb flush expensive x86 tlb designed operate latency completely hardware 2008 intel nehalem amd svm introduced tags tlb entry dedicated hardware checks tag lookup exploited envisioned future tags identify address space tlb entry belongs context switch result flushing tlb – changing tag current address space tag address space task 
534794	computerscience	association advancement artificial intelligence aaai international nonprofit scientific society devoted promote responsible artificial intelligence aaai aims increase public understanding artificial intelligence improve teaching training practitioners provide guidance planners funders potential current developments future directions history organization founded 1979 american association artificial intelligence changed 2007 association advancement artificial intelligence excess 000 worldwide history organization presided notable figures science allen newell edward feigenbaum marvin minsky john mccarthy current president subbarao kambhampati president elect yolanda gil conferences publications aaai services artificial intelligence community aaai sponsors conferences symposia providing support 14 journals field artificial intelligence aaai produces quarterly publication magazine seeks publish literature entire field artificial intelligence abreast specialties magazine published continuously 1980 aaai organises aaai conference artificial intelligence considered conferences field artificial intelligence awards addition aaai fellowship aaai grants awards acm aaai allen newell award acm aaai allen newell award individual selected career contributions breadth science bridge science disciplines endowed award accompanied prize 000 supported association advancement artificial intelligence aaai association computing machinery acm individual contributions recipients aaai eaai outstanding educator award annual aaai eaai outstanding educator award created 2016 honor person people major contributions education provide lasting benefits community recipients 
551666	computerscience	ibm ibm development division largest industrial organization labs continents ibm employees garnered nobel prizes turing awards 20 inductees national inventors hall fame 19 national medals technology national medals science kavli prizes 2018 company generated patents business 25 consecutive record history roots ibm 1945 watson scientific computing laboratory columbia university ibm laboratory devoted pure science expanded additional ibm locations westchester county york starting 1950s including thomas watson center 1961 advances notable company inventions include floppy disk hard disk drive magnetic stripe card relational database universal product code upc financial swap fortran programming language sabre airline reservation dram copper wiring semiconductors smartphone portable automated teller machine atm silicon insulator soi semiconductor manufacturing process watson artificial intelligence quantum experience advances nanotechnology include ibm atoms scanning tunneling microscope arrange 35 individual xenon atoms substrate chilled crystal nickel spell letter company acronym time atoms precisely positioned flat surface applications major undertakings ibm included innovative materials structures performance microprocessors computers analytical methods tools algorithms software architectures methods managing searching deriving meaning data ibm advanced services methodologies reusable assets ibm numerous contributions physical sciences include scanning tunneling microscope temperature superconductivity awarded nobel prize ibm inventions sabre travel reservation technology laser eye surgery magnetic storage relational database upc barcodes watson question answering computing match human champions jeopardy television quiz watson technology commercialized project healthcare company anthem notable ibm scientists scientists ibm famous include frances allen marc auslander john backus charles bennett scientist erich bloch grady booch 
551732	computerscience	lejos firmware replacement lego mindstorms programmable bricks variants software support original robotics nxt ev3 includes java virtual machine lego mindstorms robots programmed java programming language includes icommand jar communicate bluetooth original firmware mindstorm teaching java science students lejos based robot jitter flew international space station december 2001 pronunciation official lejos conceived josé solórzano based theacronym java operating jos operating rcx legos andthe spanish word lejos history lejos originally conceived tinyvm developed josé solórzano late 1999 started hobby source project forked lejos contributors joined project enhancements brian bagnall jürgen stuber paul andrews project josé essentially retired august 20 2006 original lejos rcx discontinued release icommand library control nxt bluetooth enabled lcp released library standard lego firmware library superseded lejos nxj january 2007 port lego mindstorms nxt released firmware replacement faster x15 rcx version memory menu bluetooth support bluecove library access nxt features 2008 versions released addition numerous improvements core classes eclipse plugin released version tutorial 2009 major releases 85 2011 released broadly speaking releases concentrated improvements navigation algorithms support numerous 3rd party sensors eclipse plug 2013 development port lego mindstorms ev3 brick 2014 alpha versions released 2015 beta versions released november 2014 lejos adapted version source project roberta architecture lejos nxj support access robot i²c ports access standard sensors motors ultrasonic distance sensor touch sensor sound sensor light sensor companies mindsensors hitechnic extended basic set providing advanced sensors actuators multiplexers lejos nxj includes java apis products advantage object oriented structure java developers lejos nxj hide implementation details sensors actuators multiple interfaces robotics developer level abstractions worry details hexadecimal addresses hardware components project includes implementations commonly feedback controller pid controller kalman filter noise reduction algorithm lejos nxj libraries support abstract functions navigation mapping behavior based robotics simple lejos program community alpha release lejos nxj 2007 project consistently active core development team contributions accepted community interfaces party sensors actuators contributed core team platform university robotics courses undergraduate projects platform robotics nxj java platform lejos nxj java project builds wealth functionality inherent java platform lejos nxj plugins leading java ides eclipse netbeans robotics developers advantage standard functionality ide code completion refactoring testing frameworks implementation nxj functions compiling linking uploading wealth java source projects apache math nxj robotics developer 
552656	computerscience	british society bcs professional body learned society represents technology united kingdom internationally founded 1956 bcs played role educating nurturing professionals engineers upholding profession accrediting chartered professional status creating global community active promoting field practice computing overview worldwide membership 82 000 100 countries bcs registered charity incorporated royal charter 1984 objectives promote study application communications technology computing technology advance knowledge education ict benefit professional practitioners public bcs institution engineering council licensed award designation incorporated engineer chartered engineer responsible regulation ict science fields bcs council european professional informatics societies cepis seoul accord international tertiary degree recognition bcs organisation science council licensed award designation chartered scientist bcs offices strand southampton street south covent garden central london main administrative offices swindon wiltshire west london overseas offices sri lanka mauritius quarterly professional magazine itnow bulletin bcs organization federation enterprise architecture professional organizations feapo worldwide association professional organizations provide forum standardize professionalize advance discipline enterprise architecture history forerunner bcs london lcg founded 1956 bcs formed merger lcg unincorporated association scientists unincorporated club october 1957 bcs incorporated articles association british society president bcs sir maurice wilkes 1913–2010 frs 1966 bcs granted charitable status 1970 bcs armorial bearings including shield crest major ethical responsibilities bcs emphasized leopard surmounting crest depicting eternal vigilance integrity society bcs patron hrh duke kent patron december 1976 actively involved bcs activities president silver jubilee 1982–1983 2007 bcs launched bcsrecruit job aimed professionals 2008 bcs labelled irrelevant training company connection claims professionals unaware bcs chartered accreditation scheme 21 september 2009 british society transformation branded bcs chartered institute 2010 extraordinary meeting called discuss direction bcs debate covered computing press governance bcs governed trustee board comprising president deputy president president vice presidents including vice president finance professional elected advisory council sir maurice wilkes professor science cambridge university served president president serves term list presidents british society bcs bcs advisory council elects honorary officers president deputy president vice presidents president council lists trust board advisory council maintained online advisory council advice trustee board direction operation bcs consulted strategic plans annual budget council representative body membership elected professional membership branches forums fellowship fbcs fellow bcs fbcs title conferred individuals recognize achievement contributions technology fellows expected profession promoting evangelizing profession thepublic society contributing debates conferences panels meetings fellows nominated society supported existing fellows criteria election fellow include current fellowsinclude distinguished individuals industries universities prominent fellows include chartered professional bcs professional body united kingdom ability grant chartered status professionals royal charter granted privy council ability grant chartered professional status fellows professional chartered professional entitled suffix citp bcs register current chartered fellows professional membership bodies apply bcs licence enables award citp eligible institution engineering technology iet membership body licensed award citp grades membership bcs grades membership encouraged display designatory letters entitled designatory post nominal letters complex interpretation accepted authority subject debrett’s correct form decorations degrees chartered letters holding ceng display designatory letters institution registered ceng conventionally holding chartered status citp display membership letters fbcs citp mbcs citp citp awarded organisations displayed separately awarding institution examples bcs post nominals qualifications bcs range qualifications users computers professionals bcs user qualifications bcs offers qualifications cover including understanding spreadsheets presentation software animation video editing social networking safety current user qualifications bcs education qualifications heqs bcs conducts bcs education qualifications countries bcs professional examinations consisted passing professional project equivalent british honours degree programs history success participants coming including asia private computing schools hosted students preparation bcs examinations level current qualifications type qualification individuals improve certify typing skills average user save 21 days improving typing speed preventing repetitive strain injury rsi type support materials based courseware allowing user assess skills simple online digital creator set engaging qualifications teach digital media skills creative projects designed types ages learners schools key stage key stage adult learning bcs itq range user qualifications combination units itq framework framework consists wide range units covering aspects user application including word processing spreadsheets internet multimedia software design software certifications bcs offers professional qualifications professional certifications board iseb systems examination board professional certifications iseb wide range qualifications professionals covering major including management development service delivery quality retired qualifications citizen qualification beginners online start internet qualification designed provide basic understanding internet start safely reading email shopping online foundation suitable organization individual guidance controlled approach identification assessment control risk strategic programme project operational perspectives structure common professional institutions bcs regional branches specialist 45 regional branches 16 international sections 50 specialist september 2010 bcs sponsored digital revolutions film workshop amateurs professionals hone skills october 2010 conjunction sheffield doc fest sponsored digital revolutions film competition bcs magazines include journals published oxford university press include electronic workshops computing ewic series conference workshop proceedings published bcs 
559815	computerscience	lenna lena standard image field image processing 1973 picture swedish model lena söderberg shot photographer dwight hooker cropped centerfold november 1972 issue playboy magazine spelling lenna anglicisation original playboy article history lenna playboy magazine image illustrate image processing algorithms 1961 lawrence roberts cropped bit grayscale facsimile scanned images playboy july 1960 issue featuring playmate teddi smith born delilah henry mit master thesis image dithering intended resolution color image processing study lenna picture history 2001 newsletter ieee professional communication society article jamie hutchinson scan images history 1999 issue ieee transactions image processing lena separate articles picture continued scientific journals 21st century lenna accepted image processing community söderberg guest 50th annual conference society imaging science technology 1997 photo electronic imaging events history 2015 lena söderberg guest honor banquet ieee icip 2015 delivering speech chaired paper award ceremony explain lenna popularity david munson editor chief ieee transactions image processing image flat regions shading texture popularity image attractive woman appealed males male dominated field playboy cracks illegal material initially send notices publications journals image time decided overlook wide lena eileen kent vp media playboy decided exploit phenomenon criticism image produced controversy playboy degrading women lenna photo sexism sciences reinforcing gender stereotypes 1999 essay reasons male predominance science applied mathematician dianne leary wrote 2012 paper compressed sensing photo model fabio lanzoni image draw attention issue image magnet school thomas jefferson school science technology fairfax county virginia provoked guest editorial senior washington post 2015 detrimental impact aspiring female students science remastering jeff seideman society imaging science technology archivist playboy rescan image original negatives 
568646	computerscience	simplified instructional abbreviated sic hypothetical introduced software introduction systems programming leland beck modern microprocessors include subtle complex functions purposes efficiency difficult learn systems programming real simplified instructional solves abstracting complex behaviors favor architecture accessible learn systems programming sic architecture sic machine basic addressing storing memory addresses hexadecimal integer format modern computing systems sic architecture stores data binary complement represent negative values machine level memory storage sic consists bit bytes memory addresses sic byte addresses consecutive bytes form 24 bit word addressed location lowest numbered byte word numeric values stored word values character values bit ascii sic machine support floating hardware 32 768 bytes memory complicated machine built sic called simplified instruction extra equipment sic xe xe expansion sic adds 48 bit floating data type additional memory addressing mode extra memory megabyte 32 768 bytes original machine sic assembly code compatible sic xe sic machines registers 24 bits numeric character representation addition standard sic registers additional purpose registers specific sic xe machine registers sic sic xe machine perform simple tasks customized assembly language software book theoretical series operation codes aid understanding assemblers linker loaders required execution assembly language code addressing modes sic sic xe simplified instruction instruction formats extra equipment add includes fourth instruction formats provide model memory data management format representation memory format format bit flag values consisting flag bits sic assembly syntax sic special assembly language operation codes hold hex values assemble execute programs sample program idea sic program code columns column represents forwarded symbol store location memory column denotes sic instruction opcode constant byte word column takes symbol column operation column process creates object code object codes object file sic machine codice 1if assemble program object code depicted consists record type hex values memory locations record hex digits signify relative starting location hex digits represent program size lines record consisting hex digits signify starting location hex digits size bytes object codes created assembly process codice 2sample program program illustrating data movement sic codice 3emulating sic sic sic xe machines real machines task constructing sic emulator coursework systems programming class purpose sic teach introductory level systems programmers collegiate students write assemble code level languages sources sic emulating programs infrequent 
574759	computerscience	feed written feedforward term describing element pathway control passes controlling signal source external environment load external environment command signal external operator control feed behavior responds control signal pre defined responding load reacts contrast feedback adjusts output account load load vary unpredictably load considered belong external environment feed control variable adjustment error based based knowledge process form mathematical model process knowledge measurements process disturbances prerequisites control scheme reliable pure feed feedback external command controlling signal output load load predictably unchanging time pure feed control feedback called ballistic control signal adjusted corrective adjustment control signal contrast cruise control adjusts output response load encounters feedback mechanism systems relate control theory physiology computing overview feed feedforward control disturbances measured accounted time affect house feed measure door automatically heater house cold difficulty feed control effects disturbances accurately predicted unmeasured disturbances instance window measured feed controlled thermostat house cool term specific meaning field cpu based automatic control discipline “feedforward control” relates modern cpu based automatic controls discussed seldom practiced difficulty expense developing providing mathematical model required facilitate type control loop control feedback control based canned pid control algorithms types control systems loop feed feedback pure loop control manual power assisted steering motor car steering access auxiliary power source respond varying resistance direction wheels driver response steering comparison power steering access controlled auxiliary power source depends engine speed steering wheel valve fluid pressure driving wheels sensor monitors pressure valve correct pressure reach wheel mechanism feed control output change direction travel vehicle plays model predictive control include driver provide feedback path observing direction travel compensating errors steering wheel feedback block labeled figure feed systems types nested regarded black box feedforward control distinctly loop control teleoperator systems feedforward control requires mathematical model plant process machine controlled plant relationship inputs feedback receive loop control teleoperator systems require sophistication mathematical model physical plant controlled control based operator input integral processing interpretation mathematical model teleoperator considered feedforward control history historically term “feedforward” mackay 1956 mackay’s field biological control theory speaks feedforward systems mackay mention “feedforward control” allude discipline “feedforward controls mackay writers term “feedforward” writing theories human animal brains discipline “feedforward controls” developed professors graduate students georgia tech mit stanford carnegie mellon feedforward typically hyphenated scholarly publications meckl seering mit book dickerson georgia tech development concepts feedforward control mid 1970s discipline feedforward controls defined scholarly papers articles books late 1980s benefits benefits feedforward control justify extra cost time effort required implement technology control accuracy improved magnitude mathematical model sufficient quality implementation feedforward control law energy consumption feedforward control driver typically controls stability enhanced controlled device built cost lighter weight springier materials highly accurate operate speeds benefits feedforward control include reduced wear tear equipment maintenance costs reliability substantial reduction hysteresis feedforward control combined feedback control optimize performance model mathematical model plant machine process organism feedforward control created input control engineer learned control control systems capable learning adapting mathematical model practical microprocessor speeds increased discipline modern feedforward control microprocessors feedforward control requires integration mathematical model control algorithm determine control actions based controlled control lightweight flexible robotic arm simple compensating robot arm carrying payload target joint angles adjusted payload desired position based knowing deflections arm mathematical model’s interpretation disturbance caused payload systems plan actions pass plan execution satisfy definition feedforward control includes detect disturbance receive input process input mathematical model determine required modification control action true feedforward control systemontrol output contrast closed feedback loop control operation output fed input control operation applications physiological feed physiology feed control exemplified normal anticipatory regulation heartbeat advance actual physical exertion feed control likened learned anticipatory responses cues feedback regulation heartbeat adaptiveness running eventualities physical exertion feedforward systems biological control human animal brains biological feedforward systems human brain knowledge mental model plant body considered mathematical model characterized limits rhythms mechanics patterns pure feed homeostatic control function keeping body internal environment teady prolonged steady readiness homeostatic control relies feedback negative addition feedforward elements gene regulation feed cross regulation genes represented graph genes nodes node linked transcription factor motif appears networks coli yeast activates activate motif feed detecting temporary change environment feed control theme commonly observed hematopoietic cell lineage development irreversible commitments feed systems computing computing feed refers perceptron network outputs neurons preceding layers feedback loops connections set training phase feedback distance telephony 1970s intercity coaxial transmission systems including carrier feed amplifiers diminish linear distortion complex method allowed wider bandwidth earlier feedback systems optical fiber systems obsolete built automation machine control feedforward control discipline field automatic controls automation 
574775	computerscience	computing abstraction layer abstraction level hiding details subsystem allowing separation concerns facilitate interoperability platform independence examples software models layers abstraction include osi model network protocols opengl graphics libraries science abstraction layer generalization conceptual model algorithm specific implementation generalizations broad similarities encapsulated models express similarities specific implementations simplification abstraction layer easy reuse distilling concept design pattern situations accurately applied recognized layer considered depends layer exist layers requires layers function frequently abstraction layers composed hierarchy abstraction levels osi model comprises abstraction layers layer model encapsulates addresses digital communications reducing complexity engineering solutions famous aphorism david wheeler science solved level indirection deliberately misquoted abstraction substituted indirection misattributed butler lampson kevlin henney corollary layers indirection architecture architecture represented consisting abstraction levels programmable logic considered hardware logical definitions device software firmware firmware include level software include software including operating applications software layers divided hardware abstraction layers physical logical device drivers repositories filesystems operating kernels middleware applications distinction level programming languages vhdl machine language assembly language compiled language interpreter script language input output unix operating types input output operations considered streams bytes read device written device stream bytes model file socket terminal provide device independence read write device application level program calls function device real device terminal virtual device network port file file device physical characteristics mediated operating abstract interface programmer read write bytes device operating performs actual transformation read write stream bytes device graphics graphics libraries opengl provide abstract graphical device model interface library responsible translating commands programmer specific device commands draw graphical elements objects specific device commands plotter device commands crt monitor graphics library hides implementation device dependent details providing abstract interface set primitives drawing graphical objects 
575535	computerscience	instruction cycle fetch–decode–execute cycle fetch execute cycle basic operational process process retrieves program instruction memory determines actions instruction describes carries actions cycle repeated continuously central processing unit cpu boot shut simpler cpus instruction cycle executed sequentially instruction processed started modern cpus instruction cycles executed concurrently parallel instruction pipeline instruction starts processed previous instruction finished cycle broken separate steps steps cpu cycles based instruction sets cycle cycle repeated initiating cycle cycle power applied initial pc predefined architecture instance intel ia 32 cpus predefined pc codice typically address set instructions read memory rom process loading booting operating fetch step fetch step instruction control unit fetches instruction address memory unit decode step decoding process cpu determine instruction performed cpu operands fetch perform instruction opcode fetched memory decoded steps moved registers decoding cpu control unit reading effective address step evaluates type operation performed memory operation checks direct indirect memory operation register instruction checks type executes instruction execute step function instruction performed instruction involves arithmetic logic alu utilized stage instruction cycle perspective user overhead required execute step happen 
598445	computerscience	unix pronounced commercial versions unix operating originally developed released 1983 major versions released numbered release svr4 commercially successful version result effort marketed unix unification solicited collaboration major unix vendors source common commercial unix features abbreviated sysv unix market divided variants ibm aix hewlett packard hp ux oracle solaris xinuos unixware illumos distributions source opensolaris continuation overview introduction successor 1982 unix iii sold hardware customers version reseller based reference implementation standards document called interface definition outlined default features behavior implementations support formative phases software unix support usg unix development laboratory usdl systems attis finally unix laboratories usl rivalry bsd 1980s 1990s considered major versions unix berkeley software distribution bsd historically bsd commonly called bsd unix berkeley unix eric raymond summarizes longstanding relationship rivalry bsd period hp ibm chose basis unix offerings vendors sun microsystems dec extended bsd development infused features bsd bsd variants dec ultrix received features sun microsystems merge bsd based sunos produce solaris primary descendants 1990s standardization efforts posix commercial success linux division bsd releases svr1 bell labs unix succeeded previous commercial unix called iii january 1983 external release unix iv release called release svr1 developed unix support usg based bell labs internal usg unix included features editor curses bsd developed university california berkeley improved performance adding buffer inode caches support inter process communication messages semaphores shared memory developed earlier bell internal cb unix svr1 dec pdp 11 vax minicomputers svr2 unix support usg transformed unix development laboratory usdl released release 1984 svr2 functions svid svr2 demand paging write shared memory record file locking concept porting base formalized dec vax 11 780 chosen release porting base called original version release porting efforts machines emanate educational source licenses svr2 offered 800 cpu 400 additional cpu commercial source license offered 43 000 months support 16 000 price additional cpu apple ux operating initially based release sco xenix svr2 basis release hp ux svr2 derivative maurice bach book design unix operating definitive description svr2 kernel svr3 unix development laboratory usdl succeeded systems attis distributed unix release 1987 svr3 included streams remote file rfs file switch fss virtual file mechanism restricted form shared libraries transport layer interface tli network api final version release 1988 binary compatibility xenix intel platforms intel binary compatibility standard user interface improvements included layers windowing dmd 5620 graphics terminal svr3 curses libraries offered color pairs time features forms panels menus 3b2 official porting base sco unix based svr3 isc 386 ix obscure distributions svr3 386 esix everex release sold intel shipped plain vanilla codebase ibm aix operating svr3 derivative svr4 release announced october 18 1988 incorporated variety commercial unix products 1989 onwards joint project unix laboratories sun microsystems combined technology features included companies licensed svr4 bundled systems workstations network servers svr4 systems vendors included atari atari commodore amiga unix data dg ux fujitsu uxp ds hitachi ux hewlett packard hp ux ncr unix ns nec ews ux ux ux 4800 super ux oki oki pyramid technology dc osx sgi irix siemens sinix sony news os sumitomo electric industries seiux sun microsystems solaris illumos 2010s source platform software porting houses sold enhanced supported intel x86 versions svr4 software vendors included dell dell unix everex esix micro station technology svr4 microport svr4 uhc svr4 primary platforms svr4 intel x86 sparc sparc version called solaris internally sunos developed sun relationship sun terminated release svr4 meaning versions solaris inherit features svr4 releases sun 2005 release source code solaris sunos source opensolaris project creating forks source albeit heavily modified implementation oracle sun solaris forked proprietary release illumos continuation project developed source consortium intel based resellers including unisys icl ncr corporation olivetti developed svr4 0mp multiprocessing capability allowing calls processed processor interrupt servicing master processor release enhanced security security features required orange book b2 compliance access control lists support dynamic loading kernel modules svr4 unixware 1992 usl engaged joint venture novell called univel release univel unixware featuring veritas file vendors included uhc consensys release 2mp completed late 1993 support multiprocessing released unixware 1995 eric raymond warned prospective buyers svr4 versions include 1994 buyers guide attributes change policy unix laboratories svr5 unixware santa cruz operation sco owners xenix eventually acquired unixware trademark distribution rights release codebase novell vendors sun ibm hp continued extend release novell transferred ownership unix trademark operating meets single unix specification sus effectively successor interface definition granted unix rights sus met apple macos bsd derivative operating systems derived bsd release developed 1997 santa cruz operation sco merger sco openserver svr3 derivative unixware focus scale servers released sco unixware sco successor sco based sco openserver svr5 codebase major developer reseller svr6 canceled release announced sco released 2004 cancelled supposed support 64 bit systems industry coalesced single unix specification version unix 03 smallfootmarket position availability 1990s x86 platforms 1980s 1990s variety svr4 versions unix commercially x86 pc platform market commercial unix pcs declined linux bsd late 1994 eric raymond discontinued pc clone unix software buyer guide usenet stating reason dropping linux svr4 market 1998 confidential memo stated linux track eventually x86 unix market predicted linux – moreso nt – biggest threat sco future infoworld article 2001 characterized sco unixware bleak outlook trounced market linux solaris idc predicted sco continue shrinking share market project monterey project monterey started 1998 combine major features existing commercial unix platforms joint project compaq ibm intel sco sequent systems target platform meant intel ia 64 architecture itanium processors project abruptly canceled 2001 progress unix market 2001 major unix variants sco unixware compaq tru64 unix sgi irix decline major unix versions market ibm aix hewlett packard hp ux sun solaris 2006 sgi declared bankruptcy analysts questioned linux replace proprietary unix altogether 2006 article written computerworld mark hall economics linux cited major factor driving migration unix linux article cites trends performance computing applications evidence dramatic shift unix linux november 2015 survey 500 supercomputers unix running ibm aix linux 98 survey november 2017 reports 100 linux derivatives continued deployed proprietary server platforms principal variants remain commercial aix ibm solaris oracle hp ux hp study idc 2012 worldwide unix market divided ibm 56 oracle 19 hp 18 commercial unix vendor market industry analysts characterize proprietary unix entered period slow permanent decline opensolaris illumos distributions opensolaris derivatives svr4 descendants source software core software continues developed illumos illumos distributions smartos openindiana compatibility interprocess communication mechanisms unix operating systems derived linux reimplementation unix bsd derivative freebsd posix 2008 specifies replacement interfaces freebsd maintains binary compatibility layer coff format freebsd execute binaries compiled svr3 derivatives sco unix interactive unix modern linux bsd platforms elf file format natively compiled binaries 
605869	computerscience	software spell checker spell check software feature checks misspellings features software word processor email client electronic dictionary search engine design basic spell checker carries processes unclear morphological analysis—allowing forms word depending grammatical role—provides benefit english benefits highly synthetic languages german hungarian turkish adjunct components program user interface users approve reject replacements modify program operation alternative type spell checker solely statistical grams recognize errors correctly spelled approach requires lot effort sufficient statistical key advantages include runtime storage ability correct errors included dictionary spell checkers fixed list misspellings suggestions misspellings flexible approach paper based correction methods entries encyclopedias clustering algorithms spell checking combined phonetic history 1961 les earnest headed budding technology include spell checker accessed list 000 acceptable ralph gorin graduate student earnest time created true spelling checker program written applications program english spell dec pdp stanford university artificial intelligence laboratory february 1971 gorin wrote spell assembly language faster action spelling corrector searching word list plausible correct spellings single letter adjacent letter transpositions user gorin spell publicly accessible sail stanford artificial intelligence laboratory programs spread arpanet personal computers spell algorithms data structures inspired unix ispell program spell checkers mainframe computers late 1970s linguists georgetown university developed spell check ibm corporation spell checkers personal computers appeared 1980 wordcheck commodore systems released late 1980 time advertisements print january 1981 henry kučera invented vax machines digital equipment corp 1981 developers maria mariani random house rushed oem packages user products rapidly expanding software market pc apple macintosh vax unix pcs spell checkers standalone programs tsr mode word processing packages pcs sufficient memory market standalone packages short lived mid 1980s developers popular word processing packages wordstar wordperfect incorporated spell checkers packages licensed companies expanded support english european eventually asian languages required increasing sophistication morphology routines software regard heavily agglutinative languages hungarian finnish size word processing market country iceland justified investment implementing spell checker companies wordperfect strove localize software national markets global marketing strategy firefox browser spell check support user written content editing wikitext writing webmail sites blogs social networking websites browsers google chrome konqueror opera email client kmail instant messaging client pidgin offer spell checking support transparently gnu aspell hunspell engine mac os spell check wide extending service virtually bundled party applications spell checkers separate support medical dictionaries prevent medical errors functionality spell checkers verifiers correctors offered suggestions incorrectly spelled helpful typos helpful logical phonetic errors challenge developers faced difficulty offering suggestions misspelled requires reducing skeletal form applying pattern matching algorithms logical spell checking dictionaries concerned bigger correct marked incorrect practice optimal size english appears 90 000 entries incorrectly spelled skipped mistaken linguist determine basis corpus linguistics word baht frequently misspelling bath bat reference thai currency typically people write thai currency inconvenienced spelling errors people discuss baths overlooked dos spell checkers proofing mode word processing packages preparing document user scanned misspellings batch processing offered packages oracle short lived coauthor allowed user view document processed correct wrong memory processing power abundant spell checking performed background interactive sector software produced spellbound program released 1987 word word 95 spell checkers increasingly sophisticated capable recognizing simple grammatical errors rarely catch errors homophone errors flag neologisms foreign misspellings spell checkers considered type foreign language writing aid native language learners rely detect correct misspellings target language spell checking english languages english unusual formal writing single spelling typical dictionary exception jargon modified languages concatenated combinations german compound nouns frequently coined existing nouns scripts separate word requiring word splitting algorithms unique challenges english language spell checkers context sensitive spell checkers successful algorithm andrew golding dan roth winnow based spelling correction algorithm published 1999 recognize 96 context sensitive spelling errors addition ordinary word spelling errors context sensitive spell checker appears office 2007 google wave ghotit dyslexia software context spell checker tuned people dyslexia criticism critics technology computers attempted link spell checkers trend skill losses writing reading speaking claim computers people lazy proofreading written simple pass spell checker supporters claim beneficial society writing learning languages accessible ordinary people claim skills lost automated spell checkers replaced skills faster efficient skills supporters technology skills lost people written language frequently authors journalists folly relying completely spell checkers spell checker poem originally composed dr jerrold zar 1991 assisted mark eckman original 225 123 incorrectly unsophisticated spell checkers poem valid people simple glance incorrectly result spell checkers derided spilling chuckers misspelled names critics opponents technological progress article based galletta reports verbal skills performance spell checker theory suggested writers verbal skills recognize ignore false positives incorrect suggestions skills lost unaided performance advantage multiple categories errors performing verbals spell checkers conclusion evidence loss skill 
607674	computerscience	science symbolic execution symbolic evaluation analyzing program determine inputs program execute interpreter program assuming symbolic values inputs obtaining actual inputs normal execution program abstract interpretation arrives expressions terms symbols expressions variables program constraints terms symbols outcomes conditional branch field symbolic simulation applies concept hardware symbolic computation applies concept analysis mathematical expressions program reads fails input normal execution concrete execution program read concrete input assign execution proceed multiplication conditional branch evaluate false print symbolic execution program reads symbolic λ assigns program proceed multiplication assign λ reaching statement evaluate λ 12 program λ symbolic execution proceed branches forking paths path assigned program branch instruction path constraint path constraint λ 12 branch λ 12 branch paths symbolically executed independently paths terminate result executing fail simply exiting symbolic execution computes concrete λ solving accumulated path constraints path concrete values concrete developers reproduce bugs constraint solver determine reach fail statement λ equal limitations path explosion symbolically executing feasible program paths scale programs feasible paths program grows exponentially increase program size infinite programs unbounded loop iterations solutions path explosion heuristics path finding increase code coverage reduce execution time parallelizing independent paths merging paths program dependent efficiency symbolic execution reason program path path advantage reasoning program input input testing paradigms dynamic program analysis inputs path program savings testing inputs separately environment interactions programs interact environment performing calls receiving signals consistency execution reaches components control symbolic execution tool kernel libraries syntaxhighlight lang main syntaxhighlight program file based condition writes data file reads written data theory symbolic execution fork paths path file statement 11 return data consistent condition practice file operations implemented calls kernel control symbolic execution tool main approaches address challenge executing calls environment advantage approach simple implement disadvantage effects calls clobber managed symbolic execution engine instruction 11 return datasome data datasomedata depending sequential modeling environment engine instruments calls model simulates effects effects storage advantage correct symbolically executing programs interact environment disadvantage implement maintain complex models calls tools klee cloud9 otter approach implementing models file operations sockets ipc forking entire symbolic execution tools based virtual machines solve environment forking entire vm s2e independent vm snapshot executed separately approach alleviates writing maintaining complex models virtually program binary executed symbolically memory usage overheads vm snapshots history concept symbolic execution introduced academically descriptions select effigy dissect clarke bibliography technical papers published symbolic execution 
625728	computerscience	javaos operating java virtual machine fundamental component originally developed sun microsystems windows mac os unix unix systems written programming language javaos written java considered legacy history javaos originally announced 1996 sun javasoft subsidiary compact os designed computers pagers 1998 sun recruited ibm accelerate development ibm focus network clients replace traditional green screen unix terminals implement single application clients boots independently supports password protected login device drivers window api execute java applets time java soft granted licenses 25 manufacturers including oracle corp acer xerox toshiba corp nokia ibm sun announced cooperation javaos business march 1998 1999 sun ibm announced javaos project 2003 sun materials referred javaos legacy technology recommending migration java leaving choice specific os java environment implementer design based hardware architecture native microkernel java virtual machine runs microkernel platforms kernel runs include device drivers written java executed virtual machine graphics windowing implementing awt api written java applications javaos designed embedded systems applications devices set boxes networking infrastructure atms operating javastation 
643342	computerscience	gödel prize annual prize outstanding papers theoretical science jointly european association theoretical science eatcs association computing machinery special algorithms computational theory acm sigact award named honor kurt gödel gödel connection theoretical science mention question 1956 letter john von neumann gödel complete solved quadratic linear time gödel prize awarded 1993 prize awarded stoc acm symposium theory computing main north american conferences theoretical science icalp international colloquium automata languages programming main european conferences field eligible prize paper published refereed journal 14 prize includes reward 5000 winner prize selected committee eatcs president sigact chair appoint committee serve staggered terms committee chaired alternately representatives eatcs sigact 
645315	computerscience	bus network network topology nodes connected common linear branched duplex link called bus function host bus network called station workstation bus network station receive network traffic traffic generated station equal transmission priority bus network forms single network segment collision domain nodes transmit bus simultaneously media access control technology carrier sense multiple access csma bus master link segment bus severed network transmission ceases signal bounce caused lack terminating resistor 
653404	computerscience	theory computation branch theoretical science deterministic finite automaton dfa —also deterministic finite acceptor dfa deterministic finite machine dfsm deterministic finite automaton dfsa —is finite machine accepts rejects strings symbols produces unique computation automaton input string deterministic refers uniqueness computation search simplest models capture finite machines warren mcculloch walter pitts researchers introduce concept finite automata 1943 figure illustrates deterministic finite automaton diagram automaton s0 s1 s2 denoted graphically circles automaton takes finite sequence 0s 1s input transition arrow leading reading symbol dfa jumps deterministically transition arrow automaton s0 current input symbol deterministically jumps s1 dfa start denoted graphically arrow coming computations set accept denoted graphically double circle define computation successful dfa defined abstract mathematical concept implemented hardware software solving specific dfa model software decides online user input email addresses valid dfas recognize set regular languages lexical analysis pattern matching dfas built nondeterministic finite automata nfas powerset construction method formal definition deterministic finite automaton tuple consisting oflet string alphabet automaton accepts string 11 sequence 12 exists conditions condition machine starts start 18 condition character string 11 machine transition transition function 20 condition machine accepts 11 input 11 machine halt accepting automaton rejects string set strings accepts language recognized language denoted 25 deterministic finite automaton accept starting transition semiautomaton comprehensive introduction formal definition automata theory complete incomplete definition deterministic finite automata complete define transition input symbol common definition authors term deterministic finite automaton notion automaton defines transition input symbol transition function allowed partial transition defined automaton halts dfa binary alphabet requires input 0s 27 wherethe 33 represents 0s input 34 signifies odd input change automaton input input contained 0s input 0s finish 33 accepting input string accepted language recognized regular language regular expression codice codice kleene star codice denotes consecutive closure properties dfas recognize languages applying operation dfa recognizable languages dfas closed operation dfas closed operations operation optimal construction respect determined complexity dfas equivalent nondeterministic finite automata nfa closures proved closure properties nfa transition monoid dfa sequence compositions formulation transition function construct function input symbol 38 construct transition function defining 40 41 trick called currying perspective 42 acts yield result function composition repeatedly applied functions 42 44 pair letters 45 define function 46 47 denotes function composition process recursively continued recursive definition 48 54 defined 55 dfa sequence compositions 54 repeated function composition forms monoid transition functions monoid transition monoid transformation semigroup construction reversed 54 reconstruct 20 descriptions equivalent local automata local automaton dfa edges label lead single vertex local automata accept class local languages membership word language determined sliding window word myhill graph alphabet directed graph vertex set subsets vertices labelled start finish language accepted myhill graph set directed paths start vertex finish vertex graph acts automaton class languages accepted myhill graphs class local languages random start accept dfa 59 alphabet size 60 digraph 59 vertices vertices 60 arcs labeled 63 60 digraph 65 fixed integer probability largest connected component scc 60 digraph chosen uniformly random linear size reached vertices proven 60 allowed increase 59 increases digraph phase transition strong connectivity erdős–rényi model connectivity random dfa maximum vertices reachable vertex close vertices largest scc probability true largest induced digraph minimum degree directed version 69 core advantages disadvantages dfas practical models computation trivial linear time constant space online algorithm simulate dfa stream input efficient algorithms dfa recognizing dfas reduced canonical form minimal dfas efficient algorithms determine dfas equivalent computing power nondeterministic finite automata nfas firstly dfa nfa nfa dfa nfa powerset construction build dfa recognizes language nfa dfa exponentially larger nfa nfas computationally equivalent dfas mentioned solved efficiently nfas universality nfas pspace complete nfas shortest rejecting word exponential size dfa universal final hold nfas equality inclusion minimization pspace complete require forming complement nfa exponential blow size hand finite automata strictly limited power languages recognize simple languages including requires constant space solve recognized dfa classic simply language dfa recognize bracket dyck language language consists properly paired brackets word intuitively dfa recognize dyck language dfas capable counting dfa automaton represent parentheses meaning unbounded simpler language consisting strings form anbn finite arbitrary apos equal apos 
653406	computerscience	automata theory finite machine called deterministic finite automaton dfa ifa nondeterministic finite automaton nfa nondeterministic finite machine obey restrictions dfa nfa term nfa narrower sense referring nfa dfa article subset construction algorithm nfa translated equivalent dfa dfa recognizing formal language dfas nfas recognize regular languages nfas introduced 1959 michael rabin dana scott equivalence dfas nfas implementation regular expressions thompson construction algorithm compiling regular expression nfa efficiently perform pattern matching strings nfas generalized multiple nondeterministic finite automaton ε moves finite transducers pushdown automata alternating automata ω automata probabilistic automata dfas special nfasare unambiguous finite automata ufa verifying finite automata svfa informal introduction nfa dfa consumes string input symbols input symbol transitions input symbols consumed dfa deterministic input symbol formal definition element power set set considered notion accepting input dfa input symbol consumed nfa accepts set transitions accepting equivalently rejects matter transitions applied accepting formal definition nfa represented formally tuple consisting ofhere denotes power set 11 word alphabet automaton 13 accepts word 14 sequence 15 exists conditions condition machine starts start 21 condition character string 14 machine transition transition function condition machine accepts 14 input 14 machine halt accepting 14 accepted 13 required sequence accepting sufficient impossible 21 14 automaton rejects string set strings 13 accepts language recognized 13 language denoted 33 define 33 terms 35 41 note single initial nfas defined set initial easy construction translates nfa multiple initial nfa single initial convenient notation elementary introduction formal definition automata theory 13 nfa binary alphabet determines input formal notation 43 wherethe transition function defined transition table note 45 13 nondeterministic language 13 regular language regular expression codice sequences input word 1011 word accepted 13 sequence satisfies definition matter sequences fail contrast word rejected 13 reach accepting 50 reading final symbol ε transition equivalence dfa deterministic finite automaton dfa special nfa alphabet transition function formal language recognized dfa recognized nfa conversely nfa dfa recognizes formal language dfa constructed powerset construction result nfas additional flexibility unable recognize languages recognized dfa practice converting easier construct nfas efficiently executable dfas nfa dfa construction impractical nfas nfa ε moves nondeterministic finite automaton ε moves nfa ε generalization nfa automaton replaces transition function string ε input transitions consuming input symbol called ε transitions diagrams labeled greek letter ε ε transitions provide convenient modeling systems current precisely modeling current processing input string add ε transition putting automaton simultaneously formal definition nfa ε represented formally tuple consisting ofhere denotes power set ε denotes string ε closure set 60 61 denote set reachable 50 ε transitions transition function 64 sequence 65 thatformula 61 ε closure 50 ε closure defined set ε closure set 71 nfa defined set reachable 71 ε transitions formally 73∪q∈p accepting 11 word alphabet automaton 13 accepts word 14 sequence 15 exists conditions condition machine starts reachable start 21 ε transitions condition reading 86 machine takes transition 88 89 takes ε transitions 89 92 condition machine accepts 14 input 14 machine halt accepting automaton rejects string set strings 13 accepts language recognized 13 language denoted 33 13 nfa ε binary alphabet determines input 0s 1s note occurrences occurrences formal notation 99 wherethe transition relation defined transition table 13 viewed union dfas 102 103 language 13 regular language regular expression 01 01 ∪ define 13 ε moves 13 defined ε moves equivalence nfa nfa ε equivalent nfa note nfa special nfa ε remains nfa ε exists equivalent nfa 107 nfa ε nfa 108 equivalent 109 110 60 112 nfa ε equivalent nfa nfa equivalent dfa nfa ε equivalent dfa closure properties nfas closed binary unary operatorif nfas recognize languagesthat applying operation nfa recognizable languages nfas closed operations nfas equivalent nondeterministic finite automaton ε moves nfa ε closures proved closure properties nfa ε closure properties imply nfas recognize regular languages nfas constructed regular expression thompson construction algorithm properties machine starts initial reads string symbols alphabet automaton transition function determine current symbol read string nfa depends current input event arbitrary subsequent input events subsequent events occur determine machine automaton finished reading accepting nfa accept string reject string set strings accepted nfa language nfa accepts language regular language nfa deterministic finite automaton dfa accepts language convert existing nfa dfa purpose implementing simpler machine performed powerset construction lead exponential rise formal proof powerset construction powerset construction article implementation implement nfa application nfa nfas dfas equivalent language recognized nfa recognized dfa vice versa establishment equivalence constructing nfa recognize language easier constructing dfa language nfas reduce complexity mathematical required establish properties theory computation easier prove closure properties regular languages nfas dfas 
655694	computerscience	nx bit execute technology cpus segregate memory storage processor instructions code storage data feature harvard architecture processors nx bit increasingly conventional von neumann architecture processors security reasons operating support nx bit mark memory executable processor refuse execute code residing memory technique executable space protection prevent types malicious software computers inserting code program data storage running code class attacks buffer overflow attack intel markets feature xd bit execute disable advanced micro devices amd marketing term enhanced virus protection evp arm architecture refers feature introduced armv6 xn execute term nx bit technologies processors architecture support x86 x86 processors 80286 included capability implemented segment level operating systems 80386 x86 processors implement flat memory model capability executable flag table entry descriptor processors capability operating systems flat memory model amd execute nx bit table entry amd64 architecture providing mechanism control execution segment intel implemented feature itanium merced processor—having ia 64 architecture—in 2001 bring popular x86 processor families pentium celeron xeon x86 architecture implemented amd nx bit amd64 processors athlon 64 opteron amd decision include functionality amd64 instruction set intel implemented xd bit feature x86 processors pentium processors based iterations prescott core nx bit refers bit 63 bit 64 bit entry table bit set code executed set code executed residing assumed data mode 64 bit mode legacy physical address extension pae table formats x86 original 32 bit table format table entries format lack 63rd bit disable enable execution arm armv6 table entry format introduced includes execute bit armv8 vmsav8 64 block descriptors vmsav8 32 descriptor block descriptors stage translations execute bits privileged unprivileged modes block descriptors stage translations single execute bit bits armv8 tts2uxn feature vmsav8 32 short descriptor translation table descriptors level execute bits privileged unprivileged mode level single execute bit alpha fourth edition alpha architecture manual dec hp alpha fault execute bit table entries openvms tru64 unix alpha linux palcode sparc sparc reference mmu sun sparc version permission values read read write read execute read write execute table entries sparc processors sparc reference mmu sparc version mmu provide required provide combination read write execute permissions translation table entry translation storage buffer oracle sparc architecture 2011 draft d1 separate executable writable bits powerpc power isa table entries ibm powerpc hashed tables execute bit table entries radix tree tables power isa separate permission bits granting read write execute access risc translation lookaside buffer tlb entries table entries risc risc support read read write read execute read write execute itanium tlb entries itanium support read read write read execute read write execute architecture twelfth edition architecture principles operation architecture processors support instruction execution protection facility adds bit table entries controls instructions region segment executed 
669369	computerscience	tinyos embedded component based operating platform power wireless devices wireless sensor networks wsns smartdust ubiquitous computing personal networks building automation smart meters written programming language nesc set cooperating tasks processes collaboration university california berkeley intel crossbow technology released source software bsd license grown international consortium tinyos alliance tinyos space implemented estcube implementation tinyos applications written programming language nesc dialect language optimized memory limits sensor networks supplementary tools form java script libraries tools nesc compiler atmel avr binutils toolchains written tinyos programs built software components hardware abstractions components connected interfaces tinyos interfaces components common abstractions packet communication routing sensing actuation storage tinyos blocking stack input output operations microseconds asynchronous callback enable native compiler optimize boundaries tinyos nesc features link callbacks called events statically blocking enables tinyos maintain concurrency stack forces programmers write complex logic stitching event handlers support larger computations tinyos tasks deferred procedure interrupt handler halves tinyos component post task os schedule tasks preemptive simple concurrency model typically sufficient centric applications difficulty cpu heavy applications led developing thread library os named tosthreads tosthreads unmaintained deprecated tinyos code statically linked program code compiled binary custom gnu toolchain utilities complete development platform tinyos history tinyos project uc berkeley darpa nest program grown involve thousands academic commercial developers users worldwide list reverse chronological integrated development environments 2010 integrated development environments ides tinyos plug ins eclipse 
685151	computerscience	explicitly parallel instruction computing epic term coined 1997 hp–intel alliance computing paradigm researchers investigating 1980s paradigm called independence architectures basis intel hp development intel itanium architecture hp asserted epic term itanium architecture epic permits microprocessors execute software instructions parallel compiler complex die circuitry control parallel instruction execution intended simple performance scaling resorting clock frequencies roots vliw 1989 researchers hp recognized reduced instruction set risc architectures reaching limit instruction cycle investigation architecture named epic basis vliw multiple operations encoded instruction processed multiple execution units goal epic complexity instruction scheduling cpu hardware software compiler instruction scheduling statically trace feedback eliminates complex scheduling circuitry cpu frees space power functions including additional execution resources equally goal exploit instruction level parallelism ilp compiler exploit additional opportunities parallel execution vliw original forms short comings precluded mainstream epic architecture evolved vliw architecture retained concepts superscalar architecture moving vliw epic architectures add features deficiencies ofvliw epic architecture includes grab bag architectural concepts increase ilp itanium architecture rotating register files tool software pipelining avoids manually unroll rename registers development investigations epic architectures tied development itanium architecture 
689427	computerscience	latent semantic analysis lsa technique natural language processing distributional semantics analyzing relationships set documents terms producing set concepts documents terms lsa assumes close meaning occur pieces distributional hypothesis matrix word counts paragraph rows represent unique columns represent paragraph constructed piece mathematical technique called singular decomposition svd reduce rows preserving similarity structure columns compared cosine angle vectors dot product normalizations vectors formed rows values close represent values close represent dissimilar retrieval technique latent semantic structure patented 1988 patent 839 853 expired scott deerwester susan dumais george furnas richard harshman thomas landauer karen lochbaum lynn streeter context application retrieval called latent semantic indexing lsi overview occurrence matrix lsa term document matrix describes occurrences terms documents sparse matrix rows correspond terms columns correspond documents typical weighting elements matrix idf term frequency–inverse document frequency weight element matrix proportional times terms document rare terms upweighted reflect relative matrix common standard semantic models explicitly expressed matrix mathematical properties matrices rank lowering construction occurrence matrix lsa rank approximation term document matrix reasons approximations consequence rank lowering dimensions combined depend term mitigates identifying synonymy rank lowering expected merge dimensions terms meanings mitigates polysemy components polysemous direction components share meaning conversely components directions tend simply cancel worst components directions intended sense derivation matrix element describes occurrence term document frequency row matrix vector term relation document column matrix vector document relation term dot product term vectors correlation terms set documents matrix product dot products element 11 equal element 12 dot product 14 matrix 15 dot products document vectors correlation terms 16 theory linear algebra exists decomposition 18 19 orthogonal matrices 20 diagonal matrix called singular decomposition svd matrix products term document correlations becomesince 23 24 diagonal 18 eigenvectors 19 eigenvectors 15 products eigenvalues entries 23 equally entries 30 decomposition values 32 called singular values 33 34 left singular vectors notice 18 contributes 36 37 row row vector called 38 contributes 40 41 column 42 eigenvectors depend eigenvectors select 43 largest singular values singular vectors 18 19 rank 43 approximation error frobenius norm approximation minimal error importantly treat term document vectors semantic space row term vector 48 43 entries mapping dimensional space dimensions dimensions relate comprehensible concepts dimensional approximation dimensional space document vector 50 approximation dimensional space write approximation asyou translate query dimensional space intuitive transformation documents note inverse diagonal matrix 62 inverting nonzero matrix query vector 53 translation 64 compare document vectors dimensional space pseudo term vectors applications dimensional space typically synonymy polysemy fundamental natural language processing commercial applications lsa assist performing prior art searches patents applications human memory latent semantic analysis prevalent study human memory recall memory search positive correlation semantic similarity measured lsa probability recalled recall tasks study lists random common nouns situations inter response time quicker dissimilar findings referred semantic proximity participants mistakes recalling studied items mistakes tended items semantically desired item studied list prior list intrusions called compete items current list recall model termed word association spaces memory studies collecting association data series experiments includes measures word relatedness 72 000 distinct word pairs implementation svd typically computed matrix methods lanczos methods computed incrementally greatly reduced resources neural network approach require rank matrix held memory fast incremental memory matrix svd algorithm developed matlab python implementations fast algorithms gorrell webb 2005 stochastic approximation brand algorithm 2003 exact solution progress reduce computational complexity svd instance parallel arpack algorithm perform parallel eigenvalue decomposition speed svd computation cost providing comparable prediction quality limitations lsa drawbacks include alternative methods semantic hashing semantic hashing documents mapped memory addresses neural network semantically documents located nearby addresses deep neural network essentially builds graphical model word count vectors set documents documents query document simply accessing addresses bits address query document extending efficiency hash coding approximate matching faster locality sensitive hashing fastest current method latent semantic indexing latent semantic indexing lsi indexing retrieval method mathematical technique called singular decomposition svd identify patterns relationships terms concepts contained unstructured collection lsi based principle contexts tend meanings key feature lsi ability extract conceptual content body establishing associations terms occur contexts lsi application correspondence analysis multivariate statistical technique developed jean paul benzécri 1970s contingency table built word counts documents called indexing ability correlate terms collection applied bellcore late 1980s method called latent semantic analysis lsa uncovers underlying latent semantic structure usage body extract meaning response user queries commonly referred concept searches queries concept searches set documents undergone lsi return conceptually meaning search criteria don’t share specific word search criteria benefits lsi lsi overcomes problematic constraints boolean keyword queries multiple meanings synonymy synonymy mismatches vocabulary authors documents users retrieval systems result boolean keyword queries return irrelevant relevant lsi perform automated document categorization experiments demonstrated correlations lsi humans process categorize document categorization assignment documents predefined categories based similarity conceptual content categories lsi documents establish conceptual basis category categorization processing concepts contained documents categorized compared concepts contained items category categories assigned documents based similarities concepts concepts contained documents dynamic clustering based conceptual content documents accomplished lsi clustering documents based conceptual similarity documents establish conceptual basis cluster dealing unknown collection unstructured strictly mathematical approach lsi inherently independent language enables lsi elicit semantic content written language requiring auxiliary structures dictionaries thesauri lsi perform cross linguistic concept searching based categorization queries language english conceptually returned composed language multiple languages lsi restricted process arbitrary character strings object expressed represented lsi vector space tests medline abstracts lsi effectively classify genes based conceptual modeling biological contained titles abstracts medline citations lsi automatically adapts changing terminology tolerant noise misspelled typographical errors unreadable characters applications derived optical character recognition ocr speech conversion lsi deals effectively sparse ambiguous contradictory data sentence form lsi effective lists form notes email based content collection multiple terms lsi identify patterns relationships terms concepts contained lsi proven solution conceptual matching technique capture key relationship including causal goal oriented taxonomic mathematics lsi lsi common linear algebra techniques learn conceptual correlations collection process involves constructing weighted term document matrix performing singular decomposition matrix matrix identify concepts contained term document matrix lsi constructing term document matrix 68 identify occurrences 69 unique terms collection 70 documents term document matrix term represented row document represented column matrix cell 71 initially representing times term appears document 72 matrix sparse term document matrix constructed local global weighting functions applied condition data weighting functions transform cell 71 68 product local term weight 75 describes relative frequency term document global weight 76 describes relative frequency term entire collection documents common local weighting functions defined table common global weighting functions defined table empirical studies lsi report log entropy weighting functions practice data sets entry 71 68 computed rank reduced singular decomposition rank reduced singular decomposition performed matrix determine patterns relationships terms concepts contained svd forms foundation lsi computes term document vector spaces approximating single term frequency matrix 68 matrices— term concept vector matrix 82 singular values matrix 83 concept document vector matrix 84 satisfy relations 85formula 86formula 87in supplied weighted matrix term frequencies collection unique terms documents computed matrix term vectors rank a—a measure unique dimensions ≤ min computed diagonal matrix decreasing singular values computed matrix document vectors svd truncated reduce rank keeping largest « diagonal entries singular matrix typically 100 300 dimensions effectively reduces term document vector matrix sizes svd operation reduction preserving semantic reducing noise undesirable artifacts original space reduced set matrices denoted modified efficient lsi algorithms compute singular values term document vectors opposed computing svd truncating note rank reduction essentially principal component analysis pca matrix pca subtracts pca loses sparseness matrix infeasible lexicons querying augmenting lsi vector spaces computed matrices define term document vector spaces computed singular values embody conceptual derived document collection similarity terms documents spaces factor close spaces typically computed function angle vectors steps locate vectors representing queries documents document space existing lsi simple transformation dt equation equivalent s−1 equation vector query document created computing column multiplying column s−1 column computed originally derived global term weights applying local weighting function terms query document drawback computing vectors adding searchable documents terms svd phase original terms impact global weights learned correlations derived original collection computed vectors relevant similarity comparisons document vectors process augmenting document vector spaces lsi documents manner called folding folding process account semantic content adding substantial documents provide queries terms concepts represented lsi terms concepts set documents included lsi term document matrix svd recomputed incremental update method additional lsi acknowledged ability semantic basis essential modern retrieval systems result lsi expanded earlier challenges scalability performance overcome lsi variety retrieval processing applications primary application concept searching automated document categorization lsi lsi increasingly electronic document discovery ediscovery enterprises prepare litigation ediscovery ability cluster categorize search collections unstructured conceptual basis essential concept based searching lsi applied ediscovery process leading providers 2003 challenges lsi challenges lsi focused scalability performance lsi requires computational performance memory comparison retrieval techniques implementation modern speed processors availability inexpensive memory considerations overcome real applications involving 30 documents processed matrix svd computations common lsi applications scalable unlimited documents online training implementation lsi contained source gensim software package challenge lsi alleged difficulty determining optimal dimensions performing svd rule dimensions broader comparisons concepts contained collection dimensions enable specific relevant comparisons concepts actual dimensions limited documents collection demonstrated 300 dimensions provide moderate sized document collections hundreds thousands documents 400 dimensions larger document collections millions documents studies 50 1000 dimensions suitable depending size nature document collection checking variance data computing svd determine optimal dimensions retain variance contained data viewed plotting singular values scree plot lsi practitioners select dimensionality knee curve cut dimensions retain argue quantity variance retained variance data dictate proper dimensionality retain percent mentioned variance data select optimal dimensionality recomputing svd external links implementations cross domain applications retrieval natural language processing nlp cognitive science computational linguistics lsa implemented support kinds applications 
692634	computerscience	komatsu コマツ japanese multinational corporation manufactures construction mining forestry military equipment industrial equipment press machines lasers thermoelectric generators headquarters minato tokyo japan corporation named city komatsu ishikawa company founded 1921 worldwide komatsu consists komatsu 266 companies 227 consolidated subsidiaries 38 companies accounted equity method komatsu largest manufacturer construction equipment mining equipment caterpillar japan china komatsu larger share caterpillar manufacturing operations japan asia americas europe japanese 小松 ko matsu pine tree named komatsu city ishikawa prefecture history komatsu iron started takeuchi mining industry subsidiary industrial tools parent company komatsu eventually sell public spun 13 1921 komatsu komatsu produced agricultural tractor prototype 1931 1930s komatsu produced tractors japanese military bulldozers tanks howitzers war president yoshinari kawai komatsu military bulldozers forklifts equipment 1949 production diesel engine growth company aided strong demand bulldozers japan post war reconstruction 1950s august 1951 corporate headquarters moved tokyo 1957 company advanced technologically models komatsu engines 1964 rioichi kawai son yoshinari kawai president komatsu exporting products counteract postwar image japanese products cheap july 1967 entered market caterpillar largest bulldozer maker market company slogan maru translating english encircle caterpillar game board game encircling opponent capture territory expansion overseas major focus 1970s komatsu america corporation established february 1970 united january 1971 komatsu singapore pte established singapore september 1974 founding dina komatsu nacional joint venture truck maker dina mexico april 1975 founding komatsu brasil ltda brazil company produced komatsu d50a bulldozer marking komatsu offshore production construction equipment komatsu australia pty australia established feb 1979 1980s komatsu international harvester united joint venture produce compact tractors called kimco 1982 komatsu indonesia founded production 1983 indonesia divisions united established manufacturing 1985 komatsu america manufacturing corp komatsu america industries llc komatsu industries europe gmbh set 1986 germany komatsu dresser industries established komatsu dresser mining tractors equipment 1988 50 50 ownership lasted september 1988 august 1994 komatsu bought dresser share komatsu mining products consolidated komatsu mining systems 1997 prevent brand confusion corporate haulpak product komatsu dresser haulpak dates 1957 letourneau westinghouse introduced range rear dump trucks haulpaks letourneau westinghouse equipment simply wabco equipment 1967 haulpak industry term eventually applied type rear dump truck detailed history development haulpak wabco australia 1989 komatsu bought share hanomag 2002 komatsu hanomag gmbh 100 subsidiary global company 1990s komatsu joint venture europe moxy komatsu designed articulated dump truck built license european market moxy 2008 moxy doosan korea fai italy invested 1991 komatsu equity increased company renamed 1985 fki fai komatsu industries renamed 2000 komatsu utility europe komatsu assumed 100 ownership komatsu owns demag range mining machines upgrades basically pc3000 demag h185 200 built brands model 1993 joint ventures formed cummins komatsu cummins engine corporation kcec manufacture cummins engines japan cummins komatsu engine corporation ckec manufacture komatsu engines united joint venture set 1997 manufacture industrial engines japan additional overseas expansion asia accomplished 1990s komatsu vietnam vietnam 1995 komatsu changlin construction machinery renamed komatsu changzhou construction machinery corporation november 2000 changzhou china 1995 komatsu shantui construction machinery 1995 bangkok komatsu thailand komatsu shanghai 1996 shanghai china industrial power alliance japan joint venture cummins 1998 komatsu limited india 1998 shares sold 2013 komatsu brasil international ltda brazil 1998 2000s komatsu linde germany sales manufacturing lift trucks 2001 komatsu established galeo brand generation construction equipment worldwide distribution 2002 komatsu italy established 2004 komatsu forest ab established purchase sweden partek forest ab valtra valmet manufacturer forest machinery 2004 founded komatsu zenoah shandong machine china renamed komatsu utility machine 2007 manufacture mini excavators hydraulic equipment founding komatsu power generation systems shanghai manufacture power generators komatsu forklift manufacturing china founded 2004 china produce forklifts komatsu moved russia 2008 komatsu manufacturing rus llc founded production 2010 
705833	computerscience	japanese manufacturer servos motion controllers ac motor drives switches industrial robots motoman robots heavy duty industrial robots welding packaging assembly coating cutting material handling automation company founded 1915 head office located kitakyushu fukuoka prefecture yaskawa applied trademark term mechatronics 1969 approved 1972 head office kitakyushu designed american architect antonin raymond 1954 company listed tokyo fukuoka stock exchange constituent nikkei 225 stock subsidiaries yaskawa business hubs 29 countries production bases 12 countries including japan 81 subsidiaries 24 affiliate companies globe 
727420	computerscience	digital electronics computing hardware registers circuits typically composed flip flops characteristics memory distinguishing characteristic special hardware functions ordinary memory depending view hardware registers memory additional hardware functions memory circuits hardware registers store data hardware registers interface software peripherals software writes send device reads device hardware devices include registers visible software internal depending complexity modern hardware devices registers standard integrated circuits typically document externally exposed registers electronic component datasheet functionality typical hardware registers include reading hardware register peripheral units hardware cpu involves accessing memory mapped address port mapped address load store instruction issued processor hardware registers addressed bits word read written register commercial design tools simplify automate memory mapped register specification code generation hardware firmware hardware verification testing documentation registers read write read write write registers avoided suitable registers transient action written store persistent data read set peripheral register option designs afford gates logic circuit signal routing register data readback atari 2600 games console tia chip write registers debugging difficult lead read modify write read write registers preferred pcs write registers difficult advanced configuration power interface acpi determine device entering sleep mode restore exiting sleep mode register varieties hardware registers central processing unit cpu called processor registers strobe registers interface normal hardware registers storing data trigger action time written rare read signaling registers measured bits hold bit register 32 bit register designers implement registers wide variety including addition programmer visible registers read written software chips internal microarchitectural registers machines pipelining registered memory standards spirit ip xact dita sidsc xml define standard xml formats memory mapped registers 
728216	computerscience	memory barrier membar memory fence fence instruction type barrier instruction central processing unit cpu compiler enforce constraint memory operations issued barrier instruction typically operations issued prior barrier guaranteed performed operations issued barrier memory barriers modern cpus employ performance optimizations result execution reordering memory operations loads stores unnoticed single thread execution unpredictable behaviour concurrent programs device drivers carefully controlled exact nature constraint hardware dependent defined architecture memory model architectures provide multiple barriers enforcing constraints memory barriers typically implementing level machine code operates memory shared multiple devices code includes synchronization primitives lock data structures multiprocessor systems device drivers communicate hardware program runs single cpu machine hardware performs bookkeeping ensure program executes memory operations performed programmer program memory barriers memory shared multiple devices cpus multiprocessor memory mapped peripherals access affect program behavior cpu memory cpu sequence differs program processor program execution affect program behavior initially memory locations codice codice hold codice program running processor loops codice prints codice program running processor stores codice codice stores codice codice pseudo code program fragments steps program correspond individual processor instructions processor processor expect print statement print 42 processor store operations executed codice updated codice print statement invoked loop processor load operations executed codice read codice checked print statement print unexpected programs situations acceptable memory barrier inserted processor assignment codice ensure codice visible processors prior change codice inserted processor access codice ensure codice read prior change codice driver performs sequence processor store operations executed hardware module triggered data ready memory illustrative trivial arises actual practice double checked locking multithreaded programming memory visibility multithreaded programs synchronization primitives level programming environment java framework application programming interface api posix threads windows api synchronization primitives mutexes semaphores synchronize access resources parallel threads execution primitives implemented memory barriers required provide expected memory visibility semantics environments explicit memory barriers api programming environment principle level memory model defines memory visibility semantics programmers memory barriers level environments understand memory visibility semantics extent understanding easy achieve memory visibility semantics consistently documented programming language semantics defined level abstraction machine language opcodes programming environment memory model defined level abstraction hardware memory model understand distinction realize simple mapping level hardware memory barrier semantics level memory visibility semantics programming environment result platform implementation posix threads employ stronger barriers required specification programs advantage memory visibility implemented portable execution compiler reordering optimizations memory barrier instructions address reordering effects hardware level compilers reorder instructions program optimization process effects parallel program behavior separate measures inhibit compiler reordering optimizations data shared multiple threads execution note measures data protected synchronization primitives discussed prior volatile keyword intended programs access memory mapped memory mapped requires reads writes source code happen exact omissions omissions reorderings reads writes compiler break communication program device accessed memory mapped compiler omit reads writes volatile memory locations reorder read writes relative actions volatile location variable keyword volatile guarantee memory barrier enforce cache consistency volatile sufficient variable inter thread communication systems processors standards prior c11 11 address multiple threads multiple processors volatile depends compiler hardware volatile guarantees volatile reads volatile writes happen exact source code compiler generate code cpu execution volatile read write reordered regard volatile reads writes limiting inter thread flag mutex preventing compiler specific compilers gcc reorder operations assembly code volatile memory tags asm volatile memory examples compiler memory barrier guaranteed volatile reads writes processors cores caching cache coherence protocol relaxed memory meaning volatile variables inter thread flags mutexes 
743971	computerscience	content based image retrieval cbir query image content qbic content based visual retrieval cbvir application vision techniques image retrieval searching digital images databases survey scientific overview cbir field content based image retrieval opposed traditional concept based approaches concept based image indexing content based search analyzes contents image metadata keywords tags descriptions image term content context refer colors shapes textures derived image cbir desirable searches rely purely metadata dependent annotation quality completeness humans manually annotate images entering keywords metadata database time consuming capture keywords desired image evaluation effectiveness keyword image search subjective defined regard cbir systems challenges defining success keywords limit scope queries set predetermined criteria set reliable content history term content based image retrieval originated 1992 kato experiments automatic retrieval images database based colors shapes term process retrieving desired images collection basis syntactical image features techniques tools algorithms originate fields statistics pattern recognition signal processing vision query image content earliest commercial cbir developed ibm called qbic query image content network graph based approaches simple attractive alternative existing methods storing multiple images single entity preceded term blob binary object ability search content description await ibm qbic technical progress cbir grown limitations inherent metadata based systems range efficient image retrieval textual images easily searched existing technology requires humans manually image database impractical databases images generated automatically surveillance cameras images synonyms descriptions systems based categorizing images semantic classes cat subclass animal avoid miscategorization require effort user images cats classified animal standards developed categorize images scaling miscategorization issues initial cbir systems developed search databases based image color texture shape properties systems developed user friendly interfaces apparent efforts cbir field started include human centered design meet user performing search typically inclusion query methods descriptive semantics queries involve user feedback systems include machine learning systems understand user satisfaction levels techniques cbir systems developed retrieving images basis pixel content remains unsolved query techniques implementations cbir types user queries query qbe query query technique involves providing cbir image base search underlying search algorithms vary depending application result images share common elements options providing images include query technique removes difficulties images semantic retrieval semantic retrieval starts user request pictures abraham lincoln type task difficult computers perform lincoln facing camera pose cbir systems level features texture color shape features combination interfaces easier input criteria databases trained match features fingerprints shape matching image retrieval requires human feedback identify level concepts relevance feedback human interaction combining cbir search techniques wide range potential users intent difficult task aspect cbir successful relies ability understand user intent cbir systems relevance feedback user progressively refines search marking images relevant relevant neutral search query repeating search examples type interface developed iterative machine learning machine learning application iterative techniques common cbir query methods query methods include browsing images navigating customized hierarchical categories querying image region entire image querying multiple images querying visual sketch querying direct specification image features multimodal queries combining touch voice content comparison image distance measures common method comparing images content based image retrieval typically image image database image distance measure image distance measure compares similarity images dimensions color texture shape distance signifies exact match query respect dimensions considered intuitively gather degrees similarities images search sorted based distance queried image measures image distance similarity models developed color computing distance measures based color similarity achieved computing color histogram image identifies proportion pixels image holding specific values examining images based colors techniques completed regard image size orientation attempted segment color proportion region spatial relationship color regions texture texture measures visual patterns images spatially defined textures represented texels sets depending textures detected image sets define texture image texture located texture difficult concept represent identification specific textures image achieved modeling texture dimensional gray level variation relative brightness pairs pixels computed degree contrast regularity coarseness directionality estimated identifying patterns pixel variation associating classes textures silky rough methods classifying textures include shape shape refer shape image shape region sought shapes determined applying segmentation edge detection image methods shape filters identify shapes image shape descriptors invariant translation rotation scale shape descriptors include image retrieval evaluation measures image retrieval defined terms precision recall methods considered image retrieval cbir simultaneously techniques image retrieved cbir adopting techniques simultaneously integrating pixel cluster indexing histogram intersection discrete wavelet transform methods applications potential cbir include commercial systems developed include experimental systems include 
763951	computerscience	robotic mapping navigation simultaneous localization mapping slam computational constructing updating map unknown environment simultaneously keeping track agent location initially appears chicken egg algorithms solving tractable time environments popular approximate solution methods include particle filter extended kalman filter graphslam slam algorithms tailored resources aimed perfection operational compliance published approaches employed driving cars unmanned aerial vehicles autonomous underwater vehicles planetary rovers domestic robots human body definition series sensor observations discrete time steps slam compute estimate agent location map environment quantities probabilistic objective compute applying bayes rule framework sequentially updating location posteriors map transition function map updated sequentially bylike inference solutions inferring variables local optimum solution alternating updates beliefs form em algorithm algorithms statistical techniques approximate equations include kalman filters particle filters aka monte carlo methods provide estimation posterior probability function pose robot parameters map set membership techniques based interval constraint propagation provide set encloses pose robot set approximation map bundle adjustment maximum posteriori estimation map popular technique slam image data jointly estimates poses landmark positions increasing map fidelity commercialized slam systems google arcore replacing previous augmented reality project tango map estimators compute explanation robot poses map sensor data estimate entire posterior probability slam algorithms remain active driven differing requirements assumptions types maps sensors models detailed slam systems viewed combinations choices aspects mapping topological maps method environment representation capture connectivity topology environment creating geometrically accurate map topological slam approaches enforce global consistency metric slam algorithms contrast grid maps arrays typically square hexagonal discretized cells represent topological inferences cells occupied typically cells assumed statistically independent simplify computation assumption set map cells consistent observation location inconsistent modern driving cars simplify mapping extensive highly detailed map data collected advance include map annotations level marking locations individual white segments curbs road location tagged visual data google streetview maps essentially systems simplify slam simpler localisation task allowing moving objects cars people updated map runtime sensing slam types sensors powers limits sensor types major driver algorithms statistical independence mandatory requirement cope metric bias noise measures types sensors rise slam algorithms assumptions sensors extreme laser scans visual features provide details rendering slam inference unnecessary shapes clouds easily unambiguously aligned step image registration extreme tactile sensors extremely sparse close agent require strong prior models compensate purely tactile slam practical slam tasks fall visual tactile extremes sensor models divide broadly landmark based raw data approaches landmarks uniquely identifiable objects location estimated sensor—such wifi access radio beacons raw data approaches assumption landmarks identified model 12 function location optical sensors dimensional single beam 2d sweeping laser rangefinders 3d definition lidar 3d flash lidar 2d 3d sonar sensors 2d cameras 2005 intense vslam visual slam visual camera sensors increasing ubiquity cameras mobile devices visual lidar sensors informative landmark extraction forms slam include tactile slam sensing local touch radar slam wifi slam sensing strengths nearby wifi access approaches apply quasi optical wireless ranging multi lateration rtls multi angulation conjunction slam tribute erratic wireless measures slam human pedestrians shoe mounted inertial measurement unit main sensor relies pedestrians avoid walls automatically build floor plans buildings indoor positioning outdoor applications slam removed precision differential gps sensors slam perspective viewed location sensors likelihoods sharp completely dominate inference gps sensors performance occasions times military conflict robotics applications kinematics modeling term represents kinematics model include action commands robot model kinematics robot included improve estimates sensing conditions inherent ambient noise dynamic model balances contributions sensors partial error models finally comprises sharp virtual depiction map location heading robot cloud probability mapping final depicting model map depiction abstract term model 2d robots kinematics mixture rotation commands implemented additional motor noise distribution formed independent noise angular linear directions gaussian approximated gaussian alternative approach ignore kinematic term read odometry data robot wheels command—such data treated sensors kinematics multiple objects data association computational complexity resolved identification multiple confusable landmarks advance feature based slam literature involved examination probabilistic foundation simultaneous localisation mapping slam posed terms multi object bayesian filtering random finite sets provide superior performance leading feature based slam algorithms challenging measurement scenarios false alarm rates missed detection rates data association popular techniques handling multiple objects include joint probabilistic data association filter jpdaf probability hypothesis density filter phd moving objects static environments vehicles pedestrians continue challenges slam datmo model tracks moving objects agent loop closure loop closure recognizing visited location updating beliefs model algorithm errors assign priors location typical loop closure methods apply algorithm compute type sensor measure similarity set location priors match detected storing comparing bag vectors sift features visited location exploration active slam studies combined slam deciding build map efficiently active exploration pronounced sparse sensing regimes tactile slam active slam performed approximating entropy map hypothetical actions multi agent slam extends multiple robots coordinating explore optimally biological inspiration neuroscience hippocampus appears involved slam computations rise cells formed basis bio inspired slam systems ratslam complexity researchers experts artificial intelligence struggled solve slam practical settings required deal computational power sense sizable process data map localize 2008 review topic summarized fundamental challenges robotics current approaches perform consistent maps increase computational cost uncertainties prohibitive scenario larger complete 3d slam solutions highly computationally intensive complex real time particle filters mapping strategies hierarchical combination metric topological representations implementations slam algorithms implemented source robot operating ros libraries cloud library 3d maps visual features opencv history seminal slam smith cheeseman representation estimation spatial uncertainty 1986 pioneering field conducted hugh durrant whyte 1990s solutions slam exist infinite data limit finding motivates search algorithms computationally tractable approximate solution driving stanley junior cars led sebastian thrun darpa grand challenge darpa urban challenge 2000s included slam systems bringing slam worldwide attention mass market slam implementations consumer robot vacuum cleaners driving cars google received licenses drive public roads 
787776	computerscience	curse dimensionality refers phenomena analyzing organizing data dimensional spaces hundreds thousands dimensions occur dimensional settings dimensional physical space everyday experience expression coined richard bellman dynamic optimization republished cursed phenomena occur domains numerical analysis sampling combinatorics machine learning data mining databases common theme dimensionality increases volume space increases fast data sparse sparsity problematic method requires statistical significance statistically sound reliable result data support result grows exponentially dimensionality organizing searching data relies detecting objects form properties dimensional data objects sparse dissimilar prevents common data organization strategies efficient domains combinatorics variable discrete values range values divided finite possibilities variables huge combinations values considered combinatorial explosion simplest binary variables combinations exponential dimensionality naively additional dimension doubles effort combinations sampling exponential increase volume adding extra dimensions mathematical space 102 100 spaced sample suffice sample unit interval dimensional cube 10−2 01 distance equivalent sampling dimensional unit hypercube lattice spacing 10−2 01 adjacent require 1020 102 sample spacing distance 10−n dimensional hypercube appears factor 10n 10n 10n larger dimensional hypercube unit interval sampling distance 01 dimensional hypercube appears 1018 larger unit interval combination combinatorics distance function explained optimization solving dynamic optimization numerical induction objective function computed combination values obstacle dimension variable machine learning machine learning involve learning nature finite data samples dimensional feature space feature range values typically enormous training data required ensure samples combination values typical rule thumb training examples dimension representation fixed training samples predictive power classifier regressor increases dimensions features increased decreases hughes phenomenon peaking phenomena distance functions measure euclidean distance defined coordinates difference distances pairs samples illustrate vastness dimensional euclidean space compare proportion inscribed hypersphere radius dimension hypercube edges volume sphere gamma function volume cube dimension space increases hypersphere insignificant volume relative hypercube comparing proportions dimension infinity distance center corners 13 increases bound fixed sense dimensional space centre dimensional unit hypercube consist corners hypercube middle helps understand chi squared distribution central chi squared distribution random interval distribution squared random cube law distribution concentrates narrow band times standard deviation squared σ2 original derivation illuminates chi squared distribution illustrates volume cube concentrates surface sphere radius σ development phenomenon fixed distribution ℝ induces product distribution ℝd fixed minimum maximum distance random reference list random data p1 indiscernible compared minimum distance cited distance functions losing nearest neighbor criterion feature comparison algorithms dimensions hold artificial scenario dimensional distributions ℝ independent identically distributed attributes correlated data easier provide distance contrast signal noise ratio play role feature selection nearest neighbor search complicates nearest neighbor search dimensional space reject candidates difference coordinate bound distance based dimensions observed mere dimensions result difficulties relevant additional dimensions increase contrast addition ranking remains discern close neighbors irrelevant noise dimensions reduce contrast manner time series analysis data inherently dimensional distance functions reliably signal noise ratio nearest neighbor classification dimensionality distance functions concerns nearest neighbor nn graphs constructed data set distance function dimension increases indegree distribution nn digraph skewed peak emergence disproportionate hubs data nn lists data average phenomenon considerable impact techniques classification including nn classifier semi supervised learning clustering retrieval anomaly detection survey zimek identified searching anomalies dimensional data analyzed specialized methods tackle remain questions 
794679	computerscience	science suffix tree called pat tree earlier form position tree compressed trie suffixes positions values suffix trees fast implementations string operations construction tree string takes time space linear constructed operations performed instance locating substring locating substring mistakes allowed locating matches regular expression pattern suffix trees provide linear time solutions common substring speedups cost storing string suffix tree typically requires space storing string history concept introduced donald knuth subsequently characterized algorithm 1973 construction greatly simplified ukkonen online construction suffix trees ukkonen algorithm running time matched fastest algorithms algorithms linear time constant size alphabet worst running time strings drawn alphabet integers polynomial range farach algorithm basis algorithms constructing suffix trees suffix arrays external memory compressed succinct definition suffix tree string defined tree tree exist strings padded terminal symbol string denoted codice ensures suffix prefix leaf nodes suffixes internal root nodes branching  −  nodes      − 1    1   2 nodes total leaves  − 1 internal root nodes root suffix links key feature linear time construction algorithms algorithms based farach algorithm dispense suffix links complete suffix tree internal root nodes suffix link internal node path root node spells string 11 12 single character 13 string suffix link internal node representing 13 suffix link node codice node codice figure suffix links algorithms running tree generalized suffix tree generalized suffix tree suffix tree set single word represents suffixes set word terminated termination symbol word functionality suffix tree string built 17 time letters alphabet integers polynomial range true constant sized alphabets larger alphabets running time dominated sorting letters bring range size 18 takes time costs assumption alphabet constant assume suffix tree built string generalised suffix tree built set strings 22 total 23 suffix tree prepared constant time lowest common ancestor retrieval nodes 17 time applications suffix trees solve string occur editing search computational biology application primary applications include suffix trees bioinformatics applications searching patterns dna protein sequences viewed strings characters ability search efficiently mismatches considered strength suffix trees data compression repeated data sorting stage burrows–wheeler transform variants lzw compression schemes suffix trees lzss suffix tree suffix tree clustering data clustering algorithm search engines implementation node edge represented 58 space entire tree represented 17 space total strings edges tree 75 edge stored position substring total space usage 17 worst space usage suffix tree fibonacci word 77 nodes choice suffix tree implementation parent child relationships nodes common linked lists called sibling lists node pointer child node child list implementations efficient running time properties hash maps sorted unsorted arrays array doubling balanced search trees size alphabet costs insertion cost amortised costs hashing perfect hashing edge node suffix tree expensive consuming 20 times memory size source implementations suffix array reduces requirement factor array including lcp values built 32 bit address space bit characters factor depends properties reach usage byte wide characters symbol unix systems wchar 32 bit systems researchers continued indexing structures parallel construction parallel algorithms speed suffix tree construction proposed practical parallel algorithm suffix tree construction 18 sequential time 80 span developed algorithm achieves parallel scalability shared memory multicore machines 3gb human genome minutes 40 core machine external construction linear memory usage suffix tree higherthan actual size sequence collection construction require external memory approaches theoretical constructing suffix trees externalmemory algorithm theoretically optimal complexity equal sorting intricacy algorithm prevented itspractical implementation hand practical constructingdisk based suffix treeswhich scale hours art methods tdd trellis digest andb2st tdd trellis scale entire human genome – 3gb – disk based suffix tree size tens gigabytes methods handle efficiently collections sequences exceeding 3gb digest performs handle collections sequences 6gb hours methods efficiently build suffix trees thetree fit main memory input method b2st scales handleinputs fit main memory era parallel suffix tree construction method faster era entire human genome 19 minutes core desktop 16gb ram simple linux cluster 16 nodes 4gb ram node era entire human genome minutes 
797527	computerscience	homomorphic filtering generalized technique signal image processing involving nonlinear mapping domain linear filter techniques applied mapping original domain concept developed 1960s thomas stockham alan oppenheim ronald schafer mit independently bogert healy tukey study time series image enhancement homomorphic filter image enhancement simultaneously normalizes brightness image increases contrast homomorphic filtering remove multiplicative noise illumination reflectance separable approximate locations frequency domain located illumination reflectance combine multiplicatively components additive logarithm image intensity multiplicative components image separated linearly frequency domain illumination variations multiplicative noise reduced filtering log domain illumination image frequency components increased frequency components decreased frequency components assumed represent reflectance scene light reflected object scene frequency components assumed represent illumination scene pass filtering suppress frequencies amplify frequencies log intensity domain operation homomorphic filtering improving appearance grayscale image simultaneous intensity range compression illumination contrast enhancement reflection 1where image illumination reflectancewe transform equation frequency domain apply pass filter difficult calculation applying fourier transformation equation product equation log solving 2then applying fourier transformationformula 3or 4next applying pass filter image illumination image frequency components increased frequency components decrease 5whereh pass filtern filtered image frequency domainafterward returning frequency domain spatial domain inverse fourier transform 6finally exponential function eliminate log enhanced imageformula 7the figures applying homomorphic filter pass filter homomorphic pass filter figures produced matlab figures homomorphic filtering correcting uniform illumination image image clearer original image hand apply pass filter homomorphic filtered image edges images sharper dimmer result pass filter original image audio speech analysis homomorphic filtering log spectral domain separate filter effects excitation effects computation cepstrum sound representation enhancements log spectral domain improve sound intelligibility hearing aids surface electromyography signals semg homomorphic filtering removes stochastic impulse trains originates semg signal power spectrum semg signal motor unit action potentialn muap shape amplitude maintained estimate parameters time domain model muap neural decoding individual neurons networks encode subject numerous studies central nervous altering spike firing rate frequency encoding relative spike timing time encoding time encoding consists altering random inter spikes intervals isi stochastic impulse train output neuron homomorphic filtering isi variations power spectrum spike train output neuron neuronal spontaneous activity isi variations caused input sinusoidal signal unknown frequency amplitude sufficient absence noise excite firing frequency sinosoidal signal recovered homomorphic filtering based procedures references oppenheim schafer stockham nonlinear filtering multiplied convolved signals proceedings ieee volume 56 august 1968 1264 1291 
798370	computerscience	cooling required remove waste heat produced components components permissible operating temperature limits components susceptible temporary malfunction permanent failure overheated include integrated circuits central processing units cpus chipset graphics cards hard disk drives components designed generate heat computers operating systems designed reduce power consumption consequent heating workload heat produced removed attention cooling heatsinks cooled airflow reduces temperature rise produced heat attention patterns airflow prevent development hotspots fans heatsink fans reduce temperature actively exhausting hot air exotic cooling techniques liquid cooling modern day processors designed cut reduce voltage clock speed internal temperature processor exceeds limit cooling designed reduce ambient temperature exhausting hot air cool single component spot cooling components commonly individually cooled include cpu graphics processing unit gpu northbridge generators unwanted heat integrated circuits cpu gpu main generators heat modern computers heat generation reduced efficient design selection operating parameters voltage frequency ultimately acceptable performance achieved managing heat generation operation temperature components rise heat transferred surroundings equal heat produced component thermal equilibrium reached reliable operation temperature exceed maximum permissible unique component semiconductors instantaneous junction temperature component heatsink ambient temperature critical cooling changed damage prevention temperatures reduce life span permanent damage components heat output components exceed cooling capacity manufacturers additional precautions ensure temperatures remain safe limits thermal sensors integrated cpu motherboard chipset gpu shut temperatures detected prevent permanent damage completely guarantee term safe operation overheating component reaches throttled temperatures fall safe dynamic frequency scaling technology throttling reduces operating frequency voltage integrated circuit disables essential features chip reduce heat output cost reduced performance desktop notebook computers throttling controlled bios level throttling commonly manage temperatures smartphones tablets components packed tightly active cooling additional heat transferred hand user mainframes supercomputers electronic computers larger complex cooling active components critical factor reliable operation vacuum tube computers cabinets rely natural forced air circulation cooling solid devices packed densely allowable operating temperatures starting 1965 ibm manufacturers mainframe computers sponsored intensive physics cooling densely packed integrated circuits air liquid cooling systems devised investigated methods natural forced convection direct air impingement direct liquid immersion forced convection pool boiling falling films flow boiling liquid jet impingement mathematical analysis predict temperature rises components cooling geometry ibm developed generations thermal conduction module tcm water cooled cold plate direct thermal contact integrated circuit packages package thermally conductive pin pressed helium gas surrounded chips heat conducting pins design remove 27 watts chip 2000 watts module maintaining chip package temperatures systems tcms 3081 family 1980 3090 1984 models 9000 1990 ibm 3081 processor tcms allowed 2700 watts single printed circuit board maintaining chip temperature thermal conduction modules water cooling mainframe systems manufactured companies including mitsubishi fujitsu cray supercomputer designed 1976 distinctive cooling machine height diameter consumed 115 kilowatts comparable average power consumption dozen western homes medium sized car integrated circuits machine fastest time emitter coupled logic speed accompanied power consumption compared cmos devices heat removal critical refrigerant circulated piping embedded vertical cooling bars columnar sections machine 1662 printed circuit modules machine copper core clamped cooling bar designed maintain integrated circuits refrigerant circulating final heat rejection water cooled condenser piping heat exchangers pumps cooling arranged upholstered bench seat base 20 percent machine weight operation refrigerant cray densely packed modules seymour cray trouble effectively cooling machine metal conduction technique mechanical refrigeration switched liquid immersion cooling method involved filling chassis cray liquid called fluorinert fluorinert implies inert liquid interfere operation electronic components components operating temperature heat dissipate fluorinert pumped machine chilled water heat exchanger performance watt modern systems greatly improved computations carried power consumption integrated circuits 1980s 1990s supercomputer projects blue gene rely air cooling reduces cost complexity size systems compared liquid cooling air cooling fans fans natural convection insufficient remove heat fans fitted attached cpus gpus chipset psu hard drives cards plugged expansion slot common fan sizes include 40 60 80 92 120 140 mm 200 230 250 300 mm fans performance personal computers performance fans chassis fans published specifications air flow maximum differential pressure air flow air fan pressure maximum differential pressure pressure fan generate completely blocked extremes series measurements flow pressure graph fan model unique curve dashed curves adjacent illustration parallel series installation fans installed parallel series combination parallel installation fans mounted series installation fan fan inlet fan exhaust fan simplify discussion assumed fans model parallel fans provide double air flow additional driving pressure series installation hand double static pressure increase air flow rate adjacent illustration single fan fans parallel maximum pressure water doubled flow rate note air flow square root pressure doubling pressure increase flow 41 square root times assumed pressure factor double flow rate determine flow rate chassis chassis impedance curve measured imposing arbitrary pressure inlet chassis measuring flow chassis requires sophisticated equipment chassis impedance curve represented solid red black lines adjacent curve determined actual flow chassis generated fan configuration graphically chassis impedance curve crosses fan curve slope chassis impedance curve square root function doubling flow rate required times differential pressure adding fan marginal improvement flow configurations plot fan series provide performance parallel installation temperature flow rate equation required airflow chassis isformula 1wherea simple conservative rule thumb cooling flow requirements discounting effects heat loss chassis walls laminar turbulent flow accounting constants specific heat density sea level 2formula 3for typical chassis 500 watts load maximum internal temperature environment difference 4this actual flow chassis air rating fan piezoelectric pump dual piezo cooling jet patented vibrations pump air device initial device millimeters consists nickel discs connected sliver piezoelectric ceramics alternating current passed ceramic component expand contract 150 times nickel discs bellows contracted edges discs pushed suck hot air expanding brings nickel discs expelling air velocity device bearings require motor thinner consumes energy typical fans jet air cooling fan size consuming electricity cost passive cooling passive heat sink cooling involves attaching block machined extruded metal cooling thermal adhesive commonly personal cpu clamp holds heat sink chip thermal grease thermal pad spread block fins ridges increase surface heat conductivity metal air radiates heat component protecting integrated circuit cpu fan cooled aluminium heat sinks originally norm desktop computers nowadays heat sinks feature copper base plates copper dust buildup metal fins heat sink gradually reduces efficiency countered gas duster blowing dust unwanted excess material passive heat sinks commonly cpus hot chipset power computers heat sink attached integrated heat spreader ihs essentially flat plate attached cpu conduction paste layered dissipates spreads heat locally heat sink spreader meant redistribute heat remove addition ihs protects fragile cpu passive cooling involves fan noise convection forces air heatsink techniques liquid immersion cooling growing trend increasing heat density gpu fpga asics immerse entire select components thermally electrically conductive liquid rarely cooling personal computers liquid immersion routine method cooling power distribution components transformers popular data centers personal computers cooled manner require fans pumps cooled exclusively passive heat exchange hardware enclosure heat exchanger heater core radiator piping correctly coolant electrical conductivity interfere normal operation liquid electrically conductive electrical shorts components traces permanently damage reasons preferred liquid insulator dielectric conduct electricity wide variety liquids exist purpose including transformer oils synthetic single phase dielectric coolants engineered fluids electrocooll phase coolants 3m fluorinert purpose oils including cooking motor silicone oils cooling personal computers fluids immersion cooling hydrocarbon based materials mineral oils cooking oils organic esters degrade common materials computers rubbers pvc thermal greases critical review material compatibility fluids prior mineral oil negative effects pvc rubber based wire insulation thermal pastes transfer heat heat sinks processors graphic cards reported dissolve liquids negligible impact cooling components removed operated air evaporation phase coolants pose liquid require regularly refilled sealed enclosure waste heat reduction powerful computers features required powerful computers features epia motherboard cpu typically dissipates 25 watts heat capable pentium motherboard cpu typically dissipates 140 watts computers powered direct current external power supply brick generate heat replacement cathode ray tube crt displays efficient screen liquid crystal display lcd century reduces power consumption heat sinks component fitted thermal contact heatsink passive device thermal capacity surface relative volume heatsinks metal thermal conductivity aluminium copper incorporate fins increase surface heat component transferred larger heatsink equilibrium temperature component heatsink component heat carried heatsink convective fan forced airflow fan cooling cool processors graphics cards consume amounts electrical energy typical heat generating component manufactured flat surface block metal flat surface finned construction attached fan clamped component conducting air gaps imperfectly flat smooth surfaces layer thermal grease thermal pad thermal adhesive component heatsink heat removed heat sink convection extent radiation conduction heat sink thermal contact metal inexpensive fan cooled aluminium heat sinks standard desktop computers heat sinks copper base plates copper thermal characteristics aluminium copper heat sink effective aluminium unit size relevant regard power consumption components performance computers passive heat sinks commonly cpus dissipate power chipset computers power processors equipment silent operation critical fan noise unacceptable heat sink clamped integrated heat spreader ihs flat metal plate size cpu package cpu assembly spreads heat locally layer thermal compound compensate surface imperfections spreader primary purpose redistribute heat heat sink fins improve efficiency brands ddr2 ddr3 ddr4 upcoming ddr5 dram memory modules fitted finned heatsink clipped edge module technique video cards finned passive heatsink gpu dust build crevices finned heatsinks airflow produced fans air hot component reducing cooling effectiveness removing dust restores effectiveness peltier thermoelectric cooling peltier junctions 15 efficient ideal refrigerator carnot cycle compared 40–60 achieved conventional compression cycle systems reverse rankine systems compression expansion efficiency thermoelectric cooling environments solid nature moving maintenance compact size orientation insensitivity outweighs pure efficiency modern tecs stacked units composed dozens hundreds thermocouples laid substantial heat transfer combination bismuth tellurium commonly thermocouples active heat pumps consume power tecs produce temperatures ambient impossible passive heatsinks radiator cooled liquid cooling heatpipe hsfs pumping heat peltier module typically consume electric power heat pumped liquid cooling liquid cooling highly effective method removing excess heat common heat transfer fluid desktop pcs distilled water advantages water cooling air cooling include water specific heat capacity thermal conductivity principle typical active liquid cooling computers identical automobile internal combustion engine water circulated water pump waterblock mounted cpu additional components gpu northbridge heat exchanger typically radiator radiator cooled additionally fan fan cooled peltier cooler peltier elements commonly hardware cooled coolant conduct heat hot peltier element coolant reservoir connected active liquid cooling systems passive liquid cooling systems systems discard fan water pump theoretically increasing reliability quieter active systems downsides systems efficient discarding heat coolant bigger coolant reservoir time coolant cool liquids transfer heat cooled air liquid cooling suitable overclocking performance applications compared air cooling liquid cooling influenced ambient temperature liquid cooling comparatively noise level compares favorably active cooling noisy disadvantages liquid cooling include complexity potential coolant leak leaked water importantly additives water damage electronic components contact repair leaks complex reliable installations notably major foray field liquid cooled personal computers versions apple power mac g5 ultimately doomed propensity coolant leaks cpu specific water cooling kits easy install air cooler limited cpus liquid cooling gpu cards originally limited mainframe computers liquid cooling practice overclocking form manufactured kits form setups assembled individually gathered increase popularity liquid cooling pre assembled moderate performance desktop computers sealed closed loop systems incorporating pre filled radiator fan waterblock simplify installation maintenance water cooling slight cost cooling effectiveness relative larger complex setups liquid cooling typically combined air cooling liquid cooling hottest components cpus gpus retaining simpler cheaper air cooling demanding components ibm aquasar hot water cooling achieve energy efficiency water heat buildings 2011 effectiveness water cooling prompted series aio water cooling solutions aio solutions result simpler install unit units reviewed positively review sites heat pipe heat pipe hollow tube heat transfer liquid liquid absorbs heat evaporates pipe vapor travels cooler tube condenses latent heat liquid returns hot tube gravity capillary action repeats cycle heat pipes effective thermal conductivity solid materials computers heat sink cpu attached larger radiator heat sink heat sinks hollow attachment creating heat pipe transfers heat cpu radiator cooled conventional method method expensive space tight form factor pcs laptops fan noise tolerated audio production efficiency method cooling desktop cpus gpus chipsets heat pipes addition active fan based cooling remain safe operating temperatures electrostatic air movement corona discharge cooling cooling technology development kronos thorn micro technologies employs device called ionic wind pump electrostatic fluid accelerator basic operating principle ionic wind pump corona discharge electrical discharge charged conductor caused ionization surrounding air corona discharge cooler developed kronos manner electric field created cathode cpu energy potential oxygen nitrogen molecules air ionized positively charged create corona halo charged particles placing grounded anode cpu charged ions corona accelerate anode colliding neutral air molecules collisions momentum transferred ionized gas neutral air molecules movement gas anode advantages corona based cooler lack moving eliminating reliability issues operating noise level moderate energy consumption soft cooling soft cooling practice utilizing software advantage cpu power saving technologies minimize energy halt instructions standby cpu subparts underclocking cpu total speeds overclocking cpu improve user experience increase raw processing power prevent noisier cooling contrary term suggests form cooling reducing heat creation undervolting undervolting practice running cpu component voltages device specifications undervolted component draws power produces heat ability varies manufacturer product production runs product components processors voltages strictly tolerance ensures processor chance performing correctly optimal conditions quality motherboard power supply voltages limit processor function correctly undervolting typically lead permanent hardware damage overvolting undervolting quiet systems cooling reduction heat production allowing noisy fans battery charge life maximized chip integrated conventional cooling techniques attach cooling component chip package attaching technique exhibit thermal resistance reducing effectiveness heat efficiently removed cooling local hot spots chip package locations power dissipation 300 w cm2 typical cpu 100 w cm2 occur future systems expected exceed 1000 w cm2 form local cooling essential developing power density chips ideology led investigation integrating cooling elements chip techniques micro channel heat sinks jet impingement cooling micro channel heat sinks channels fabricated silicon chip cpu coolant pumped channels designed surface heat transfers heat dissipation 3000 w cm2 reported technique heat dissipation increased phase flow cooling applied requires pressure drops channels heat flux dielectric coolants electronic cooling local chip cooling technique jet impingement cooling technique coolant flown orifice form jet jet directed surface cpu chip effectively remove heat fluxes heat dissipation 1000 w cm2 reported operated pressure comparison micro channel method heat transfer increased phase flow cooling integrating return flow channels hybrid micro channel heat sinks jet impingement cooling phase change cooling phase change cooling extremely effective cool processor vapor compression phase change cooler unit sits pc tube leading processor unit compressor type air conditioner compressor compresses gas mixture gases evaporator cpu cooler discussed hot pressure vapor pushed condenser heat dissipation device condenses hot gas liquid typically subcooled exit condenser liquid fed expansion device restriction drop pressure vaporize fluid reach pressure boil desired temperature expansion device simple capillary tube elaborate thermal expansion valve liquid evaporates changing phase absorbing heat processor draws extra energy environment accommodate change latent heat evaporation produce temperatures reaching liquid flow evaporator boiling cooling cpu vapor pressure evaporator gas flows compressor cycle processor cooled temperatures ranging depending load wattage processor refrigeration refrigeration gas mixture type suffers issues cost weight size vibration maintenance cost electricity noise specialized tower concerned dew proper insulation ambient surfaces pipes sweat dripping water sensitive electronics alternately breed cooling developed inserting pump thermosiphon loop adds degree flexibility design engineer heat effectively transported heat source reclaimed dissipated ambient junction temperature tuned adjusting pressure pressure equals fluid saturation temperatures condensers fans effective dissipation heat ambient temperature environment systems essence generation fluid cooling paradigm times efficient single phase water dielectric heat transport medium leaks catastrophic failure electric type cooling extreme cool components units expensive compared average desktop generate noise essentially refrigerators compressor choice air cooling main determinant allowing flexibility noise reduction based chosen liquid nitrogen liquid nitrogen boils freezing water valuable extreme coolant short overclocking sessions typical installation liquid nitrogen cooling copper aluminum pipe mounted processor graphics card heavily insulated condensation liquid nitrogen poured pipe temperatures evaporation devices ranging cut heat sinks pipes attached custom milled copper containers hold nitrogen prevent temperature nitrogen evaporates refilled realm personal computers method cooling seldom contexts overclocking trial runs record setting attempts cpu expire short period time temperature stress caused internal temperature liquid nitrogen flammable condense oxygen air mixtures liquid oxygen flammable materials dangerously explosive liquid nitrogen cooling processor benchmarking continuous usage permanent damage handled careless harm user liquid helium liquid helium colder liquid nitrogen cooling liquid helium boils temperatures ranging measured heatsink liquid helium expensive difficult store liquid nitrogen extremely temperatures integrated circuits functioning silicon based semiconductors freeze optimization cooling improved techniques involve additional expense effort techniques cpu gpu voltages frequencies manufacturer overclocking increases heat generation installation performance stock cooling considered modding overclockers simply efficient expensive fan heat sink combinations resort exotic cooling liquid cooling peltier heatpumps heat pipe phase change cooling practices positive impact reducing temperatures thermally conductive compounds called thermal interface material tim intel perfectly flat surfaces contact optimal cooling perfect flatness absence microscopic air gaps practically mass produced equipment skim thermal compound thermally conductive air metal improve thermal contact cooling filling air gaps compound sufficient gaps temperature reduction debate merits compounds overclockers compounds superior main consideration minimal thermal compound required surfaces thermal conductivity compound typically 400 metal air conductivity heatsink compound ranges 80w articles aluminium 200 air 02 heat conductive pads fitted manufacturers heatsinks effective properly applied thermal compound simpler apply fixed heatsink users unaware thermal contact replaced ineffective layer compound techniques discussed thermal compound padding universal dissipating amounts heat heat sink lapping mass produced cpu heat spreaders heatsink bases perfectly flat smooth surfaces contact air gaps reduce heat conduction easily mitigated thermal compound surfaces flat achieved laborious process lapping reduce cpu temperature typically rounded cables pcs flat ribbon cables connect storage drives ide scsi flat cables greatly impede airflow causing drag turbulence overclockers modders replace rounded cables conductive wires bunched tightly reduce surface theoretically parallel strands conductors ribbon cable serve reduce crosstalk signal carrying conductors inducing signals nearby conductors empirical evidence rounding cables reducing performance cable short crosstalk negligible cable electromagnetically protected considerable frequent occurrence network cables cables cable tied chassis cables increase airflow computers serial ata narrower cable airflow colder cooling medium air effective cooling cooling air temperature improved guidelines fans strategically improve airflow internally pc internal temperature relation ambient conditions larger fans improves efficiency lowers waste heat noise generated fans operation agreement effectiveness fan placement configurations systematic testing rectangular pc atx fan fan rear suitable configuration amd outdated cooling guidelines notes cooling fan essential extreme situations testing fans recirculating hot air introducing cool air fans panels detrimental effect—possibly disrupting normal air flow unconfirmed varies configuration types desktops desktop computers typically fans cooling desktop power supplies built fan power supplies draw heated air psu operating temperatures decrease psu energy efficiency reliability ability provide steady supply power internal components reason modern atx exceptions ultra budget feature power supply mount dedicated psu air intake filter beneath mounting location allowing psu draw cool air beneath manufacturers recommend bringing cool fresh air exhausting warm air rear fans fitted force air effectively removed pressure referred positive airflow called negative airflow worth noting positive internal pressure prevents dust accumulating air intakes equipped dust filters negative internal pressure suffer rate dust accumulation intakes filtered negative pressure draw dust casethe air flow typical desktop strong passive cpu heatsink desktop heat sinks active including multiple attached fans blowers servers server cooling fans enclosures located middle enclosure hard drives passive cpu heat sinks rear larger enclosures exhaust fans 4u active heat sinks power supplies rear facing exhaust fans rack mounted data centers typically racks horizontally mounted 1u servers air drawn rack exhausted rear data centers typically computers power dissipating devices risk equipment overheating extensive hvac systems prevent raised floor floor plenum cooled air power cabling accommodating systems space blade chassis oriented vertically horizontally facilitate convection air heated hot components rise creating natural air flow boards stack cooling manufacturers advantage laptops laptops difficult mechanical airflow design power dissipation cooling challenge constraints specific laptops include device light form factor built standard keyboard layout users close noise minimum exterior temperature lap cooling forced air cooling heat pipes metal chassis passive heat sink common solutions reduce heat include power consumption arm intel atom processors mobile devices mobile devices discrete cooling systems mobile cpu gpu chips designed maximum power efficiency constraints device battery performance devices include heat spreader aids transferring heat external phone tablet 
800222	computerscience	school informatics academic unit university edinburgh scotland responsible teaching outreach commercialisation informatics created 1998 department artificial intelligence centre cognitive science department science artificial intelligence applications institute human communication centre school informatics draws component disciplines interdisciplinary nature school artificial intelligence computational linguistics systems biology mathematical logic theoretical science contributes informatics school ranked 15th 2014 successor rae ranking school informatics ranked 12th qs university rankings 2014 school informatics awarded hefce 2001 rae science department country achieve rating 2008 rae school quality profile 35 50 15 100 fte staff outputs evaluated 35 leading 50 internationally excellent figures interpreted school volume tied cambridge 45 45 percentage rated informatics science school considered leading standing foremost institutes artificial intelligence natural language processing machine translation theoretical science school institutes accommodation edinburgh cowgate december 2002 destroyed buildings including 80 south bridge housed school renowned library space university appleton tower replacement june 2008 school dispersed sites george square campus appleton tower buccleuch forrest hill king buildings james clerk maxwell building darwin building june july 2008 school moved informatics forum building interaction designed bennetts associates reaich hall buro happold houses 500 researchers including staff graduate students construction october 2005 forum completion july 2008 finally brought school researchers roof inception august 2018 school gained space form bayes centre purpose built data science artificial intelligence hub shared multiple data science informatics university maxwell graduate institute encompassing phd output mathematics departments edinburgh heriot watt university 
816239	computerscience	david andrew patterson born november 16 1947 american pioneer academic held position professor science university california berkeley 1976 announced retirement 2016 serving distinguished engineer google vice chair board directors risc foundation pardee professor science emeritus uc berkeley patterson pioneering contributions risc processor design coined term risc leading berkeley risc project 2018 99 chips risc architecture leading raid storage randy katz books architecture authored john hennessy science education hennessy patterson 2017 turing award developing risc background native evergreen park illinois david patterson attended ucla receiving 1969 1970 advised david martin gerald estrin 1976 proponent concept reduced instruction set computing coined term risc led berkeley risc project 1980 carlo sequin technique register windows introduced innovators redundant arrays independent disks raid collaboration randy katz garth gibson positions chair science division berkeley computing association served technology advisory committee president pitac 2003–05 elected president association computing machinery acm 2004–06 awards recognized 35 awards teaching service including fellow association computing machinery acm institute electrical electronics engineers ieee election national academy engineering national academy sciences silicon valley engineering hall fame 2005 hennessy shared japan communication award 2006 elected american academy arts sciences national academy sciences received distinguished service award computing association dependable computing ifip dependablecomputing fault tolerance 2016 richard tapia achievement award scientific scholarship civic science diversifying computingin 2013 set american powerlifting record california weight class age bench press dead lift squat combined lifts february 12 2015 ieee installed plaque uc berkeley commemorate contribution risc soda hall uc berkeley plaque reads march 21 2018 awarded 2017 acm turing award john hennessy developing risc award attributed pioneering systematic quantitative approach design evaluation architectures enduring impact microprocessor industry charity 2003 2012 rode annual waves wine charity event bike day cycling adventure fundraiser 2006 2007 2008 2009 2010 2011 2012 notable students advised notable candidates including selected books authored books including john hennessy architecture architecture quantitative approach editions—latest organization design risc edition hardware software interface editions—latest textbooks graduate undergraduate courses 1990 book andrew waterman architecture risc risc reader architecture atlas 1st edition 
849181	computerscience	cpu cache hardware cache central processing unit cpu reduce average cost time energy access data main memory cache faster memory closer processor core stores copies data frequently main memory locations cpus independent caches including instruction data caches data cache organized hierarchy cache levels l1 l2 l3 l4 modern fast cpus specialized exceptions multiple levels cpu caches cpus cache level cache level caches split l1d data l1i instructions current cpus caches split l1 cache l2 caches larger processors l3 caches l2 cache split acts common repository split l1 cache core multi core processor dedicated l2 cache shared cores l3 cache level caches shared cores split l4 cache uncommon dynamic random access memory dram static random access memory sram separate die chip historically l1 bigger chips allowed integration cache levels exception level extra level cache bigger optimized types caches exist counted cache size caches mentioned translation lookaside buffer tlb memory management unit mmu cpus caches sized powers 16 kib mib larger l1 sizes ibm z13 96 kib l1 instruction cache overview read write location main memory processor checks data location cache processor read write cache main memory slower modern desktop server cpus independent caches instruction cache speed executable instruction fetch data cache speed data fetch store translation lookaside buffer tlb speed virtual physical address translation executable instructions data single tlb access instructions data separate instruction tlb itlb data tlb dtlb data cache organized hierarchy cache levels l1 l2 multi level caches tlb cache memory management unit mmu cpu caches cache entries data transferred memory cache blocks fixed size called cache lines cache blocks cache copied memory cache cache entry created cache entry include copied data requested memory location called tag processor read write location main memory checks entry cache cache checks contents requested memory location cache lines address processor memory location cache cache hit occurred processor memory location cache cache occurred cache hit processor reads writes data cache cache cache allocates entry copies data main memory request fulfilled contents cache policies replacement policies entry cache cache evict existing entries heuristic choose entry evict called replacement policy fundamental replacement policy predict existing cache entry future predicting future difficult perfect method choose variety replacement policies popular replacement policy lru replaces accessed entry marking memory ranges cacheable improve performance avoiding caching memory regions rarely accessed avoids overhead loading cache reuse cache entries disabled locked depending context write policies data written cache written main memory timing write write policy write cache write cache write main memory alternatively write cache writes mirrored main memory cache tracks locations written marking dirty data locations written main memory data evicted cache reason read write cache require memory accesses service write dirty location main memory read location memory write main memory location mapped write cache evict dirty location freeing cache space memory location intermediate policies cache write writes held store data queue temporarily multiple stores processed reduce bus turnarounds improve bus utilization cached data main memory changed entities peripherals direct memory access dma core multi core processor cache stale alternatively cpu multiprocessor updates data cache copies data caches cpus stale communication protocols cache managers data consistent cache coherence protocols cache performance cache performance measurement times speed gap memory performance processor performance increasing exponentially cache introduced reduce speed gap knowing cache bridge gap speed processor memory performance systems cache hit rate cache rate play role determining performance improve cache performance reducing rate steps steps decreasing access time cache boost performance cpu stalls time fetch cache memory read latency cache matters cpu waiting cache cpu reaches called stall cpus faster compared main memory stalls cache misses displace potential computation modern cpus execute hundreds instructions time fetch single cache main memory techniques employed cpu busy time including execution cpu pentium pro intel designs attempts execute independent instructions instruction waiting cache data technology processors simultaneous multithreading smt orin intel terminologyhyper threading alternate thread cpu core thread waits required cpu resources cache entry structure cache row entries structure data block cache actual data fetched main memory tag address actual data fetched main memory flag bits discussed size cache main memory data hold size calculated bytes stored data block times blocks stored cache tag flag error correction code bits included size affect physical cache effective memory address cache memory block split msb lsb tag block offset describes cache set data bits cache sets block offset specifies desired data stored data block cache row typically effective address bytes block offset bits bytes data block tag bits address checked rows current set set retrieved set requested address cache hit occurs tag bits authors refer block offset simply offset displacement original pentium processor set associative l1 data cache 8 kib size 64 byte cache blocks 8 kib   64   128 cache blocks sets equal cache blocks divided associativity leads 128   4   32 sets 25   32 indices 26   64 offsets cpu address 32 bits wide implies 32   5   6   21 bits tag field original pentium 4 processor set associative l2 integrated cache 256 kib size 128 byte cache blocks implies 32   8   7   17 bits tag field flag bits instruction cache requires flag bit cache row entry valid bit valid bit cache block loaded valid data power hardware sets valid bits caches invalid systems set valid bit invalid times multi master bus snooping hardware cache processor hears address broadcast processor realizes data blocks local cache stale marked invalid data cache typically requires flag bits cache valid bit dirty bit dirty bit set cache changed read main memory dirty meaning processor written data propagated main memory associativity replacement policy decides cache entry main memory replacement policy choose entry cache hold cache called associative extreme entry main memory cache cache direct mapped caches implement compromise entry main memory cache set associative level data cache amd athlon set associative location main memory cached locations level data cache choosing associativity involves trade replacement policy mapped memory location check location cache cache entries searched checking takes power chip time hand caches associativity suffer misses conflict misses cpu wastes time reading slow main memory guideline doubling associativity direct mapped raising hit rate doubling cache size increasing associativity improve hit rate reasons virtual aliasing cpus dynamically reduce associativity caches power acts power saving measure worse simple complex direct mapped cache cache organization location main memory entry cache direct mapped cache called set associative cache replacement policy choice cache entry contents evict locations map entry continually knock simpler direct mapped cache larger associative comparable performance unpredictable block cache block memory blocks cache mapping equation set associative cache location main memory cached locations cache logical question simplest commonly scheme hand diagram bits memory location cache memory entries benefit scheme tags stored cache include main memory address implied cache memory cache tags bits require transistors space processor circuit board microprocessor chip read compared faster lru simple bit stored pair speculative execution advantages direct mapped cache simple fast speculation address computed cache location memory cache entry read processor continue data finishes checking tag matches requested address idea processor cached data tag match completes applied associative caches subset tag called hint pick cache entries mapping requested address entry selected hint parallel checking tag hint technique context address translation explained skewed associative cache schemes suggested skewed cache direct formed hash function hash function property addresses conflict direct mapping tend conflict mapped hash function program suffer unexpectedly conflict misses pathological access pattern downside extra latency computing hash function additionally time load evict difficult determine existing conflicts data indexes lru tracking skewed caches set basis skewed associative caches major advantages conventional set associative pseudo associative cache true set associative cache tests simultaneously content addressable memory pseudo associative cache tests time hash rehash cache column associative cache examples pseudo associative cache common finding hit tested pseudo associative cache fast direct mapped cache conflict rate direct mapped cache closer rate associative cache cache cache failed attempt read write piece data cache main memory access latency kinds cache misses instruction read data read data write cache read misses instruction cache largest delay processor thread execution wait stall instruction fetched main memory cache read misses data cache delay instructions dependent cache read issued continue execution data returned main memory dependent instructions resume execution cache write misses data cache shortest delay write queued limitations execution subsequent instructions processor continue queue detailed introduction types misses address translation purpose cpus implement form virtual memory summarize program running machine simplified address space code data program programs common virtual address space program executes calculating comparing reading writing addresses virtual address space addresses physical address space programs simpler easier write virtual memory requires processor translate virtual addresses generated program physical addresses main memory portion processor translation memory management unit mmu fast path mmu perform translations stored translation lookaside buffer tlb cache mappings operating table segment table purposes discussion features address translation virtual memory systems slow required access table held main memory programmed access main memory caches effectively cut speed memory access hardware cache data instruction cache tlb caches divided types based tag correspond physical virtual addresses speed recurrence load latency crucial cpu performance modern level caches virtually indexed mmu tlb lookup proceed parallel fetching data cache ram virtual indexing choice cache levels cost dealing virtual aliases grows cache size result level larger caches physically indexed caches historically virtual physical addresses cache tags virtual tagging uncommon tlb lookup finish cache ram lookup physical address time tag compare virtual tagging caches tend physically tagged latency caches virtually tagged purpose cpus virtual tagging superseded vhints homonym synonym cache relies virtual indexing tagging inconsistent virtual address mapped physical addresses homonym solved physical address tagging storing address space identifier cache approach synonym cache lines storing data physical address writing locations update location cache leaving inconsistent data issue solved overlapping memory layouts address spaces cache flushed mapping virtual tags vhints advantage virtual tags associative caches tag match proceed virtual physical translation coherence probes evictions physical address action hardware converting physical addresses cache storing physical tags virtual tags comparison physically tagged cache virtual tags simpler virtual physical mapping deleted tlb cache entries virtual addresses flushed alternatively cache entries allowed mapped tlb entries flushed access rights changed table operating ensure virtual aliases simultaneously resident cache operating guarantee enforcing coloring risc processors sparc rs 6000 approach hardware cost detecting evicting virtual aliases fallen software complexity performance penalty perfect coloring risen distinguish functions tags associative cache determine entry set select determine cache hit missed function correct permissible function guess wrong answer occasionally processors sparcs caches virtual physical tags virtual tags selection physical tags determining hit cache enjoys latency advantage virtually tagged cache simple software interface physically tagged cache bears cost duplicated tags processing alternate cache indexed probed virtual aliases matches evicted extra latency mitigated keeping virtual hints cache entry virtual tags hints subset hash virtual tag selecting cache data physical tag virtually tagged cache virtual hint match physical tag mismatch cache entry matching hint evicted cache accesses cache address hint match virtual hints bits virtual tags distinguishing virtually hinted cache suffers conflict misses virtually tagged cache ultimate reduction virtual hints pentium 4 willamette northwood cores processors virtual hint effectively bits cache set associative effectively hardware maintains simple permutation virtual address cache content addressable memory cam select fetched coloring physically indexed caches secondary caches operating application controls collide cache differences allocation program lead differences cache collision patterns lead differences program performance differences difficult consistent repeatable timing benchmark understand cpu 1 mib physically indexed direct mapped level cache 4 kib virtual memory sequential physical map sequential locations cache 256 pattern wraps label physical color 0–255 denote cache locations physical colors conflict cache programmers attempting maximum cache arrange programs access patterns 1 mib data cached time avoiding capacity misses ensure access patterns conflict misses divide virtual program assign virtual colors physical colors assigned physical programmers arrange access patterns code virtual color time wide literature optimizations loop nest optimization coming performance computing hpc community snag moment virtual colors physical colors operating assigns physical virtual randomly uniformly extremely physical color locations collide cache birthday paradox solution operating attempt assign physical color virtual colors technique called coloring actual mapping virtual physical color irrelevant performance odd mappings difficult track benefit approaches coloring simply physical virtual colors operating guarantee physical maps virtual color virtual aliases processor virtually indexed caches extra virtual alias probes handling alternatively os flush cache virtual color mentioned approach sparc rs 6000 designs cache hierarchy modern processor modern processors multiple interacting chip caches operation cache completely cache size cache block size blocks set cache set replacement policy cache write policy write write cache blocks cache size associativity typically level caches called level cache blocks block size blocks set short access times level caches level progressively larger blocks larger block size blocks set access times faster main memory cache entry replacement policy determined cache algorithm selected implemented processor designers multiple algorithms kinds loads specialized caches pipelined cpus access memory multiple pipeline instruction fetch virtual physical address translation data fetch classic risc pipeline natural design physical caches physical resource scheduled service pipeline pipeline naturally separate caches instruction tlb data specialized role victim cache victim cache cache hold blocks evicted cpu cache replacement victim cache lies main cache refill path holds blocks data evicted main cache victim cache associative intended reduce conflict misses commonly programs require associative mapping accesses fraction memory accesses program require associativity victim cache exploits property providing associativity accesses introduced norman jouppi dec 1990 intel crystalwell variant haswell processors equipped intel iris pro gt3e embedded graphics 128 mb edram introduced package level cache serves victim cache processors level cache skylake processors level cache victim cache trace cache extreme examples cache specialization trace cache execution trace cache intel pentium 4 microprocessors trace cache mechanism increasing instruction fetch bandwidth decreasing power consumption pentium 4 storing traces instructions fetched decoded trace cache stores instructions decoded retired instructions trace caches representing individual basic blocks dynamic instruction traces pentium 4 trace cache stores micro operations decoding x86 instructions providing functionality micro operation cache time instruction decoded micro ops write coalescing cache wcc write coalescing cache special cache l2 cache amd bulldozer microarchitecture stores l1d caches module wcc buffered coalesced wcc task reducing writes l2 cache micro operation μop uop cache micro operation cache μop cache uop cache uc specialized cache stores micro operations decoded instructions received instruction decoders instruction cache instruction decoded μop cache checked decoded form cached instruction decoded cached describing μop cache alternative frontend intel p6 processor family 2001 paper micro operation cache power aware frontend variable instruction isa intel included μop caches sandy bridge processors successive microarchitectures ivy bridge haswell amd implemented μop cache zen microarchitecture fetching complete pre decoded instructions eliminates repeatedly decode variable complex instructions simpler fixed micro operations simplifies process predicting fetching rotating aligning fetched instructions μop cache effectively offloads fetch decode hardware decreasing power consumption improving frontend supply decoded micro operations μop cache increases performance consistently delivering decoded micro operations backend eliminating bottlenecks cpu fetch decode logic μop cache similarities trace cache μop cache simpler providing power efficiency suited implementations battery powered devices main disadvantage trace cache leading power inefficiency hardware complexity required heuristic deciding caching reusing dynamically created instruction traces branch target cache branch target cache branch target instruction cache arm microprocessors specialized cache holds instructions destination branch powered processors normal instruction cache memory capable delivering instructions fast satisfy cpu applies consecutive instructions sequence takes cycles latency restart instruction fetch address causing cycles pipeline bubble control transfer branch target cache instructions cycles avoiding delay branches speed operation cache traditional time instruction cache multi level caches issue fundamental tradeoff cache latency hit rate larger caches hit rates latency address tradeoff computers multiple levels cache fast caches larger slower caches multi level caches operate checking fastest level l1 cache hits processor proceeds speed cache misses fastest cache level l2 checked accessing external memory latency difference main memory fastest cache larger processors begun utilize levels chip cache price sensitive designs pull entire cache hierarchy chip 2010s performance designs returned chip caches implemented edram mounted multi chip module fourth cache level benefits l3 l4 caches depend application access patterns examples products incorporating l3 l4 caches include finally memory hierarchy cpu register file considered fastest cache special characteristic scheduled software—typically compiler allocates registers hold values retrieved main memory loop nest optimization register renaming compiler register assignments reallocated dynamically hardware runtime register bank allowing cpu break false data dependencies easing pipeline hazards register files hierarchy cray circa 1976 address scalar data registers usable set 64 address 64 scalar data registers access faster main memory registers cray data cache cray instruction cache multi core chips chip multiple cores question caches shared local core implementing shared cache inevitably introduces wiring complexity cache chip core greatly reduces space include larger cache typically sharing l1 cache undesirable increase latency core considerably slower single core chip level cache called accessing memory global cache desirable reasons allowing single core cache reducing data redundancy processes threads share cached data reducing complexity utilized cache coherency protocols core chip levels include l1 cache core intermediate l2 cache pair cores l3 cache shared cores shared level cache called accessing memory referred level cache llc additional techniques increasing level parallelism llc shared multiple cores including slicing multiple pieces addressing ranges memory addresses accessed independently separate unified separate cache structure instructions data cached separately meaning cache cache instructions data benefits demonstrated separate data instruction translation lookaside buffers unified structure constraint cache lines cache instructions data exclusive inclusive multi level caches introduce design decisions instance processors data l1 cache l2 cache caches called strictly inclusive processors amd athlon exclusive caches data guaranteed l1 l2 caches processors intel pentium iii require data l1 cache reside l2 cache universally accepted intermediate policy common names exclusive partially inclusive advantage exclusive caches store data advantage larger exclusive l1 cache comparable l2 cache diminishes l2 cache times larger l1 cache l1 misses l2 hits access hitting cache l2 exchanged l1 exchange bit copying l2 l1 inclusive cache advantage strictly inclusive caches external devices processors multiprocessor remove cache processor processor check l2 cache cache hierarchies enforce inclusion l1 cache checked drawback correlation associativities l1 l2 caches l2 cache l1 caches effective associativity l1 caches restricted disadvantage inclusive cache eviction l2 cache lines l1 evicted maintain inclusiveness bit result l1 rate advantage inclusive caches larger cache larger cache lines reduces size secondary cache tags exclusive caches require caches size cache lines cache lines swapped l1 l2 hit secondary cache magnitude larger primary cache data magnitude larger cache tags tag saved comparable incremental store l1 cache data l2 k8 illustrate specialization multi level caching cache hierarchy k8 core amd athlon 64 cpu k8 specialized caches instruction cache instruction tlb data tlb data cache caches specialized k8 multiple level caches level instruction data tlbs store ptes mapping 4 kb instruction data caches tlbs unified l2 cache cache exclusive l1 instruction data caches byte l1 instruction cache l1 data cache l2 cache data cache pte tlbs—the operating responsible keeping tlbs coherent flushing portions tables memory updated k8 caches stored memory—prediction caches diagram usual class cpu k8 complexbranch prediction tables predict branches tables predict targets branches jumps instructions level instruction cache unified secondary cache k8 trick store prediction instructions secondary cache lines secondary cache protected accidental data corruption alpha particle strike ecc parity depending lines evicted data instruction primary caches parity code takes bits ecc code lines instruction cache spare bits bits cache branch prediction instructions result branch predictor larger effective history table accuracy hierarchies processors kinds predictors store load bypass predictor dec alpha 21264 specialized predictors flourish future processors predictors caches store costly compute terminology discussing predictors caches speaks hit branch predictor predictors cache hierarchy k8 instruction data caches coherent hardware store instruction closely store instruction change instruction processors alpha mips family relied software instruction cache coherent stores guaranteed instruction stream program calls operating facility ensure coherency tag ram engineering tag ram memory locations stored cpu cache simple direct mapped design fast sram associative caches employ content addressable memory implementation cache reads common cpu operation takes single cycle program execution time sensitive latency level data cache hit deal design effort power silicon expended caches fast simplest cache virtually indexed direct mapped cache virtual address calculated adder relevant portion address extracted sram returns loaded data data byte aligned byte shifter bypassed operation tag checking loop tags read pipeline load instruction retired tag loaded data read checked virtual address cache hit cache updated requested cache pipeline restarted associative cache complicated form tag read determine entry cache select set associative level cache reads tags data parallel chooses data matching tag level caches save power reading tags data element read data sram adjacent diagram intended clarify manner fields address address bit 31 bit diagram srams indexing multiplexing 4 kb set associative virtually indexed virtually tagged cache 64 byte lines 32 bit read 32 bit virtual address cache 4 kb 64 b lines 64 lines cache read time tag sram 32 rows pair 21 bit tags function virtual address bits 31 tag data srams simplest bits cache 4 kb 4 b read path reads access data sram 512 rows bytes wide modern cache 16 kb set associative virtually indexed virtually hinted physically tagged 32 b lines 32 bit read 36 bit physical addresses read path recurrence cache path tags vhints read matched subset virtual address pipeline virtual address translated physical address tlb physical tag read vhint supplies cache read finally physical address compared physical tag determine hit occurred sparc designs improved speed l1 caches gate delays collapsing virtual address adder sram decoders sum addressed decoder history history cache technology closely tied virtual memory scarcity cost semi conductor memories mainframe computers 1960s complex hierarchy physical memory mapped flat virtual memory space programs memory technologies span semi conductor magnetic core drum disc virtual memory programs flat caching fetch data instructions fastest memory processor access extensive studies optimize cache sizes optimal values depend greatly programming language algol fortran cobol largest cache sizes days microcomputer technology memory access slower register access 1980s performance gap processor memory growing microprocessors advanced faster memory terms operating frequency memory performance bottleneck technically main memory fast cpu economically viable path plenty speed memory introduce speed cache memory alleviate performance gap magnitude capacity—for price—with reduced combined performance tlb implementations documented tlb 645 ibm 360 67 associative memory tlb data cache documented data cache ibm 360 model 85 68k microprocessors 68010 released 1982 loop mode considered tiny special instruction cache accelerates loops consist instructions 68020 released 1984 replaced typical instruction cache 256 bytes 68k series processor feature true chip cache memory 68030 released 1987 basically 68020 core additional 256 byte data cache process shrink burst mode caches 68040 released 1990 split instruction data caches kilobytes 68060 released 1994 8 kb data cache associative 8 kb instruction cache associative 96 byte fifo instruction buffer 256 entry branch cache 64 entry address translation cache mmu buffer associative x86 microprocessors x86 microprocessors reached clock rates 20 mhz 386 amounts fast cache memory featured systems improve performance dram main memory latency 120 ns refresh cycles cache constructed expensive faster sram memory cells time latencies 10 ns 25 ns caches external processor typically located motherboard form dip devices sockets enable cache optional extra upgrade feature versions intel 386 processor support 16 256 kb external cache 486 processor 8 kb cache integrated cpu die cache termed level l1 cache differentiate slower motherboard level l2 cache motherboard caches larger common size 256 kb popularity motherboard cache continued pentium mmx era obsolete introduction sdram growing disparity bus clock rates cpu clock rates caused motherboard cache faster main memory development cache implementation x86 microprocessors pentium pro brought secondary cache package microprocessor clocked frequency microprocessor motherboard caches enjoyed prolonged popularity amd k6 amd k6 iii processors venerable socket intel motherboard caches k6 iii included 256 kb die l2 cache advantage board cache level cache named l3 motherboards 2 mb board cache produced socket 7 obsolete motherboard cache disappeared x86 systems level caches introduction multiple processor cores l3 cache cpu die common total cache sizes increasingly larger processor generations 2011 uncommon level cache sizes tens megabytes intel introduced level package cache haswell microarchitecture crystalwell haswell cpus equipped gt3e variant intel integrated iris pro graphics effectively feature 128 mb embedded dram edram package l4 cache shared dynamically die gpu cpu serves victim cache cpu l3 cache current cache designs focused direct cost cache ram average execution speed cache designs energy efficiency fault tolerance goals researchers explored emerging memory technologies edram embedded dram nvram volatile ram designing caches tools architects explore tradeoffs cache cycle time energy tools include source cacti cache simulator source simplescalar instruction set simulator modeling 2d 3d sram edram stt ram reram pcm caches destiny tool multi ported cache multi ported cache cache serve request time accessing traditional cache single memory address multi ported cache request addresses time ports connected processor cache benefit pipelined processor access memory phases pipeline benefit concept super scalar processors cache levels 
849224	computerscience	fsm library collection unix software tools creating manipulating finite machines weighted finite acceptors transducers completely library designed speech processing applications speech recognition speech synthesis commercial binary commercial licenses labs library consists sets component 
849237	computerscience	contiki operating networked memory constrained systems focus power wireless internet devices extant contiki include systems street lighting sound monitoring smart cities radiation monitoring alarms source software released bsd license contiki created adam dunkels 2002 developed worldwide team developers texas instruments atmel cisco enea eth zurich redwire rwth aachen university oxford university sap sensinode swedish institute science microelectronics zolertia contiki gained popularity built tcp ip stack lightweight preemptive scheduling event driven kernel motivating feature iot contiki thor heyerdahl famous kon tiki raft contiki multitasking built internet protocol suite tcp ip stack kilobytes random access memory ram 30 kilobytes read memory rom including graphical user interface 30 kilobytes ram hardware contiki designed types hardware devices severely constrained memory power processing power communication bandwidth typical contiki memory kilobytes power budget milliwatts processing speed measured megahertz communication bandwidth hundreds kilobits systems include types embedded systems bit computers networking contiki network mechanisms uip tcp ip stack ipv4 networking uipv6 stack ipv6 networking rime stack set custom lightweight networking protocols designed power wireless networks ipv6 stack contributed cisco released ipv6 stack receive ipv6 ready certification ipv6 stack routing protocol power lossy networks rpl routing protocol power lossy ipv6 networks 6lowpan header compression adaptation layer ieee 802 15 links rime alternative network stack overhead ipv4 ipv6 stacks prohibitive rime stack set communication primitives power wireless systems default primitives single hop unicast single hop broadcast multi hop unicast network flooding address data collection primitives combined form complex protocols mechanisms power operation contiki systems severely power constrained battery operated wireless sensors provide unattended operation recharge replace batteries contiki set mechanisms reduce power consumption systems runs default mechanism attaining power operation radio called contikimac contikimac nodes running power mode receive relay radio messages simulation contiki includes network simulator called cooja simulates networks contiki nodes nodes belong classes emulated nodes entire hardware node emulated cooja nodes contiki code node compiled executed simulation host java nodes behavior node reimplemented java class cooja simulation mix nodes classes emulated nodes include contiki nodes simulated network contiki platforms ti msp430 atmel avr microcontrollers emulated programming model efficiently memory systems contiki programming model based protothreads protothread memory efficient programming abstraction shares features multithreading event driven programming attain memory overhead protothread kernel invokes protothread process response internal external event examples internal events timers messages posted processes examples external events sensors trigger incoming packets radio neighbor protothreads cooperatively scheduled contiki process explicitly yield control kernel regular intervals contiki processes special protothread construct block waiting events yielding control kernel event invocation features contiki supports process optional preemptive multithreading inter process communication message passing events optional graphical user interface gui subsystem direct graphic support locally connected terminals networked virtual display virtual network computing vnc telnet installation contiki includes features contiki supported popular ssl tls libraries wolfssl includes port 15 release ports contiki operating ported systems 
864595	computerscience	draft report edvac commonly shortened draft incomplete 101 document written john von neumann distributed june 30 1945 herman goldstine security officer classified eniac project published description logical design stored program concept controversially von neumann architecture history von neumann wrote report hand commuting train los alamos mexico mailed handwritten notes philadelphia goldstine report typed duplicated typed report june 30 24 copies draft distributed persons closely connected edvac project days earlier june 25 report caused maurice wilkes cambridge university cited excitement report content impetus decision travel united moore school lectures summer 1946 synopsis von neumann describes detailed design speed automatic digital computing divides major subdivisions central arithmetic central control memory input output slow external memory punched cards teletype tape magnetic wire steel tape perform addition subtraction multiplication division square root mathematical operations logarithms trigonometric functions table interpolation biquadratic notes multiplication division logarithm tables tables interpolation requires multiplication precision represented binary notation estimates 27 binary digits term bit coined claude shannon 1948 sufficient yielding decimal accuracy rounds 30 bit sign bit bit distinguish 32 bit word calls minor cycle two’s complement arithmetic simplifying subtraction multiplication division proposes placing binary sign bit treated computation scaled circuit design vacuum tubes relays tubes’ ability operate microsecond milliseconds relays von neumann suggests keeping simple avoiding attempt improving performance overlapping operations arithmetic operations performed binary digit time estimates addition binary digits microsecond 30 bit multiplication 302 microseconds millisecond faster computing device time von neumann design built elements based biological neuron model digital devices constructed vacuum tubes modern terms simplest element input gate input inverted inhibit input elements inputs threshold produce output positive input signals meets exceed threshold inhibit pulsed elements inputs constructed simplest version suggests built vacuum tube circuits tubes complex function blocks built elements elements build circuits addition subtraction multiplication division square root memory blocks control circuits boolean logic terminology circuits synchronous master clock derived vacuum tube oscillator crystal controlled logic diagrams include arrowhead symbol denote unit time delay time delays accounted synchronous design microsecond electric pulse moves 300 meters clock speeds 108 cycles 100 mhz wire issue error detection correction mentioned elaborated memory design key design concept enunciated named von neumann architecture uniform memory data instructions device requires considerable memory appeared memory perform functions nature considerably purpose tempting treat entire memory organ interchangeable functions enumerated received numerical material stored 14 von neumann estimates memory required based classes mathematical including ordinary partial differential equations sorting probability experiments partial differential equations dimensions time require memory dimensions time technology concludes memory largest subdivision proposes 192 minor cycles 32 bits design goal 048 minor cycles estimates minor cycles suffice storing program proposes kinds fast memory delay iconoscope tube minor cycle addressed unit word addressing 12 instructions executed sequentially special instruction switch memory jump instruction binary digits delay memory pass fed accessing data delay imposes time penalty waiting desired data analyzing timing issues proposes organizing delay memory 256 delay organs dlas storing 1024 bits 32 minor cycles called major cycle memory access selects dla bits minor cycle dla bits total 13 address bits iconoscope memory recognizes scan tube capacitor capacitor store bit precision scanning memory short time periodically recopied refreshed instructions 14 von neumann proposes format calls code types include basic arithmetic operations moving minor cycles word load store modern terms selects based sign previous operation input output transferring memory location jump determines bits types suggests word operand discusses desirability leaving spare bits format addressable memory future unspecified purposes possibility storing minor cycle discussed enthusiasm approach table discussion input output instructions included draft controversy treatment preliminary report publication legal sense source bitter acrimony factions edvac design team reasons publication amounted public disclosure prevented edvac patented edvac design team contended stored program concept evolved meetings university pennsylvania moore school electrical engineering predating von neumann activity consultant represented draft translation discussed concepts language formal logic von neumann fluent failure von neumann goldstine list authors draft led credit attributed von neumann matthew stigler law 
867980	computerscience	lynxos rtos unix real time operating lynx software technologies lynuxworks lynx operating lynxos features posix conformance linux compatibility lynxos real time embedded systems applications avionics aerospace military industrial process control telecommunications compatible military grade security protocol wolfssl popular tls ssl library history versions lynxos written 1986 dallas texas mitchell bunnell targeted custom built motorola 68010 based platform lynxos atari 1040st cross development integrated solutions unix machine 1988 1989 lynxos ported intel 80386 architecture 1989 abi compatibility compatibility operating systems including linux memory management unit support included kernel 1989 reliability protected memory performance advantages virtual addresses powerpc architecture supported february 2015 lynx announced planned support arm cortex family lynxos components designed absolute determinism hard real time performance respond period time predictable response times ensured presence heavy kernel unique threading model interrupt routines extremely short fast lynx holds expired patent technology lynxos maintain hard real time performance granted lynx november 21 1995 operating architecture multiple priority light weight kernel task based interrupt handling 2003 lynx introduced specialized version lynxos called lynxos 178 avionics applications require certification industry standards 178b usenet newsgroup comp os lynx devoted discussion lynxos 
903339	computerscience	nucleus rtos real time operating rtos offered embedded software division mentor graphics siemens business supporting 32 64 bit embedded platforms nucleus rtos designed real time embedded systems medical industrial consumer aerospace iot applications nucleus rtos released 1993 version nucleus rtos v3 includes features power management process model 64 bit support safety certification support heterogeneous multicore socs nucleus process model adds space domain partitioning task module isolation socs memory management unit mmu memory protection unit mpu based armv7 cortex cores supported platforms nucleus rtos supports list embedded processors including leading armv7 cortex devices releases include support armv8 64bit devices complete list supported devices official includes 32 bit mcus mpus configurable devices 32bit 64bit multi core devices history nucleus released 1993 accelerated technology nucleus nucleus commonly rtos’s embedded market success embedded industry ati support networking graphics file systems accelerated adoption mentor graphics acquired accelerated technology march 2002 generation nucleus rtos nucleus released 2003 improving portability nucleus rtos architectures tool sets components ipv6 flash file usb mentor replaced legacy codelab debugger edge development tools included compiler tools debugger simulator profiler mentor graphics introduced 3rd generation nucleus rtos 2010 nucleus targeted mpus mcus dsps fpgas devices limited memory resources nucleus rtos designed scale memory footprint kbs code data nucleus introduced support symmetric multiprocessing smp asymmetric multiprocessing amp unsupervised uamp supervised samp mentor embedded hypervisor additions nucleus addition features version nucleus moved ala carte business model single unified package mentor acquired codesourcery dec 2010 replace edge development tools sourcery codebench sourcery codebench comprises compilation tool chain debugger trace analysis tools compiler tool chain based gnu tool chain debugger ide based eclipse sourcery codebench supports arm ia32 mips ppc architectures built workflows os awareness nucleus rtos mentor embedded linux nucleus introduced unified build configuration kernel configured single file builds single library menuconfig linux ui based configuration tool integrated codebench user graphically selectable components customize kernel build time nucleus configuration user customization integrate tool chains architecture support build properties major components nucleus rtos components include connectivity nucleus supports ability connect devices interfaces including file windows unix operating systems nucleus require file function complex applications requiring local storage nucleus supports wide variety file systems including fat safe fault tolerant lwext multiple media support nucleus support file systems storage media virtual file application programming interface api access supported file systems storage devices functions calls underlying storage format networking nucleus networking stack dual ipv4 ipv6 stack supports 60 networking protocols nucleus networking stack supports posix easy socket based application interface list supported protocols includesecurity nucleus supports wide variety encryption options secure communications protect data rest transit nucleus ships openssl openssl package wolfssl cyassl fraction size openssl designs requiring encryption limited memory capacity security protocols protect data transit include ipsec ike ssh ssl tls dtls encryption includes des 3des aes sha 256 public key algorithms include rsa support includes 509 radius 802 1x wireless wifi modules chip makers qca broadcom ti csr supported ui graphics nucleus supports opengl leading 3rd party ui libraries nucleus supports qt ui framework optimized code size integrated codebench debugging tracing uis supported include embedded wizard socionext cgi studio iot releases nucleus include support https coap mqtt 6lowpan nucleus announced support azure cloud computing framework industrial nucleus integrated 3rd party industrial stacks industry leaders industrial stack support includes opc host client ethernet ip softing ethercat koenigpa multi core nucleus supports asymmetric multiprocessing amp mode symmetric multiprocessing smp mode leading 32 64 bit heterogeneous multicore socs nucleus capable running gos mentor embedded hypervisor operating amp mode nucleus rtos coexist instances nucleus linux bare metal applications distributed processors mode processor running independently behaves separate soc mentor embedded multicore framework interprocess communication operating systems cores processor life cycle management smp operation entails instantiation nucleus rtos manage multiple cores simultaneously nucleus distribute operations cores multi core device subset cores purpose nucleus offers time api support bound computation domain control tasks interrupt affinities core assignment product packages nucleus rtos packaged safety certification nucleus safetycert certified levels safety 178c iec 61508 iec 62304 iso 26262 devices nucleus products 
920668	computerscience	image processing hqx hq stands quality stands magnification pixel art scaling algorithms developed maxim stepin emulators nestopia fceux higan snes9x zsnes hqx filters hq2x hq3x hq4x magnify factor magnification factors filter nearest neighbor scaling algorithm color pixels source pixel compared color source pixel shapes detected checking pixels color threshold total 28   256 combinations dissimilar neighbors expand single pixel 2×2 3×3 4×4 block pixels arrangement neighbors looked predefined table interpolation patterns interpolation data lookup tables constrained requirement continuity segments preserved optimizing smoothness generating lookup tables slow major source complexity algorithm render stage simple fast designed capable performed real time description original author description implementation original hqx library readme original hqx project external links step analysis 3x3 source pixel calculate color difference central pixel nearest neighbors difference compared predefined threshold pixels sorted categories close distant colored neighbors 256 combinations step filtering lookup table 256 entries entry combination close distant colored neighbors entry describes mix colors source pixels 3x3 interpolated pixels filtered image implementation yuv color space calculate color differences tolerance brightness component color components color space conversion easy implement format source image 16 bit pixel simple lookup table calculate color differences compare threshold fast mmx instructions creating lookup table difficult combination probable vector representation determined idea edges colored image preserved edge direction close correct vector representation rasterised 3x resolution anti aliasing result stored lookup table filter designed photographs images sharp edges graphics cartoon sprites designed fast process 256x256 images real time 
927585	computerscience	minisupercomputers constituted short lived class computers emerged mid 1980s characterized combination vector processing scale multiprocessing scientific computing vector processors popular cost systems departmental level corporate level created opportunity vendors enter market generalization price targets computers tenth larger supercomputers notable technical economic political attributes characterize minisupercomputers architecturally diverse prior mainframes minicomputers hardware diverse software advances vlsi expensive mini price machines market targeted cost effective manufactured notable manufacture minisupercomputers usa ibm traditional mainframe makers usa japanese supercomputer vendors russia attempts manufacture minicomputers appearance priced scientific workstations dana ardent stellar merger companies based microprocessors performance floating units fpus 1990s mips r8000 ibm power2 weitek eroded demand class industry magazine datamation coined term crayette short meant instruction set compatible cray 
957085	computerscience	popek goldberg virtualization requirements set conditions sufficient architecture support virtualization efficiently introduced gerald popek robert goldberg 1974 article formal requirements virtualizable generation architectures requirements derived simplifying assumptions represent convenient determining architecture supports efficient virtualization provide guidelines design virtualized architectures vmm definition virtual machines capable virtualizing set hardware resources including processor processors memory storage resources peripheral devices virtual machine monitor vmm called hypervisor piece software abstraction virtual machine properties analyzing environment created vmm terminology popek goldberg vmm properties terminology reference book smith nair 2005 vmms typically assumed satisfy equivalence resource control properties additionally meeting performance property called efficient vmms popek goldberg characteristics instruction set architecture isa physical machine possess vmms possess properties analysis derives characteristics model generation architectures ibm 360 honeywell 6000 dec pdp extended modern machines model includes processor operates user mode access linear uniformly addressable memory assumed subset instruction set mode memory addressed relative relocation register interrupts modelled virtualization theorems derive virtualization theorems sufficient conditions virtualization popek goldberg introduce classification instructions isa main result popek goldberg analysis expressed theorem conventional generation effective vmm constructed set sensitive instructions subset set privileged instructions intuitively theorem build vmm sufficient instructions affect correct functioning vmm sensitive instructions trap pass control vmm guarantees resource control property privileged instructions executed natively efficiently holding equivalence property theorem simple technique implementing vmm called trap emulate virtualization called classic virtualization sensitive instructions behave nicely vmm trap emulate deriving sufficient conditions recursive virtualization conditions vmm built popek goldberg sufficient conditions theorem conventional generation recursively virtualizable architectures hardware assisted x86 meet conditions virtualized classic architectures virtualized x86 meaning cpu mmu level techniques binary translation replaces sensitive instructions generate traps called critical instructions additional processing vmm efficient theory hardware traps negligible performance cost tuned caching binary translation achieve comparable performance x86 binary translation relative generation x86 hardware assist sensitive instructions trappable effectively theorem sufficiency conditions theorem hybrid vmm constructed generation machine set user sensitive instructions subset set privileged instructions handling critical instructions conditions isa virtualization expressed theorem relaxed expense efficiency property vmms virtualizable isas popek goldberg sense routinely built virtualization architectures requires correct handling critical instructions sensitive unprivileged instructions approach patching adopts techniques commonly dynamic recompilation critical instructions discovered time replaced trap vmm mechanisms caching emulation code hardware assists proposed patching process efficient approach paravirtualization requires guest operating systems modified ported running virtual environment instruction sets common architectures relevant architectures relate virtualization requirements pdp pdp architecture instructions sensitive alter query processor mode privileged instructions save restore condition codes user iot bits 370 sensitive instructions 370 privileged satisfies virtualization requirements motorola mc68000 motorola mc68000 single unprivileged sensitive instruction instruction sensitive access entire status register includes condition codes user supervisor bit interrupt level trace control family starting mc68010 instruction privileged ccr instruction access condition code register ia 32 x86 ia 32 instruction set pentium processor 18 sensitive unprivileged instructions categorized introduction amd intel vt instruction sets 2005 x86 processors meet popek goldberg virtualization requirements ia 64 effort support virtualization ia 64 architecture 2000 article magenheimer christian sparc hyperprivileged mode ultrasparc architecture ultrasparc architecture 2005 defines sun4v platform super set sun4u platform compliant sparc v9 level specification powerpc sensitive instructions powerpc instruction set privileged performance practice efficiency requirement popek goldberg definition vmm concerns execution privileged instructions execute natively distinguishes vmm class hardware emulation software architecture meets popek goldberg requirements performance virtual machine actual hardware experiments performed 370 meets formal requirements theorem performance virtual machine 21 native machine benchmarks cost trapping emulating privileged instructions vmm led ibm engineers introduce hardware assists roughly doubled performance 370 virtual machines assists stages 100 assists late models 370 main driving factors development hardware assists 370 virtual memory guest operating implemented virtual memory privileged instructions experience execution times penalty imposed requirement access translation tables native execution shadow tables 
986182	computerscience	fields computational linguistics probability gram contiguous sequence items sample speech items phonemes syllables letters base pairs application grams typically collected speech corpus items grams called shingles latin numerical prefixes gram size referred unigram size bigram commonly digram size trigram english cardinal gram gram computational biology polymer oligomer size called mer gram specific names greek numerical prefixes monomer dimer trimer tetramer pentamer english cardinal mer mer mer applications gram model type probabilistic language model predicting item sequence form  − 1 –order markov model gram models probability communication theory computational linguistics instance statistical natural language processing computational biology instance biological sequence analysis data compression benefits gram models algorithms simplicity scalability – larger model store context understood space–time tradeoff enabling experiments scale efficiently examples figure sequences gram gram gram sequences examples word level grams grams counts times appeared google gram corpus grams4 grams gram models gram model models sequences notably natural languages statistical properties grams idea traced experiment claude shannon theory shannon posed question sequence letters sequence likelihood letter training data derive probability distribution letter history size 00001 probabilities letters sum concisely gram model predicts based probability terms language modeling independence assumptions word depends  − 1 markov model approximation true underlying language assumption massively simplifies estimating language model data addition nature language common unknown language model note simple gram language model probability word conditioned previous word bigram model trigram model categorical distribution imprecisely called multinomial distribution practice probability distributions smoothed assigning probabilities unseen grams smoothing techniques applications considerations gram models statistical natural language processing speech recognition phonemes sequences phonemes modeled gram distribution parsing modeled gram composed language identification sequences characters graphemes letters alphabet modeled languages sequences characters grams referred trigrams generated morning goo ood od mor counting space character gram modeled explicitly adding sequences trigrams shingles generated dog smelled skunk dog dog smelled dog smelled smelled skunk skunk practitioners multiple word terms preprocess strings remove spaces simply collapse whitespace single space preserving paragraph marks whitespace frequently element writing style introduces layout presentation required prediction deduction methodology punctuation commonly reduced removed preprocessing frequently trigger functionality grams sequences type data extracting features clustering sets satellite earth images determining earth image successful pass genetic sequence search identification species short sequences dna originated gram models criticized lack explicit representation range dependency explicit dependency range  − 1 tokens gram model natural languages incorporate unbounded dependencies wh movement gram model principle distinguish unbounded dependencies noise range correlations drop exponentially distance markov model reason gram models impact linguistic theory explicit goal model dependencies criticism markov models language including gram models explicitly capture performance competence distinction gram models designed model linguistic knowledge claims complete models linguistic knowledge practical applications practice gram models extremely effective modeling language data core component modern statistical language applications modern applications rely gram based models machine translation applications rely exclusively models typically incorporate bayesian inference modern statistical models typically prior distribution describing inherent likelihood result likelihood function assess compatibility result observed data language model prior distribution gauge inherent goodness translation component distribution handcrafted features sorts variables represent position word sentence topic discourse addition features based structure potential result syntactic considerations features likelihood function observed data conventional linguistic theory incorporated features practice rare features specific generative theories grammar incorporated computational linguists tend agnostic individual theories grammar vocabulary issue gram language models vocabulary oov encountered computational linguistics natural language processing input includes dictionary database preparation default language model estimated entire observed vocabulary estimate language model specific fixed vocabulary scenario grams corpus vocabulary word gram probabilities smoothed vocabulary observed essential explicitly model probability vocabulary introducing special token unk vocabulary vocabulary corpus effectively replaced special unk token grams counts cumulated option estimate transition probabilities grams involving vocabulary grams approximate matching grams efficient approximate matching converting sequence items set grams embedded vector space allowing sequence compared sequences efficient manner convert strings letters english alphabet single character grams dimensional space dimension measures occurrences aaa aab combinations letters representation lose string strings abc bca rise gram bc ab bc bc empirically strings real vector representation measured cosine distance metrics applied vectors grams varying scores compare documents examining standard deviations gram differs occurrence collection corpus documents form background vector event counts score comparing alternative models principled approach statistics grams modeling similarity likelihood strings source terms bayesian inference gram based searching plagiarism detection applications grams science computational linguistics applied mathematics bias variance trade choose gram model trade stability estimate appropriateness trigram triplets common choice training corpora millions bigram smoothing techniques balance weight infrequent grams proper appeared training data frequent grams items training data probability smoothing unseen plausible data sample introduce pseudocounts pseudocounts motivated bayesian grounds practice smooth probability distributions assigning probabilities unseen grams reason models derived gram frequency counts severe confronted grams explicitly – frequency smoothing methods simple add laplace smoothing assign count unseen grams rule succession sophisticated models good–turing discounting models methods equivalent assigning prior distribution probabilities grams bayesian inference compute posterior gram probabilities sophisticated smoothing models typically derived fashion independent considerations skip gram field computational linguistics language modeling skip grams generalization grams components typically consecutive consideration leave gaps skipped provide overcoming data sparsity conventional gram analysis formally gram consecutive subsequence sequence tokens skip gram subsequence components occur distance input set skip grams includes bigrams grams addition subsequencessyntactic grams syntactic grams grams defined paths syntactic dependency constituent trees linear structure sentence economic news financial markets transformed syntactic grams tree structure dependency relations news economic markets financial syntactic grams intended reflect syntactic structure faithfully linear grams applications features vector space model syntactic grams tasks standard grams authorship attribution type syntactic grams speech grams defined fixed contiguous overlapping subsequences extracted speech sequences speech grams applications commonly retrieval 
990677	computerscience	sas statistical analysis software suite developed sas institute advanced analytics multivariate analyses business intelligence data management predictive analytics sas developed north carolina university 1966 1976 sas institute incorporated sas developed 1980s 1990s addition statistical procedures additional components introduction jmp interface version 2004 social media analytics product 2010 technical overview terminology sas software suite alter manage retrieve data variety sources perform statistical analysis sas graphical user interface technical users advanced options sas language sas programs data steps retrieve manipulate data proc steps analyze data step consists series statements data step executable statements result software action declarative statements provide instructions read data set alter data appearance data step phases compilation execution compilation phase declarative statements processed syntax errors identified execution phase processes executable statement sequentially data sets organized tables rows called observations columns called variables additionally piece data descriptor proc step consists proc statements named procedures procedures perform analysis reporting data sets produce statistics analyses graphics 300 procedures substantial body programming statistical proc statements display sort data perform operations sas macros pieces code variables coded referenced perform repetitive tasks sas data published pdf excel formats output delivery introduced 2007 sas enterprise guide sas interface generates code manipulate data perform analysis automatically require sas programming experience sas software suite 200 components sas components include history origins development sas 1966 north carolina university hired anthony barr program analysis variance regression software ibm 360 computers project funded national institute health originally intended analyze agricultural data improve crop yields barr joined student james goodnight developed software statistical routines project leaders 1968 barr goodnight integrated multiple regression analysis variance routines 1972 issuing release sas project lost funding goodnight nih fund projects medical applications goodnight continued teaching university salary access mainframe computers project funded university statisticians southern experiment stations john sall joined project 1973 contributed software econometrics time series matrix algebra participant caroll perkins contributed sas programming jolayne service jane helwig created sas documentation versions sas named released 1971 sas 71 published limited release ibm mainframes main elements sas programming data step common procedures proc step version released sas 72 introduced merge statement features handling missing data combining data sets 1976 barr goodnight sall helwig removed project north carolina incorporated sas institute development sas designed sas 76 architecture allowed compilers procedures input infile statements improved read data formats ibm mainframes generating reports file statements ability analyze linear models format procedure allowed developers customize appearance data 1979 sas 79 support cms operating introduced datasets procedure sas 82 introduced macro language append procedure sas version limited features sas accessible version introduced complete macro language array subscripts screen interactive user interface called display manager 1985 sas rewritten programming language allowed sas multivendor architecture software unix dos windows written fortran assembly language 1980s 1990s sas released components complement base sas sas graph produces graphics released 1980 sas ets component supports econometric time series analysis component intended pharmaceutical users sas clinical released 1990s food drug administration standardized sas clinical drug applications 2002 vertical products sas financial management sas human capital management called cfo vision vision introduced jmp developed sas founder john sall team developers advantage graphical user interface introduced 1984 apple macintosh shipped time 1989 updated versions jmp released continuously 2002 release 2016 sas version 1990s wider range operating systems including macintosh os silicon graphics primos sas introduced features dot releases 06 09 user interface based windows paradigm introduced support sql version introduced output delivery ods improved editor ods improved successive releases output options version operating systems supported reduced unix windows os linux sas version sas enterprise miner released 1999 history 2002 miner software introduced miner analyzes data emails patterns business intelligence applications 2004 sas version released dubbed project mercury designed sas accessible broader range business users version custom user interfaces based user role established user interface sas enterprise guide software primary graphical user interface gui customer relationship management crm features improved 2004 sas interaction management 2008 sas announced project unity designed integrate data quality data integration master data management sas sued programming developers competing implementation programming alleging infringed sas copyright implementing functionality referred united kingdom court justice european court justice 11 august 2010 2012 european court justice ruled favor programming finding functionality program programming language protected copyright version introduced students 2010 sas social media analytics tool social media monitoring engagement sentiment analysis released sas rapid predictive modeler rpm creates basic analytical models excel introduced jmp 2010 interface programming language jmp add excel performance computing appliance partnership teradata emc greenplum 2011 company released enterprise miner company introduced 27 data management products october 2013 october 2014 updates 160 2015 sas global forum announced products specialized industries training software releases sas releases 1972 release sas stat release numbering software products 2011 sas largest set products customer intelligence numerous sas modules social media marketing analytics profile customers prospects predict behaviors manage optimize communications sas sas fraud framework framework primary functionality monitor transactions applications networks partners analytics identify anomalies indicative fraud sas enterprise grc governance risk compliance risk modeling scenario analysis functions manage visualize risk compliance corporate policies sas enterprise risk management product set designed banks financial services organizations sas products monitoring managing operations systems collectively referred sas management solutions sas collects data assets performance utilization creates reports analyses sas performance management products consolidate provide graphical displays key performance indicators kpis employee department organizational level sas supply chain intelligence product suite offered supply chain forecasting product demand managing distribution inventory optimizing pricing sas sustainability management set software forecast environmental social economic effects identify causal relationships operations impact environment ecosystem sas product sets specific industries government retail telecommunications aerospace marketing optimization performance computing university edition sas offers university edition downloaded commercial announcement university edition appeared newspapers 28 2014 university edition freely comparison products 2005 article journal marriage family comparing statistical packages sas competitors stata spss alan acock wrote sas programs provide extraordinary range data analysis data management tasks difficult learn spss stata easier learn documentation capable analytic abilities expanded paid spss stata add ons acock concluded sas power users occasional users benefit spss stata comparison university california los angeles competitors revolution analytics alpine data labs advertise products considerably cheaper sas 2011 comparison doug henschen informationweek start fees admitted starting fees basis comparison sas business model weighted heavily initial fees programs focusing revenue annual subscription fees adoption idc sas largest market share holder advanced analytics 35 percent market 2013 largest market share holder business intelligence software share largest independent vendor competes market conglomerates sap businessobjects ibm cognos spss modeler oracle hyperion sas named gartner leader quadrant data integration tool business intelligence analytical platforms study published 2011 bmc health services sas 42 percent data analyses health service based sample 139 articles drawn journals 
991666	computerscience	computing misd multiple instruction single data type parallel computing architecture functional units perform operations data pipeline architectures belong type purist data processing stage pipeline fault tolerance executing instructions redundantly detect mask errors manner task replication considered belong type instances architecture exist mimd simd common data parallel techniques scaling computational resources misd prominent misd computing space shuttle flight control computers systolic arrays systolic arrays wavefront processors kung charles leiserson misd architecture typical systolic array parallel input data flows network hard wired processor nodes resembling human brain combine process merge sort input data derived result systolic arrays hard wired specific operation multiply accumulate perform massively parallel integration convolution correlation matrix multiplication data sorting tasks systolic array typically consists monolithic network primitive computing nodes hardwired software configured specific application nodes fixed identical interconnect programmable wavefront processors contrast employ sophisticated individually programmable nodes monolithic depending array size design parameters wave propagation data systolic array resembles pulse human circulatory systolic coined medical terminology major benefit systolic arrays operand data partial contained passing processor array access external buses main memory internal caches operation standard sequential machines sequential limits parallel performance dictated amdahl theorem apply data dependencies implicitly handled programmable node interconnect systolic arrays extremely artificial intelligence image processing pattern recognition vision tasks animal brains wavefront processors machine learning implementing configuring neural nets hardware systolic arrays officially classified misd classification problematic input typically vectorof independent values systolic array sisd input values merged combined result maintain independence simd vector processing unit array classified array classified mimd mimd viewed mere collection sisd simd machines finally data swarm transformed passes array node node multiple nodes operating data misd classification misnomer reason systolic array qualify misd disqualifies sisd category input data typically vector single data argue input vector single dataset withstanding systolic arrays offered classic misd architecture textbooks parallel computing engineering class array viewed atomic classified sfmudmer single function multiple data merged result 
1002307	computerscience	engineering execution formally dynamic execution paradigm performance central processing units instruction cycles wasted paradigm processor executes instructions governed availability input data execution units original program processor avoid idle waiting preceding instruction complete process instructions independently history execution restricted form data flow computation major architecture 1970s 1980s academic subject led yale patt hpsm simulator paper james smith pleszkun published 1985 completed scheme describing precise behavior exceptions maintained machines arguably machine execution cdc 6600 1964 scoreboard resolve conflicts modern usage scoreboarding considered execution execution machines stall raw conflict – strictly speaking machines initiate execution complete execution ibm 360 model 91 1966 introduced tomasulo algorithm execution 1990 ibm introduced microprocessor power1 execution limited floating instructions model 91 1990s execution common featured ibm motorola powerpc 601 1993 fujitsu hal sparc64 1995 intel pentium pro 1995 mips r10000 1996 hp 8000 1996 amd k5 1996 dec alpha 21264 1996 notable exceptions trend include sun ultrasparc hp intel itanium intel atom silvermont architecture ibm power6 logical complexity technique reason reach mainstream machines mid 1990s processors meant cost sensitive markets paradigm silicon required implementation power usage design goal harder achieve execution oooe design vulnerability microprocessor manufacturers implementations execution mechanism reported manufacturers june 2017 publicized january 2018 exploitable vulnerability led millions vulnerable systems vulnerability named spectre vulnerability meltdown disclosed time advantage assumption manufacturers loading data processor cache allowing data cached privileged security boundary race condition timed leak privileged basic concept processors earlier processors processing instructions performed instruction cycle consisting steps processors paradigm breaks processing instructions steps key concept oooe processing processor avoid class stalls occur data perform operation unavailable outline oooe processor avoids stall occurs step processor instruction completely ready processed missing data oooe processors slots time instructions ready instructions processed normal instructions original code program processor handled data data operands processor registers complex circuitry convert maintain logical output processor runs instructions seemingly random benefit oooe processing grows instruction pipeline deepens speed difference main memory cache memory processor widens modern machines processor runs times faster memory time processor spends waiting data arrive processed instructions dispatch issue decoupling issue differences created paradigm creation queues dispatch step decoupled issue step graduation stage decoupled execute stage paradigm decoupled architecture earlier processors stages operated lock step pipelined fashion instructions program correct result correct separates fetch decode stages execute stage pipelined processor buffer buffer purpose partition memory access execute functions program achieve performance exploiting fine grain parallelism effectively hides memory latency processor perspective larger buffer theory increase throughput processor branch misprediction entire buffer flushed wasting lot clock cycles reducing effectiveness larger buffers create heat die space reason processor designers favour multi threaded design approach decoupled architectures purpose computing handle control intensive code control intensive code include nested branches occur frequently operating kernels decoupled architectures play role scheduling instruction word vliw architectures avoid false operand dependencies decrease frequency instructions issued technique called register renaming scheme physical registers defined architecture physical registers tagged multiple versions architectural register exist time execute writeback decoupling program restart queue resolve issues branch mispredictions exceptions traps queue programs restarted exception requires instructions completed program queue discarded mispredictions branch instructions exceptions instructions ability issue instructions branches resolve speculative execution 
1006355	computerscience	irobot corporation american advanced technology company founded 1990 mit graduates designed robots space exploration military defense incorporated delaware company designs builds consumer robots including range autonomous vacuum cleaners roomba floor moppers braava autonomous cleaning devices history irobot founded 1990 rodney brooks colin angle helen greiner mit artificial intelligence lab irobot sold robots deployed 000 defense security robots 2012 addition deployment bomb disposal units military iraq afghanistan packbots gather data dangerous conditions fukushima daiichi nuclear disaster irobot seaglider detected underwater pools oil deepwater horizon oil spill irobot criticized attempting unregulated 6240 6740 mhz band fcc exemption band lawn mowing robot electronic fence boundary marker radio beacons band falls band radio astronomy interfering radio telescope observations methanol 66852 ghz emissions february 2016 irobot announced sell military robotics business arlington capital partners focus consumer market robots roomba roomba automated vacuum cleaning robot released 2002 roomba powered rechargeable battery models docking station roomba return recharge cleaning cycle conjunction accessories rf company intentionally customers hack robot people experiment improve product api serial published serial port easily accessible modifications easy perform braava braava irobot floor mopping robot designed hard surface floors braava disposable microfiber cleaning cloths damp dry cleaning design mint 2013 developed evolution robotics acquired irobot 2012 create create hobby robot released 2007 create offers users possibility changing adapting robot functions experimentation basic elements robotics adding sensors grippers wireless connections computers hardware mirra mirra swimming pool cleaning robot released 2013 mirra cleans pool floor walls debris successor verro discontinued products scooba scooba irobot floor washing robot product commercially limited quantities late 2005 product release 2006 models required special bleach cleaning solution white vinegar wash hard floors units plain water versions marketed irobot phased scooba products favor braava floor moppers 2016 dirt dog char dirt dog designed workshop released 2006 product picks objects nuts bolts dirt debris workshop floor unit hard floors shop carpets industrial floor surfaces dirt dog discontinued late 2010 real baby real baby robotic toy marketed irobot 2000 produced partnership toy manufacturer hasbro production product meant human infant employed animatronic facial expressions developed emotionally expressive responsive robot developed irobot corporation called connectr connect 2010 pass pilot introduced public verro verro swimming pool cleaning robot released april 2007 looj looj gutter cleaning robot released september 2007 based autonomous version created science fair project created lucas garrow 2004 garrow finalist 2004 discovery channel scientist challenge dcysc looj autonomous robot remote controlled robot patterned toy tank auger mounted robot fits gutters clean debris stuck leaves pine needles treads gutter auger dislodges removes debris gutter flinging sideways air looj detachable handle remote carry operate robot discontinued 2017 military policing robots april 2016 irobot sold defense security unit company formed called endeavor robotics airarm airarm inflatable arm robot developed irobot inflatable arm pumps inflate arm arm strings actuators motors joints firstlook firstlook reconnaissance robot weighing speed sight control range visible thermal cameras infrared sensors gather transmit images buildings caves locations participate explosive ordnance disposal carrying c4 explosive ied robot ability mesh network feeds robots extend range sensors firstlook cbrn detectors semi autonomous meaning perform tasks correction flipping direct intervention 100 bought jieddo march 2012 pentagon hundreds 
1006597	computerscience	nanorobotics emerging technology field creating machines robots components scale nanometre 10−9 meters nanorobotics opposed microrobotics refers nanotechnology engineering discipline designing building nanorobots devices ranging size 1–10 micrometres constructed nanoscale molecular components terms nanobot nanoid nanite nanomachine nanomite devices development nanomachines development phase primitive molecular machines nanomotors tested sensor switch nanometers count specific molecules chemical sample applications nanomachines nanomedicine biological machines identify destroy cancer cells potential application detection toxic chemicals measurement concentrations environment rice university demonstrated single molecule car developed chemical process including buckminsterfullerenes buckyballs wheels actuated controlling environmental temperature positioning scanning tunneling microscope definition robot precise interactions nanoscale objects manipulate nanoscale resolution devices microscopy scanning probe microscopy description nanorobots molecular machines microscopy definition apparatus atomic force microscope considered nanorobotic instrument configured perform nanomanipulation viewpoint macroscale robots microrobots nanoscale precision considered nanorobots nanorobotics theory richard feynman graduate student collaborator albert hibbs originally suggested circa 1959 idea medical feynman theoretical micromachines nanomachine hibbs suggested repair machines day reduced size theory feynman swallow surgeon idea incorporated feynman 1959 essay plenty nanorobots microscopic size perform microscopic macroscopic tasks nanorobot swarms unable replicate utility fog replicate unconstrainedly natural environment grey goo common variants synthetic biology utility fog science fiction stories borg nanoprobes star trek outer limits episode breed proponents nanorobotics reaction grey goo scenarios earlier helped propagate hold view nanorobots replicate restricted factory environment form purported productive nanotechnology process replication developed inherently safe assert current plans developing molecular manufacturing include foraging replicators detailed theoretical discussion nanorobotics including specific design issues sensing power communication navigation manipulation locomotion onboard computation medical context nanomedicine robert freitas discussions remain level unbuildable generality approach level detailed engineering legal ethical implications technology document proposal nanobiotech development design technology methods source hardware source software addressed united nations assembly document united nations source accelerated development systems approach benefit society accelerate nanorobotics development nanobiotechnology established human heritage coming generations developed technology based ethical practices peaceful purposes technology stated fundamental key aim nanorobot race technology development drove space race nuclear arms race race nanorobots occurring plenty ground allowing nanorobots included emerging technologies reasons corporations electric hewlett packard synopsys northrop grumman siemens development nanorobots surgeons involved starting propose apply nanorobots common medical procedures universities institutes granted funds government agencies exceeding developing nanodevices medicine bankers strategically investing intent acquire rights royalties future nanorobots commercialisation aspects nanorobot litigation issues linked monopoly arisen patents granted nanorobots patent agents companies specialized solely building patent portfolios lawyers series patents eventually litigations radio war currents emerging fields technology tend monopoly dominated corporations manufacturing approaches manufacturing nanomachines assembled molecular components challenging task level difficulty engineers scientists continue cooperatively multidisciplinary approaches achieve breakthroughs development understandable distinct techniques applied manufacturing nanorobots biochip joint nanoelectronics photolithography biomaterials approach manufacturing nanorobots common medical surgical instrumentation diagnosis drug delivery method manufacturing nanotechnology scale electronics industry 2008 practical nanorobots integrated nanoelectronics devices tele operation advanced capabilities medical instrumentation nubots nucleic acid robot nubot organic molecular machine nanoscale dna structure provide assemble 2d 3d nanomechanical devices dna based machines activated molecules proteins molecules dna biological circuit gates based dna materials engineered molecular machines vitro drug delivery targeted health material based systems closely smart biomaterial drug delivery allowing precise vivo teleoperation engineered prototypes surface bound systems reports demonstrated attachment synthetic molecular motors surfaces primitive nanomachines undergo machine motions confined surface macroscopic material surface anchored motors position nanoscale materials surface manner conveyor belt positional nanoassembly nanofactory collaboration founded robert freitas ralph merkle 2000 involving 23 researchers organizations countries focuses developing practical agenda aimed developing positionally controlled diamond mechanosynthesis diamondoid nanofactory capability building diamondoid medical nanorobots biohybrids emerging field bio hybrid systems combines biological synthetic structural elements biomedical robotic applications constituting elements bio nanoelectromechanical systems bionems nanoscale size dna proteins nanostructured mechanical thiol ene ebeam resist direct writing nanoscale features functionalization natively reactive resist surface biomolecules approaches biodegradable material attached magnetic particles guided body bacteria based approach proposes biological microorganisms bacterium escherichia coli salmonella typhimurium model flagellum propulsion purposes electromagnetic fields control motion biological integrated device chemists university nebraska created humidity gauge fusing bacterium silicone chip virus based retroviruses retrained attach cells replace dna process called reverse transcription deliver genetic packaging vector devices pol – gag genes virus capsid delivery process called retroviral gene therapy ability engineer cellular dna usage viral vectors approach appeared form retroviral adenoviral lentiviral gene delivery systems gene therapy vectors cats send genes genetically modified organism gmo causing display trait 3d printing 3d printing process dimensional structure built processes additive manufacturing nanoscale 3d printing involves process incorporated scale print structure 400 µm scale precision 3d printing machine improved greatly steps process 3d printing 3d printing laser etched plates method incorporated improvement technique precise nanoscale 3d printing process laser etching machine etches plate details segment nanorobot plate transferred 3d printer fills etched regions desired nanoparticle 3d printing process repeated nanorobot built 3d printing process benefits increases accuracy printing process potential create functional segments nanorobot 3d printer liquid resin hardened precisely correct spots focused laser beam focal laser beam guided resin movable mirrors leaves hardened solid polymer nanometers wide fine resolution enables creation intricately structured sculptures tiny grain sand process takes photoactive resins hardened laser extremely scale create structure process quick nanoscale 3d printing standards ultra features 3d micro fabrication technique multiphoton photopolymerisation approach focused laser trace desired 3d object block gel nonlinear nature photo excitation gel cured solid laser focused remaining gel washed feature sizes 100 nm easily produced complex structures moving interlocked potential nanomedicine potential nanorobotics medicine include diagnosis targeted drug delivery cancer biomedical instrumentation surgery pharmacokinetics monitoring diabetes health care plans future medical nanotechnology expected employ nanorobots injected patient perform cellular level nanorobots intended medicine replicating replication needlessly increase device complexity reduce reliability interfere medical mission nanotechnology wide range technologies developing customized optimize delivery pharmaceutical drugs harmful effects treatments chemotherapy commonly result drug delivery methods pinpoint intended target cells accurately researchers harvard mit attach special rna strands measuring 10 nm diameter nanoparticles filling chemotherapy drug rna strands attracted cancer cells nanoparticle encounters cancer cell adheres releases drug cancer cell directed method drug delivery potential treating cancer patients avoiding negative effects commonly improper drug delivery demonstration nanomotors operating living organism carried 2014 university california san diego mri guided nanocapsules potential precursor nanorobots application nanorobots assisting repair tissue cells white blood cells recruiting inflammatory cells white blood cells include neutrophil granulocytes lymphocytes monocytes mast cells response tissues injury size nanorobots attach surface recruited white cells squeeze walls blood vessels arrive injury assist tissue repair process substances accelerate recovery science mechanism complex passage cells blood endothelium process transmigration mechanism involving engagement cell surface receptors adhesion molecules active force exertion dilation vessel walls physical deformation migrating cells attaching migrating inflammatory cells robots “hitch ride” blood vessels bypassing complex transmigration mechanism united food drug administration fda regulates nanotechnology basis size soutik betal doctoral university texas san antonio developed nanocomposite particles controlled remotely electromagnetic field series nanorobots enlisted guinness record interact biological cells scientists technology treatment cancer cultural references nanites characters mystery science theater 3000 replicating bio engineered organisms ship reside sol systems appearance season nanites episodes netflix series travelers programmed injected injured people perform repairs 
1007969	computerscience	iterative reconstruction refers iterative algorithms reconstruct 2d 3d images imaging techniques computed tomography image reconstructed projections object iterative reconstruction techniques abetter computationally expensive alternative common filtered projection fbp method calculates image ina single reconstruction step scientists extremely fast computations massive parallelism iterative reconstruction iterative reconstruction practical commercialization basic concepts reconstruction image acquired data inverse solve inverseproblem direct algorithm approximate solution visible reconstruction artifacts image iterative algorithms approach correct solution multiple iteration steps reconstruction cost computation time variety algorithms starts assumed image computes projections image compares original projection data updates image based difference calculated actual projections algebraic reconstruction algebraic reconstruction technique art iterative reconstruction technique computed tomography hounsfield iterative sparse asymptotic minimum variance iterative sparse asymptotic minimum variance algorithm iterative parameter superresolution tomographic reconstruction method inspired compressed sensing applications synthetic aperture radar computed tomography scan magnetic resonance imaging mri statistical reconstruction typically components statistical iterative image reconstruction algorithms learned iterative reconstruction learned iterative reconstruction updating algorithm learned training data techniques machine learning convolutional neural networks incorporating image formation model typically faster quality reconstructions applied ct mri reconstruction advantages advantages iterative approach include improved insensitivity noise capability reconstructing optimal image incomplete data method applied emission tomography modalities spect pet attenuation ray paths noise statistics poor statistical likelihood based approaches statistical likelihood based iterative expectation maximization algorithms preferred method reconstruction algorithms compute estimates distribution annihilation events led measured data based statistical principle providing noise profiles resistance streak artifacts common fbp density radioactive tracer function function space extremely dimensions methods whichregularize maximum likelihood solution penalized maximum posteriori methods advantages counts examplessuch ulf grenander sieve estimatoror bayes penalty methods yield superior performance expectation maximization based methods involve poisson likelihood function considered superior set projectionsavailable projections distributed uniformly angle projections sparse missing orientations scenarios occur intraoperative ct cardiac ct metal artifacts require exclusion portions projection data magnetic resonance imaging reconstruct images data acquired multiple receive coils sampling patterns conventional cartesian grid improved regularization techniques total variation extended modeling physical processes improve reconstruction iterative algorithms reconstruct images data acquired short time required real time mri cryo electron tomography limited projections acquired hardware limitations avoid biological specimen damage compressive sensing techniques regularization functions huber function improve reconstruction interpretation illustrates benefits iterative image reconstruction cardiac mri 
1013210	computerscience	branch instruction program executing instruction sequence deviate default behavior executing instructions branch branching branched refer switching execution instruction sequence result executing branch instruction branch instructions implement control flow program loops conditionals executing sequence instructions conditions satisfied branch instruction unconditional branch branching conditional branch branching depending condition depending specifies address instruction sequence target address branch instruction classified direct indirect relative meaning instruction target address specifies target address register memory location specifies difference current target addresses implementation mechanically branch instruction change program counter pc cpu program counter stores memory address instruction executed branch cpu fetching instructions sequence memory cells branch cpu program counter set argument jump instruction instruction instruction address memory flow control branch cpu program counter unchanged instruction executed instruction branch instruction flow control unchanged term branch referring programs level languages programs written machine code assembly language level programming languages branches form conditional statements forms encapsulate instruction sequence executed conditions satisfied unconditional branch instructions goto unconditionally jump execution instruction sequence machine level branch instructions called jump instructions machine level jump instructions typically unconditional conditional forms depending condition distinct forms jumps called jump subroutine invocations automatically save originating address return address stack allowing single subroutine invoked multiple locations code cpus flag registers earlier instruction sets condition flag register earlier instruction arithmetic logic instruction close branch instruction branch stored condition branch jump overflow flag set temporary stored flag register located flag register design simple slower simple computers fast computers flag register bottleneck speed instructions operate parallel execution units set flag bits sequence machines instructions condition checked jump instruction branch label register negative simple designs comparison branches execute arithmetic power flag register branches fast designs comparison branches faster flag register branches comparison branches access registers parallelism cpu mechanisms calculation simple cpu architectures microcontrollers implement conditional jump conditional skip instruction operation conditional jump implemented conditional skip unconditional jump instruction examples depending architecture assembly language mnemonic jump instruction typically shortened form word jump word branch informative letters extra parameter representing condition details included range jump offset size special addressing mode locate actual effective offset table lists machine level branch jump instructions architectures performance branch instructions achieve performance modern processors pipelined consist multiple partially process instruction feed stage pipeline start instruction program design expects instructions execute unchanging sequence conditional branch instructions impossible sequence conditional branches stalls pipeline restarted program techniques improve speed reducing stalls conditional branches historically branch prediction statistics result optimize code programmer compile version program data code counted branches statistics code compiler optimize branches released code optimization arrange fastest branch direction frequently control flow path permit cpus designed predictable branch timing cpus power architecture instruction set designed branch hints compiler cpu branch software branch prediction requires complex software development process software hardware branch predictors moved statistics electronics branch predictors processor guess outcome conditional branch processor logic gambles guess execute expected instruction flow simple hardware branch prediction scheme assume branches program counter loop branches larger program counter leave loop branch predictors developed validated statistically running simulation variety programs predictors count outcomes previous executions branch faster expensive computers faster investing branch prediction electronics cpu hardware branch prediction branch hints compiler superior branch prediction override hardware simplistic branch prediction logic written branches branches bitwise operations conditional moves branch predication branches technique branch delay slot approach instruction branch executed instruction pipeline stalls approach historically popular risc computers family compatible cpus complicates multicycle cpus pipeline faster cpus expected pipelines superscalar cpus execute instructions 
1014669	computerscience	overlay network network built network structure nodes overlay network connected virtual logical links corresponds path physical links underlying network distributed systems peer peer networks client server applications overlay networks nodes internet internet originally built overlay telephone network advent voip telephone network increasingly overlay network built internet telecommunication overlay networks telecommunication availability digital circuit switching equipment optical fiber telecommunication transport networks ip networks combined broader internet overlaid optical fiber layer transport layer ip circuit switching layers pstn enterprise private networks overlaid telecommunication networks frame relay asynchronous transfer mode packet switching infrastructures migration legacy infrastructures ip based mpls networks virtual private networks started 2001 2002 physical standpoint overlay networks complex figure combine logical layers operated built entities businesses universities government separation concerns time permitted buildup broad set services proposed single telecommunication operator ranging broadband internet access voice ip iptv competitive telecom operators internet nowadays internet basis overlaid networks constructed permit routing messages destinations ip address distributed hash tables route messages node specific logical address ip address advance overlay networks proposed improve internet routing quality service guarantees achieve quality streaming media previous proposals intserv diffserv ip multicast wide acceptance require modification routers network hand overlay network incrementally deployed hosts running overlay protocol software cooperation isps overlay control packets routed underlying network overlay nodes control sequence overlay nodes message traverses reaching destination akamai technologies manages overlay network reliable efficient content delivery multicast academic includes multicast overcast multicasting overlay network ron resilient overlay network resilient routing overqos quality service guarantees resilience resilient overlay networks ron architectures distributed internet applications detect recover disconnection interference current wide routing protocols minutes recover improved application layer overlay ron nodes monitor internet paths determine reroute packets internet ron nodes optimizing application specific metrics resilient overlay network simple conceptual design ron nodes deployed locations internet nodes form application layer overlay cooperate routing packets ron nodes monitor quality internet paths accurately automatically select paths packet reducing time required recover poor quality service multicast overlay multicast peer peer multicast bandwidth multi source multicast distributed nodes critical capability wide range applications including audio video conferencing multi party games content distribution decade projects explored multicast efficient scalable mechanism support communication applications multicast decouples size receiver set single node avoids redundant communication network limited deployment ip multicast effort network layer multicast protocol led considerable alternate approaches implemented application layer systems overlay multicast approach participating peers organize overlay topology data delivery edge topology corresponds unicast path systems peers underlying internet multicast functionality implemented peers routers goal multicast protocol construct maintain efficient overlay data transmission list overlay network protocols overlay network protocols based tcp ip include overlay network protocols based udp ip include 
1030104	computerscience	dark darknet umbrella term describing portions internet purposefully public view hidden networks architecture superimposed internet darknet encrypted internet called tor network illicit trading takes infamous online drug bazaar called silk road considered deep anonymous communication whistle blowers journalists news organisations facilitated darknet tor network applications including securedrop terminology term originally computers arpanet hidden programmed receive messages respond acknowledge remaining invisible dark account detailed online transaction drugs transpired 1971 students massachusetts institute technology stanford university traded marijuana arpanet accounts artificial intelligence laboratory term usage incorporated services dark overlay network accessed specific software configurations authorization standard communication protocols ports types dark webs include friend friend networks file sharing peer peer connection privacy networks tor reciprocal term encrypted darknet clearnet surface referring content indexable search engines term darknet interchangeably dark quantity hidden services tor darknet term inaccurately interchangeably deep tor history platform search indexed mixing terms inaccurate commentators recommending terms distinct fashions origins darknet coined 1970s designate networks isolated arpanet government founded military academical network evolved internet security purposes darknet addresses receive data arpanet network lists answer pings inquiries term gained public acceptance publication darknet future content distribution 2002 paper peter biddle paul england marcus peinado bryan willman employees argued presence darknet primary hindrance development workable digital rights management drm technologies copyright infringement inevitable paper darknet type parallel network encrypted requires specific protocol user connect cultures journalist lasica 2005 book darknet hollywood war digital generation darknet reach encompassing file sharing networks subsequently 2014 journalist jamie bartlett book dark term range underground emergent subcultures including camgirls cryptoanarchists darknet drug markets harm communities social media racists transhumanists telegram features encryption ban territory countries belongs darknet anonymity encrypted channels sale prohibited substances recruiting organizations coordinating anti government actions darknets reasons software darknets require specific software installed network configurations access tor accessed customised browser vidalia aka tor browser bundle alternatively proxy configured perform function 
1034358	computerscience	signal processing chirplet transform product input signal family analysis primitives called chirplets wavelet transform chirplets generated expressed single mother chirplet analogous called mother wavelet wavelet theory definitions term chirplet transform coined steve mann title published paper chirplets term chirplet chirplet transform steve mann domingo mihovilovic ronald bracewell windowed portion chirp function mann chirplet transform represents rotated sheared transformed tiling time–frequency plane chirp signals radar pulse compression published reference chirplet transform specific signal representations based families functions time–varying frequency modulation frequency varying time modulation addition time frequency shifting scale paper gaussian chirplet transform successful application ice fragment detection radar improving target detection previous approaches term chirplet term chirplet transform proposed transform independently mihovilovic bracewell applications chirplet transform signal analysis representation framework excisechirp interference spread spectrum communications eeg processing chirplet time domain reflectometry warblet transform warblet transform chirplet transform introduced mann haykin 1992 signal representation based cyclically varying frequency modulated signals warbling signals references florian bossmann jianwei asymmetric chirplet transform phase frequency chirp rate geophysics 2016 81 v425 v439 florian bossmann jianwei asymmetric chirplet transform sparse representation seismic data geophysics 2015 80 wd89 wd100 
1053303	computerscience	statistical learning theory framework machine learningdrawing fields statistics functional analysis statistical learning theory deals finding predictive function based data statistical learning theory led successful applications fields vision speech recognition bioinformatics baseball introduction goals learning understanding prediction learning falls categories including supervised learning unsupervised learning online learning reinforcement learning perspective statistical learning theory supervised learning understood supervised learning involves learning training set data training input output pair input maps output learning consists inferring function maps input output learned function predict output future input depending type output supervised learning regression classification output takes continuous range values regression ohm law regression performed voltage input current output regression functional relationship voltage current thatclassification output element discrete set labels classification common machine learning applications facial recognition instance picture person input output label person input represented multidimensional vector elements represent pixels picture learning function based training set data function validated set data data training set formal description vector space inputs bethe vector space outputs statistical learning theory takes perspective unknown probability distribution product space exists unknown training set samples probability distribution notated input vector training data 9is output corresponds formalism inference consists finding function 11 12 space functions called hypothesis space hypothesis space space functions algorithm search 14 loss function metric difference predicted 15 actual 16 expected risk defined bethe target function function 18 bechosen 18 satisfiesbecause probability distribution 21 unknown aproxy measure expected risk measure based training set sample unknown probability distribution called empirical riska learning algorithm chooses function 23 minimizesthe empirical risk called empirical risk minimization loss functions choice loss function determining factor function 23 chosen learning algorithm loss functionalso convergence rate algorithm loss function convex loss functions depending isone regression classification regression common loss function regression square loss function l2 norm familiar loss function ordinary squares regression form absolute loss l1 norm classification sense indicator function natural loss function classification takes predicted output actual output takes predicted output actual output binary classification 27 29 heaviside step function regularization machine learning major arises overfitting learning prediction goal function closely fits observed data accurately predict output future input empirical risk minimization runs risk overfitting finding function matches data predict future output overfitting symptomatic unstable solutions perturbation training set data variation learned function stability solution guaranteed generalization consistency guaranteed regularization solve overfitting givethe stability regularization accomplished restricting hypothesis space 12 common restricting 12 linear functions reduction standard linear regression 12 restricted polynomial degree 33 exponentials bounded functions l1 restriction hypothesis space avoids overfitting form potential functions limited choice function empirical risk arbitrarily close regularization tikhonov regularization consists minimizingwhere 35 fixed positive parameter regularization parameter tikhonov regularization ensures existence uniqueness stability solution 
1057467	computerscience	james rumbaugh born august 22 1947 american scientist object oriented methodologist creating object modeling technique omt unified modeling language uml biography born bethlehem pennsylvania rumbaugh received physics massachusetts institute technology mit astronomy california institute technology caltech received science mit professor jack dennis rumbaugh started career 1960s digital equipment corporation dec lead scientist 1968 1994 electric development center developing technology teaching consulting electric led development object modeling technique omt object modeling language software modeling designing 1994 joined rational software ivar jacobson grady booch amigos develop unified modeling language uml merged software development methologies omt oose booch rational unified process rup 2003 moved ibm acquisition rational software retired 2006 grown sons 2009 lived saratoga california wife rumbaugh main formal description languages semantics computation tools programming productivity applications complex algorithms data structures graduate mit rumbaugh contributed development data flow architecture thesis parallel programming language parallel processor basis network architecture orients data flow rumbaugh contributions object modeling technique idef4 rational unified process unified modeling language publications rumbaugh written books uml rup ivar jacobson grady booch selection includes 
1060184	computerscience	stardict developed zheng 胡正 gui released gpl accessing stardict dictionary files dictionary successor stardic developed 馬蘇安 version stardict earlier sourceforge project removed sourceforge copyright infringement reports stardict project google code supported platforms stardict runs linux windows freebsd maemo solaris dictionaries user choice installed separately dictionary files created converting dict files programs compatible stardict dictionary format platforms iphone ipod touch ipad applications app store include gurudic touchdict wedict dictionary universal alpus istardict cydia store dictionaries partial list freedict dictionaries converted stardict format include versions webster dictionary dictionaries languages features stardict scan mode displayed tooltip allowing easy dictionary lookup combined freedict stardict provide rough translations foreign language websites september 25 2006 online version stardict operation online version includes access major dictionaries stardict wikipedia chinese previous versions stardict powerword dictionary program developed chinese company kingsoft version stardict diverged design powerword increasing search capabilities adding lexicons variety languages assisted collaboration developers author evgeniy dushistov produced command version stardict called sdcv 
1064587	computerscience	bigram digram sequence adjacent elements string tokens typically letters syllables bigram gram frequency distribution bigram string commonly simple statistical analysis applications including computational linguistics cryptography speech recognition gappy bigrams skipping bigrams word pairs gaps avoiding connecting allowing simulation dependencies dependency grammar head word bigrams gappy bigrams explicit dependency relationship bigrams provide conditional probability token preceding token relation conditional probability applied 1that probability token preceding token equal probability bigram occurrence tokens divided probability preceding token applications bigrams successful language models speech recognition special gram bigram frequency attacks cryptography solve cryptograms frequency analysis bigram frequency approach statistical language identification activities logology recreational linguistics involve bigrams include attempts english bigram string repeated bigrams logogogue bigram frequency english language frequency common letter bigrams english corpus complete bigram frequencies larger corpus 
1075261	computerscience	mitsubishi electric manufactures electric architectural equipment major worldwide producer photovoltaic panels corporation established 15 january 1921 united products manufactured sold mitsubishi electric united headquartered cypress california 
1082784	computerscience	history origins roots seiko epson corporation company called daiwa kogyo founded 1942 hisao yamazaki local clock shop owner employee hattori suwa nagano japan daiwa kogyo supported investment hattori family founder seiko manufacturer watch daini seikosha seiko instruments company started operation renovated miso storehouse 22 employees 1943 daini seikosha established factory suwa manufacturing seiko watches daiwa kogyo 1959 suwa factory daini seikosha split merged daiwa kogyo form suwa seikosha forerunner seiko epson corporation company developed timepiece technologies developed portable quartz timer seiko qc 951 1963 quartz watch seiko quartz astron 35sq 1969 automatic power generating quartz watch seiko auto quartz 1988 spring drive watch movement 1999 watch business root company’s micromechatronics technologies major businesses seiko epson accounts tenth total revenues watches company sold seiko watch corporation subsidiary seiko holdings corporation printers 1961 suwa seikosha established company called shinshu seiki subsidiary supply precision seiko watches seiko selected official time keeper 1964 summer olympics tokyo printing timer required time events shinshu seiki started developing electronic printer september 1968 shinshu seiki launched mini printer ep 101 ep electronic printer incorporated calculators june 1975 epson coined generation printers based ep 101 released public epson son son electronic printer april epson america established sell printers shinshu seiki june 1978 tx 80 80 column dot matrix printer released market printer commodore pet development improved model 80 80 launched october 1980 company advertising selling printer united july 1982 shinshu seiki officially named epson corporation launched handheld hx 20 hc 20 1983 portable color lcd developed launched company november 1985 suwa seikosha epson corporation merged form seiko epson corporation company developed micro piezo inkjet technology piezoelectric crystal nozzle heat ink print head spraying ink released epson mj 500 inkjet printer epson stylus 800 cartridge march 1993 shortly 1994 epson released resolution color inkjet printer 720×720 dpi considered resolution epson stylus color p860a utilizing micro piezo head technology models stylus series employed epson’s special durabrite ink hard drives hd 850 hd 860 mfm interface specifications reference winn rosch hardware bible 3rd addition sams publishing 1994 epson started outsourcing sales reps sell products retail stores united started epson weekend warrior sales program purpose program improve sales improve retail sales reps knowledge epson products address epson customer service retail environment reps assigned weekend shift typically 12–20 hours week epson started weekend warrior program tmg marketing mosaic sales solutions keystone marketing mosaic campaigners mosaic contract expired epson june 24 2007 epson represented campaigners sales reps campaigners outsourced epson hired rack jobbers ensure retail customers displayed products properly frees regular sales force concentrate profitable sales solutions var integrators leaving retail reps require sales skills personal computers starting 1983 epson entered personal market qx cp compatible z80 machine 1986 company shifted growing pc compatible market equity epson withdrew pc market 1996 21st century june 2003 company public listing 1st tokyo stock exchange 2009 hattori family individuals companies major shareholders seiko epson power seiko holdings seiko epson common shareholders including key hattori family affiliated managed operated completely independently epson established brand image rarely seiko 2004 epson introduced d1 digital rangefinder camera supports leica mount leica screw mount lenses adapter camera digital rangefinder market sensor standard 35 film frame lenses mounted d1 field view 53 times standard 35 mm camera 2006 d1 replaced d1s d1s expensive hardware identical epson released firmware patch bring d1 functionality successor—the digital camera manufacturer upgrade 2009 company owner orient watch largest timepiece manufacturers japan september 2012 epson introduced printer called epson expression premium xp 800 ability print wirelessly expression models scanners september 2015 epson debuted printer epson 4550 print cartridges enables user pour ink separate inkwells ink bottles quarter 2012 epson global market share sale printers copiers multifunction devices amounted 15 20 percent epson involved smart glasses market 2016 company models epson moverio 100 epson moverio 200 2016 company released moverio pro 2000 enterprise oriented upgraded version 200 steroscopic cameras company release consumer smart glasses optics popular drone pilots person view drone sky esc control printers epson introduced printer control language epson standard code printers esc facto industry standard controlling print formatting era dot matrix printers popularity initially started epson 80 robots epson robots robotics design manufacturing department epson seiko epson produces microcontrollers s1c63 ink cartridge controversies july 2003 dutch consumer association advised 640 000 boycott epson inkjet printers netherlands based organisation alleged epson customers unfairly charged ink month retracted nationwide boycott epson products issued statement conceding residual ink left epson cartridges printers function properly epson designed ink left cartridges developed piezo electric head capping mechanism capping mechanism dries heads risk clogged expensive repair reason dutch consumer association retracted statement epson statement coverage a4 sheet paper cartridge sustain printing epson america settled class action lawsuit brought los angeles superior court admit guilt agreed refund 45 purchased epson inkjet printer april 1999 20 epson store idg news service epson filed complaint international trade commission itc february 2006 24 companies manufactured imported distributed epson compatible ink cartridges resale march 30 2007 itc judge paul luckern issued initial determination ink cartridges question infringe epson patents judge recommended companies barred manufacturing importing reselling epson cartridges epson 2015 emerged epson printers reported cartridges 20 ink remains 
1103630	computerscience	computing sisd single instruction stream single data stream architecture single uni core processor executes single instruction stream operate data stored single memory corresponds von neumann architecture sisd main classifications defined flynn taxonomy classifications based concurrent instructions data streams architecture michael flynn sisd concurrent processing characteristics pipelined processors superscalar processors common examples modern sisd computers instructions control unit memory module decoded processing unit processes data retrieved memory module sents 
1146204	computerscience	operating systems based linux kernel embedded systems consumer electronics set boxes smart tvs personal video recorders pvrs vehicle infotainment ivi networking equipment routers switches wireless access waps wireless routers machine control industrial automation navigation equipment spacecraft flight software medical instruments versatility operating systems based linux kernel mobile devices touchscreen based embedded devices smartphones tablets personal digital assistants pdas portable media players include touchscreen history linux kernel ported variety cpus processor desktop server arc arm avr32 etrax cris h8300 ip7000 m68k mips mn10300 powerpc superh xtensa processors linux alternative proprietary operating toolchain embeddable linux kernel subset linux distribution fits floppy disk outdated resource hardware devices coverage cost freely source code ease customization linux shipped consumer devices devices covering pdas sharp zaurus family tomtom gps navigation devices residential gateways linksys wrt54g series smartphones motorola exz series openmoko handsets devices running sailfish os developed jolla jolla intex aqua fish nokia n900 nokia n9 android linux kernel based operating acquired extended google introduced 2008 highly competitive platform smartphones tablets july 2012 android smartphone market share united 52 reaching 82 worldwide q2 2015 communities availability consumer embedded devices communities users developers formed devices replacement enhancements linux distribution shipped device availability source code communities surrounding devices devices standardized build systems appeared including yocto openembedded buildroot openwrt ltib platform usage advantages embedded linux proprietary embedded operating systems include multiple suppliers software development support royalties licensing fees stable kernel ability read modify redistribute source code technical disadvantages include comparatively memory footprint kernel root filesystem complexities user mode kernel mode memory access complex device drivers framework 
1152833	computerscience	ip multimedia subsystem ip multimedia core network subsystem ims architectural framework delivering ip multimedia services historically mobile phones voice services circuit switched style network strictly ip packet switched network alternative methods delivering voice voip multimedia services smartphones standardized industry ims architectural framework provide standardization ims originally designed wireless standards body 3rd generation partnership project 3gpp vision evolving mobile networks gsm original formulation 3gpp rel represented approach delivering internet services gprs vision updated 3gpp 3gpp2 etsi tispan requiring support networks gprs wireless lan cdma2000 fixed lines ims ietf protocols session initiation protocol sip 3gpp ims intended standardize applications aid access multimedia voice applications wireless wireline terminals create form fixed mobile convergence fmc horizontal control layer isolates access network service layer logical architecture perspective services control functions control layer common horizontal layer implementation map reduced cost complexity alternative overlapping technologies access provisioning services wired wireless networks include combinations generic access network softswitches naked sip increasingly easier access content contacts mechanisms control traditional wireless fixed operators ims challenged examples global standards based ims mmtel basis voice lte volte rich communication services rcs joyn advanced messaging architecture functions diagram explained ip multimedia core network subsystem collection functions linked standardized interfaces form ims administrative network function node hardware box implementer combine functions node split single function nodes node multiple times single network dimensioning load balancing organizational issues access network user connect ims standard ip ims terminals mobile phones personal digital assistants pdas computers register ims roaming network country visited network requirement ip sip user agents fixed access digital subscriber dsl cable modems ethernet mobile access cdma cdma2000 gsm gprs wireless access wlan wimax supported phone systems plain telephone service pots—the analogue telephones 323 ims compatible systems supported gateways core network hss – subscriber server subscriber server hss user profile server function upsf master user database supports ims network entities handle calls subscription subscriber profiles performs authentication authorization user provide subscriber location ip gsm location register hlr authentication centre auc subscriber location function slf map user addresses multiple hsss user identities identities ims ip multimedia private identity impi ip multimedia public identity impu globally routable user agent uri gruu wildcarded public user identity impi impu phone series digits uniform resource identifier uris digits tel uri tel 555 123 4567 alphanumeric identifiers sip uri sip john doe ip multimedia private identity ip multimedia private identity impi unique permanently allocated global identity assigned network operator form network access identifier nai user domain registration authorization administration accounting purposes ims user impi ip multimedia public identity ip multimedia public identity impu user requesting communications users included business card address record aor multiple impu impi impu shared phone reached identity single phone entire family globally routable user agent uri globally routable user agent uri gruu identity identifies unique combination impu ue instance types gruu public gruu gruu temporary gruu gruu wildcarded public user identity wildcarded public user identity expresses set impu hss subscriber database impu impi imsi msisdn subscriber service profiles service triggers session control function cscf roles sip servers proxies collectively called session control function cscf process sip signaling packets ims application servers sip application servers host execute services interface cscf sip application server developed 3gpp voice continuity function vcc server depending actual service operate sip proxy mode sip user agent mode sip b2bua mode located network external party network located network query hss diameter interfaces sip functional model ilcm application server incoming leg control model olcm application server outgoing leg control model store transaction optionally store session depending specific service executed ilcm interfaces cscf ilcm incoming leg olcm interfaces cscf olcm outgoing leg application logic service interacts ilcm olcm public service identity public service identities psi identities identify services hosted application servers user identities psi takes form sip tel uri psis stored hss distinct psi wildcarded psi media servers media resource function mrf media functions media manipulation voice stream mixing playing tones announcements mrf divided media resource function controller mrfc media resource function processor mrfp media resource broker mrb functional entity responsible collection published mrf supplying mrf consuming entities mrb modes breakout gateway breakout gateway control function bgcf sip proxy processes requests routing cscf cscf determined session routed dns enum dns includes routing functionality based telephone pstn gateways pstn gateway interfaces pstn circuit switched networks signalling networks isdn user isup bicc message transfer mtp ims sip ip media networks pulse code modulation pcm ims real time transport protocol rtp media resources media resources components operate media plane control ims core functions media server media gateway mgw ngn interconnection types generation networking interconnection ngn interconnection mode direct indirect direct interconnection refers interconnection network domains intermediate network domain indirect interconnection layer refers interconnection network domains intermediate network domain acting transit networks intermediate network domain provide transit functionality network domains interconnection modes carrying service layer signalling media traffic charging offline charging applied users pay services periodically month online charging credit based charging prepaid services real time credit control postpaid services applied session charging function addresses addresses distributed ims entities provide common location entity send charging charging data function cdf addresses offline billing online charging function ocf online billing ims based pes architecture ims based pes pstn emulation ip networks services analog devices ims based pes ims devices ims normal sip users analog terminal standard analog interfaces connect ims based pes mgw vgw unaware services relay control signalling pstn terminal session control handling ims components session handling features ims allowing sip application dynamically differentially based user profile triggered implemented filter redirect signalling mechanism cscf cscf apply filter criteria determine sip requests note services originating party applied originating network services terminating party applied terminating network respective cscfs initial filter criteria initial filter criteria ifc xml based format describing control logic ifcs represent provisioned subscription user application stored hss ims subscription profile downloaded cscf user registration registered users processing demand services acting unregistered users ifcs valid registration lifetime user profile changed ifc composed types ifcs security aspects ims 3gpp systems envisaged security defined 33 203 lack usim isim interfaces prevalence devices support ipv4 situation provide protection threats 3gpp defines security mechanisms informally ims security tr33 978 mechanism relies authentication performed network attachment procedures binds user profile ip address mechanism weak signaling protected user–network interface cablelabs packetcable ims architecture usim isim capabilities terminals published deltas 3gpp specifications digest md5 valid authentication option tispan effort fixed networks scopes procedures compensate lack ipsec capabilities tls option securing interface 3gpp releases included digest md5 method common ims platform approach variants digest md5 authentication functionality ims terminal perspective implementations interface cscf hss 
1157909	computerscience	oopsla object oriented programming systems languages applications annual acm conference oopsla takes united sister conference oopsla ecoop typically held europe operated special programming languages sigplan association computing machinery acm oopsla annual conference covering topics object oriented programming systems languages applications conferences oopsla offers tracks simultaneous sessions meaning people academic conference draws doctoral students peer reviewed papers draws academic attendees experience reports conduct panels workshops tutorials oopsla instrumental helping object oriented programming develop mainstream programming paradigm helped incubate topics including design patterns refactoring aspect oriented programming model driven engineering agile software development domain specific languages oopsla conference held portland oregon 1986 2010 oopsla splash conference splash favorite conference—splash charter mission bring practitioners researchers passionate software programming design software engineering explore frontiers software software practice splash stands systems programming languages applications software humanity oopsla premiere conference technical papers presentations splash change intended serve framework organizing streamlining efforts topics traditionally oopsla maintain focus allowing conferences splash highlight trends challenges software 
1163167	computerscience	theory computation automata theory powerset construction subset construction standard method converting nondeterministic finite automaton nfa deterministic finite automaton dfa recognizes formal language theory establishes nfas additional flexibility unable recognize language recognized dfa practice converting easier construct nfas efficiently executable dfas nfa dfa exponentially larger construction impractical nfas construction called rabin–scott powerset construction subset construction distinguish constructions types automata published michael rabin dana scott 1959 intuition simulate operation dfa input string track single time automaton reach prefix input contrast simulate nfa track set automaton reach prefix input nondeterministic choices automaton prefix input set reached input symbol set reachable deterministic function sets reachable nfa play role nfa simulation single dfa play dfa simulation sets nfa appearing simulation interpreted dfa construction powerset construction applies nfa transformations consuming input symbols aka ε moves automaton defined tuple set set input symbols transition function mapping input symbol set initial set accepting dfa subsets initial dfa element set initial transition function dfa maps representing subset input symbol set set reached transition dfa accepting accepting nfa simplest version powerset construction set dfa powerset set subsets dfa useless unreachable initial alternative version construction creates reachable nfa ε moves nfa ε moves called ε nfa construction modified deal computing ε closure set reachable ε moves van noord recognizes incorporating closure computation powerset construction multiple initial nfas defined multiple initial initial dfa set initial nfa nfa ε moves set reachable initial ε moves nfa initial accepting alphabet consists symbols ε moves initial dfa constructed nfa set nfa reachable ε moves set transition input symbol follow arrow arrow additionally outgoing ε moves     reasoning dfa constructed nfa reachable start dfa remaining 11 sets powerset set nfa reachable complexity dfa consist sets nfa nfa converted dfa exist nfas subset reachable initial subset converted dfa Θ worst time complexity simple requiring language strings alphabet characters represented nfa requires dfa character suffix input picture applications brzozowski algorithm dfa minimization powerset construction converts input dfa nfa reverse language reversing arrows exchanging roles initial accepting converts nfa dfa powerset construction repeats process worst complexity exponential dfa minimization algorithms examples performs worst complexity safra construction converts deterministic büchi automaton deterministic muller automaton deterministic rabin automaton 2o log powerset construction machinery 
1166059	computerscience	boltzmann machine called stochastic hopfield network hidden units type stochastic recurrent neural network markov random field boltzmann machines stochastic generative counterpart hopfield networks neural networks capable learning internal representations represent sufficient time solve difficult combinatoric theoretically intriguing locality hebbian nature training algorithm parallelism resemblance dynamics simple physical processes boltzmann machines unconstrained connectivity proven practical machine learning inference connectivity properly constrained learning efficient practical named boltzmann distribution statistical mechanics sampling function called energy based models ebm invented 1985 geoffrey hinton professor carnegie mellon university terry sejnowski professor johns hopkins university structure boltzmann machine hopfield network network units energy defined network units produce binary hopfield nets boltzmann machine units stochastic global energy boltzmann machine identical form hopfield network weights represented symmetric matrix 13 zeros diagonal unit probability difference global energy single unit equaling written 15 assuming symmetric matrix weights substituting energy relative probability boltzmann factor property boltzmann distribution energy proportional negative log probability 18 boltzmann constant absorbed artificial notion temperature 19 rearrange terms probabilities unit sum solving 26 probability unit scalar 19 referred temperature relation source logistic function probability expressions variants boltzmann machine equilibrium network runs repeatedly choosing unit resetting running temperature probability global network depends global energy boltzmann distribution initial process started log probabilities global linear energies relationship true machine thermal equilibrium meaning probability distribution global converged running network temperature temperature gradually decreases reaching thermal equilibrium temperature converge distribution energy level fluctuates global minimum process called simulated annealing train network chance converge global external distribution weights set global probabilities lowest energies training training units boltzmann machine divided visible units hidden units visible units receive environment training set set binary vectors set distribution training set denoted 30 discussed distribution global converges boltzmann machine reaches thermal equilibrium denote distribution marginalize hidden units 31 goal approximate real distribution 30 31 produced eventually machine measure distributions kullback–leibler divergence 34 iswhere sum 36 34 function weights determine energy energy determines 38 promised boltzmann distribution gradient descent algorithm 34 weight changed subtracting partial derivative 34 respect weight alternating phases boltzmann machine training positive phase visible units clamped binary vector sampled training set 42 negative phase network allowed freely units determined external data surprisingly gradient respect weight simple proven equation result thermal equilibrium probability 48 global 49 network running boltzmann distribution boltzmann machine remarkably learning rule biologically plausible change weights local connection synapse biologically speaking neurons connects biologically realistic connection neural network training algorithms backpropagation training boltzmann machine em algorithm heavily machine learning minimizing kl divergence equivalent maximizing log likelihood data training procedure performs gradient ascent log likelihood observed data contrast em algorithm posterior distribution hidden nodes calculated maximization expected complete data likelihood step training biases single node activity boltzmann machine theoretically computational medium instance trained photographs machine theoretically model distribution photographs model complete partial photograph practical boltzmann machine learning correctly machine scaled larger trivial machine effects restricted boltzmann machine learning impractical boltzmann machines efficient architecture called restricted boltzmann machine rbm intralayer connections hidden units training rbm activities hidden units treated data training level rbm method stacking rbms train layers hidden units efficiently common deep learning strategies layer generative model extension restricted boltzmann machine affords real valued data binary data boltzmann machines outlined https youtube watch vdiurau1 practical application restricted boltzmann machines performance improvement speech recognition software deep boltzmann machine deep boltzmann machine dbm type binary pairwise markov random field undirected probabilistic graphical model multiple layers hidden random variables network symmetrically coupled stochastic binary units comprises set visible units 51 layers hidden units 52 connection links units layer rbm probability assigned vector iswhere 54 set hidden units 55 model parameters representing visible hidden hidden hidden interactions dbn layers form restricted boltzmann machine undirected graphical model layers form directed generative model dbm layers symmetric undirected dbns dbms learn complex abstract internal representations input tasks object speech recognition limited labeled data fine tune representations built supply unlabeled sensory input data dbns deep convolutional neural networks adopt inference training procedure directions pass deep boltzmann machine unveil representations input structures slow speed dbms limits performance functionality exact maximum likelihood learning intractable dbms approximate maximum likelihood learning option field inference estimate data dependent expectations approximate expected sufficient statistics markov chain monte carlo mcmc approximate inference input 25 50 times slower single pass dbms joint optimization impractical data sets restricts dbms tasks feature representation history boltzmann machine monte carlo version hopfield network idea stochastic weights ising models considered cognitive sciences articles appeared seminal publication john hopfield connection physics statistical mechanics mentioning spin glasses idea applying ising model annealed gibbs sampling douglas hofstadter copycat project ideas change sign energy function paul smolensky harmony theory explicit analogy drawn statistical mechanics boltzmann machine formulation led terminology borrowed physics energy harmony standard field widespread adoption terminology encouraged led importation variety concepts methods statistical mechanics reason proposals simulated annealing inference independent ising models considered special markov random fields widespread application fields including linguistics robotics vision artificial intelligence 
1170097	computerscience	hopfield network form recurrent artificial neural network popularized john hopfield 1982 earlier 1974 hopfield nets serve content addressable associative memory systems binary threshold nodes guaranteed converge local minimum converge false pattern wrong local minimum stored pattern expected local minimum hopfield networks provide model understanding human memory structure units hopfield nets binary threshold units units values determined units input exceeds threshold hopfield nets units values convention literature units values pair units hopfield network connection connectivity weight sense hopfield network formally complete undirected graph set mcculloch pitts neurons function links pairs units real connectivity weight connections hopfield typically restrictions constraint weights symmetric guarantees energy function decreases monotonically activation rules network asymmetric weights exhibit periodic chaotic behaviour hopfield behavior confined phase space impair network ability content addressable associative memory updating updating unit node graph simulating artificial neuron hopfield network performed rule 7where updates hopfield network performed neurons attract repel weight units powerful impact values neurons connection weight neurons 12 updating rule implies values neurons converge weight positive diverge weight negative energy hopfield nets scalar network referred energy network called energy definition ensures units randomly chosen update energy decrease stay repeated updating network eventually converge local minimum energy function considered lyapunov function local minimum energy function stable network note energy function belongs class models physics ising models special markov networks probability measure gibbs measure markov property initialization running initialization hopfield networks setting values units desired start pattern repeated updates performed network converges attractor pattern convergence assured hopfield proved attractors nonlinear dynamical stable periodic chaotic systems context hopfield networks attractor pattern final stable pattern change updating training training hopfield involves lowering energy remember serve content addressable memory network converge remembered recover distorted input trained input called associative memory recovers memories basis similarity train hopfield units energy minimum network converge network properly trained energy network remember local minima learning rules learning rules store memory hopfield network desirable learning rule properties properties desirable learning rule satisfying biologically plausible human brain learning concepts reason human learning incremental learning incremental trained huge batch training data hebbian learning rule hopfield networks hebbian theory introduced donald hebb 1949 explain associative learning simultaneous activation neuron cells leads pronounced increases synaptic strength cells summarized neurons wire neurons sync fail link hebbian rule local incremental hopfield networks implemented manner learning 20binary patterns 21where 22 represents bit pattern 23 bits neurons equal pattern 23 product 25 positive positive weight 26 values tend equal bits neurons storkey learning rule rule introduced amos storkey 1997 local incremental storkey hopfield network trained rule capacity network trained hebbian rule weight matrix attractor neural network follow storkey learning rule obeys 27where 28 form local field neuron learning rule local synapses account neurons rule patterns weights generalized hebbian rule local field spurious patterns patterns network training called retrieval attractors repeated updates eventually lead convergence retrieval network converge spurious patterns training patterns energy spurious patterns local minimum stored pattern negation spurious pattern spurious linear combination odd retrieval patterns 29 spurious 30spurious patterns exist sum capacity network capacity hopfield network model determined neuron amounts connections network memories stored dependent neurons connections recall accuracy vectors nodes 138 138 vectors recalled storage 1000 nodes hertz 1991 evident mistakes occur store vectors hopfield model recall pattern intrusion semantically items tend confuse individual recollection wrong pattern occurs hopfield network model confuse stored item retrieval perfect recalls capacity 14 loaded network storkey learning method ulterior models inspired hopfield network devised raise storage limit reduce retrieval error rate capable shot learning human memory hopfield model accounts associative memory incorporation memory vectors memory vectors spark retrieval vector network process intrusions occur associative memory hopfield network types operations auto association hetero association vector vectors storage types operations store single memory matrix representation matrix operations combination auto associative hetero associative note hopfield’s network model utilizes learning rule hebb’s 1949 learning rule basically learning occurs result strengthening weights activity occurring rizzuto kahana 2001 neural network model account repetition recall accuracy incorporating probabilistic learning algorithm retrieval process learning occurs result weights network remain fixed model switch learning stage recall stage adding contextual drift rapid forgetting occurs hopfield model cued recall task entire network contributes change activation single node mcculloch pitts 1943 dynamical rule describes behavior neurons activations multiple neurons map activation neuron’s firing rate weights neurons strengthen synaptic connections activated neuron activated hopfield mcculloch pitts dynamical rule retrieval hopfield network note hopfield repetitious fashion hopfield nonlinear activation function linear function create hopfield dynamical rule hopfield nonlinear activation function dynamical rule modify values vector direction stored patterns 
1178658	computerscience	opensolaris discontinued source operating based solaris created sun microsystems project initiated sun build developer user community software acquisition sun microsystems 2010 oracle decided discontinue development core software replaced opensolaris distribution model proprietary solaris express prior oracle moving core development closed doors opensolaris developers decided fork core software openindiana openindiana project illumos foundation aims continue development distribution opensolaris codebase illumos distributions continuing development offering support opensolaris descendant unix release svr4 code base developed sun late 1980s version variant unix source opensolaris developed combination software consolidations sourced subsequent solaris includes variety software including popular desktop server software friday august 13 2010 details started emerge relating discontinuation opensolaris project pending release closed source proprietary version solaris solaris 11 history opensolaris based solaris originally released sun 1991 solaris version unix release svr4 jointly developed sun merge features existing unix systems licensed sun novell replace sunos planning opensolaris started 2004 pilot program formed september 2004 18 sun community months growing 145 external participants sun submitted cddl common development distribution license osi approved january 14 2005 solaris code base sourced solaris dynamic tracing facility commonly dtrace tool aids analysis debugging tuning applications systems dtrace released cddl january 25 2005 newly launched opensolaris bulk solaris code released june 14 2005 remains code sourced pre compiled binary files direct newly fledged project community advisory board announced april 2005 elected pilot community employees appointed sun appointed broader software community sun roy fielding hopper rich teer casper dik simon phipps february 2006 sun approved opensolaris charter reestablished body independent opensolaris governing board task creating governance document constitution organization ogb invited stephen hahn keith wesolowski developers sun solaris organization ben rockwood prominent opensolaris community generation solaris os version development sun eventually succeed solaris codenamed nevada derived opensolaris codebase code pulled opensolaris nevada snapshot builds sun microsystems control weekly snapshots solaris nevada codename generation solaris os eventually succeed solaris code pulled opensolaris preview snapshots genunix stable releases opensolaris based nevada builds initially sun solaris express program distribution based opensolaris code combination software solaris releases independent distribution released june 17 2005 emerged march 19 2007 sun announced hired ian murdock founder debian head project indiana effort produce complete opensolaris distribution gnome userland tools gnu network based package management distribution planned refresh user experience successor solaris express basis future releases solaris 2008 opensolaris 2008 05 released format booted live installed gnome desktop environment primary user interface opensolaris 2008 11 release included gui zfs snapshotting capabilities time slider functionality macos time machine december 2008 sun microsystems toshiba america systems announced plans distribute toshiba laptops pre installed opensolaris april 2009 tecra m10 portégé r600 preinstalled opensolaris 2008 11 release supplemental software packages june 2009 opensolaris 2009 06 released support sparc platform january 2010 announced solaris express program closed opensolaris binary release scheduled released march 26 2010 opensolaris 2010 03 release appeared august 13 2010 oracle rumored discontinued opensolaris binary distribution focus solaris express binary distribution program source code continue accepted community oracle source code continue released source oracle code releases occur binary releases internal email released opensolaris kernel developer unconfirmed oracle post confirming leak posted opensolaris forums august 13 2010 upstream contributions continue oracle downstream source code publishing continue binary distribution continue solaris express model release source code occur binary cuts binary cuts frequent september 14 2010 openindiana formally launched jisc centre london openindiana fork technical sense continuation opensolaris spirit project intends deliver family operating binary compatible oracle products solaris 11 solaris 11 express based os consolidation opensolaris openindiana distribution based illumos release based os project ips package management opensolaris november 12 2010 final build opensolaris 134b published oracle release repository serve upgrade path solaris 11 express oracle solaris 11 express 2010 11 preview solaris 11 release post opensolaris distribution oracle released november 15 2010 release model opensolaris offered development unstable production stable releases opensolaris installed rom usb drives network automated installer usb network install images types releases repositories opensolaris network aware package management called image packaging pkg add remove manage installed software update releases packages development releases opensolaris published oracle typically weeks dev repository production releases release repository receive updates production release sun customers paid support contracts access updates production releases paid support production releases access security updates bug fixes offered sun support repository pkg sun documentation hardware compatibility list hcl opensolaris consulted choosing hardware opensolaris deployment extensive opensolaris administration usage development documentation online including community contributed license sun released solaris source code common development distribution license cddl based mozilla public license mpl version cddl approved source license source initiative osi january 2005 files licensed cddl combined files licensed licenses source proprietary sun announcement java release gnu public license gpl jonathan schwartz rich green hinted possibility releasing solaris gpl green averse relicensing gpl schwartz pressed jokingly green sun close january 2007 eweek reported anonymous sources sun told opensolaris dual licensed cddl gplv3 green responded blog day article incorrect sun consideration dual licensing arrangement subject agreement rest opensolaris community conferences annual opensolaris developer conference abbreviated osdevcon organized german unix user guug february 27 march 2007 freie universität berlin germany 2008 osdevcon joint effort guug czech opensolaris user czosug june 25–27 2008 prague czech republic 2009 osdevcon october 27–30 2009 dresden germany 2007 sun microsystems organized opensolaris developer summit held weekend october 13 2007 university california santa cruz united 2008 opensolaris developer summit returned ucsc 2–3 2008 prior launch sun opensolaris distribution 2008 communityone conference san francisco california opensolaris storage summit organized sun held september 21 2008 preceding snia storage developer conference sdc santa clara california opensolaris storage summit preceded usenix conference file storage technologies fast february 23 2009 san francisco united november 2009 solaris opensolaris security summit held sun harbor baltimore maryland preceding installation administration conference lisa derivatives notable derivatives include 
1191184	computerscience	image resolution image holds term applies raster digital images film images types images resolution image image resolution measured resolution quantifies close lines visibly resolved resolution units tied physical sizes lines lines inch size picture lines picture height simply lines lines tvl angular subtense pairs lines pair comprises dark adjacent light dark light resolution lines millimeter dark lines alternating light lines pairs millimeter lp photographic lens film resolution quoted pairs millimeter resolution digital images resolution digital cameras pixel resolution term resolution considered equivalent pixel count digital imaging international standards digital camera field called total pixels relation image sensors recorded pixels captured jcia cipa notation recorded pixels 1000 1500 standards effective pixels image sensor digital camera count pixel sensors contribute final image including pixels image support image filtering process opposed total pixels includes unused light shielded pixels edges image pixels height pixels wide resolution lines picture height lines pixel counts referred resolution convention pixel resolution set positive integer pixel columns pixel rows height 7680 6876 popular convention cite resolution total pixels image typically megapixels calculated multiplying pixel columns pixel rows dividing conventions include describing pixels unit pixels unit pixels inch square inch pixel resolutions true resolutions referred serve upper bounds image resolution illustration image pixel resolutions pixels rendered sharp squares smooth image reconstruction pixels preferred illustration pixels sharp squares image 2048 pixels 1536 pixels height total 2048×1536 145 728 pixels megapixels refer 2048 1536 megapixel image quality image 72ppi printed 28 inches wide quality 300ppi image printed inches wide count pixels real measure resolution digital camera images color image sensors typically set alternate color filter types light sensitive individual pixel sensors digital images ultimately require red green blue pixel displayed printed individual pixel image sensor supply pieces image interpolated demosaiced produce colors output pixel spatial resolution terms blurriness sharpness digital images descriptors reference hardware capturing displaying images spatial resolution radiology refers ability imaging modality differentiate objects spatial resolution techniques unable differentiate objects close measure closely lines resolved image called spatial resolution depends properties creating image pixel resolution pixels inch ppi practical purposes clarity image decided spatial resolution pixels image spatial resolution refers independent pixel values unit spatial resolution consumer displays range 50 800 pixel lines inch scanners optical resolution distinguish spatial resolution pixels inch remote sensing spatial resolution typically limited diffraction aberrations imperfect focus atmospheric distortion ground sample distance gsd image pixel spacing earth surface typically considerably resolvable spot size astronomy measures spatial resolution data arcsecond subtended observation physical distance objects image depends distance varies object hand electron microscopy fringe resolution refers minimum separation detectable adjacent parallel lines planes atoms resolution refers minimum separation adjacent detected interpreted adjacent columns atoms instance helps detect periodicity specimens difficult achieve key visualizing individual atoms interact stereoscopic 3d images spatial resolution defined spatial recorded captured viewpoints stereo camera left camera spectral resolution pixel encoding limit stored digital image term color profile digital images descriptors reference hardware capturing displaying images spectral resolution ability resolve spectral features bands separate components color images distinguish light spectra multispectral images resolve finer differences spectrum wavelength measuring storing traditional common rgb color images temporal resolution temporal resolution refers precision measurement respect time movie cameras speed cameras resolve events time time resolution movies 24 48 frames frames speed cameras resolve 50 300 frames cameras displays offset color components relative mix temporal spatial resolution quantum physics trade temporal resolution measurement spatial resolution uncertainty principle time space trade inherent property fourier transform visualise audio 185 127 125 171radiometric resolution radiometric resolution determines finely represent distinguish differences intensity expressed levels bits bits 256 levels typical image files radiometric resolution subtle differences intensity reflectivity represented theory practice effective radiometric resolution typically limited noise level bits representation resolution media list traditional analog horizontal resolutions media list includes popular formats rare formats values approximate actual quality vary machine machine tape tape ease comparison values ntsc pal systems replace 480 576 analog formats chroma resolution 
1203063	computerscience	level set methods lsm conceptual framework level sets tool numerical analysis surfaces shapes advantage level set model perform numerical computations involving curves surfaces fixed cartesian grid parameterize objects called eulerian approach level set method easy follow shapes change topology shape splits develops holes reverse operations level set method tool modeling time varying objects inflation airbag drop oil floating water figure illustrates ideas level set method upper left corner shape bounded region behaved boundary red surface graph level set function determining shape flat blue region represents xy plane boundary shape level set shape set plane positive interior shape boundary row shape changing topology splitting hard transformation numerically parameterizing boundary shape evolution algorithm detect moment shape splits construct parameterizations newly curves hand row level set function translated downward easier shape level set function shape shape handle deformations shape undergo dimensions level set method amounts representing closed curve shape boundary auxiliary function called level set function represented level set byand level set method manipulates implicitly function function assumed positive values region delimited curve negative values level set equation curve moves normal direction speed 14 level set function satisfies level set equation 17 euclidean norm denoted customarily single bars pdes 18 time partial differential equation hamilton–jacobi equation solved numerically finite differences cartesian grid numerical solution level set equation requires sophisticated techniques simple finite difference methods fail upwinding methods godunov method fare level set method guarantee conservation volume shape level set advection field conserve shape size uniform rotational velocity field shape level set severely distorted level set vanish time steps reason finite difference schemes required essentially oscillatory eno schemes feasibility time simulations questionable sophisticated methods deal difficulty developed combinations level set method tracing marker particles advected velocity field unit circle 19 shrinking constant rate boundary circle moves inwards normal fixed speed circle shrink eventually collapse initial distance field constructed function signed euclidean distance boundary positive interior negative exterior initial circle normalised gradient field circle normal field constant subtracted time level initial boundary fields circular collapse effectively temporal integration eikonal equation fixed velocity combustion method instantaneous flame surface equation history level set method developed 1980s american mathematicians stanley osher james sethian popular disciplines image processing graphics computational geometry optimization computational fluid dynamics computational biophysics level set data structures developed facilitate level set method applications computational fluid dynamics math model interface fluids soften interactions fluids apply specific function compact level set method “spin off” compactlsm complement lsm helps solving lsm equations numerical simulation flow discretization interface water air compacts sixth ensures accurate fast calculation interface equations monteiro 2018 lsm distance function locate fluids distance function represents distance analyzed interface distance function identified isolines 2d isosurfaces 3d  the negative values refer fluids positive values refer thezero corresponds position interface heaviside function inserted compact level set method specific mass viscosity discontinuous interface excess diffusion interface widening numerical oscillations expected adequate treatment fluid interface minimize level set method smooth cell heaviside function explicitly defines interface position ∅ transition interface smooth thickness magnitude cell size avoid introduction disturbances scale equal mesh interface infers abrupt jump property cell unverdi tryggvason 1992 reconstruct material properties flow specific mass viscosity marker function ∅ heaviside type 20 δ empirical coefficient equal characteristic discretization varies phenomenon simulated δ represents interface thickness cells δΔ represents thickness interface note method interface virtual thickness represented smooth function physical properties specific mass kinematic viscosity calculated                    21 ρ1 ρ2 v1 v2 specific mass kinematic viscosity fluids equation applied analogously properties fluids 
1210851	computerscience	greenspun tenth rule programming aphorism programming programming language circles overview rule expresses opinion argued flexibility extensibility designed lisp programming language includes functionality theoretically write complex program features required develop manage complexity programming languages equivalent subset methods lisp interpreted satirical critique systems include complex highly configurable systems including custom interpreter domain specific language greenspun rule suggests accepted featured language lisp paul graham highlights satirical nature concept albeit based real issues rule written 1993 philip greenspun tenth rule preceding rules tenth reason greenspun hacker robert morris declared corollary clarifies set complicated programs rule applies corollary jokingly refers common lisp implementations 1990s depend level core compiled sidesteps issue bootstrapping variable quality compared cleanly hosting common lisp 
1222578	computerscience	statistical classification including machine learning main approaches called generative approach discriminative approach compute classifiers approaches differing degree statistical modelling terminology inconsistent major types distinguished distinction classes consistently refers classes generative learning conditional learning discriminative learning distinguishes classes calling generative classifiers joint distribution discriminative classifiers conditional distribution distribution distinguishing classes analogously classifier based generative model generative classifier classifier based discriminative model discriminative classifier term refers classifiers based model standard examples linear classifiers generative classifiers naive bayes classifier linear discriminant analysis discriminative model logistic regression model classifier perceptron support vector machine application classification wishes observation label probability distribution labels compute probability distribution distribution classifier estimate probability label observation discriminative model base classification estimate joint distribution generative model compute conditional probability base classification increasingly indirect increasingly probabilistic allowing domain knowledge probability theory applied practice approaches depending hybrids combine strengths multiple approaches definition alternative division defines symmetrically generative model model conditional probability observable target symbolically discriminative model model conditional probability target observation symbolically precise definition terminology generative model generate random instances outcomes observation target observation target discriminative model discriminative classifier model discriminate target variable observation difference discriminate distinguish classify subtle consistently distinguished term discriminative classifier pleonasm meaning classify equivalently discriminate inputs relationships models application classification observable frequently continuous variable target discrete variable consisting finite set labels conditional probability interpreted deterministic target function inputs outputs finite set labels definitions generative model closely model conditional distribution model distribution label model joint distribution equivalent model distribution label values 12 distribution observations label 13 symbolically 14 model joint probability distribution informative model distribution label relative frequencies step distinguished model joint distribution distribution individual variables computed marginal distributions 16 17 continuous integrating discrete summing conditional distribution computed definition conditional probability 18 19 model conditional probability estimated probability distributions variables denoted 20 12 estimate conditional probability bayes rule generative model 13 estimate discriminative model estimate note bayes rule computing conditional probability terms definition conditional probability computing conditional probability terms joint distribution frequently conflated contrast discriminative classifiers generative algorithm models data generated categorize signal question based generation assumptions category generate signal discriminative algorithm care data generated simply categorizes signal discriminative algorithms learn 27 data classify data hand generative algorithms learn 28 transformed 27 classify data advantages generative algorithms 28 generate data existing data hand discriminative algorithms performance classification tasks discriminative models model distribution observed variables express complex relationships observed target variables perform generative models classification regression tasks classes complementary views procedure types generative models types generative models observed data sampled generative model fitting parameters generative model maximize data likelihood common method statistical models approximations true distribution model application infer subset variables conditional values argued approximation assumptions solve hand accurate model conditional density functions discriminative model application specific details ultimately dictate approach suitable examples simple suppose input data 31 set labels 32 33 data 34for data estimating joint probability distribution 28 empirical measure 27 
1236187	computerscience	computing pipeline data pipeline set data processing elements connected series output element input elements pipeline executed parallel time sliced fashion buffer storage inserted elements pipelines include operating systems provide unix syntax string program runs pipeline implement simple serial execution true pipelining waiting program finish starting concept motivation pipelining commonly concept everyday life assembly car factory specific task installing engine installing hood installing wheels separate station stations carry tasks parallel car car task performed moves station variations time complete tasks accommodated buffering holding cars space stations stalling temporarily halting upstream stations station suppose assembling car requires tasks 20 15 minutes tasks performed single station factory output car 45 minutes pipeline stations factory output car 45 minutes 20 minutes pipelining decrease latency total time item increase throughput rate items processed design considerations balancing stages throughput pipeline slowest element designer divide resources stages time complete tasks car assembly tasks 15 minutes 20 15 minutes latency 45 minutes car finished 15 minutes 20 buffering processing elements synchronized fixed time process item item received element released previous single clock cycle items flow pipeline constant speed waves water channel wave pipelines synchronization buffering stages storage data items buffering pipeline stages processing times irregular items created destroyed pipeline graphics pipeline processes triangles rendered screen element checks visibility triangle discard invisible output triangular pieces partly hidden buffering accommodate irregularities rates application feeds items stage consumes output buffer stages simply hardware register suitable synchronization signalling logic stages stage stores data item register sends data signal stage data responds data received signal stage halts waiting signal storing data item register stage halts waiting data signal ready process item stage processing times element variable pipeline waiting element previous consume items input buffers frequency pipeline stalls reduced providing space item input buffer stage multiple item buffer implemented queue upstream stage halted queue frequency events decrease buffer slots queuing theory buffer slots depending variability processing times desired performance nonlinear pipelines stage takes sped designer provide processing elements carry task parallel single input buffer single output buffer element finishes processing current data item delivers common output buffer takes data item common input buffer concept linear dynamic pipeline exemplified shops banks cashiers serving clients single waiting queue dependencies items applications processing item stage depend processing previous item stage pipeline stage correctly process item item cleared stage situation occurs instruction pipelines suppose arithmetic instruction reads contents register supposed modified earlier instruction stage fetches instruction operands stage writes result register stage process instruction instruction reaches stage register incorrect handle conflicts correctly pipeline extra circuitry logic detects takes action strategies include costs drawbacks pipelined typically requires resources circuit elements processing units memory executes batch time stages share resources buffering additional synchronization logic elements transfer items separate processing elements increase latency pipelines additional complexity cost pipelining considerable dependencies processing items guess backtrack strategy handle cost implementing strategy complex instruction sets motivated radical proposals simplify architecture risc vliw compilers burdened task rearranging machine instructions improve performance instruction pipelines 
1268939	computerscience	purpose computing graphics processing units gpgpu rarely gpgp graphics processing unit gpu typically handles computation graphics perform computation applications traditionally handled central processing unit cpu multiple video cards graphics chips parallelizes parallel nature graphics processing addition single gpu cpu framework advantages multiple cpus offer specialization chip essentially gpgpu pipeline parallel processing gpus cpus analyzes data image graphic form gpus operate frequencies typically times cores gpus process pictures graphical data traditional cpu migrating data graphical form gpu scan analyze create speedup gpgpu pipelines developed 21st century graphics processing shaders pipelines fit scientific computing developed direction history principle arbitrary boolean function including addition multiplication mathematical functions built functionally complete set logic operators 1987 conway game life examples purpose computing stream processor called blitter invoke special sequence logical operations bit vectors purpose computing gpus practical popular 2001 advent programmable shaders floating support graphics processors notably involving matrices vectors dimensional vectors easy translate gpu acts native speed support types scientific computing community experiments hardware matrix multiplication routine 2001 common scientific programs faster gpus cpus implementation factorization 2005 efforts gpus purpose processors required reformulating computational terms graphics primitives supported major apis graphics processors opengl directx cumbersome translation obviated advent purpose programming languages apis rapidmind brook accelerator nvidia cuda allowed programmers ignore underlying graphical concepts favor common performance computing concepts hardware vendor independent offerings include directcompute apple khronos opencl modern gpgpu pipelines leverage speed gpu requiring explicit conversion data graphical form implementations language code running cpu poll gpu shader return values create gpgpu framework opencl dominant purpose gpu computing language standard defined khronos opencl cross platform gpgpu platform additionally supports data parallel compute cpus opencl actively supported intel amd nvidia arm platforms khronos involved development sycl implementations computecpp sycl stl developed codeplay supported linux operating systems hosted khronos github compiled modern operating dominant proprietary framework nvidia cuda nvidia launched cuda 2006 software development kit sdk application programming interface api programming language code algorithms execution geforce series gpus programming standards parallel computing include opencl vendor independent openacc openhmpp mark harris founder gpgpu coined term gpgpu xcelerit sdk created xcelerit designed accelerate existing code bases gpus minimal effort simplified programming model automates parallelisation manages devices memory compiles cuda binaries additionally multi core cpus accelerators targeted source code openvidia developed university toronto 2003 2005 collaboration nvidia altimesh hybridizer created altimesh compiles common intermediate language cuda binaries supports generics virtual functions debugging profiling integrated visual studio nsight visual studio extension visual studio marketplace introduced directcompute gpu computing api released directx 11 api alea gpu created quantalea introduces native gpu computing capabilities language alea gpu simplified gpu programming model based gpu parallel parallel aggregate delegates automatic memory management matlab supports gpgpu acceleration parallel computing toolbox matlab distributed computing server party packages jacket gpgpu processing simulate newtonian physics physics engines commercial implementations include havok physics physx typically video games close metal called stream amd gpgpu technology ati radeon based gpus accelerated massive parallelism amp library accelerates execution code exploiting data parallel hardware gpus mobile computers trend increasing power mobile gpus purpose programming mobile devices running major mobile operating systems google android enabled running renderscript code mobile device gpu apple introduced proprietary metal api ios applications execute arbitrary code apple gpu compute shaders hardware support video cards produced vendors nvidia amd ati cards vendors implementing data format support integer floating formats 32 bit 64 bit introduced shader model standard rank features graphic cards simple shader model version integer pre directx video cards supported paletted integer color types formats red element green element blue element alpha transparency common formats floating fixed function limited programmability graphics including directx compliant gpus sufficient representation displays note representation limitations sufficient graphics processing power graphics programmers formats floating data formats effects dynamic range imaging gpgpu applications require floating accuracy video cards conforming directx specification directx shader model suggested support precision types partial precision precision support fp32 fp24 floating 32 24 bit component partial precision fp16 ati radeon r300 series gpus supported fp24 precision programmable fragment pipeline fp32 supported vertex processors nvidia nv30 series supported fp16 fp32 vendors s3 graphics xgi supported mixture formats fp24 shader model altered specification increasing precision requirements minimum fp32 support fragment pipeline ati shader model compliant r5xx generation radeon x1000 series supports fp32 pipeline nvidia nv4x g7x series continued support fp32 precision fp16 partial precisions stipulated shader model ati nvidia shader model gpus introduced support blendable fp16 render targets easily facilitating support dynamic range rendering implementations floating nvidia gpus ieee compliant true vendors implications correctness considered scientific applications 64 bit floating values double precision float commonly cpus universally supported gpus gpu architectures sacrifice ieee compliance lack double precision efforts occurred emulate double precision floating values gpus speed tradeoff negates benefit offloading computing gpu vectorization operations gpu operate vectorized fashion operation performed values color r1 g1 b1 modulated color r2 g2 b2 gpu produce color r1 r2 g1 g2 b1 b2 operation functionality graphics basic data type vector dimensional examples include vertices colors normal vectors texture coordinates applications performance vector instructions termed single instruction multiple data simd cpus gpu cpu originally data simply passed central processing unit cpu graphics processing unit gpu display device time progressed valuable gpus store simple complex structures data passed cpu analyzed image set scientific data represented 2d 3d format video card understand gpu access draw operation analyze data forms cpu poll pixel data element slowly speed access cpu larger pool random access memory worse hard drive slower gpus video cards typically amounts expensive memory faster access transferring portion data set actively analyzed gpu memory form textures easily readable gpu forms speed increase distinguishing feature gpgpu design ability transfer bidirectionally gpu cpu data throughput directions ideally multiplier speed specific algorithm gpgpu pipelines improve efficiency data sets data 2d 3d imagery complex graphics pipelines scientific computing fields data sets genome mapping dimensional analysis biomolecule analysis protein study complex organic chemistry pipelines vastly improve efficiency image processing vision fields parallel processing heavily optimized pipelines yielded speed increases times original cpu based pipeline task simple gpu program collects data average lighting values renders view camera graphics program main program cpu cpu adjustments screen view advanced edge detection return numerical processed image representing outlines vision program controlling mobile robot gpu fast local hardware access pixel picture element image analyze average apply sobel edge filter convolution filter speed cpu typically access slower random access memory copies graphic question gpgpu fundamentally software concept hardware concept type algorithm piece equipment specialized equipment designs enhance efficiency gpgpu pipelines traditionally perform algorithms amounts data massively parallelized gigantic data level tasks parallelized specialized setups rack computing highly tailored machines built rack adds layer computing units cpus correspond gpus bitcoin miners setups quantity processing caches historically cpus hardware managed caches earlier gpus software managed local memories gpus increasingly purpose applications art gpus designed hardware managed multi level caches helped gpus mainstream computing geforce 200 series gt200 architecture gpus feature l2 cache fermi gpu 768 kib level cache kepler gpu 5 mib level cache maxwell gpu 2 mib level cache pascal gpu 4 mib level cache register file gpus register files reduce context switching latency register file size increasing gpu generations total register file size maxwell gm200 pascal gpus 6 mib 14 mib comparison size register file cpus typically tens hundreds kilobytes energy efficiency projects compared energy efficiency gpus cpus fpgas stream processing gpus designed graphics restrictive operations programming design gpus effective solved stream processing hardware discussion referring vertices fragments textures concerns legacy model gpgpu programming graphics apis opengl directx perform purpose computation introduction cuda nvidia 2007 opencl vendor independent 2008 purpose computing apis gpgpu codes map computation graphics primitives stream processing nature gpus remains valid apis gpus process independent vertices fragments process parallel effective programmer process vertices fragments sense gpus stream processors processors operate parallel running kernel records stream stream simply set records require computation streams provide data parallelism kernels functions applied element stream gpus vertices fragments elements streams vertex fragment shaders kernels element read input perform operations write output permissible multiple inputs multiple outputs piece memory readable writable arithmetic intensity defined operations performed word memory transferred gpgpu applications arithmetic intensity memory access latency limit computational speedup ideal gpgpu applications data sets parallelism minimal dependency data elements gpu programming concepts computational resources variety computational resources gpu program substitute write texture output framebuffer render texture rtt render backbuffer texture rtbctt stream textures stream common form stream gpgpu 2d grid fits naturally rendering model built gpus computations naturally map grids matrix algebra image processing physically based simulation textures memory texture lookups memory reads operations automatically gpu kernels compute kernels body loops programmer operating grid cpu code gpu programmer specifies body loop kernel data loop invoking geometry processing flow control sequential code control flow program statements forms loops flow control structures gpus conditional writes performed properly crafted series arithmetic bit operations looping conditional branching gpus branching performance penalty branching avoided loops cpu gpu code methods static branch resolution pre computation predication loop splitting cull achieve branching hardware support exist gpu methods map map operation simply applies function kernel element stream simple multiplying stream constant increasing brightness image map operation simple implement gpu programmer generates fragment pixel screen applies fragment program result stream size stored output buffer reduce computations require calculating stream stream element larger stream called reduction stream reduction performed multiple steps prior step input current step range operation applied reduced stream element remains stream filtering stream filtering essentially uniform reduction filtering involves removing items stream based criteria scan scan operation termed parallel prefix sum takes vector stream data elements arbitrary associative binary function identity element input a1 a2 a3 exclusive scan produces output a0 a0 a1 a0 a1 a2 inclusive scan produces output a0 a1 a0 a1 a2 a0 a1 a2 a3 require identity exist glance operation inherently serial efficient parallel scan algorithms implemented graphics processing units scan operation quicksort sparse matrix vector multiplication scatter scatter operation naturally defined vertex processor vertex processor adjust position vertex programmer control deposited grid extensions controlling vertex fragment processor perform direct scatter operation location fragment grid fixed time fragment creation altered programmer logical scatter operation recast implemented gather step scatter implementation emit output output address gather operation address comparisons output maps current output slot dedicated compute kernels scatter performed indexed writes gather gather reverse scatter scatter reorders elements map gather restore elements map scatter dedicated compute kernels gather performed indexed reads shaders performed texture lookups sort sort operation transforms unordered set elements set elements common implementation gpus radix sort integer floating data coarse grained merge sort fine grained sorting networks comparable data search search operation programmer element stream neighbors element gpu speed search individual element multiple searches parallel search method binary search sorted elements data structures variety data structures represented gpu applications gpus purpose computing bioinformatics gpgpu usage bioinformatics molecular dynamics † expected speedups highly dependent configuration gpu performance compared multi core x86 cpu socket gpu performance benchmarked gpu supported features kernel kernel performance comparison details configuration view application speedups nvidia house testing isv documentation ‡ quadro gpu tesla gpu nvidia recommended gpus application check developer isv certification 
1281850	computerscience	learning reinforcement learning technique machine learning goal learning learn policy tells agent action circumstances require model environment handle stochastic transitions rewards requiring adaptations finite markov decision process fmdp learning policy optimal sense maximizes expected total reward successive steps starting current learning identify optimal action selection policy fmdp infinite exploration time partly random policy names function returns reward provide reinforcement stand quality action reinforcement learning reinforcement learning involves agent set set actions performing action agent transitions executing action specific agent reward numerical score goal agent maximize total future reward adding maximum reward attainable future reward achieving current effectively influencing current action potential future reward potential reward weighted sum expected values rewards future steps starting current process boarding train reward measured negative total time spent boarding alternatively cost boarding train equal boarding time strategy enter train door minimizing initial wait time train crowded slow entry initial action entering door people fighting depart train attempt board total boarding time cost day random chance exploration decide wait people depart initially wait time entry slows time fighting passengers board rewarded path reward previous day total boarding time exploration initial patient action larger cost negative reward forceful strategy cost revealing rewarding strategy algorithm weight step steps future calculated discount factor valuing rewards received earlier received reflecting start interpreted probability succeed survive step algorithm function calculates quality action combination learning initialized arbitrary fixed chosen programmer time agent selects action observes reward 11 enters 12 depend previous 13 selected action 14 updated core algorithm simple iteration update weighted average 16 reward received moving 17 12 19 learning rate 20 episode algorithm 12 final terminal learning learn episodic tasks discount factor action values finite infinite loops final 22 23 updated set reward 24 observed 22 26 equal influence variables explore exploit learning rate step size determines extent newly acquired overrides factor agent learn exclusively exploiting prior knowledge factor agent ignoring prior knowledge explore possibilities deterministic environments learning rate 27 optimal stochastic algorithm converges technical conditions learning rate require decrease practice constant learning rate 28 discount factor discount factor determines future rewards factor agent myopic short sighted current rewards 11 update rule factor approaching strive term reward discount factor meets exceeds action values diverge terminal agent reaches environment histories infinitely utilities additive undiscounted rewards infinite discount factor function learning leads propagation errors instabilities function approximated artificial neural network starting discount factor increasing final accelerates learning initial conditions learning iterative algorithm implicitly assumes initial condition update occurs initial values optimistic initial conditions encourage exploration matter action selected update rule values alternative increasing choice probability reward 24 reset initial conditions idea time action reward set 14 learning fixed deterministic rewards model incorporates reset initial conditions ric expected predict participants behavior model assumes arbitrary initial condition aic ric consistent human behaviour repeated binary choice experiments implementation learning simplest stores data tables approach falters increasing actions function approximation learning combined function approximation apply algorithm larger space continuous solution adapted artificial neural network function approximator function approximation speed learning finite algorithm generalize earlier experiences unseen quantization technique decrease action space quantizes values learning balance stick finger time involves position finger space velocity angle stick angular velocity stick yields element vector describes snapshot encoded values infinitely shrink space valid actions multiple values assigned bucket exact distance finger starting position infinity infinity history learning introduced watkins 1989 convergence proof watkins dayan 1992 detailed mathematical proof tsitsiklis 1994 bertsekas tsitsiklis 1996 neuro dynamic programming book watkins addressing “learning delayed rewards” title phd thesis earlier 1981 “delayed reinforcement learning” solved bozinovski crossbar adaptive array caa memory matrix table learning architecture introduced term “state evaluation” reinforcement learning crossbar learning algorithm written mathematical pseudocode paper iteration performs computation term “secondary reinforcement” borrowed animal learning theory model values backpropagation s’ consequence situation backpropagated encountered situations caa computes values vertically actions horizontally crossbar demonstration graphs delayed reinforcement learning contained desirable undesirable neutral computed evaluation function learning forerunner learning algorithm 2014 google deepmind patented application learning deep learning titled deep reinforcement learning deep learning play atari 2600 games expert human levels variants deep learning deepmind deep convolutional neural network layers tiled convolutional filters mimic effects receptive fields reinforcement learning unstable divergent nonlinear function approximator neural network represent instability correlations sequence observations updates change policy data distribution correlations target values technique experience replay biologically inspired mechanism random sample prior actions action proceed removes correlations observation sequence smooths data distribution iterative update adjusts target values periodically updated reducing correlations target double learning future maximum approximated action learning evaluated function current action selection policy noisy environments learning overestimate action values slowing learning variant called double learning proposed correct double learning policy reinforcement learning algorithm policy evaluation select action practice separate functions trained mutually symmetric fashion separate experiences 33 34 double learning update step estimated discounted future evaluated policy solves overestimation issue algorithm combined deep learning dqn algorithm double dqn outperforms original dqn algorithm delayed learning alternative implementation online learning algorithm correct pac learning greedy variant learning combination linear function approximation advantage greedy convergence guaranteed function approximation estimate action values 
1290139	computerscience	office 2003 codenamed office 11 office suite developed distributed windows operating office 2003 released manufacturing august 19 2003 released retail october 21 2003 successor office xp predecessor office 2007 features office 2003 include rights management collaboration features improved support sharepoint smart tags xml extended office online services office 2003 introduces programs office product lineup infopath program designing filling submitting electronic structured data forms onenote note program creating organizing diagrams graphics handwritten notes recorded audio introduces picture manager graphics software manage share digital images release office 2003 rebranded office productivity suite integrated dedicated workers result appended office branding names programs office 2003 version support windows xp colors visual styles introduces updated icons office 2003 version office include menu bar toolbars programs version include 97 2003 file format default file format compatible windows 2000 sp3 sp4 windows xp windows server 2003 windows vista windows windows server 2008 windows nt windows 98 windows version office compatible windows 2000 office 2007 requires windows xp version released total service packs office 2003 lifecycle service pack released july 27 2004 service pack released september 27 2005 service pack released september 17 2007 mainstream support office 2003 april 14 2009 extended support april 2014 dates mainstream extended support windows xp features core applications word excel powerpoint access minor improvements office xp outlook 2003 received improved functionality including email calendar sharing display complete unicode support search folders colored flags kerberos authentication rpc cached exchange mode key benefit outlook 2003 improved junk mail filter tablet pen support introduced productivity applications word 2003 introduced reading layout view document comparison change tracking annotation reviewing task pane voice comments xml based format features excel 2003 introduced list commands statistical functions xml data import analysis transformation document customization features access 2003 introduced backup command ability view object dependencies error checking forms reports features office 2003 features improvements smart tags smart tag lists defined xml regular expressions extended type library smart tag recognition powerpoint access frontpage 2003 introduced conditional formatting replace elements tools creating formatting tables cells dynamic templates dreamweaver flash support webdav sharepoint publishing features publisher 2003 introduced generic color postscript printer driver commercial printing rights management capabilities introduced document productivity applications limit access set users restrict types actions users perform support managed code add ins vsto solutions introduced office 2003 version office include customizable toolbars menus applications office assistant ability slipstream service packs original setup files office components save settings wizard allowed users choose locally cached installation source files utility resource kit tools office version support windows 2000 picture organizer basic editing features called office picture manager included basic clipart templates included disc media content hosted online downloadable office application advertised office online major office 2003 feature box office online articles tips training courses templates clip art stock photos media downloads including party extensibility add ins office programs office 2003 features broad xml integration designing customized xml schemas importing transforming xml data data centric model document based msxml library introduced office xml integration office 2003 sharepoint integration facilitate data exchange collaborated workflow publishing infopath 2003 introduced collecting data xml based forms templates based databases editions released separate editions office 2003 basic student teacher standard business professional retail editions upgrade versions basic edition original equipment manufacturers student teacher edition intended noncommercial office 2003 applications purchase standalone products 
1290145	computerscience	office xp codenamed office office suite created distributed windows operating office xp released manufacturing march 2001 retail 31 2001 successor office 2000 predecessor office 2003 features office xp include smart tags selection based search feature recognizes types document users perform additional actions task pane interface consolidates popular menu bar commands screen facilitate quick access document collaboration capabilities support msn sharepoint integrated handwriting recognition speech recognition capabilities office xp incorporated features address reliability issues observed previous versions office office xp introduces separate document imaging document scanning clip organizer applications office assistant commonly clippy introduced office 97 reviled users disabled default office xp change key element promotional campaign office xp office xp incompatible windows 95 office xp compatible windows nt sp6 windows 98 windows 2000 windows windows xp windows vista version support windows nt windows 98 windows successor office 2003 support operating systems released service packs office xp lifetime mainstream support office xp july 11 2006 extended support july 12 2011 office xp received positive reviews release critics praising collaboration features document protection recovery functionality smart tags suite handwriting recognition speech recognition capabilities criticized viewed inferior offerings competitors 2002 60 office xp licenses sold history meeting financial analysts july 2000 demonstrated office xp codename office included subset features designed time strategy intended provide extensive client access services features speech recognition sharepoint portal server 2001 codenamed tahoe development time slated improve collaboration users office 2000 office august released office beta product evaluation purposes period office characterized interim release predecessor office 2000 future version planned include formatting options integrated speech recognition improved collaboration capabilities enhanced support services portal complete beta compatible windows 95 windows 98 windows nt sp5 windows 2000 release office beta speculation intended rebrand product office 2001 office 2002 office office xp shorthand experience positioned brand emphasize experiences enabled product time intended version visual studio visual studio unnamed sources stated company desire office product partially company strategy ultimately decided office xp final product brand windows xp—then codenamed whistler —which developed concurrently spite individual office xp products excel powerpoint word continue based naming conventions named 2002 office xp beta released 000 technical testers late 2000 beta introduced improvements setup tools custom maintenance wizard allowed setup components modified installation setup process office xp version windows installer terminated product support windows 95 windows nt sp5 release beta announced corporate preview kit program office xp 500 000 corporate customers evaluate corporate preview beta version product total machines individual copies cost 19 95 expired august 31 2001 office xp released manufacturing march 2001 retail 31 2001 service packs released total service packs office xp introduced security enhancements stability improvements fixes software bugs product lifecycle service packs separate client file updates client updates intended users installed office xp rom office update standalone downloads required office xp installation media installation process rolled installed file updates require access installation media intended network administrators deploy updates office xp users installed product server location users manually install file updates file updates require windows installer office xp shipped version september 25 2001 released windows installer windows 9x windows nt windows 2000 windows installer shipped windows xp service pack sp1 released december 11 2001 included performance security improvements stability improvements based error reports users sp1 resolved issue prevented documents saved msn service pack sp2 released august 21 2002 included standalone updates updates included cumulative security patches excel word address malicious code embedded document macros file version sp2 cumulative—sp1 installed—while client version requires sp1 installed file updates released sp2 applied client installations office xp earlier updates designed update administrative images fail applied clients service pack sp3 released march 30 2004 included released updates unreleased stability improvements based feedback error reports received users sp3 require earlier service packs installed office xp client updated patched administrative image file version sp3 installed features user interface office xp streamlined flatter appearance compared previous versions office involved removing visually competing elements visually prioritizing items increasing letter spacing word spacing readability defining foreground background color bring elements smart tags excel 2002 word 2002 introduce smart tags commands specific types including addresses calendar dates personal names telephone ticker symbols tracking documents smart tag denoted dotted purple underline actionable document hovering mouse cursor displays icon list commands invoked mouse keyboard shortcut ticker symbol smart tag excel stock cell workbook contact smart tag word document display options send mail message schedule meeting contact excel word support extensible smart tags developers organizations display custom commands specific smart tags word outlook 2002 configured default mail editor autocorrect paste options commands previous versions office updated include smart tags shared office xp programs autocorrect smart tag individual options revert automatic correction prohibit automatic correction occurring future access autocorrect options dialog box represented blue box mouse cursor positioned corrected paste options smart tag options retain original formatting content change formatting based active program provide contextually specific characteristics content users paste clipboard release office xp repository smart tags installed users examples party companies produced smart tags release office xp include espn expedia fedex msnbc released euro currency converter smart tag euro coins notes introduced january 2002 task panes office xp introduces task pane interface consolidates popular menu bar commands screen facilitate quick access office xp includes startup search clipboard insert clip art task panes task panes exclusive programs word 2002 includes task pane dedicated style formatting options users switch task panes buttons drop list specific task panes users switch default startup task pane automatically users launch office xp program individual commands existing file create blank file template add network location office search task pane includes individual basic advanced modes users query local remote locations files basic mode users perform searches advanced mode additional file property query options indexing service improve returned search performed insert clip art task pane excel frontpage powerpoint word options search insert online clip art files office clipboard redesigned clipboard task pane office xp programs accommodate 24 clipboard items compared 12 office 2000 clipboard items provide visual representation users distinguish types content office clipboard task pane items copied file formats xml support access 2002 excel 2002 support exporting importing xml users save excel workbooks xml spreadsheets office xml compatibility pack 2006 released compatibility pack office 2000 sp3 office xp sp3 office 2003 sp1 enables users edit save excel powerpoint word office xml documents introduced office 2007 compatibility pack requires windows 2000 sp4 windows server 2003 windows xp sp1 versions windows update enables compatibility documents created office 2010 office 2013 office 2016 alternative user input handwriting recognition office xp introduces handwriting recognition office programs allowing users write mouse stylus entering typing keyboard users insert handwritten notes excel add handwritten comments powerpoint presentations send handwritten mail messages outlook write word documents notes written handheld pc pocket pc converted word documents handwritten content word documents converted word active mail editor outlook handwritten mail messages installed handwriting functionality internet explorer outlook express handwriting recognition engines english simplified chinese traditional chinese japanese korean versions office xp downloadable tablet pack office xp extension windows journal reuse notes outlook 2002 items import meeting outlook 2002 notes speech recognition speech recognition based technology office xp programs allowing users dictate active documents change document formatting navigate interface voice speech recognition feature encompasses modes dictation transcribes spoken voice command invokes interface features speech recognition installed office xp setup clicking speech option tools menu word 2002 installed microphone command language toolbar appears upper corner screen corner east asian versions office xp launched time speech recognition offers tutorial improve recognition accuracy providing instructions adjust microphone optimal performance speech recognition speech profile store user voice users configure speech recognition settings including pronunciation sensitivity voice command mode accuracy recognition response time dictation mode microphone settings speech control panel applet regional language options applet language toolbar additional settings speech recognition engines english japanese simplified chinese languages recommended sidewinder game voicechat device microphone speech recognition reliability office xp incorporated features address reliability issues observed previous versions office security excel powerpoint word updated provide password encryption options based cryptoapi additionally office xp programs provide options users digitally sign documents installation deployment upgrading previous version office office xp retains user previous configuration office xp installed administrative image hosted server https ftp office resource kit includes improvements deployment functionality compared office 2000 version setup ini customization wizard administrators customize office xp ini configuration file prior deployment custom installation wizard prohibit installation uninstallation programs features network installed setup options finally custom maintenance wizard updated provide customization options configure office xp including user preferences security settings save settings wizard introduced office 2000 optional download account users remotely store office settings office update updated support importing exporting backups local storage network share effort curtail software piracy incorporated product activation technology versions office xp prohibit users installing single software manner violates user license agreement eula eula single user install primary device portable device laptop users substantial hardware office xp device reactivate software internet telephone product activation require personally identifiable office xp introduced optional subscription based activation model allowed consumers annually license product receive incremental updates reduced price compared cost retail version originally intended deliver activation model united customers retail availability office xp 31 2001 decided consumers select locations citing cautious delivery approach spite distributed optical media single subscription authorized retail partners attended teammicrosoft live events pilot experiment consumers australia france zealand purchase subscription office xp starting 2001 worldwide release activation model contingent success pilot experiment terminated support subscriptions 2002 based feedback demonstrated understood consumers office 365 released decade office xp reintroduced subscription based licenses consumers user assistance question feature appears corner office xp programs users type natural language questions receive answers office assistant clippy office additionally office updated aggregate display content internet response query office assistant disabled default appears activated editions component products packaged suites editions retail packages upgrade versions oem versions inclusion pcs volume license versions required activation editions core components word excel outlook editions business edition powerpoint reception office xp received mixed positive reviews release cnet praised collaboration data recovery features stated office xp offered host incremental improvements predecessor office 2000 ultimately concluded enhancements additions suited individuals criticism directed productivity suite strict hard disk space requirement incompatibility windows 95 cnet awarded office xp star editors rating pc magazine rated office xp stars praised product emphasis user control customization options features introduced previous versions regarded upgrades offers pains gains york times stated office xp list features improved arrangement offered praise collaboration features regarded huge leap previous versions paul thurrott regarded office xp upgrade writers stated smart tags feature feel minor upgrade numerous assessments office xp positive speech recognition feature frequently criticized inaccuracy lack advanced functionality cnet regarded lame inability recognize editing commands select sentence required users manually switch command dictation modes pc magazine stated speech recognition handwriting recognition features reliable assessment pc magazine stated speech recognition accurate commands editing correcting recommended dragon naturallyspeaking ibm viavoice voice xpress dictation york times speculated confidence feature installed default microphone included office xp concluded bad freebie draft clean recognition errors paul thurrott stated voice recognition bad worth discussing concluding sort joke compared mature products dragon naturallyspeaking 
1303494	computerscience	science suffix array sorted array suffixes string data structure indices data compression algorithms field bibliometrics suffix arrays introduced simple space efficient alternative suffix trees independently discovered gaston gonnet 1987 pat array enhanced suffix arrays esas suffix arrays additional tables reproduce functionality suffix trees preserving time memory complexity suffix array subset suffixes string called sparse suffix array multiple probabilistic algorithms developed minimize additional memory usage including optimal time memory algorithm definition denote substring ranging suffix array defined array integers providing starting positions suffixes lexicographical entry math acontains starting position suffix math math codice indexed special sentinel letter codice unique lexicographically character suffixes suffixes sorted ascending suffix array starting positions sorted suffixes suffix array suffixes written vertically clarity refers suffix starting position suffix codice correspondence suffix trees suffix arrays closely suffix trees suffix tree algorithm systematically replaced algorithm suffix array enhanced additional lcp array solves time complexity advantages suffix arrays suffix trees include improved space requirements simpler linear time construction algorithms compared ukkonen algorithm improved cache locality space efficiency suffix arrays introduced improve space requirements suffix trees suffix arrays store 16 integers assuming integer requires 17 bytes suffix array requires 18 bytes total 19 bytes required careful suffix tree implementation applications space requirements suffix arrays prohibitive analyzed bits suffix array requires 20 space original alphabet size 21 requires 22 bits human genome 23 24 suffix array occupy 16 times memory genome discrepancies motivated trend compressed suffix arrays bwt based compressed indices data structures require space size construction algorithms suffix tree built converted suffix array traversing tree depth exist algorithms build suffix array naive approach construct suffix array comparison based sorting algorithm algorithms require 20 suffix comparisons suffix comparison runs time runtime approach 30 advanced algorithms advantage suffixes sorted arbitrary strings algorithms strive achieve goals algorithms achieve goals algorithm algorithm simple 100 loc enhanced simultaneously construct lcp array algorithm fastest suffix array construction algorithms careful implementation yuta mori outperforms linear super linear construction approaches time space requirements suffix array construction algorithms differentiated supported alphabet constant alphabets alphabet size bound constant integer alphabets characters integers range depending 16 alphabets character comparisons allowed suffix array construction algorithms based approaches recursive algorithm integer alphabets dc3 skew algorithm runs linear time basis parallel external memory suffix array construction algorithms proposes algorithm updating suffix array edited rebuilding suffix array scratch theoretical worst time complexity 20 appears perform practice experimental authors implementation dynamic suffix arrays efficient rebuilding insertion reasonable letters original applications suffix array string locate occurrence substring pattern 34 string finding occurrence pattern equivalent finding suffix substring lexicographical suffixes suffix array efficiently binary searches search locates starting position interval determines position finding substring pattern 34 37 string 16 takes 40 time single suffix comparison compare 37 characters bound improved 42 time lcp idea pattern comparison compare characters common prefix pattern current search interval improve bound achieve search time 43 suffix trees suffix sorting algorithms compute burrows–wheeler transform bwt bwt requires sorting cyclic permutations string string special string character lexicographically character sorted rotated bwt matrix corresponds suffixes suffix array bwt computed linear time constructing suffix array deducing bwt string 44 suffix arrays substrings based machine translation demanding storage phrase table statistical machine translation additional applications suffix array require lcp array detailed application 
1307911	computerscience	bootstrap aggregating called bagging machine learning ensemble meta algorithm designed improve stability accuracy machine learning algorithms statistical classification regression reduces variance helps avoid overfitting applied decision tree methods type method bagging special model averaging approach description technique standard training set size bagging generates training sets size n′ sampling uniformly replacement sampling replacement observations repeated n′ set expected fraction ≈63 unique examples rest duplicates sample bootstrap sample models fitted bootstrap samples combined averaging output regression voting classification bagging leads improvements unstable procedures breiman 1996 include artificial neural networks classification regression trees subset selection linear regression breiman 1994 application bagging improvement preimage learning hand mildly degrade performance stable methods nearest neighbors breiman 1996 ozone data illustrate basic principles bagging analysis relationship ozone temperature data rousseeuw leroy 1986 analysis relationship temperature ozone data set linear based scatter plot mathematically relationship loess smoothers bandwidth building single smoother complete data set 100 bootstrap samples data drawn sample original data set resembles distribution variability bootstrap sample loess smoother fit predictions 100 smoothers range data predicted smooth fits grey lines figure lines wiggly overfit data result bandwidth average 100 smoothers fitted subset original data set arrive bagged predictor red stable overfit history bagging bootstrap aggregating proposed leo breiman 1994 improve classification combining classifications randomly generated training sets breiman 1994 technical report 421 
1331441	computerscience	document classification document categorization library science science science task assign document classes categories manually intellectually algorithmically intellectual classification documents province library science algorithmic classification documents science science overlapping interdisciplinary document classification documents classified texts images music document possesses special classification classification implied documents classified subjects attributes document type author printing rest article subject classification considered main philosophies subject classification documents content based approach request based approach content based request based classification content based classification classification weight subjects document determines class document assigned common rule classification libraries 20 content book class book assigned automatic classification times appears document request oriented classification indexing classification anticipated request users influencing documents classified classifier themself “under descriptors entity “think queries decide entity hand relevant” soergel 1985  230 request oriented classification classification targeted audience user library database feminist studies classify documents compared historical library understand request oriented classification policy based classification classification ideals reflects purpose library database classification classification indexing based user studies empirical data users applied request oriented classification regarded user based approach classification indexing distinction assigning documents classes classification assigning subjects documents subject indexing frederick wilfrid lancaster argued distinction fruitful terminological distinctions writes “are meaningless serve confusion” lancaster 2003  21 view distinction purely superficial supported classification transformed thesaurus vice versa aitchison 1986 2004 broughton 2008 riesthuis bliedung 1991 labeling document assigning term controlled vocabulary document time assign document class documents indexed term documents indexed classified belong class documents automatic document classification adc automatic document classification tasks divided sorts supervised document classification external mechanism human feedback correct classification documents unsupervised document classification document clustering classification reference external semi supervised document classification documents labeled external mechanism software products license models techniques automatic document classification techniques include applications classification techniques applied 
1360091	computerscience	backpropagation method artificial neural networks calculate gradient calculation weights network backpropagation shorthand propagation errors error computed output distributed network’s layers commonly train deep neural networks backpropagation generalization delta rule multi layered feedforward networks chain rule iteratively compute gradients layer closely gauss–newton algorithm continuing neural backpropagation backpropagation special technique called automatic differentiation context learning backpropagation commonly gradient descent optimization algorithm adjust weight neurons calculating gradient loss function motivation goal supervised learning algorithm function maps set inputs correct output motivation backpropagation train multi layered neural network learn internal representations learn arbitrary mapping input output intuition learning optimization understand mathematical derivation backpropagation algorithm helps develop intuition relationship actual output neuron correct output training simple neural network input units output unit hidden units neuron linear output weighted sum input initially training weights set randomly neuron learns training examples consist set tuples inputs network correct output output network produce inputs trained initial network compute output differs random weights common method measuring discrepancy expected output actual output squared error measure discrepancy error network single training input correct output actual output plotted horizontal axis error vertical axis result parabola minimum parabola corresponds output minimizes error single training minimum touches horizontal axis error network produce output matches expected output mapping inputs outputs reduced optimization finding function produce minimal error output neuron depends weighted sum inputs 11 12 weights connection input units output unit error depends incoming weights neuron ultimately changed network enable learning weight plotted separate horizontal axis error vertical axis result parabolic bowl neuron weights plot require elliptic paraboloid 13 dimensions commonly algorithm set weights minimizes error gradient descent backpropagation calculate steepest descent direction derivation single layered network gradient descent method involves calculating derivative squared error function respect weights network backpropagation assuming output neuron squared error function wherethe factor 18 included cancel exponent differentiating expression multiplied arbitrary learning rate matter constant coefficient introduced neuron 19 output 20 defined asthe input 22 neuron weighted sum outputs 23 previous neurons neuron layer input layer 23 input layer simply inputs 25 network input units neuron 26 variable 27 denotes weight neurons 28 19 activation function 30 linear differentiable commonly activation function logistic function convenient derivative finding derivative error calculating partial derivative error respect weight 33 chain rule factor hand term sum 22 depends 33 thatif neuron layer input layer 38 derivative output neuron 19 respect input simply partial derivative activation function assuming logistic function reason backpropagation requires activation function differentiable relu activation function differentiable popular alexnet factor straightforward evaluate neuron output layer 42 andhowever 19 arbitrary layer network finding derivative 15 respect 20 obvious 15 function inputs neurons 48 receiving input neuron 19 total derivative respect 20 recursive expression derivative derivative respect 20 calculated derivatives respect outputs 54 layer – closer output neuron – putting withto update weight 33 gradient descent choose learning rate 58 change weight reflect impact 15 increase decrease 33 61 increase 33 increases 15 conversely 64 increase 33 decreases 15 67 weight product learning rate gradient multiplied 68 guarantees 33 decreases 15 equation 71 33 15 decreased loss function loss function function maps values variables real intuitively representing cost values backpropagation loss function calculates difference network output expected output training propagated network assumptions mathematical expression loss function fullfill conditions propagation written average 75 error functions 76 77 individual training examples 78 reason assumption backpropagation algorithm calculates gradient error function single training generalized error function assumption written function outputs neural network loss function 79 vectors 80 select error function 81 measuring difference outputs standard choice square euclidean distance vectors 17 83 84the error function 77 training examples written average losses individual examples 86history basics continuous backpropagation derived context control theory henry kelley 1960 arthur bryson 1961 principles dynamic programming 1962 stuart dreyfus published simpler derivation based chain rule bryson ho multi stage dynamic optimization method 1969 backpropagation derived multiple researchers 60 implemented computers 1970 seppo linnainmaa examples 1960s researchers include arthur bryson chi ho 1969 paul werbos propose neural nets analyzing depth 1974 phd thesis 1986 david rumelhart geoffrey hinton ronald williams james mcclelland backpropagation gained recognition 1970 linnainmaa published method automatic differentiation discrete connected networks nested differentiable functions corresponds backpropagation efficient sparse networks 1973 dreyfus backpropagation adapt parameters controllers proportion error gradients 1974 werbos mentioned possibility applying principle artificial neural networks 1982 applied linnainmaa method neural networks 1986 rumelhart hinton williams experimentally method generate internal representations incoming data hidden layers neural networks 1993 wan win international pattern recognition contest backpropagation 2000s fell favour returned 2010s benefitting cheap powerful gpu based computing systems language structure learning connectionist models algorithm explain variety phenomena language learning 
1363880	computerscience	random forests random decision forests ensemble learning method classification regression tasks operates constructing multitude decision trees training time outputting class mode classes classification prediction regression individual trees random decision forests correct decision trees habit overfitting training set algorithm random decision forests created tin kam ho random subspace method ho formulation implement stochastic discrimination approach classification proposed eugene kleinberg extension algorithm developed leo breiman adele cutler registered random forests trademark owned minitab extension combines breiman bagging idea random selection features introduced ho independently amit geman construct collection decision trees controlled variance history method random decision forests proposed ho 1995 ho established forests trees splitting oblique hyperplanes gain accuracy grow suffering overtraining forests randomly restricted sensitive selected feature dimensions subsequent lines concluded splitting methods randomly forced insensitive feature dimensions behave note observation complex classifier larger forest accurate monotonically sharp contrast common belief complexity classifier grow level accuracy hurt overfitting explanation forest method resistance overtraining kleinberg theory stochastic discrimination development breiman notion random forests influenced amit andgeman introduced idea searching random subset theavailable decisions splitting node context growing singletree idea random subspace selection ho influential design random forests method forest trees grown variation trees introduced projecting training datainto randomly chosen subspace fitting tree node finally idea ofrandomized node optimization decision node selected arandomized procedure deterministic optimization firstintroduced dietterich introduction random forests proper paperby leo breiman paper describes method building forest ofuncorrelated trees cart procedure combined randomized nodeoptimization bagging addition paper combines severalingredients form basis themodern practice random forests report offers theoretical result random forests theform bound generalization error depends strength thetrees forest correlation algorithm preliminaries decision tree learning decision trees popular method machine learning tasks tree learning closest meeting requirements serving shelf procedure data mining hastie invariant scaling transformations feature values robust inclusion irrelevant features produces inspectable models seldom accurate trees grown deep tend learn highly irregular patterns overfit training sets bias variance random forests averaging multiple deep decision trees trained training set goal reducing variance expense increase bias loss interpretability greatly boosts performance final model bagging training algorithm random forests applies technique bootstrap aggregating bagging tree learners training set responses bagging repeatedly times selects random sample replacement training set fits trees samples training predictions unseen samples averaging predictions individual regression trees majority vote classification trees bootstrapping procedure leads model performance decreases variance model increasing bias predictions single tree highly sensitive noise training set average trees trees correlated simply training trees single training set correlated trees tree times training algorithm deterministic bootstrap sampling correlating trees training sets additionally estimate uncertainty prediction standard deviation predictions individual regression trees samples trees parameter typically trees depending size nature training set optimal trees cross validation observing bag error prediction error training sample trees bootstrap sample training error tend level trees fit bagging random forests procedure describes original bagging algorithm trees random forests scheme modified tree learning algorithm selects candidate split learning process random subset features process called feature bagging reason correlation trees ordinary bootstrap sample features strong predictors response variable target output features selected trees causing correlated analysis bagging random subspace projection contribute accuracy gains conditions ho typically classification features rounded features split regression inventors recommend rounded minimum node size default extratrees adding step randomization yields extremely randomized trees extratrees ordinary random forests ensemble individual trees main differences tree trained learning sample bootstrap sample splitting tree learner randomized computing locally optimal cut feature consideration based gain gini impurity random cut selected selected uniform distribution feature empirical range tree training set randomly generated splits split yields score chosen split node ordinary random forests randomly selected features considered node default values parameter classification regression features model properties variable random forests rank variables regression classification natural technique breiman original paper implemented package randomforest step measuring variable data set fit random forest data fitting process bag error data recorded averaged forest errors independent set substituted bagging training measure feature training values feature permuted training data bag error computed perturbed data set score feature computed averaging difference bag error permutation trees score normalized standard deviation differences features produce values score ranked features produce values statistical definition variable measure analyzed zhu method determining variable drawbacks data including categorical variables levels random forests biased favor attributes levels methods partial permutationsand growing unbiased treescan solve data correlated features relevance output favored larger relationship nearest neighbors relationship random forests nearest neighbor algorithm nn lin jeon 2002 viewed called weighted neighborhoods schemes models built training set predictions 11 neighborhood formalized weight function 13 negative weight training relative tree weights 14 sum weight functions forest averages predictions set trees individual weight functions 17 predictions arethis forest weighted neighborhood scheme weights average individual trees neighbors interpretation 14 sharing leaf tree neighborhood depends complex structure trees structure training set lin jeon shape neighborhood random forest adapts local feature unsupervised learning random forests construction random forest predictors naturally lead dissimilarity measure observations define random forest dissimilarity measure unlabeled data idea construct random forest predictor distinguishes “observed” data suitably generated synthetic data observed data original unlabeled data synthetic data drawn reference distribution random forest dissimilarity attractive handles mixed variable types invariant monotonic transformations input variables robust outlying observations random forest dissimilarity easily deals semi continuous variables intrinsic variable selection addcl random forest dissimilarity weighs contribution variable dependent variables random forest dissimilarity variety applications clusters patients based tissue marker data variants decision trees linear models proposed evaluated base estimators random forests multinomial logistic regression naive bayes classifiers kernel random forest machine learning kernel random forests establish connection random forests kernel methods modifying definition random forests rewritten kernel methods interpretable easier analyze history leo breiman person notice link random forest kernel methods random forests grown random vectors tree construction equivalent kernel acting true margin lin jeon established connection random forests adaptive nearest neighbor implying random forests adaptive kernel estimates davies ghahramani proposed random forest kernel empirically outperform art kernel methods scornet defined kerf estimates explicit link kerf estimates random forest explicit expressions kernels based centered random forest uniform random forest simplified models random forest named kerfs centered kerf uniform kerf proved upper bounds rates consistency notations definitions preliminaries centered forests centered forest simplified model breiman original random forest uniformly selects attribute attributes performs splits center cell pre chosen attribute algorithm stops binary tree level 21 built 22 parameter algorithm uniform forest uniform forest simplified model breiman original random forest uniformly selects feature features performs splits uniformly drawn cell preselected feature random forest kerf training sample 23 24 25 aim predicting response 26 random variable 27 estimating regression function 28 random regression forest ensemble 29 randomized regression trees denote 30 predicted 31 tree 33 independent random variables distributed generic random variable 34 independent sample 35 random variable randomness induced node splitting sampling procedure tree construction trees combined form finite forest estimate 36 regression trees 37 38 cell 31 designed randomness 40 dataset 35 42 random forest estimates satisfy 43 44 random regression forest level averaging samples target cell tree trees contributions observations cells density data observations belong populated cells improve random forest methods compensate misestimation scornet defined kerf bywhich equal 46 falling cells 31 forest define connection function 29 finite forest 49 proportion cells shared 31 51 surely 52 defines kerf centered kerf construction centered kerf level 21 centered forest predictions 54 kernel function connection function isuniform kerf uniform kerf built uniform forest predictions 54 kernel function connection function isproperties relation kerf random forest predictions kerf random forests close cell controlled assume exist sequences 58 surely surely relation infinite kerf infinite random forest trees 29 infinity infinite random forest infinite kerf estimates close observations cell bounded assume exist sequences 62 surelythen surely consistency assume 67 68 centered gaussian noise independent 27 finite variance 70 27 uniformly distributed 72 73 lipschitz scornet proved upper bounds rates consistency centered kerf uniform kerf consistency centered kerf providing 74 75 exists constant 76 78 consistency uniform kerf providing 74 75 exists constant 81 82 rf scientific algorithm scientific advantages quality assessment wikipedia articles 
1370562	computerscience	integrity integrity 178b real time operating systems rtoses produced marketed green hills software integrity integrity posix certified intended embedded systems 32 bits 64 bits supported architectures include variants arm blackfin coldfire mips powerpc xscale x86 integrity supported popular ssl tls libraries wolfssl integrity 178b integrity 178b 178b–compliant version integrity military jets 16 22 35 commercial aircraft airbus a380 kernel design guarantees bounded computing times eliminating features dynamic memory allocation auditing security engineering abilities allowed evaluation assurance level eal rating national security agency nsa target evaluation toe architecture security target evaluation excludes components file networking definition toe focusing solely core kernel operating systems windows linux evaluated levels assurance include abilities toe supported processor architectures integrity architecture support package asp support processor families 
1396397	computerscience	mathematics bicubic interpolation extension cubic interpolation interpolating data dimensional regular grid interpolated surface smoother surfaces bilinear interpolation nearest neighbor interpolation bicubic interpolation accomplished lagrange polynomials cubic splines cubic convolution algorithm image processing bicubic interpolation chosen bilinear nearest neighbor interpolation image resampling speed issue contrast bilinear interpolation takes pixels 2×2 account bicubic interpolation considers 16 pixels 4×4 images resampled bicubic interpolation smoother interpolation artifacts computation suppose function values derivatives corners unit square interpolated surface written asthe interpolation consists determining 16 coefficients matching 11 function values yields equations equations derivatives 16 17 directions equations 26 mixed partial derivative expressions identities procedure yields surface 11 unit square 35 continuous continuous derivatives bicubic interpolation arbitrarily sized regular grid accomplished patching bicubic surfaces ensuring derivatives match boundaries unknown parameters vectorand lettingthe equations reformulated matrix linear equation inverting matrix linear equation 40 wherewhich 42 calculated easily concise matrix form 16 coefficients orwherefinding derivatives function values derivatives unknown typically approximated function values neighbouring corners unit square finite differences single derivatives method slope surrounding axis calculate 49 left target calculate slope cross derivative derivative axes time procedure 16 derivatives target procedure values usual values 56 target direction calculating equivalent edges dataset missing surrounding missing approximated methods simple common method assume slope existing target continues change calculate hypothetical missing bicubic convolution algorithm bicubic spline interpolation requires solution linear grid cell interpolator properties applying convolution kernel dimensions 60 set −0 −0 75 note 61 62 nonzero integers 63 approach proposed 64 corresponds cubic hermite spline produces convergence respect sampling interval original function matrix notation common 64 express equation friendly manner 67 dimension note dimensional cubic convolution interpolation sample required inquiry samples located left samples indexed −1 distance indexed inquiry denoted 67 dimensions applied 16 17 graphics bicubic algorithm frequently scaling images video display bitmap resampling preserves fine common bilinear algorithm negative lobes kernel overshoot haloing clipping artifact ringing artifacts increases acutance apparent sharpness desirable 
1398487	computerscience	super resolution imaging class techniques enhance resolution imaging techniques—termed optical sr—the diffraction limit systems transcended others— geometrical sr—the resolution digital imaging sensors enhanced radar sonar imaging applications magnetic resonance imaging mri resolution computed tomography subspace decomposition based methods music compressed sensing based algorithms samv employed achieve standard periodogram algorithm super resolution imaging techniques image processing super resolution microscopy basic concepts ideas surrounding super resolution raise fundamental issues outset examine relevant physical theoretical principles diffraction limit physical object optical instrument reproduce image limits mandated laws physics formulated diffraction equations wave theory light uncertainty principle photons quantum mechanics transfer increased boundary packets limits cleverly swapped multiplexed “break” “run around” diffraction limit procedures probing electro magnetic disturbances molecular level called field remain consistent maxwell equations succinct expression diffraction limit spatial frequency domain fourier optics light distributions expressed superpositions series grating light patterns range fringe widths technically spatial frequencies taught diffraction theory stipulates upper limit cut spatial frequency pattern elements fail transferred optical image resolved set diffraction theory passband fixed upper limit laws physics broken spatial frequency band cut spatial frequency swapped implemented dark field microscopy theoretical rules broken superimposing bands disentangling received image assumptions object invariance multiple exposures substitution uncertainty term super resolution techniques inferring object details statistical treatment image standard resolution limits averaging multiple exposures involves exchange extracting signal noise assumption target remained invariant resolution localization true resolution involves distinction target star spectral single double ordinarily requiring separable peaks image target single location determined precision image finding centroid center gravity image light distribution word ultra resolution proposed process catch precision localization procedure typically referred super resolution summary technical achievements enhancing performance imaging forming –sensing devices classified super resolution utilize fullest stay bounds imposed laws physics theory techniques term “super resolution” applied optical diffractive super resolution substituting spatial frequency bands bandwidth allowable diffraction fixed positioned spatial frequency spectrum dark field illumination microscopy aperture synthesis aliasing geometrical reconstruction algorithms input resolution images sampled aliasing aliasing frequency content desired reconstruction image embedded frequency content observed images sufficient observation images set observations vary phase images scene shifted pixel phase separate aliased frequency content true frequency content resolution image accurately reconstructed practice frequency based approach reconstruction spatial approaches shift add fusion presence aliasing condition reconstruction technical implementations single frame multiple frame variants multiple frame pixel shifts multiple resolution images scene creates improved resolution image fusing resolution images created resolution images descriptions scene single frame methods attempt magnify image introducing blur methods resolution images unrelated images guess resolution image algorithms divided domain frequency space domain originally super resolution methods grayscale images researchers methods adapt color camera images super resolution 3d data promising deep convolutional networks perform super resolution 
1410175	computerscience	engineering microarchitecture called organization abbreviated µarch uarch instruction set architecture isa implemented processor isa implemented microarchitectures implementations vary goals design shifts technology architecture combination microarchitecture instruction set architecture relation instruction set architecture isa roughly programming model processor assembly language programmer compiler writer isa includes execution model processor registers address data formats microarchitecture includes constituent processor interconnect interoperate implement isa microarchitecture machine represented detailed diagrams interconnections microarchitectural elements machine single gates registers complete arithmetic logic units alus larger elements diagrams separate datapath data control path steer data person designing draws specific microarchitecture data flow diagram block diagram microarchitecture diagram microarchitectural elements arithmetic logic unit register file single schematic symbol typically diagram connects elements arrows lines lines distinguish buses require buffer device drives bus unidirectional buses driven single source address bus simpler computers driven memory address register individual control lines simple computers single data bus organization single bus diagram complex computers multiple buses machine operations simultaneously microarchitectural element represented schematic describing interconnections logic gates implement logic gate represented circuit diagram describing connections transistors implement logic family machines microarchitectures instruction set architecture capable executing programs microarchitectures circuitry solutions advances semiconductor manufacturing generations processors achieve performance isa principle single microarchitecture execute isas minor microcode aspects microarchitecture pipelined datapath commonly datapath design microarchitecture technique modern microprocessors microcontrollers dsps pipelined architecture multiple instructions overlap execution assembly pipeline includes stages fundamental microarchitecture designs stages include instruction fetch instruction decode execute write architectures include stages memory access design pipelines central microarchitectural tasks execution units essential microarchitecture execution units include arithmetic logic units alu floating units fpu load store units branch prediction simd units perform operations calculations processor choice execution units latency throughput central microarchitectural design task size latency throughput connectivity memories microarchitectural decisions level design decisions include peripherals memory controllers considered microarchitectural design process includes decisions performance level connectivity peripherals architectural design achieving specific performance level main goal microarchitectural design pays closer attention constraints microarchitecture design decisions affect attention paid issues chip cost power consumption logic complexity ease connectivity manufacturability ease debugging testability microarchitectural concepts instruction cycles cpus single chip microprocessors multi chip implementations programs performing steps instruction cycle repeated continuously power increasing execution speed complicating simple series steps memory hierarchy includes caching main memory volatile storage hard disks program instructions data reside slower processor step introduces lengthy cpu terms delay data arrives bus considerable designs avoid delays central goal execute instructions parallel increasing effective execution speed program efforts introduced complicated logic circuit structures initially techniques implemented expensive mainframes supercomputers circuitry techniques semiconductor manufacturing progressed techniques implemented single semiconductor chip moore law instruction set choice instruction sets shifted originally simple complex respects load store architectures vliw epic types fashion architectures dealing data parallelism include simd vectors labels denote classes cpu architectures descriptive cisc label designs retroactively denoted cisc simpler modern risc processors respects choice instruction set architecture greatly affect complexity implementing performance devices prominent strategy develop risc processors simplify instructions minimum individual semantic complexity combined encoding regularity simplicity uniform instructions easily fetched decoded executed pipelined fashion simple strategy reduce logic levels reach operating frequencies instruction cache memories compensated operating frequency inherently code density register sets factor slow memory accesses instruction pipelining powerful techniques improve performance instruction pipelining processor designs carry steps instruction moving portions circuitry left idle step instance instruction decoding circuitry idle execution pipelining improves performance allowing instructions processor time basic processor start decode step instruction waiting instructions flight time processor times fast instruction takes complete steps cpu retires instructions faster risc pipelines easier construct cleanly separating stage instruction process time—one cycle processor operates assembly fashion instructions coming reduced complexity classic risc pipeline pipelined core instruction cache size die fit core cisc design real reason risc faster designs sparc mips times fast intel motorola cisc solutions clock speed price pipelines limited risc designs 1986 vax implementation vax 8800 heavily pipelined design predating commercial mips sparc designs modern cpus embedded cpus pipelined microcoded cpus pipelining constrained embedded processors cisc machines vax 8800 modern pentium athlon implemented microcode pipelines improvements pipelining caching major microarchitectural advances enabled processor performance pace circuit technology based cache improvements chip manufacturing allowed circuitry die designers started common add increasing cache memory die cache simply fast memory accessed cycles opposed talk main memory cpu includes cache controller automates reading writing cache data cache simply appears processor stalled cache controller reads risc designs started adding cache mid late 1980s 4 kb total grew time typical cpus 512 kb powerful cpus 12 mb organized multiple levels memory hierarchy speaking cache performance reduced stalling caches pipelines perfect match sense build pipeline faster access latency chip memory chip cache memory meant pipeline speed cache access latency time allowed operating frequencies processors increase faster rate chip memory branch prediction barrier achieving performance instruction level parallelism stems pipeline stalls flushes branches conditional branch late pipeline conditional branches depend coming register time processor instruction decoder figured encountered conditional branch instruction time deciding register read pipeline stalled cycles branch pipeline flushed clock speeds increase depth pipeline increases modern processors 20 stages average instruction executed branch intervention stalling techniques branch prediction speculative execution lessen branch penalties branch prediction hardware educated guesses branch reality branch called modern designs complex statistical prediction systems watch branches predict future accuracy guess hardware prefetch instructions waiting register read speculative execution enhancement code predicted path prefetched executed branch yield performance guess risk huge penalty guess bad instructions undone superscalar complexity gates support concepts outlined improvements semiconductor manufacturing allowed logic gates outline processor processes single instruction time programs executed faster multiple instructions processed simultaneously superscalar processors achieve replicating functional units alus replication functional units die single issue processor stretched limits reliably manufactured late 1980s superscalar designs started enter market modern designs common load units store instructions store integer math units floating units simd unit sort instruction issue logic grows complexity reading huge list instructions memory handing execution units idle collected execution addition caches reduces frequency duration stalls waiting data fetched memory hierarchy rid stalls designs cache force cache controller stall processor wait instruction program data cache execution ready instruction processed instruction waits cache happened programmed technique avoid operand dependency stalls instruction awaiting result latency floating operation multi cycle operations register renaming register renaming refers technique avoid unnecessary serialized execution program instructions reuse registers instructions suppose instruction register set instructions executed leave register set set assigned register sets instructions executed parallel series multiprocessing multithreading architects stymied growing mismatch cpu operating frequencies dram access times techniques exploited instruction level parallelism ilp program stalls occurred data fetched main memory additionally transistor counts operating frequencies advanced ilp techniques required power dissipation levels cheaply cooled reasons generations computers started exploit levels parallelism exist single program program thread trend throughput computing idea originated mainframe market online transaction processing emphasized execution speed transaction capacity deal massive transactions transaction based applications network routing serving greatly increasing decade industry emphasized capacity throughput issues technique parallelism achieved multiprocessing systems systems multiple cpus mainframes supercomputers scale 2–8 multiprocessors servers commonplace business market corporations scale 16–256 multiprocessors common personal computers multiple cpus appeared 1990s transistor size reductions semiconductor technology advances multi core cpus appeared multiple cpus implemented silicon chip initially chips targeting embedded markets simpler cpus multiple instantiations fit piece silicon 2005 semiconductor technology allowed dual desktop cpus cmp chips manufactured volume designs sun microsystems ultrasparc t1 reverted simpler scalar designs fit processors piece silicon technique popular multithreading multithreading processor fetch data slow memory stalling data arrive processor switches program program thread ready execute speed program thread increases throughput reducing time cpu idle conceptually multithreading equivalent context switch operating level difference multithreaded cpu thread switch cpu cycle hundreds thousands cpu cycles context switch requires achieved replicating hardware register file program counter active thread enhancement simultaneous multithreading technique superscalar cpus execute instructions programs threads simultaneously cycle 
1410331	computerscience	scan scanline row raster scanning pattern video cathode ray tube crt display television set monitor crt screens horizontal scan lines visually discernible viewed distance alternating colored lines black lines progressive scan signal maximum vertical resolution displayed visual graphics term analogy single row pixels raster graphics image scan lines representations image data image file formats special rules data scan rule scan starts boundary byte word bmp file format compatible raster data analyzed level scan lines convert formats 
1430758	computerscience	fanuc styled fanuc companies principally japan fanuc america corporation rochester hills michigan usa fanuc europe corporation luxembourg provide automation products services robotics numerical control wireless systems fanuc largest makers industrial robots fanuc fujitsu developing numerical control servo systems company acronym fuji automatic numerical control history 1955 fujitsu approached seiuemon inaba engineer lead subsidiary dedicated field numerical control nascent form automation involved sending instructions encoded punched magnetic tape motors controlled movement tools effectively creating programmable versions lathes presses milling machines spending heavily team 500 employees shipped fujitsu’s numerical control machine makino milling machine 1972 computing control division independent fanuc established phase expansion numerical control relied code standard programming language time largest cnc companies based 1982 fanuc captured cnc market fanuc listed tokyo stock exchange constituent topix 100 nikkei 225 stock market indices headquartered yamanashi prefecture 1982 fanuc entered joint venture motors corporation called gmfanuc robotics corporation produce market robots united company 50 percent owned partner based detroit providing management fanuc products 1987 fanuc entered joint venture electric company companies formed fanuc automation manufacture computerized numerical control cnc devices stopped cnc equipment charlottesville virginia plant company produces fanuc cnc devices fanuc german engineering slogan weniger teile machines cheaper produce easier automatons assemble reliability manufacturing costs company clients include numerous japanese automobile electronics manufacturers industrial robots allowed companies panasonic amagasaki factories produce television sets month plasma lcd screens 25 people fanuc 240 joint ventures subsidiaries offices 46 countries largest maker cnc controls market share 65 global market leading global manufacturer factory automation systems subsidiaries joint ventures fanuc europe corporation sister company headquartered luxembourg customers europe sales service support europe fanuc america corporation responsible fanuc operations north south america current incarnation organized 2013 unifies fanuc activities americas including fanuc robotics america corporation 1992 2013 fanuc cnc america 2010 2013 succeeded earlier incarnation fanuc america corporation fanuc robotics america corporation 1992 2013 supplied robotic automation north south america 240 000 robots installed produced software controls vision products aid development robotic systems headquartered rochester hills michigan company regional locations canada mexico brazil company systems applications including automotive fabricated metals medical devices plastics founded 1982 joint venture fanuc motors corporation named gmfanuc robotics corporation staff 70 technical center warren michigan 1992 company wholly owned subsidiary fanuc oshino mura japan company robotics industries association ria international federation robotics ifr 2010 fanuc america corporation prior cnc business unit fanuc intelligent platforms combined company fanuc cnc america business unit wholly owned subsidiary fanuc japan offered cnc systems lasers manufacturing intelligence software products field repairs advanced technical services expanded training classes vast inventory cnc replacement pcb motor repair return field support 24 hours support headquartered chicago suburb hoffman estates illinois offered cnc laser technical services training replacement pcb motor repair return field support hours support 30 locations canada mexico brazil argentina company services machine tool builders machine tool dealers mom pop tool shops variety industries 1977 company established wholly owned subsidiary fanuc oshino mura japan fanuc intelligent platforms 1986 2010 joint venture electric fanuc 2009 fanuc agreed split fanuc retaining cnc business renamed business intelligent platforms fanuc india operations led sonali kulkarni fanuc controller control device naming conventions generation fanuc numerical control levels device control capabilities referred model series controller model typically device control capabilities depending software functions licensed device common control capabilities model generational updates model trailing letter model unusual letter interchangeably model specific syntax distinguishing model device type series spaces dashes slashes result difficulty searching service equipment fanuc series valid identifications types controls machines controller capabilities separate aided manufacturing software control systems model differences manufacturing software efficiently programming capabilities fanuc controllers include 
1464404	computerscience	register isscc event event consumer electronics pc processors sundry computing gadgets brought market history isscc participants inaugural conference 1954 belonged institute radio engineers ire circuit theory ire subcommittee transistor circuits conference held philadelphia local chapters ire american institute electrical engineers aiee attendance aiee ire merge day ieee conference consisted papers organizations bell telephone laboratories electric rca philco massachusetts institute technology university pennsylvania registration registration 601 people registered international attendees arrived canada england japan subsequent conferences international participants international presentation 1958 1965 overseas program committee increased 1970 overseas meeting separately europe japan selected regional program committees attend final program meeting america 1954 conference appears publications documents transistor conference conference transistor circuits philadelphia conference national conference transistor circuits current international solid circuits conference settled organizers 1960 isscc founded philadelphia mid 1960s center semiconductor development united shifting west 1978 conference held alternate coasts york substituting philadelphia 1990 san francisco conference’s permanent 2013 isscc celebrating 60th anniversary special programs celebrate 60 circuit soc innovation evening education program evolution isscc strengthened educational adding short 1993 tutorials 1995 short directed engineers facing knowledge demands purpose tutorials provide engineers topic ramp gain instantbackground forums deep dive topics applications audience 2011 isscc evolved day format simultaneous events technical program committee technical program committee tpc extremely fluid deal constantly changing topics industry 1968 list subcommittees settled digital analog linear microwave subcommittee address papers 80’s microwave subcommittee dropped program overlap topics attendees diminishing addition digital split digital memory signal processing subcommittees 1992 emerging technologies launched chartered seek applications isscc subcommittees analog data converters energy efficient digital eed performance digital hpd imagers mems medical displays immd memory rf technology directions emerging technologies wireless wireline executive committee isscc strictly profit organization vision finances executive committee formative 1980 conference chair filled previous year’s program chair provide continuity term conference chair extended 
1513732	computerscience	michael irwin jordan american scientist professor university california berkeley researcher machine learning statistics artificial intelligence leading figures machine learning 2016 science reported influential scientist biography jordan received magna cum laude psychology 1978 louisiana university mathematics 1980 arizona university phd cognitive science 1985 university california san diego university california san diego jordan student david rumelhart pdp 1980s jordan professor university california berkeley appointment split department statistics department eecs professor department brain cognitive sciences mit 1988 1998 1980s jordan started developing recurrent neural networks cognitive model driven cognitive perspective background traditional statistics jordan popularised bayesian networks machine learning community links machine learning statistics prominent formalisation variational methods approximate inference popularisation expectation maximization algorithm machine learning resignation machine learning 2001 jordan resigned editorial board journal machine learning public letter argued restrictive access pledged support access journal journal machine learning created leslie kaelbling support evolution field machine learning honors awards jordan received numerous awards including student paper award nguyen wainwright international conference machine learning icml 2004 paper award jacobs american control conference acc 1991 acm aaai allen newell award ieee neural networks pioneer award nsf presidential investigator award 2010 named fellow association computing machinery contributions theory application machine learning jordan national academy science national academy engineering american academy arts sciences named neyman lecturer medallion lecturer institute mathematical statistics received david rumelhart prize 2015 acm aaai allen newell award 2009 2016 jordan identified influential scientist based analysis published literature semantic scholar project 
1514392	computerscience	machine learning study construction algorithms learn predictions data common task algorithms data driven predictions decisions building mathematical model input data data build final model multiple datasets data sets commonly stages creation model model initially fit training dataset set examples fit parameters weights connections neurons artificial neural networks model model neural naive bayes classifier trained training dataset supervised learning method gradient descent stochastic gradient descent practice training dataset consist pairs input vector scalar output vector scalar commonly denoted target label current model training dataset produces result compared target input vector training dataset based result comparison specific learning algorithm parameters model adjusted model fitting include variable selection parameter estimation successively fitted model predict responses observations dataset called validation dataset validation dataset unbiased evaluation model fit training dataset tuning model hyperparameters hidden units neural network validation datasets regularization stopping training error validation dataset increases sign overfitting training dataset simple procedure complicated practice validation dataset error fluctuate training producing multiple local minima complication led creation hoc rules deciding overfitting begun finally dataset dataset provide unbiased evaluation final model fit training dataset data dataset training cross validation dataset called holdout dataset training dataset training dataset dataset examples learning fit parameters weights classifier approaches search training data empirical relationships tend overfit data meaning identify exploit apparent relationships training data hold validation dataset validation dataset dataset examples tune hyperparameters architecture classifier called development set dev set artificial neural networks hyperparameter hidden units testing set mentioned follow probability distribution training dataset avoid overfitting classification parameter adjusted validation dataset addition training datasets suitable classifier sought training dataset train candidate algorithms validation dataset compare performances decide finally dataset performance characteristics accuracy sensitivity specificity measure validation dataset functions hybrid training data testing level training final testing basic process validation dataset model selection training dataset validation dataset dataset application process stopping candidate models successive iterations network training stops error validation set grows choosing previous model minimum error dataset dataset dataset independent training dataset probability distribution training dataset model fit training dataset fits dataset minimal overfitting figure fitting training dataset opposed dataset overfitting set set examples assess performance generalization classifier holdout dataset simply original dataset set set holdout method cross validation dataset repeatedly split training dataset validation dataset cross validation repeated partitions dividing equal datasets training validation validation training repeatedly selecting random subset validation dataset validate model performance additional dataset held cross validation cross validation situations shuffle data notably time series hierarchical classification parameter adjustment hierarchical classification referred instance space decomposition splits complete multi class set classification serves learning accurate concepts simpler classification boundaries subtasks individual feature selection procedures subtasks classification decomposition central choice combination classification steps called classification path depending application derived confusion matrix uncovering reasons typical errors finding prevent future validation set classes frequently mutually confused instance space decomposition firstly classification recognizable classes difficult separate classes treated single joint class finally classification step joint class classified initially mutually confused classes 
1525837	computerscience	multiprogramming os operating designed team led edsger dijkstra monographs 1965 66 published 1968 dijkstra named simply abbreviation technische hogeschool eindhoven dutch eindhoven university technology netherlands batch supported multitasking designed multi user operating sds 940 set processes static introduced forms software based paged virtual memory electrologica x8 support hardware based memory management freeing programmers forced actual physical locations drum memory modified algol compiler programming language supported dijkstra automatically generate calls routines requested memory swapping paged virtual memory buffering device data portion operating code algol 60 compiler semaphores programming construct time design design multiprogramming layered structure layers depend layers constraint layers depend layers imposed designers reasoning quasi formal methods tractable facilitate building testing incrementally layers implemented layer testing abstractions layer division kernel layers multics segmentation model subsequent operating systems layering extent including windows nt macos layers code written assembly language dutch electrologica x8 word size 27 bits 32 kilowords core memory 512 kilowords drum memory providing store lru cache algorithm paper tape readers paper tape punches plotters printers 
1553421	computerscience	rhapsody code apple generation operating period development apple purchase late 1996 announcement mac os called macos 1998 operating rhapsody represented strategy apple intended operating x86 based pcs dec alpha workstations powerpc based macintosh hardware addition underlying api frameworks ported natively windows nt eventually apple platforms dropped versions consisted openstep operating ported power macintosh gui mac existing classic mac os technologies ported rhapsody including quicktime applesearch rhapsody mac os blue box emulation layer history rhapsody announced macworld expo san francisco january 1997 demonstrated 1997 worldwide developers conference wwdc subsequent developer releases computers x86 powerpc processors premier version analogous mac os public beta unified version quarter 1998 apple development schedule integrating features systems difficult forecast features upcoming releases 1998 macworld expo york steve jobs announced rhapsody released mac os server shipped 1999 version rhapsody released code base forked darwin source underpinnings macos design defining features rhapsody operating included heavily modified hybrid osfmk source foundation mach kernel osf bsd operating layer based 4bsd object oriented yellow box api framework blue box compatibility environment running classic mac os applications java virtual machine user interface modeled mac os platinum appearance file management functions served finder previous mac os versions handled port openstep workspace manager additional features inherited openstep classic mac os finder included shelf column view shelf dropped favor dock functionality column view macos finder rhapsody blue box environment running powerpc architecture responsible providing runtime compatibility existing mac os applications compared streamlined integrated classic compatibility layer featured mac os blue box interface users distinct barrier emulated legacy software native rhapsody applications emulated applications windows encapsulated single blue box emulation window interspersed applications native yellow box api limited cross environment interoperability caused user interface inconsistencies avoid pitfalls running emulation environment advantage rhapsody features software rewritten yellow box api inherited openstep yellow box object oriented model completely procedural model classic apis difference frameworks meant transition legacy code required effort developer consequent lack adoption objections prominent figures macintosh software market including adobe systems major factors apple decision cancel rhapsody project 1998 yellow box rhapsody technologies macos cocoa api bowing developers wishes apple ported existing classic mac os technologies operating implemented carbon api provide classic mac os api compatibility mac os libraries quicktime applescript ported developers carbon allowed developers maintain compatibility native functionality current codebases enabling advantage features discretion rhapsody pattern music code names apple designated operating releases 1990s generation operating successor completed copland operating code named gershwin george gershwin composer rhapsody blue copland named american composer aaron copland musical code names include harmony mac os tempo mac os allegro mac os sonata mac os 
1561411	computerscience	photography image processing color balance global adjustment intensities colors typically red green blue primary colors goal adjustment render specific colors – neutral colors – correctly method called gray balance neutral balance white balance color balance mixture colors image color correction generalized versions color balance correct colors neutrals deliberately change image data acquired sensors – film electronic image sensors – transformed acquired values values color reproduction display aspects acquisition display process color correction essential – including acquisition sensors match sensors human eye properties display medium accounted ambient viewing conditions acquisition display viewing conditions color balance operations popular image editing applications operate red green blue channel pixel values respect color sensing reproduction model film photography color balance typically achieved color correction filters lights camera lens generalized color balance adjustment neutrals neutral called white balance phrase color balance refers adjustment addition colors displayed image appearance colors original scene neutral gray neutral white colors scene neutral reproduction psychological color balance humans relate flesh tones critically colors trees grass sky concern human flesh tones human subject sick dead address critical color balance issue tri color primaries formulated balance true neutral color purpose color primary imbalance faithfully reproduce flesh tones entire brightness range patent 850 563 effecting distorted transfer flesh tone entire brightness range inherent linear transfer characteristic viewing flesh altered primaries color separation guide color control patch 18 color swatches guide 100 density 50 density color swatch 50 density thereon result flesh tone primaries ratio illuminant estimation adaptation digital cameras select color correction based type scene lighting manual lighting selection automatic white balance custom white balance algorithms processes perform generalized chromatic adaptation methods exist color balancing setting button camera user processor nature scene lighting option cameras button press camera gray card neutral colored object captures image ambient light enables digital camera set correct color balance light literature estimate ambient lighting camera data transform image data variety algorithms proposed quality debated examples examination references lead reader examples retinex artificial neural network bayesian method chromatic colors color balancing image neutrals colors image color balanced color cast image appears shifted color color balancing terms removing color cast color balance color constancy algorithms techniques attain color constancy frequently color balancing color constancy chromatic adaptation conceptually color balancing consists steps determining illuminant image captured scaling components image transforming components conform viewing illuminant viggiano white balancing camera native rgb color model tended produce color inconstancy distortion colors monitor rgb 4000 hypothetical sets camera sensitivities difference typically amounted factor favor camera rgb advantageous color balance time image captured edit monitor color balance balancing raw image data tend produce distortion chromatic colors balancing monitor rgb mathematics color balance color balancing performed component image rgb 3x3 matrix type transformation image captured wrong white balance setting digital camera color filter scaling monitor principle scale relative luminances image objects believed neutral surface believed white object 255 count corresponds white multiply red values 255 240 analogously green blue result theory color balanced image type transformation 3x3 matrix diagonal matrix color balanced red green blue components pixel image red green blue components image color balancing 11 red green blue components pixel believed white surface image color balancing simple scaling red green blue channels color balance tools photoshop gimp white eyedropper tool demonstrated performing white balancing phosphor set assumed srgb produce errors chromatic colors render neutral surfaces perfectly neutral scaling image transformed cie xyz tristimulus values color balancing performed termed “wrong von kries” transformation demonstrated offer poorer balancing monitor rgb mentioned bridge mathematically computes 13 14 15 color balanced tristimulus values 16 17 18 tristimulus values viewing illuminant white image transformed conform 19 20 21 tristimulus values object believed white color balanced image 22 23 24 tristimulus values pixel color balanced image tristimulus values monitor primaries matrix 25 27 28 29 gamma corrected monitor rgb von kries method johannes von kries theory rods color sensitive cone types retina survived dominant explanation color sensation 100 motivated method converting color lms color space representing effective stimuli medium short wavelength cone types modeled adapting independently 3x3 matrix converts rgb xyz lms lms primary values scaled balance neutral color converted desired final color space 32 33 34 color balanced lms cone tristimulus values 35 36 37 tristimulus values object believed white color balanced image 38 40 tristimulus values pixel color balanced image matrices convert lms space von kries derived cie color matching functions lms color matching functions matrices reference books scaling camera rgb viggiano measure model gaussian camera spectral sensitivities camera rgb spaces performed monitor rgb xyz camera raw rgb values 3x3 diagonal matrix convert rgb space srgb adobe rgb balancing preferred chromatic adaptation spaces comparisons images balanced diagonal transforms rgb spaces identified spaces camera monitor spaces chromatic adaptation measured color appearance models systems performed statistically majority image sets sharp bradford cmccat romm spaces illuminant adaptation color matrix adapting change illuminant diagonal matrix fixed color space space illuminants linear model basis terms proper color transformation weighted sum fixed linear transformations consistently diagonalizable 
1625328	computerscience	omron primary business manufacture sale automation components equipment systems medical equipment digital thermometers blood pressure monitors nebulizers omron developed electronic ticket gate named ieee milestone 2007 manufacturers automated teller machines atm magnetic stripe card readers omron oilfield marine provider ac dc drive systems custom control systems oil gas industries omron named thomson reuters 100 global innovators 2013 shareholders september 30 2015 
1635643	computerscience	voice activity detection vad speech activity detection speech detection technique speech processing presence absence human speech detected main vad speech coding speech recognition facilitate speech processing deactivate processes speech audio session avoid unnecessary coding transmission silence packets voice internet protocol applications saving computation network bandwidth vad enabling technology variety speech based applications vad algorithms developed provide varying features compromises latency sensitivity accuracy computational cost vad algorithms provide analysis speech voiced unvoiced sustained voice activity detection language independent investigated time assignment speech interpolation tasi systems algorithm overview typical design vad algorithm feedback sequence vad decision improve noise estimate noise reduction stage adaptively vary threshold feedback operations improve vad performance stationary noise noise varies lot representative set published vad methods formulates decision rule frame frame basis instantaneous measures divergence distance speech noise measures vad methods include spectral slope correlation coefficients log likelihood ratio cepstral weighted cepstral modified distance measures independently choice vad algorithm compromise voice detected noise noise detected voice false positive false negative vad operating mobile phone detect speech presence range diverse types acoustic background noise difficult detection conditions preferable vad fail safe indicating speech detected decision doubt chance losing speech segments biggest difficulty detection speech environment signal noise ratios snrs encountered impossible distinguish speech noise simple level detection techniques speech utterance buried noise applications wide range applications digital mobile radio digital simultaneous voice data dsvd speech storage desirable provide discontinuous transmission speech coding parameters advantages include average power consumption mobile handsets average bit rate simultaneous services data transmission capacity storage chips improvement depends percentage pauses speech reliability vad detect intervals hand advantageous percentage speech activity hand clipping loss milliseconds active speech minimized preserve quality crucial vad algorithm heavy noise conditions telemarketing controversial application vad conjunction predictive dialers telemarketing firms maximize agent productivity telemarketing firms set predictive dialers agents knowing calls “ring – answer” answering machines person answers typically speak evening period silence answering machine messages 3–15 continuous speech setting vad parameters correctly dialers determine person machine answered person transfer agent detects answering machine dialer hangs correctly detects person answering agent leaves called party frustratedly repeating “hello phone combined volume agents created impetus develop “do call” lists performance evaluation evaluate vad output recordings compared “ideal” vad – created hand annotating presence absence voice recordings performance vad commonly evaluated basis parameters method objective performance vad approximate measure subjective effects speech signal clipping times hidden presence background noise depending model chosen comfort noise synthesis clipping measured objective tests reality audible carry subjective tests vads main aim ensure clipping perceived acceptable requires listeners judge recordings processing vads tested listeners marks features marks listening speech sequences calculate average features listed providing global estimate behavior vad tested conclude objective methods initial stage evaluate quality vad subjective methods expensive require participation people days proposal standardized 
1680216	computerscience	register file array processor registers central processing unit cpu modern integrated circuit based register files implemented fast static rams multiple ports rams distinguished dedicated read write ports ordinary multiported srams read write ports instruction set architecture cpu define set registers stage data memory functional units chip simpler cpus architectural registers correspond entries physical register file prf cpu complicated cpus register renaming mapping physical entry stores architectural register dynamically execution register file architecture visible programmer opposed concept transparent caches register bank switching register files clubbed register banks processors register banks arm processors arm register banks fast interrupt request x86 processors context switching fast interrupt switching instruction decoder gprs register files instruction issued existing processors support superscalar context switching totally mechanism arm register bank registers modcomp 8051 compatible processors bits program status word select active register bank implementation usual layout convention simple array read vertically single word runs horizontally row bit cells data bit lines vertically sense amps convert swing read bitlines swing logic levels convention larger register files constructed tiling mirrored rotated simple arrays register files word entry port bit bit read port bit lines bit write port bit cell vdd vss wire pitch increases square ports transistor increases linearly faster multiple redundant register files read ports single register file read ports mips r8000 integer unit read write port 32 entry 64 bit register file implemented 7 µm process chip arm popular approaches dividing registers multiple register files distributed register file configuration partitioned register file configuration principle operation 64 bit wide register file read write ports single bit wide register file single read port single write port bit level parallelism wide register files ports faster operations single cycle cycles ports narrower bit bits register file bits processor word size occasionally wider attach extra bits register poison bit data word address—or 68000 width—the address registers separate register file data registers array basic scheme bit cell optimizations microarchitecture register files special provision prevent multiple write ports writing entry simultaneously instruction scheduling hardware ensures instruction cycle writes entry multiple instructions targeting register issued write enables crossed inverters finite time settle write operation read operation return garbage common bypass multiplexers bypass written data read ports simultaneous read write entry commanded bypass multiplexers larger bypass network forwards committed functional units register file pitch matched datapath serves pitch matching avoids busses passing datapath corners lot unit bit pitch unit datapath bit pitch forced widest unit waste units register files wires bit write port bit lines contact silicon bit cell set pitch datapath saved machines multiple units datapath datapaths bit pitch single datapath forces multiple copies register file datapath alpha 21264 ev6 instance micro architecture implement shadow register file architecture copies integer register file copies floating register locate future scaled file read write port extra cycle propagate data context switch issue logic attempted reduce operations forwarding data greatly improved integer performance reduce impact limited gpr superscalar speculative execution design adapted sparc mips x86 implementation mips multiple register file r8000 floating unit copies floating register file write read ports wrote copies time context switch support integer operation integer register file remain shadow register file abandoned design favor embedded market sparc shadow register file architecture copies integer register files future retired scaled scratched read write port copies floating register file alpha x86 locate retire unit unit renaming register files load instruction instruction fetch decoding stage context switch needless design ibm mechanism major microprocessors deeply merging register file decoder register file independently decoder involve context switch alpha x86 register file serve dedicate decoder thread level power8 instruction decoders 32 register files 32 purpose registers read write port facilitate simultaneous multithreading instruction cross register file lack context switch x86 processor typical pre 486 cpu individual register file purpose register decoder x87 push stack located floating unit starting pentium typical pentium compatible x86 processor integrated single port architectural register file architectural registers control registers debug registers condition code registers unnamed based register instruction pointer flag register segment registers file x87 fp push stack default mmx register virtually simulated x87 stack require x86 register supplying mmx instruction aliases exist stack p6 instruction independently stored executed parallel pipeline stages decoding micro operations renaming execution p6 register files require additional cycle propagate data register files architectural floating located code buffer decoders called retire buffer reorder buffer oooe connected bus 16 bytes register file remains x86 register file x87 stack serve retirement storing x86 register file increased dual ported increase bandwidth result storage registers debug condition code control unnamed flag stripped main register file individual files micro op rom instruction sequencer inaccessible registers segment register separated purpose register file instruction pointer located scheduler instruction allocator facilitate register renaming execution x87 stack merged floating register file 128 bit xmm register debuted pentium iii xmm register file located separately x86 integer register files p6 implementations pentium yonah introduced shadow register file architecture expanded copies dual ported integer architectural register file consist context switch future retirered file scaled file trick integer floating solve register bottleneck exist x86 architecture micro op fusion introduced entries 32 bit architectural registers total 32 bytes capacity file segment register instruction pointer remain file inaccessible program speculative file file served scaled shadow register file context switch scaled file store instruction independently instruction sse2 sse3 ssse3 require feature integer operation instruction pshufb pmaddubsw phsubw phsubd phsubsw phaddw phaddd phaddsw require loading eax ebx ecx edx register file uncommon x86 processor register file instruction time file served scale retirered file pentium architecture remains dual ported fp register file entries xmm shared decoder fp register shadow register file shadow register file architecture including floating function processor p6 architectural register file external locate processor backend retired internal register file locate core register renaming reorder buffer core unit called register alias table rat located instruction allocator size register size retirement core increased bus 24 bytes instructions decoded extended register file dual ported read write quad ported read write register remain entries 32 bit 32 bytes including segment register instruction pointer unable access file code instruction total file size expanded 16 entries x64 total 128 bytes size file pentium pipeline port decoder increased located allocator table code buffer fp xmm register file increase quad ported read write register remain entries 32 bit extended 16 entries x64 mode remain shadow register file architecture including floating sse functions x86 implementations nehalem processors integer floating registers incorporated unified octa ported read write purpose register file 32 bit 16 16 x64 file register file extended enhanced shadow register file architecture favorite executing hyper threading thread independent register files decoder sandy bridge onward replaced shadow register table architectural registers advance physical register file decoding reorder buffer randered sandy bridge onward carry architectural register atom modern simplified revision p5 includes single copies register file share thread decoder register file dual port design 16 entries gprs 16 entries debug register 16 entries condition code integrated file entries 64 bit shadow based register entries 64 bit unnamed register separated main gprs original p5 design located execution unit file registers single ported expose instruction scaled shadow register file core core2 shadow register file architectural registers bonnell shadow register file architecture file renaming purpose lack execution bonnell architecture xmm floating register file thread difference nehalem bonnell unified register file dedicated register file hyper threading bonnell separate rename register thread bonnell larrabee xeon phi purpose integer register file larrabee 16 xmm register files entries file xeon phi 128 avx 512 register files 32 512 bit zmm registers vector instruction storage l2 cache intel x86 lines register file internal design geode gx vortex86 embedded processors pentium compatible reverse engineered 80x86 processors register file decoders gprs individually pentium hand register file decoder x86 gprs exist structure introduction physical unified renaming register file sandy bridge inability pentium register naming attempting replace architectural register file skip x86 decoding scheme sse integer execution storage alu result sse2 sse3 ssse3 mechanism integer operation amd design k6 register file intel support shadow register file architecture lack context switch bypass inverter require register file function appropriately separate gprs link rename register table oooe cpu dedicated integer decoder floating decoder mechanism intel pre pentium processor k6 processor entries temporary scratched register file entries future register file entries fetched register file entries unnamed register file fp rename register files entries x87 file fadd fmov link x86 eax integer renaming xmm0 register floating renaming athlon included shadow register scaled 40 entries unified register file integer operation decoded register file entries scratch register 16 future gprs register file 16 unnamed gprs register file amd designs abandons shadow register design favored k6 architecture individual gprs direct link design phenom register files sse register files located physical register file linked gprs scales integer floating bulldozer amd designs x86 manufacturers cyrix sis mechanism lack integer performance register renaming cpu companies cyrix amd increase cache size hope reduce bottleneck amd sse integer operation core pentium separate renaming integer register load decode stage theoretically shorter pipeline intel sse implementation cost branch prediction missing rate intel cycles sse instruction executed instruction wide amds implementations execute fp sse instruction set intel implementation alpha sparc mips register file load fetch operand time require multiple register files achieve superscale arm processor hand integrate multiple register files load fetch instructions arm gprs special purpose instruction set arm isa require accumulator stack base registers accumulator base stack thumb mode gprs propagate store multiple instructions independently code size fit register architectural register table shared decoder instructions simple bank switching decoders major difference arm designs arm purpose register quick bank switching requiring additional register file superscalar x86 sharing mechanism arm gprs store data individually x86 confront data dependency instructions stored gprs file 32 bit mode 16 64 bit compared arm 13 32 bit 31 64 bit data impossible superscalar multiple register files feed decoder x86 code complex compared arm x86 larger power hungry arm processor competitive pentium core duo bay trail party x86 equivalent processors noncompetitive arm dedicated register file architecture amd cyrix bring reasonable performance register renaming execution leave intel atom x86 processor core mobile competition x86 nehalem processor merged integer floating register single file introduction physical register table enhanced allocator table renaming internal core register renaming processors perform register renaming arrange functional unit write subset physical register file arrangement eliminate multiple write ports bit cell savings register file effectively stack register files single write ports benefits replication subsetting read ports limit technique stack write read regfiles inputs functional unit regfiles ports dominated transistor push technique limit register windows sparc isa defines register windows bit architectural names registers window larger register file hundreds entries implementing multiported register files hundreds entries requires register window slides 16 registers moved architectural register refer registers larger array architectural register r20 refer physical registers 20 36 52 68 84 100 116 windows physical file save sparc implementations implement 32 entry register file cell bits read writeable external ports contents bits rotated rotation accomplishes single cycle movement register window wires accomplishing movement local tremendous bandwidth power technique r10000 register renaming mapping file stores bit virtual register physical registers renaming file renaming checkpointed branch branch detected mispredicted renaming recovered single cycle register renaming 
1694855	computerscience	thresholding simplest method image segmentation grayscale image thresholding create binary images shapiro 2001 83 definition simplest thresholding methods replace pixel image black pixel image intensity fixed constant white pixel image intensity constant image dark tree completely black white snow completely white categorizing thresholding methods thresholding completely automated automatically select threshold sezgin sankur 2004 categorize thresholding methods based algorithm manipulates sezgin 2004 multiband thresholding colour images thresholded approach designate separate threshold rgb components image combine operation reflects camera data stored correspond people recognize colour hsl hsv colour models note hue circular quantity requires circular thresholding cmyk colour model pham 2007 probability distributions histogram shape based methods thresholding algorithms assumptions image intensity probability distribution common thresholding methods bimodal distributions algorithms developed unimodal distributions multimodal distributions circular distributions automatic thresholding automatic thresholding extract encoded pixels minimizing background noise accomplished utilizing feedback loop optimize threshold converting original grayscale image binary idea separate image background foreground note limits threshold selection limit mentioned user definable larger limit difference successive threshold values advantages quicker execution boundary background foreground picking starting thresholds grayscale image pick starting threshold values based separated peaks image histogram finding average pixel algorithm converge faster allowing limit chosen method limitations automatic thresholding background foreground contrast ratio exists meaning picture lighting conditions minimal glare 
1702294	computerscience	telecommunications interconnection physical linking carrier network equipment facilities belonging network term refer connection carrier facilities equipment belonging customer connection carriers united regulatory law interconnection defined 47 51 linking networks mutual exchange traffic primary tools regulators introduce competition telecommunications markets impose interconnection requirements dominant carriers history united bell monopoly post communications 1934 bell owned phones interconnection separate phones terminal equipment networks popular bell calls change landmark hush phone united allowed bell owned equipment connected network regulatory decisions legislation led transformation american distance telephone industry monopoly competitive business changed fcc carterfone decision 1968 required bell companies permit interconnection radio telephone operators standard electrical connector interconnection registered jack family standards rj11 introduced bell 1970s 1976 fcc gained popularity worldwide facto international standard europe interconnection interconnect regimes account commercial arrangements commercial arrangements focus eu encouraging incumbents offer bundles network features enable competitors provide services compete incumbent interconnect regime decided regulator major impact development rate growth market segments source8 eu based consultancy examples 
1706303	computerscience	recurrent neural network rnn class artificial neural network connections nodes form directed graph sequence exhibit temporal dynamic behavior time sequence feedforward neural networks rnns internal memory process sequences inputs applicable tasks unsegmented connected handwriting recognition speech recognition term recurrent neural network indiscriminately refer broad classes networks structure finite impulse infinite impulse classes networks exhibit temporal dynamic behavior finite impulse recurrent network directed acyclic graph unrolled replaced strictly feedforward neural network infinite impulse recurrent network directed cyclic graph unrolled finite impulse infinite impulse recurrent networks additional stored storage direct control neural network storage replaced network graph incorporates time delays feedback loops controlled referred gated gated memory short term memory networks lstms gated recurrent units history recurrent neural networks based david rumelhart 1986 hopfield networks discovered john hopfield 1982 1993 neural history compressor solved deep learning task required 1000 subsequent layers rnn unfolded time lstm short term memory lstm networks discovered hochreiter schmidhuber 1997 set accuracy records multiple applications domains 2007 lstm started revolutionize speech recognition outperforming traditional models speech applications 2009 connectionist temporal classification ctc trained lstm network rnn win pattern recognition contests competitions connected handwriting recognition 2014 chinese search giant baidu ctc trained rnns break switchboard hub5 00 speech recognition benchmark traditional speech processing methods lstm improved vocabulary speech recognition speech synthesis google android 2015 google speech recognition reportedly experienced dramatic performance jump 49 ctc trained lstm google voice search lstm broke records improved machine translation language modeling multilingual language processing lstm combined convolutional neural networks cnns improved automatic image captioning architectures rnns variants recurrent basic rnns network neuron nodes organized successive layers node layer connected directed connection node successive layer node neuron time varying real valued activation connection synapse modifiable real valued weight nodes input nodes receiving data network output nodes yielding hidden nodes modify data en route input output supervised learning discrete time settings sequences real valued input vectors arrive input nodes vector time time step input unit computes current activation result nonlinear function weighted sum activations units connect supervisor target activations supplied output units time steps input sequence speech signal spoken digit final target output sequence label classifying digit reinforcement learning settings teacher target signals fitness function reward function occasionally evaluate rnn performance influences input stream output units connected actuators affect environment play game progress measured sequence produces error sum deviations target signals activations computed network training set numerous sequences total error sum errors individual sequences elman networks jordan networks elman network layer network arranged horizontally illustration addition set context units illustration middle hidden layer connected context units fixed weight time step input fed learning rule applied fixed connections save previous values hidden units context units propagate connections learning rule applied network maintain sort allowing perform tasks sequence prediction power standard multilayer perceptron jordan networks elman networks context units fed output layer hidden layer context units jordan network referred layer recurrent connection elman jordan networks simple recurrent networks srn variables functionshopfield hopfield network rnn connections symmetric requires stationary inputs rnn process sequences patterns guarantees converge connections trained hebbian learning hopfield network perform robust content addressable memory resistant connection alteration bidirectional associative memory introduced bart kosko bidirectional associative memory bam network variant hopfield network stores associative data vector directionality passing matrix transpose typically bipolar encoding preferred binary encoding associative pairs stochastic bam models markov stepping optimized increased network stability relevance real applications bam network layers driven input recall association produce output layer echo echo network esn sparsely connected random hidden layer weights output neurons network change trained esns reproducing time series variant spiking neurons liquid machine independent rnn indrnn independently recurrent neural network indrnn addresses gradient vanishing exploding traditional connected rnn neuron layer receives context connectivity neurons layer neurons independent history gradient backpropagation regulated avoid gradient vanishing exploding short term memory cross neuron explored layers indrnn robustly trained saturated nonlinear functions relu skip connections deep networks trained recursive recursive neural network created applying set weights recursively differentiable graph structure traversing structure topological networks typically trained reverse mode automatic differentiation process distributed representations structure logical terms special recursive neural networks rnn structure corresponds linear chain recursive neural networks applied natural language processing recursive neural tensor network tensor based composition function nodes tree neural history compressor neural history compressor unsupervised stack rnns input level learns predict input previous inputs unpredictable inputs rnn hierarchy inputs level rnn recomputes internal rarely level rnn studies compressed representation rnn input sequence precisely reconstructed representation level effectively minimises description negative logarithm probability data lot learnable predictability incoming data sequence level rnn supervised learning easily classify deep sequences intervals events distill rnn hierarchy rnns conscious chunker level subconscious automatizer level chunker learned predict compress inputs unpredictable automatizer automatizer forced learning phase predict imitate additional units hidden units slowly changing chunker easy automatizer learn rarely changing memories intervals helps automatizer unpredictable inputs predictable chunker focus remaining unpredictable events generative model partially overcame vanishing gradient automatic differentiation backpropagation neural networks 1992 1993 solved deep learning task required 1000 subsequent layers rnn unfolded time rnns rnns weights 11 standard 12 weights product direct mapping finite machine training stability representation short term memory formal mappings proof stability short term memory short term memory lstm deep learning avoids vanishing gradient lstm augmented recurrent gates called forget gates lstm prevents backpropagated errors vanishing exploding errors flow unlimited virtual layers unfolded space lstm learn tasks require memories events happened thousands millions discrete time steps earlier specific lstm topologies evolved lstm delays events handle signals mix frequency components applications stacks lstm rnns train connectionist temporal classification ctc rnn weight matrix maximizes probability label sequences training set input sequences ctc achieves alignment recognition lstm learn recognize context sensitive languages previous models based hidden markov models hmm concepts gated recurrent unit gated recurrent units grus gating mechanism recurrent neural networks introduced 2014 form simplified variants performance polyphonic music modeling speech signal modeling short term memory parameters lstm lack output gate directional directional rnns finite sequence predict label element sequence based element future contexts concatenating outputs rnns processing sequence left left combined outputs predictions teacher target signals technique proved combined lstm rnns continuous time continuous time recurrent neural network ctrnn ordinary differential equations model effects neuron incoming spike train neuron 13 network action potential 14 rate change activation ctrnns applied evolutionary robotics address vision operation minimal cognitive behaviour note shannon sampling theorem discrete time recurrent neural networks viewed continuous time recurrent neural networks differential equations transformed equivalent difference equations transformation occurring post synaptic node activation functions 25 pass filtered prior sampling hierarchical hierarchical rnns connect neurons decompose hierarchical behavior subprograms recurrent multilayer perceptron network recurrent multi layer perceptron rmlp network consists cascaded subnetworks multiple layers nodes subnetworks feed layer feedback connections subnets connected feed connections multiple timescales model multiple timescales recurrent neural network mtrnn neural based computational model simulate functional hierarchy brain organization depends spatial connection neurons distinct types neuron activities distinct time properties varied neuronal activities continuous sequences set behaviors segmented reusable primitives flexibly integrated diverse sequential behaviors biological approval type hierarchy discussed memory prediction theory brain function hawkins book intelligence neural turing machines neural turing machines ntms method extending recurrent neural networks coupling external memory resources interact attentional processes combined analogous turing machine von neumann architecture differentiable allowing efficiently trained gradient descent differentiable neural differentiable neural computers dncs extension neural turing machines allowing usage fuzzy amounts memory address record chronology neural network pushdown automata neural network pushdown automata nnpda ntms tapes replaced analogue stacks differentiable trained complexity recognizers context grammars cfgs training gradient descent gradient descent iterative optimization algorithm finding minimum function neural networks minimize error term changing weight proportion derivative error respect weight linear activation functions differentiable methods developed 1980s 1990s werbos williams robinson schmidhuber hochreiter pearlmutter standard method called backpropagation time bptt generalization propagation feed networks method instance automatic differentiation reverse accumulation mode pontryagin minimum principle computationally expensive online variant called real time recurrent learning rtrl instance automatic differentiation accumulation mode stacked tangent vectors bptt algorithm local time local space context local space unit weight vector updated stored connected units unit update complexity single unit linear dimensionality weight vector local time updates continually depend time step multiple time steps time horizon bptt biological neural networks local respect time space recursively computing partial derivatives rtrl time complexity hidden weights time step computing jacobian matrices bptt takes weights time step cost storing activations time horizon online hybrid bptt rtrl intermediate complexity exists variants continuous time major gradient descent standard rnn architectures error gradients vanish exponentially size time lag events lstm combined bptt rtrl hybrid learning method attempts overcome solved independently recurrent neural network indrnn reducing context neuron cross neuron explored layers memories range including term memory learned gradient vanishing exploding algorithm called causal recursive backpropagation crbp implements combines bptt rtrl paradigms locally recurrent networks locally recurrent networks crbp algorithm minimize global error term improves stability algorithm providing unifying view gradient calculation techniques recurrent networks local feedback approach computation gradient rnns arbitrary architectures based signal flow graphs diagrammatic derivation bptt batch algorithm based lee theorem network sensitivity calculations proposed wan beaufays fast online version proposed campolucci uncini piazza global optimization methods training weights neural network modeled linear global optimization target function formed evaluate fitness error weight vector weights network set weight vector network evaluated training sequence typically sum squared difference predictions target values training sequence represent error current weight vector arbitrary global optimization techniques minimize target function common global optimization method training rnns genetic algorithms unstructured networks initially genetic algorithm encoded neural network weights predefined manner gene chromosome represents weight link network represented single chromosome fitness function evaluated chromosomes population neural networks evolved stopping criterion satisfied common stopping scheme stopping criterion evaluated fitness function reciprocal squared error network training goal genetic algorithm maximize fitness function reducing squared error global evolutionary optimization techniques seek set weights simulated annealing particle swarm optimization fields models rnns behave chaotically dynamical systems theory analysis recursive neural networks structure linear chain recursive neural networks operate hierarchical structure combining child representations parent representations recurrent neural networks operate linear progression time combining previous time step hidden representation representation current time step rnns nonlinear versions finite impulse response infinite impulse response filters nonlinear autoregressive exogenous model narx applications applications recurrent neural networks include 
1706332	computerscience	feedforward neural network artificial neural network connections nodes form cycle recurrent neural networks feedforward neural network simplest type artificial neural network devised network moves direction input nodes hidden nodes output nodes cycles loops network single layer perceptron simplest neural network single layer perceptron network consists single layer output nodes inputs fed outputs series weights sum products weights inputs calculated node threshold typically neuron fires takes activated typically takes deactivated typically neurons activation function called artificial neurons linear threshold units literature term perceptron refers networks consisting units neuron warren mcculloch walter pitts 1940s perceptron created values activated deactivated threshold lies perceptrons trained simple learning algorithm called delta rule calculates errors calculated output sample output data create adjustment weights implementing form gradient descent single layer perceptrons capable learning linearly separable patterns 1969 famous monograph entitled perceptrons marvin minsky seymour papert impossible single layer perceptron network learn xor function multi layer perceptrons capable producing boolean function single threshold unit limited computational power networks parallel threshold units approximate continuous function compact interval real interval result peter auer harald burgsteiner wolfgang maass learning rule simple universal approximators consisting single layer perceptrons single layer neural network compute continuous output step function common choice called logistic function choice single layer network identical logistic regression model statistical modeling logistic function sigmoid function continuous derivative backpropagation function preferred derivative easily calculated multi layer perceptron class networks consists multiple layers computational units interconnected feed neuron layer directed connections neurons subsequent layer applications units networks apply sigmoid function activation function universal approximation theorem neural networks continuous function maps intervals real output interval real approximated arbitrarily closely multi layer perceptron hidden layer result holds wide range activation functions sigmoidal functions multi layer networks variety learning techniques popular propagation output values compared correct answer compute predefined error function techniques error fed network algorithm adjusts weights connection reduce error function repeating process training cycles network converge error calculations network learned target function adjust weights properly applies method linear optimization called gradient descent network calculates derivative error function respect network weights weights error decreases downhill surface error function reason propagation applied networks differentiable activation functions teaching network perform samples training samples subtle issue requires additional techniques limited training samples danger network overfits training data fails capture true statistical process generating data computational learning theory concerned training classifiers limited data context neural networks simple heuristic called stopping ensures network generalize examples training set typical propagation algorithm speed convergence possibility local minimum error function practical methods propagation multi layer perceptrons tool choice machine learning tasks series independent neural networks moderated intermediary behavior brain neurons perform separably handle task finally combined 
1724712	computerscience	unix iii discontinued version unix operating released unix support usg announced iii late 1981 released bell labs 1982 unix iii mix unixes version unix pwb unix cb unix unix rt unix 32v iii supported dec pdp 11 vax computers called iii considered release unix cb unix internally supported bell labs unices manual refers unix release unix versions called official release unix iv iii succeeded based unix iii introduced features named pipes uname command queue combined improvements version unix organizations include notable additions bsd csh screen editing party variants iii include versions hp ux irix pc ix pc ux pnx sinix venix xenix 
1738259	computerscience	passive optical network pon telecommunications technology provide fiber consumer domestic commercial pon distinguishing feature implements multipoint architecture unpowered fiber optic splitters enable single optical fiber serve multiple individual customers commercial pon provision individual fibers hub customer passive optical networks referred mile isp customer elements characteristics pon pon consists optical terminal olt service provider central office hub optical network units onus optical network terminals onts users pon reduces fiber central office equipment required compared architectures passive optical network form fiber optic access network downstream signals broadcast premises sharing multiple fibers encryption prevent eavesdropping upstream signals combined multiple access protocol time division multiple access tdma history major standard institute electrical electronics engineers ieee telecommunication standardization sector international telecommunication union itu develop standards industry organizations society cable telecommunications engineers scte radio frequency glass carrying signals passive optical network fsan itu starting 1995 fiber architectures service access network fsan formed major telecommunications service providers vendors international telecommunications union itu standardized generations pon itu 983 standard based asynchronous transfer mode atm referred apon atm pon improvements original apon standard – gradual falling favor atm protocol – led final version itu 983 referred broadband pon bpon typical apon bpon 622 megabits mbit oc 12 downstream bandwidth 155 mbit oc upstream traffic standard accommodates rates itu 984 gigabit capable passive optical networks gpon standard represented increase compared bpon total bandwidth bandwidth efficiency larger variable packets standards permit choices bit rate industry converged 488 gigabits gbit downstream bandwidth 244 gbit upstream bandwidth gpon encapsulation method gem efficient packaging user traffic frame segmentation mid 2008 verizon installed 800 000 lines british telecom bsnl saudi telecom company etisalat advanced trials britain india saudi arabia uae usa gpon networks deployed numerous networks globe trends growth gpon pon technologies 987 defined 10g pon gbit downstream gbit upstream – framing pon designed coexist gpon devices network security developed 2009 cable manufacturing business meet siprnet requirements air force secure passive optical network spon integrates gigabit passive optical network gpon technology protective distribution pds nstissi 7003 requirements pds mandate federal government green technologies allowed federal government consideration technologies alternative active ethernet encryption deviсes chief officer united department army issued directive adopt technology fiscal 2013 marketed military companies telos corporation ieee 2004 ethernet pon epon gepon standard 802 3ah 2004 ratified ethernet mile project ieee 802 epon short haul network ethernet packets fiber optic cables single protocol layer epon standard 802 ethernet frames symmetric gigabit upstream downstream rates epon applicable data centric networks service voice data video networks 10 gbit epon 10g epon ratified amendment ieee 802 3av ieee 802 10g epon supports 1 gbit downstream wavelength plan support simultaneous operation 10 gbit wavelength 1 gbit separate wavelength operation ieee 802 3av ieee 802 3ah pon concurrently upstream channel support simultaneous operation ieee 802 3av 1 gbit 802 3ah simultaneously single shared 1310 nm channel 2014 40 installed epon ports deployed pon technology globally epon foundation cable operators’ business services docsis provisioning epon dpoe specifications 10g epon compatible ethernet standards requires conversion encapsulation connect ethernet based networks upstream downstream technology connects seamlessly type ip based packetized communications ubiquity ethernet installations homes workplaces epon inexpensive implement network elements pon takes advantage wavelength division multiplexing wdm wavelength downstream traffic upstream traffic single mode fiber itu 652 bpon epon gepon gpon basic wavelength plan 1490 nanometer nm wavelength downstream traffic 1310 nm wavelength upstream traffic 1550 nm optional overlay services typically rf analog video bit rate standards optical power budgets common 28 db loss budget bpon gpon products announced expensive optics 28 db corresponds 20 km 32 split error correction fec provide 2–3 db loss budget gpon systems optics improve 28 db budget increase gpon epon protocols permit split ratios 128 subscribers gpon 32 768 epon practice pons deployed split ratio 32 pon consists central office node called optical terminal olt user nodes called optical network units onus optical network terminals onts fibers splitters called optical distribution network odn “ont” itu term single tenant onu multiple tenant units onu bridged customer premises device individual dwelling unit technologies ethernet twisted pair speed itu standard operate existing wiring power lines phone lines coaxial cables dsl onu device terminates pon customer service interfaces user onus implement separate subscriber unit provide services telephony ethernet data video olt interface pon service provider′s core network typically include ont onu terminates pon native service interfaces user services include voice plain telephone service pots voice ip voip data typically ethernet 35 video telemetry ttl ecl rs530 onu functions separated pon shared network olt sends single stream downstream traffic onus onu reads content packets addressed encryption prevent eavesdropping downstream traffic upstream bandwidth allocation olt responsible allocating upstream bandwidth onus optical distribution network odn shared onu upstream transmissions collide transmitted random times onus lie varying distances olt meaning transmission delay onu unique olt measures delay sets register onu ploam physical layer operations maintenance messages equalize delay respect onus pon delay onus set olt transmits called grants individual onus grant permission defined interval time upstream transmission grant map dynamically calculated milliseconds map allocates bandwidth onus onu receives timely bandwidth service services – pots – require essentially constant upstream bandwidth olt provide fixed bandwidth allocation service provisioned ds1 classes data service require constant upstream bit rate data traffic browsing sites bursty highly variable dynamic bandwidth allocation dba pon oversubscribed upstream traffic traffic engineering concepts statistical multiplexing downstream traffic oversubscribed lan oversubscribed special feature pon architecture downstream oversubscription onu accept completely arbitrary downstream time slots time size gpon forms dba status reporting status reporting nsr nsr dba olt continuously allocates extra bandwidth onu onu traffic send transmits idle frames excess allocation olt observes onu sending idle frames increases bandwidth allocation onu onu burst transferred olt observes idle frames onu reduces allocation nsr dba advantage imposes requirements onu disadvantage olt assign bandwidth onus dba olt polls onus backlogs onu called transmission containers conts priority traffic class onu reports cont separately olt report message logarithmic measure backlog cont queue knowledge service level agreement cont entire pon size cont backlog olt optimize allocation spare bandwidth pon epon systems dba mechanism equivalent gpon dba solution olt polls onus queue status grants bandwidth mpcp gate message onus report status mpcp report message variants tdm pon apon bpon epon gpon deployed november 2014 epon 40 deployed ports ranks deployments 2015 gpon market share anticipated reach dollars 2020 tdm pon passive optical splitter optical distribution network upstream direction onu optical network units ont optical network terminal burst transmits assigned time slot multiplexed time domain olt receiving signals onu ont time downstream direction olt continuously transmits burst transmit onus onts data address labels embedded signal docsis provisioning epon dpoe data cable service interface specification docsis provisioning ethernet passive optical network dpoe set cable television laboratory specifications implement docsis service layer interface existing ethernet pon epon gepon 10g epon media access control mac physical layer phy standards short implements docsis operations administration maintenance provisioning oamp functionality existing epon equipment epon olt docsis cable modem termination systems cmts platform called dpoe dpoe terminology addition offering ip service capabilities cmts dpoe supports metro ethernet forum mef 14 services delivery ethernet services business customers radio frequency glass radio frequency glass rfog type passive optical network transports rf signals transported copper principally hybrid fibre coaxial cable pon direction rfog stand p2mp optical overlay existing pon gepon epon overlay rfog based wave division multiplexing wdm passive combination wavelengths single strand glass reverse rf support transporting upstream return rf separate wavelength pon return wavelength society cable telecommunications engineers scte interface practices subcomittee ips ips 910 rf glass rfog offers compatibility existing rf modulation technology offers additional bandwidth rf based services completed rfog standard collection standardized options compatible mixed pon standards interoperate pons offers support rf technologies locations fiber copper permitted feasible technology targeted cable operators existing hfc networks wdm pon wavelength division multiplexing pon wdm pon standard type passive optical networking developed companies multiple wavelengths wdm pon separate optical network units onus virtual pons existing physical infrastructure alternatively wavelengths collectively statistical multiplexing provide efficient wavelength utilization delays experienced onus common standard wdm pon unanimously agreed definition term definitions wdm pon dedicated wavelength onu liberal definitions wavelength direction pon wdm pon difficult biased list wdm pon vendors unanimous definition pons provide bandwidth traditional copper based access networks wdm pon privacy scalability onu receives wavelength advantages mac layer simplified p2p connections olt onus realized wavelength domain p2mp media access control wdm pon wavelength speed protocol easy pay grow upgrade challenges cost initial set cost wdm components temperature control challenge wavelengths tend drift environmental temperatures twdm pon time wavelength division multiplexed passive optical network twdm pon primary solution generation passive optical network stage pon2 service access network fsan april 2012 twdm pon coexists commercially deployed gigabit pon pon gigabit pon xg pon systems reach optical access networks concept reach optical access network lroan replace optical electrical optical conversion takes local exchange continuous optical path extends customer core network davey payne cost savings reducing electronic equipment real estate required local exchange wire center proof concept demonstrator serve 1024 users 10gbit 100 km reach technology termed reach pon argue term pon applicable instances distribution remains passive enabling technologies topology pon transmission modes downstream olt onu upstream onu olt downstream transmission olt broadcasts optical signal onus continuous mode downstream channel optical data signal upstream channel onus transmit optical data signal result signals transmitted onus converging attenuation fiber power splitter serving power coupler overlapping solve burst mode transmission upstream channel onu transmits optical packet allocated time slot transmit onus share upstream channel time division multiplexing tdm mode phases optical packets received olt packet packet onus synchronized transmit optical packet phase distance olt onu random distance olt onus uniform optical packets received olt amplitudes compensate phase variation amplitude variation short time 40 ns gpon burst mode clock data recovery cdr burst mode amplifier burst mode tia employed transmission mode requires transmitter burst mode burst mode transmitter short time kinds circuitries pon counterparts continuous mode optical communication link fiber premises passive optical networks electrically powered components split signal signal distributed beam splitters splitter typically splits signal single fiber 16 32 256 fibers depending manufacturer splitters aggregated single cabinet beam splitter provide switching buffering capabilities power supply connection called multipoint link connection optical network terminals customer perform special functions required absence switching signal leaving central office broadcast users served splitter including signal intended optical network terminal filter signals intended customers addition splitters buffering individual optical network terminal coordinated multiplexing scheme prevent signals customers colliding types multiplexing achieving wavelength division multiplexing time division multiplexing wavelength division multiplexing customer transmits signal unique wavelength time division multiplexing tdm customers transmitting tdm equipment market single definition wdm pon equipment vendors claim released wdm pon equipment consensus product wdm pon product market passive optical networks advantages disadvantages active networks avoid complexities involved keeping electronic equipment operating outdoors analog broadcasts simplify delivery analog television signal pushed served splitter single switching device central office equipped powerful piece transmitting equipment called optical terminal olt addition customer optical network terminal transmit central office nearest switching device reach extenders achieve distance central office plant based active optical networks optical distribution networks designed homerun topology splitters active networking located central office allowing users patched network required optical distribution frame passive optical components drivers modern passive optical network reliability cost passive functionality single mode passive optical components include branching devices wavelength division multiplexer demultiplexers wdms isolators circulators filters components interoffice loop feeder fiber loop fitl hybrid fiber coaxial cable hfc synchronous optical network sonet synchronous digital hierarchy sdh systems telecommunications networks employing optical communications systems utilize optical fiber amplifiers ofas dense wavelength division multiplexer dwdm systems proposed requirements components published 2010 telcordia technologies broad variety passive optical components applications include multichannel transmission distribution optical taps monitoring pump combiners fiber amplifiers bit rate limiters optical connects route diversity polarization diversity interferometers conherent communication wdms optical components power split combined based wavelength composition optical signal dense wavelength division multiplexers dwdms optical components split power wavelengths wavelength insensitive couplers passive optical components power split combined independently wavelength composition optical signal component combine divide optical signals simultaneously bidirectional duplex transmission single fiber passive optical components data format transparent combining dividing optical power predetermined ratio coupling ratio content signals wdms wavelength splitters combiners wavelength insensitive couplers power splitters combiners optical isolator port passive component light wavelength range pass attenuation direction isolating providing attenuation light propagating reverse direction isolators integral components laser diode modules optical amplifiers reduce noise caused multi path reflection bitrate analog transmission systems optical circulator operates optical isolator reverse propagating lightwave directed port output lost optical circulator bidirectional transmission type branching component distributes isolates optical power fibers based direction lightwave propagation fiber optic filter component ports wavelength sensitive loss isolation return loss fiber optic filters wavelength selective components specific range wavelengths pass reflect attenuation classification filter types 
1741558	computerscience	scigen program context grammar randomly generate nonsense form science papers elements papers formed including graphs diagrams citations created scientists massachusetts institute technology stated aim maximize amusement coherence sample output abstract rooter methodology typical unification access redundancy prominent 2005 paper generated scigen rooter methodology typical unification access redundancy accepted reviewed paper 2005 multiconference systemics cybernetics informatics wmsci authors invited speak authors scigen hoax received publicity picked slashdot wmsci withdrew invitation scigen team renting space hotel separately conference delivering series randomly generated talks track organizer wmsci conferences professor nagib callaos 2000 2005 wmsci sponsored institute electrical electronics engineers ieee stopped granting sponsorship callaos 2006 2008 submitting paper deliberate attempt embarrass wmsci authors claim accepts quality papers sends unsolicited requests submissions bulk academics scigen computing writer stan kelly bootle acm queue sentences rooter paper individually plausible regarded posing automated detection hoax articles suggested human readers effective jargon pun root router par mit graduate humor occurrence methodology mandatory attribute paper apparent incoherence limited knowledge conclusion reliable gibberish filter requires careful holistic review peer domain experts schlangemann fictional named herbert schlangemann publish false scientific articles international conferences suspected partially frauds author named swedish short film der schlangemann published papers withdrawn conferences proceedings conference organizing committee names keynote speakers removed websites spoofing google scholar calculators refereeing performed behalf institute electrical electronics engineers subject criticism fake papers discovered conference publications notably labbé researcher pseudonym schlangemann cyril labbé grenoble university demonstrated vulnerability calculations based google scholar output feeding set scigen generated documents citing effectively academic link farm 2010 paper method author managed rank ike antkare albert einstein instance 
1775388	computerscience	pattern recognition nearest neighbors algorithm nn parametric method classification regression input consists closest training examples feature space output depends nn classification regression nn type instance based learning lazy learning function approximated locally computation deferred classification nn algorithm simplest machine learning algorithms classification regression technique assign weight contributions neighbors nearer neighbors contribute average distant common weighting scheme consists neighbor weight distance neighbor neighbors set objects class nn classification object property nn regression training set algorithm explicit training step required peculiarity nn algorithm sensitive local structure data statistical setting suppose pairs values class label probability distributions norm reordering training data algorithm training examples vectors multidimensional feature space class label training phase algorithm consists storing feature vectors class labels training samples classification phase user defined constant unlabeled vector query classified assigning label frequent training samples nearest query commonly distance metric continuous variables euclidean distance discrete variables classification metric overlap metric hamming distance context gene expression microarray data nn employed correlation coefficients pearson spearman classification accuracy nn improved distance metric learned specialized algorithms margin nearest neighbor neighbourhood components analysis drawback basic majority voting classification occurs class distribution skewed examples frequent class tend dominate prediction tend common nearest neighbors overcome weight classification account distance nearest neighbors class regression nearest multiplied weight proportional inverse distance overcome skew abstraction data representation organizing map som node representative center cluster density original training data nn applied som parameter selection choice depends data larger values reduces noise classification boundaries classes distinct selected heuristic techniques hyperparameter optimization special class predicted class closest training sample called nearest neighbor algorithm accuracy nn algorithm severely degraded presence noisy irrelevant features feature scales consistent effort selecting scaling features improve classification popular approach evolutionary algorithms optimize feature scaling popular approach scale features mutual training data training classes binary class classification helpful choose odd avoids tied votes popular choosing empirically optimal setting bootstrap method nearest neighbor classifier intuitive nearest neighbour type classifier nearest neighbour classifier assigns class closest neighbour feature space 11 size training data set approaches infinity nearest neighbour classifier guarantees error rate worse bayes error rate minimum achievable error rate distribution data weighted nearest neighbour classifier nearest neighbour classifier viewed assigning nearest neighbours weight 12 weight generalised weighted nearest neighbour classifiers nearest neighbour assigned weight 13 14 analogous result strong consistency weighted nearest neighbour classifiers holds 15 denote weighted nearest classifier weights 16 subject regularity conditions class distributions excess risk asymptotic expansionfor constants 18 19 20 21 optimal weighting scheme 22 balances terms display set 23 optimal weights dominant term asymptotic expansion excess risk 28 true bagged nearest neighbour classifier properties nn special variable bandwidth kernel density balloon estimator uniform kernel naive version algorithm easy implement computing distances stored examples computationally intensive training sets approximate nearest neighbor search algorithm nn computationally tractable data sets nearest neighbor search algorithms proposed seek reduce distance evaluations performed nn strong consistency data approaches infinity class nn algorithm guaranteed yield error rate worse bayes error rate minimum achievable error rate distribution data improvements nn speed proximity graphs multi class nn classification cover hart 1967 prove upper bound error rate 30is bayes error rate minimal error rate 31 nn error rate classes 32 bayesian error rate 30 approaches limit reduces bayesian error rate error rates error rate nearest neighbour classifiers nearest neighbour classifier joint distribution 34 consistent 35 diverges 36 converges 37 38 denote nearest neighbour classifier based training set size regularity conditions excess risk yields asymptotic expansionfor constants 40 41 choice 23 offers trade terms display 43 nearest neighbour error converges bayes error optimal minimax rate 28 metric learning nearest neighbor classification performance improved supervised metric learning popular algorithms neighbourhood components analysis margin nearest neighbor supervised metric learning algorithms label learn metric pseudo metric feature extraction input data algorithm processed suspected redundant measurement feet meters input data transformed reduced representation set features named features vector transforming input data set features called feature extraction features extracted carefully chosen expected features set extract relevant input data perform desired task reduced representation size input feature extraction performed raw data prior applying nn algorithm transformed data feature space typical vision computation pipeline recognition nn including feature extraction dimension reduction pre processing steps implemented opencv dimension reduction dimensional data dimensions dimension reduction performed prior applying nn algorithm avoid effects curse dimensionality curse dimensionality nn context basically euclidean distance unhelpful dimensions vectors equidistant search query vector imagine multiple lying circle query center distance query data search space feature extraction dimension reduction combined step principal component analysis pca linear discriminant analysis lda canonical correlation analysis cca techniques pre processing step clustering nn feature vectors reduced dimension space machine learning process called dimensional embedding dimensional datasets performing similarity search live video streams dna data dimensional time series running fast approximate nn search locality sensitive hashing random projections sketches dimensional similarity search techniques vldb toolbox feasible option decision boundary nearest neighbor rules implicitly compute decision boundary compute decision boundary explicitly efficiently computational complexity function boundary complexity data reduction data reduction huge data sets data accurate classification data called prototypes selection class outliers training surrounded examples classes called class outlier class outliers include class outliers nn produce noise detected separated future analysis natural training called nn class outlier nearest neighbors include examples classes cnn data reduction condensed nearest neighbor cnn hart algorithm algorithm designed reduce data set nn classification selects set prototypes training data 1nn classify examples accurately 1nn data set training set cnn iteratively classification examples prototypes called absorbed efficient scan training examples decreasing border ratio border ratio training defined distance closest color distance closest label border ratio interval exceeds preference borders classes inclusion set prototypes label called external calculation border ratio illustrated figure data labeled colors initial label red external blue green closest external closest red border ratio attribute initial illustration cnn series figures classes red green blue fig initially 60 class fig 1nn classification map pixel classified 1nn data fig 5nn classification map white correspond unclassified regions 5nn voting tied green red blue nearest neighbors fig reduced data set crosses class outliers selected nn rule nearest neighbors instances belong classes squares prototypes circles absorbed left corner class outliers prototypes absorbed classes prototypes varies 15 20 classes fig 1nn classification map prototypes initial data set figures produced mirkes applet fcnn fast condensed nearest neighbor variant cnn fastest data set reduction algorithms nn classification nn regression nn regression nn algorithm estimating continuous variables algorithm weighted average nearest neighbors weighted inverse distance algorithm nn outlier distance nearest neighbor local density estimate popular outlier score anomaly detection larger distance nn local density query outlier account neighborhood query average distance nn simple outlier model classic data mining method local outlier factor comparison complex approaches scale experimental analysis validation confusion matrix matching matrix tool validate accuracy nn classification robust statistical methods likelihood ratio applied 
1803656	computerscience	mobilinux linux kernel operating targeted smartphones announced montavista software april 25 2005 mobilinux based source standard technology designed scalability maximized battery power usage single chip mobile phones 35 phones mobile devices mobilinux commercial linux mobilinux powered version linux kernel offers boot times event broker includes alsa sound driver support embedded systems standard linux 21 kernels exists montavista devrocket software based eclipse easy development environment platform 
1813588	computerscience	digital distribution referred content delivery online distribution electronic software distribution esd delivery distribution digital media content audio video software video games term distribution online delivery medium internet bypassing physical distribution methods paper optical discs vhs videocassettes term online distribution typically applied freestanding products downloadable add ons products commonly downloadable content advancement network bandwidth capabilities online distribution prominent 21st century content distributed online streamed downloaded consists books films television programs music software video games streaming involves downloading content user request demand allowing user store permanently contrast downloading content hard drive form storage media offline access future specialist networks content delivery networks distribute content internet ensuring availability performance alternative technologies content delivery include peer peer file sharing technologies alternatively content delivery platforms create syndicate content remotely acting hosted content management systems term film distribution distribution content physical media opposition distribution analog media photographic film magnetic tape digital cinema basis primary characteristic online distribution direct nature commercially successful artists enter industry publishing chain publishers artists advertise fund distribute retail outlets industries video games artists bound publishers unable content publisher profit lead standardization content stifling risky ideas opting online distribution artist public sphere easily minimum business overhead leads cheaper consumer increased profits artists increased artistic freedom online distribution platforms form digital rights management online distribution door business models music model instance artist release track album chapter book time waiting completed cash boost continue projects warns financially viable spent excessive money time project deemed unviable video games increased flexibility demonstrated micropayment models result models accessibility artists artist teams time funds expertise product music industry indie artists access distribution channels major record labels restrictions manufacturing costs growing collection internet labels offer distribution unsigned independent artists online music stores marketing promotion services bands bypass completely offer music sale independently controlled websites issue incompatible formats content delivered restricting devices data conversion impact traditional retail rise online distribution controversy traditional business models challenges opportunities traditional retailers publishers online distribution traditional media markets including music press broadcasting britain iplayer software application streaming television radio accounts bandwidth united kingdom music online distribution led dip sales 2000s sales cut online distribution toll retailer canadian music chain sam record blamed online distribution close traditional retail venues 2007–08 main reason sales hit unlicensed downloads digital music accessible copyright infringement sales music industry realized change business model rapidly changing technology step music industry online space successful reasons development lossy audio compression file formats mp3 users compress music files quality format compressed megabyte mb file lossless flac format require megabytes comparison song require 30–40 megabytes storage file size yields internet transfer speeds transition online space boosted sales profit artists allowed expenses coordination costs distribution costs possibility redistributed total profits costs aided artists breaking scene gaining recognition emerging artists struggled market compete distribution channels internet artists control music terms ownership rights creative process pricing addition providing global users easier access content online stores users choose songs purchase entire album titles buyer enjoys downloaded single tracks rose 160 2004 795 2006 accounted revenue boost 397 videos traditional network television movies video content online content owner party services youtube netflix hulu vudu amazon prime video directv slingtv internet based video services content owners users access content computers smart phones tablets appliances video game consoles set boxes smart tvs film distributors include digital called digital hd blu ray disc ultra hd blu ray 3d blu ray dvd books companies bookmasters distribution invested upgrading equipment operating systems direct capital keeping technology phenomenon books digital users ability access books handheld digital book readers benefit electronic book readers users access additional content hypertext links electronic book readers users portability books reader hold multiple books depending size hard drive companies adapt capitalize digital media market sales surge vice president perseus books stated shifting electronic books books sales rise 68 independent publishers experienced sales boost 23 quarter 2012 tor books major publisher science fiction fantasy books started sell books drm july 2012 publisher stated model removing drm hurting digital distribution ebook business book publishers reilly media carina press baen books forgone drm video games online distribution changing structure video game industry gabe newell creator digital distribution service steam formulated advantages physical retail distribution 2000s increasing niche titles commercially successful remakes classic games possibility digital distribution stimulated creation game titles video game producers independent game developer modders garry mod commercially feasible 2004 rise digital distribution services pc amazon digital services desura gamestop games windows – live impulse steam origin direct2drive gog gamersgate offered properties digital distributors reselling bought games green gaming gog strict drm policy services strict strict forms drm digital distribution eco friendly physical optical disc polycarbonate plastic aluminum creation 30 cds requires 300 cubic feet natural gas cups oil 24 gallons water boxes cds polyvinyl chloride pvc increases risk cancer challenges issue incompatible data formats content delivered restricting devices data conversion streaming services drawbacks requiring constant internet connection content restriction content stored locally restriction content transferred physical media enabling censorship discretion owners content infrastructure consumer devices 
1841851	computerscience	stereopsis greek στερεο stereo meaning solid ὄψις opsis appearance sight term refer perception depth dimensional structure basis visual deriving eyes individuals developed binocular vision eyes humans animals located lateral positions head binocular vision images projected retinas eyes differences relative horizontal position objects images positional differences referred horizontal disparities binocular disparities disparities processed visual cortex brain yield depth perception binocular disparities naturally viewing real dimensional scene eyes simulated artificially images separately eye method called stereoscopy perception depth referred stereoscopic depth perception depth dimensional structure visible eye differences object size motion parallax differences image object time observer movement impression depth vivid binocular disparities term stereopsis stereoscopic depth refer unique impression depth binocular vision colloquially referred 3d suggested impression real separation depth linked precision depth derived conscious awareness precision – perceived impression interactability realness – guide planning motor action distinctions coarse fine stereopsis distinct aspects stereopsis coarse stereopsis fine stereopsis provide depth degree spatial temporal precision stereopsis individual achieve limited level visual acuity poorer eye patients comparatively visual acuity tend larger spatial frequencies input images achieve stereopsis fine stereopsis requires eyes visual acuity detect spatial differences easily disrupted visual deprivation indications development visual infants coarse stereopsis develop fine stereopsis coarse stereopsis guides vergence movements fine stereopsis develop subsequent stage indications coarse stereopsis mechanism eyes aligned strabismus surgery static dynamic stimuli suggested distinguish types stereoscopic depth perception static depth perception static stereo perception motion depth perception stereo motion perception individuals strabismus depth perception static stereotests titmus tests article contour stereotests perceive motion depth tested dynamic random dot stereograms study combination motion stereopsis static stereopsis exotropes esotropes perception mechanisms strong indications stereoscopic mechanism consists perceptual mechanisms coarse fine stereopsis processed physiological subsystems coarse stereopsis derived diplopic stimuli stimuli disparities range binocular fusion yielding vague impression depth magnitude coarse stereopsis appears magno pathway processes spatial frequency disparities motion fine stereopsis parvo pathway processes spatial frequency disparities coarse stereoscopic provide residual binocular depth individuals lack fine stereopsis individuals integrate stimuli stereoscopic cues motion occlusion brain combines cues – including stereo motion vergence angle monocular cues – sensing motion depth 3d object position active vision science neighboring disciplines prevalence impact stereopsis humans ability stereopsis study 97 distinguish depth horizontal disparities minutes arc 80 distinguish depth horizontal differences 30 arc stereopsis positive impact exercising practical tasks needle threading ball catching fast ball games pouring liquids professional activity involve operating stereoscopic instruments binocular microscope tasks profit compensation visual depth cues roles stereopsis imperative occupations requiring precise judgment distance include requirement demonstrate level stereopsis requirement airplane pilots pilot fly wiley post accomplished feat monocular vision surgeons demonstrate stereo acuity car driving study positive impact stereopsis specific situations intermediate distances study elderly persons glare visual field loss field view predictors crash involvement elderly persons values visual acuity contrast sensitivity stereoacuity crashes binocular vision advantages stereopsis enhancement vision quality binocular summation persons strabismus double vision scores binocular summation appears incite persons strabismus close eye visually demanding situations recognized binocular vision including stereopsis factor stabilization post surgical outcome strabismus corrections persons lacking stereopsis visible strabismus potential socioeconomic impact children adults angle angle strabismus negatively affect esteem interferes normal eye contact causing embarrassment anger feelings awkwardness details psychosocial effects strabismus growing introduction 3d display technology entertainment medical scientific imaging quality binocular vision including stereopsis key capability success modern society indications lack stereo vision lead persons compensate stereo blindness people advantage depicting scene monocular depth cues kinds artists disproportionately persons lacking stereopsis rembrandt stereoblind history investigations stereopsis stereopsis explained charles wheatstone 1838 “… mind perceives object dimensions dissimilar pictures projected retinæ …” recognized eye views visual horizontal positions eye image differs objects distances eyes project images eyes horizontal positions depth cue horizontal disparity retinal disparity binocular disparity wheatstone effective depth cue creating illusion depth flat pictures differed horizontal disparity display pictures separately eyes wheatstone invented stereoscope leonardo da vinci realized objects distances eyes project images eyes horizontal positions concluded impossible painter portray realistic depiction depth scene single canvas leonardo chose object column circular cross object flat wall chosen object discovered horizontal disparity features column objects projects identical images eyes stereoscopy popular victorian times prism stereoscope david brewster combined photography meant tens thousands stereograms produced 1960s stereopsis dedicated exploring limits relationship singleness vision researchers included peter ludvig panum ewald hering adelbert ames jr kenneth ogle 1960s bela julesz invented random dot stereograms previous stereograms image recognizable objects image random dot stereograms square matrix 000 dots dot 50 probability black white recognizable objects image images random dot stereogram essentially identical square dots shifted horizontally dot diameters horizontal disparity gap left shifting filled random dots hiding shifted square images viewed eye square visible closer background julesz whimsically called square cyclopean image mythical cyclops eye cyclopean eye brains cyclopean stimuli hidden actual eyes random dot stereograms highlighted stereopsis correspondence dot image realistically paired coloured dots image visual systems solve correspondence intended depth fog false matches understand 1960s horace barlow colin blakemore jack pettigrew neurons cat visual cortex receptive fields horizontal positions eyes established neural basis stereopsis findings disputed david hubel torsten wiesel eventually conceded neurons monkey visual cortex 1980s gian poggio neurons v2 monkey brain responded depth random dot stereograms 1970s christopher tyler invented autostereograms random dot stereograms viewed stereoscope led popular magic eye pictures 1989 antonio medina puerta demonstrated photographs retinal images parallax disparity shadows fused stereoscopically imparting depth perception imaged scene named phenomenon shadow stereopsis shadows stereoscopic cue depth perception effective phenomenon photographs moon times shadows moon 3d stereoscopically absence stereoscopic cue human stereopsis popular culture stereoscope device eye images allowing stereopsis stimulated pictures eye led crazes stereopsis prompted sorts stereoscopes victorian times prism stereoscope allowing stereo photographs viewed 1920s red green glasses allowing stereo movies viewed 1939 concept prism stereoscope reworked technologically complex view master remains production 1950s polarizing glasses allowed stereopsis coloured movies 1990s magic eye pictures autostereograms require stereoscope relied viewers form fusion eye views images introduced geometrical basis stereopsis appears processed visual cortex mammals binocular cells receptive fields horizontal positions eyes cell active preferred stimulus correct position left eye correct position eye disparity detector person stares object eyes converge object appears center retina eyes objects main object shifted relation main object main object dolphin remains center images eyes cube shifted left eye image shifted left eye image eye horizontal position perspective scene yielding retinal images images observed single view scene phenomenon singleness vision stereopsis double vision form stereopsis called qualitative stereopsis kenneth ogle images cross eyed images stereoscope image time phenomenon binocular rivalry hysteresis stereopsis fusion stereopsis stabilized fusion stereopsis maintained images pulled slowly symmetrically extent horizontal direction vertical direction demonstrated random dot stereogram initially interpreted extension panum fusional hysteresis reaches panum fusional stereoscopic depth perceived random stereograms presence cyclodisparities 15 deg interpreted stereopsis diplopia stereo vision stereo vision field vision mobile robotics detect obstacles applications include exomars rover surgical robotics cameras pictures scene separated distance – eyes compares images shifting images match shifted called disparity disparity objects image match calculate distance human eyes change angle distance observed object represents extra complexity geometrical calculations epipolar geometry simplest geometrical camera image planes plane images alternatively converted reprojection linear transformation image plane called image rectification stereo vision cameras fixed lighting called structure motion techniques fixed camera lighting called photometric stereo techniques shape shading stereo display attempts reproduce human stereo vision rapidly changing displays numerous patents relating 3d television cinema filed uspto commercial activity involving patents confined exclusively grantees licensees patent holders tend time filing discounting 3d television cinema require digital projector moving images mechanically coupled imax 3d cinema stereoscopic lcds offered sharp started shipping notebook built stereoscopic lcd technology required user goggles visors viewing generated images cgi technology employ fresnel lenses plates liquid crystal displays freeing user special glasses goggles stereopsis tests stereopsis tests short stereotests images eye 3d image perceived stereovision achieved vectographs visible polarized glasses anaglyphs visible red green glasses lenticular lenses visible naked eye head mounted display technology type eye depending level stereoacuity detected series stereotests selected levels constitutes stereoacuity types common clinical tests stereopsis stereoacuity random dot stereotests contour stereotests random dot stereopsis tests pictures stereo figures embedded background random dots contour stereotests pictures targets eye separated horizontally random dot stereotests ability stereopsis tested lang stereotest consists random dot stereogram series parallel strips cylindrical lenses imprinted shapes separate views eye hologram stereopsis image field random dots shapes discernible increasing stereopsis consists cat indicating ability stereopsis 1200 arc retinal disparity star 600 arc car 550 arc standardize image viewed distance eye 40 cm frontoparallel plane special spectacles tests facilitating children contour stereotests examples contour stereotests titmus stereotests titmus fly stereotest picture fly displayed disparities edges patient glasses picture determine figure disparity images vary 400 100 arc 800 40 arc deficiency treatment deficiency stereopsis complete called stereoblindness impaired include blindness eye amblyopia strabismus vision therapy treatments people lacking stereopsis vision therapy individuals enhance vision exercises strengthening improving eye movement evidence stereoacuity improved persons amblyopia perceptual learning treatment amblyopia animals evidence stereopsis animal kingdom occurs mammals birds reptiles amphibia fish crustaceans spiders insects 
1842685	computerscience	image processing gaussian blur gaussian smoothing result blurring image gaussian function named mathematician scientist carl friedrich gauss graphics software typically reduce image noise reduce visual blurring technique smooth blur resembling viewing image translucent screen distinctly bokeh produced focus lens shadow object usual illumination gaussian smoothing pre processing stage vision algorithms enhance image structures scales—see scale space representation scale space implementation mathematically applying gaussian blur image convolving image gaussian function dimensional weierstrass transform contrast convolving circle circular box blur accurately reproduce bokeh fourier transform gaussian gaussian applying gaussian blur reducing image frequency components gaussian blur pass filter mathematics gaussian blur type image blurring filter gaussian function expresses normal distribution statistics calculating transformation apply pixel image gaussian function dimension isin dimensions product gaussian functions dimension distance origin horizontal axis distance origin vertical axis σ standard deviation gaussian distribution applied dimensions produces surface contours concentric circles gaussian distribution center values distribution build convolution matrix applied original image convolution process illustrated visually figure pixel set weighted average pixel neighborhood original pixel receives heaviest weight gaussian neighboring pixels receive weights distance original pixel increases blur preserves boundaries edges uniform blurring filters scale space implementation theory gaussian function image meaning entire image included calculations pixel practice computing discrete approximation gaussian function pixels distance σ influence considered effectively contributions pixels range typically image processing program calculate matrix dimensions ceiling function ensure result close entire gaussian distribution addition circularly symmetric gaussian blur applied dimensional image independent dimensional calculations termed separable filter applying dimensional matrix achieved applying series single dimensional gaussian matrices horizontal direction repeating process vertical direction computational terms property calculation performed time height notation opposed separable kernel applying multiple successive gaussian blurs image applying single larger gaussian blur radius square root sum squares blur radii applied applying successive gaussian blurs radii applying single gaussian blur radius relationship processing time saved simulating gaussian blur successive blurs time required performing single blur gaussian blurring commonly reducing size image downsampling image common apply pass filter image prior resampling ensure spurious frequency downsampled image aliasing gaussian blurs nice properties sharp edges introduce ringing filtered image pass filter gaussian blur pass filter attenuating frequency signals amplitude bode plot log scale frequency domain parabola variance reduction gaussian filter standard deviation smooth picture reduce standard deviation pixel values picture assume grayscale pixel values standard deviation applying filter reduced standard deviation 11 approximated assample gaussian matrix sample matrix produced sampling gaussian filter kernel σ 84089642 midpoints pixel normalizing note center element largest decreasing symmetrically distance center increases note 22508352 central 1177 times larger 00019117 3σ implementation gaussian blur typically generated convolving image kernel gaussian values practice advantage gaussian blur’s separable property dividing process passes pass dimensional kernel blur image horizontal vertical direction pass dimensional kernel blur remaining direction convolving dimensional kernel single pass requires calculations discretization typically achieved sampling gaussian filter kernel discrete positions midpoints pixel reduces computational cost filter kernels sampling gaussian function samples leads error accuracy maintained slight computational cost integration gaussian function pixel converting gaussian’s continuous values discrete values kernel sum values darkening brightening image remedy values normalized dividing term kernel sum terms kernel common gaussian smoothing commonly edge detection edge detection algorithms sensitive noise laplacian filter built discretization laplace operator highly sensitive noisy environments gaussian blur filter edge detection aims reduce level noise image improves result edge detection algorithm approach commonly referred laplacian gaussian log filtering 
1876458	computerscience	generation network ngn body key architectural telecommunication core access networks idea ngn network transports services voice data sorts media video encapsulating ip packets internet ngns commonly built internet protocol term ip transformation telephone centric networks ngn ngn concept future internet focused evolution internet terms variety interactions services offered introduction ngn itu definition practical perspective ngn involves main architectural looked separately ngn defined separation transport connectivity portion network services transport provider enable service defining service layer transport layer – services independent transport details increasingly applications including voice tend independent access network layering network applications reside user devices phone pc set box underlying technology components generation networks based internet technologies including internet protocol ip multiprotocol label switching mpls application level session initiation protocol sip itu 323 initially 323 popular protocol popularity decreased local loop original poor traversal network address translation nat firewalls reason domestic voip services developed sip voice networks control network operator telco largest carriers 323 protocol choice core backbones introduced 323 323 devices easily consistently traverse nat firewall devices possibility 323 looked favorably devices encumbered telcos extensively researching supporting ip multimedia subsystem ims sip major chance protocol voice applications devices ngn softswitch – programmable device controls voice ip voip calls enables correct integration protocols ngn function softswitch creating interface existing telephone network pstn signalling gateways media gateways softswitch term defined equipment manufacturers functions term gatekeeper ngn literature originally voip device converted gateways voice data analog digital switched circuit form pstn ss7 packet based ip controlled gateways device started media gateway control protocol changed media gateway controller mgc agent devices systems controlling calls ip multimedia subsystem ims standardised ngn architecture internet media services capability defined european telecommunications standards institute etsi 3rd generation partnership project 3gpp implementations popular acronym introduced british telecom 21cn 21st century networks mistakenly quoted c21n loose term ngn denotes initiative deploy operate ngn switches networks period 2006–2008 aim 2008 ip switches network concept abandoned favor maintaining current generation equipment company roll ngn plc started deployment 1999 ngn 600 km fibre optic cable 190 presence core optical network dense wavelength division multiplexing dwdm technology provide scalability hundreds gigabits bandwidth growth demand backbone network mpls technology deliver performance ip mpls based services carry voice video data traffic converged infrastructure allowing organisations enjoy infrastructure costs flexibility functionality traffic prioritised classes service coupled service level agreements slas underpin quality service performance guarantees ngn accommodates classes service offered mpls ip vpn netherlands kpn developing ngn network transformation program called ip generation networks extends messaging domain ireland openmind networks designed built deployed traffic control handle demands requirements ip networks bulgaria btc bulgarian telecommunications company implemented ngn underlying network telco services scale project 2004 inherent flexibility scalability core network approach unprecedented rise classical services deployment pots isdn centrex adsl vpn implementation bandwidths metro distance ethernet vpn services cross national transits webtv iptv application february 2014 deutsche telekom revealed subsidiary makedonski telekom european incumbent convert pstn infrastructure ip network 290 000 fixed lines migrated platform capital investment worth 14 euros macedonia country south east europe network based internet protocol canada startup wind mobile owned globalive deploying ip wireless backbone mobile phone service mid 2005 china telecom announced commercial roll china telecom generation carrying network cn2 internet protocol generation network ip ngn architecture ipv6 capable backbone network leverages softswitches control layer protocols diffserv mpls boosts performance bearer layer mpls optimized architecture enables frame relay atm traffic transported layer vpn supports legacy traffic ip services single ip mpls network 
1906608	computerscience	named entity recognition ner entity identification entity chunking entity extraction subtask extraction seeks locate classify named entity mentions unstructured pre defined categories person names organizations locations medical codes time expressions quantities monetary values percentages ner systems structured unannotated block producing annotated block highlights names entities person consisting token token company temporal expression detected classified art ner systems english produce human performance entering muc scored 93 measure human annotators scored 97 60 96 95 named entity recognition platforms notable ner platforms include definition expression named entity word named restricts task entities strings phrases stands consistently referent closely rigid designators defined kripke practice ner deals names referents philosophically rigid instance automotive company created henry ford 1903 referred ford ford motor company ford refer entities ford rigid designators include proper names terms biological species substances exclude pronouns coreference resolution descriptions pick referent properties dicto names kinds opposed individuals bank named entity recognition broken conceptually implementations distinct detection names classification names type entity refer person organization location phase typically simplified segmentation names defined contiguous spans tokens nesting bank america single disregarding substring america segmentation formally chunking phase requires choosing ontology organize categories temporal expressions numerical expressions money percentages considered named entities context ner task instances types examples rigid designators 2001 invalid vacations “june” 2001 refers 2001st gregorian calendar month june refer month undefined june june june arguable named entity definition loosened practical reasons definition term named entity strict explained context hierarchies named entity types proposed literature bbn categories proposed 2002 question answering consists 29 types 64 subtypes sekine extended hierarchy proposed 2002 200 subtypes 2011 ritter hierarchy based common freebase entity types ground breaking experiments ner social media formal evaluation evaluate quality ner output measures defined accuracy token level possibility suffers vast majority tokens real entity names defined baseline accuracy predict entity extravagantly typically 90 mispredicting span entity properly penalized finding person scored ½ accuracy academic conferences conll variant f1 score defined definition prediction misses single token includes spurious token wrong class hard error contribute precision recall evaluation models based token token matching proposed models handle partially overlapping matches rewarding exact matches finer grained evaluation comparison extraction systems account degree mismatch exact predictions approaches ner systems created linguistic grammar based techniques statistical models machine learning hand crafted grammar based systems typically precision cost recall months experienced computational linguists statistical ner systems typically require manually annotated training data semisupervised approaches suggested avoid annotation effort classifier types perform machine learned ner conditional random fields typical choice domains art ner systems brittle meaning ner systems developed domain typically perform domains considerable effort involved tuning ner systems perform domain true rule based trainable statistical systems ner systems 1990s aimed extraction journalistic articles attention processing military dispatches reports stages automatic content extraction ace evaluation included types informal styles weblogs transcripts conversational telephone speech conversations 1998 deal entity identification molecular biology bioinformatics medical natural language processing communities common entity domain names genes gene products considerable recognition chemical entities drugs context chemdnercompetition 27 teams participating task medical domain written native language recognize entities english vocabularies common approach translate vocabularies applying ner original version vocabulary automatic translation feasible current challenges f1 reported muc dataset named entity recognition solved main efforts directed reducing annotation labor employing semi supervised learning robust performance domains scaling fine grained entity types projects crowdsourcing promising solution quality aggregate human judgments supervised semi supervised machine learning approaches ner challenging task devising models deal linguistically complex contexts twitter search queries researchers comparisons ner performances statistical models hmm hidden markov model maximum entropy crf conditional random fields feature sets emerging task identifying expressions cross linking wikipedia instance extremely fine grained named entity recognition types actual wikipedia describing ambiguous concepts output wikification field progress remains challenging application ner twitter microblogs 
1911810	computerscience	statistical language model probability distribution sequences sequence assigns probability sequence estimate relative likelihood phrases natural language processing applications generate output language modeling speech recognition machine translation speech tagging parsing optical character recognition handwriting recognition retrieval applications speech recognition match sounds word sequences language model context distinguish phrases sound american english phrases recognize speech wreck nice beach pronounced ambiguities easier resolve evidence language model incorporated pronunciation model acoustic model language models retrieval query likelihood model separate language model document collection documents ranked based probability query document language model commonly unigram language model purpose—otherwise bag model data sparsity major building language models word sequences observed training solution assumption probability word depends previous gram model unigram model    1 unigram models unigram model retrieval treated combination finite automata splits probabilities terms context model probability word depends word probability document finite automata units automaton probability distribution entire vocabulary model summing illustration unigram model document probability generated specific query calculated asfor documents build unigram models hitting probabilities probabilities documents generate hitting probabilities query rank documents query generating probabilities unigram models documents retrieval contexts unigram language models smoothed avoid instances term    0 common approach generate maximum likelihood model entire collection linearly interpolate collection model maximum likelihood model document create smoothed document model gram models gram model probability observing sentence approximated ashere assumed probability observing ith word wi context history preceding  − 1 approximated probability observing shortened context history preceding  − 1 markov property conditional probability calculated gram model frequency counts bigram trigram language model denote gram model language models    2    3 typically gram model probabilities derived frequency counts models derived severe confronted grams explicitly form smoothing assigning total probability mass unseen grams methods simple add smoothing assign count unseen grams uninformative prior sophisticated models turing discounting models bigram    2 language model probability sentence red house approximated aswhereas trigram    3 language model approximation isnote context  – 1 grams filled start sentence markers typically denoted additionally sentence marker probability ungrammatical sequence sentence red house exponential language models maximum entropy language models encode relationship word gram history feature functions equation 13 14 partition function 15 parameter vector 16 feature function simplest feature functionis indicator presence gram helpful prior 15 form ofregularization log bilinear model exponential language model neural language models neural language models continuous space language models continuous representations embeddings predictions models neural networks continuous space embeddings alleviate curse dimensionality language modeling language models trained larger larger texts unique vocabulary increases sequences increases exponentially size vocabulary causing data sparsity exponentially sequences statistics properly estimate probabilities neural networks avoid representing distributed linear combinations weights neural alternate description neural approximates language function neural architecture feed recurrent simpler common typically neural language models constructed trained probabilistic classifiers learn predict probability distributioni network trained predict probability distribution vocabulary linguistic context standard neural training algorithms stochastic gradient descent backpropagation context fixed size window previous network predictsfrom feature vector representing previous option future features estimated probability isa option faster training invert previous neural network learn context word maximizes log probabilitythis called skip gram language model basis popular word2vec program neural language models produce actual probabilities common distributed representation encoded networks hidden layers representations word mapped dimensional real vector called word embedding size layer output layer representations skip gram models distinct characteristic model semantic relations linear combinations capturing form compositionality models function maps word vector representation thenwhere precise stipulating hand nearest neighbor left hand models positional language model describes probability occurring close adjacent bag concepts models leverage semantics multi word expressions christmas rich sentences bought lot nice christmas 
1920674	computerscience	kuka manufacturer industrial robots solutions factory automation kuka robotics corporation 25 subsidiaries worldwide sales service subsidiaries including united australia canada mexico brazil china japan south korea taiwan india russia european countries company kuka acronym keller und knappich augsburg owned midea history company founded 1898 augsburg germany johann josef keller jacob knappich company focused house street lights expanded products welding equipment solutions containers market leader public vehicles europe 1966 keller knappich gmbh merged industrie werke karlsruhe industrie werke karlsruhe augsburg aktiengesellschaft eventually kuka keller und knappich augsburg short 1973 kuka created industrial robot famulus time company belonged quandt 1980 quandt family withdrew publicly owned firm established 1995 company split kuka robotics corporation kuka schweißanlagen kuka systems subsidiaries kuka company robotics industries association ria international federation robotics ifr german engineering association vdma kuka concentrates solutions automation industrial manufacturing processes june 2016 midea offered kuka €4 midea completed takeover bid january 2017 74 55 voting stake company robots finished kuka orange official corporate color black corporate data company headquartered augsburg germany december 2014 kuka employed 13 000 workers emphasizing customers automotive industry company expanded industries notable milestones 1971 – europe’s welding transfer built daimler benz 1973 – world’s industrial robot electromechanically driven axes famulus 1976 – 60 – utterly robot type electromechanically driven axes offset wrist 1989 – generation industrial robots developed – brushless drive motors maintenance technical availability 2004 cobot kuka lbr released controlled lightweight robot interact humans safety fences result collaboration german aerospace center institute 1995 2007 – kuka titan – time biggest strongest industrial robot axes entered guinness book records 2010 – robot family robot series quantec completely covers load range 90 300 kg reach 3100 mm time 2012 – robot series agilus launched 2014 – video released march company gained recognition public video supposedly teased robot specialized table tennis match timo boll german professional real match commercial heavy cgi video received strong criticism table tennis community video viewed times youtube numerous awards application kuka software operating software heart entire control basic functions stored deployment robot robots control panel kcp kukacontrolpanel teach pendant display axis control buttons a1 a6 integrated 6d mouse robot moved manual teaching mode pendant user view modify existing programs create manually control axes enabling switch called dead switch pendant pressed halfway motion connection controller proprietary video interface bus safety interlock button operation rugged located control cabinet communicates robot mfc controls real time servo drive electronics servo position feedback transmitted controller called dse rdw rdc connection dse board control cabinet located integrated mfc rdw rdc board located base robot software comprises elements running simultaneously user interface program storage windows 95 krc1 krc2 controllers windows xp embedded krc2 controllers windows embedded krc4 controllers vxwin kuka modified version vxworks real time os program control motion planning communicates mfc systems standard pc peripherals rom drive floppy controllers usb ports standard interface isa pci pcie adding software hardware options industrial automation profibus interbus devicenet profinet application industrial robots application material handling loading unloading machines palletizing depalletizing spot arc welding companies automotive industry industries aerospace industry specific applications include kuka entertainment 2001 kuka formed partnership robocoaster develop passenger carrying industrial robot ride roller coaster style seats attached robotic arms roller coaster motion sequence series programmable maneuvers riders program motions ride generation robocoaster g2 deployed universal islands adventure theme park orlando florida 2010 conjunction dynamic structures harry potter forbidden journey seats mounted robotic arms mounted track allowing arms travel attraction performing movements synchronization ride elements animated props projection surfaces kuka partnership robocoaster kuka robots hollywood films james bond film die day scene depicting ice palace iceland nsa agent jinx played halle berry threatened laser wielding robots ron howard film da vinci code kuka robot hands tom hanks’ character robert langdon container cryptex 2007 kuka introduced simulator based robocoaster robocoaster market product installation version sum thrills ride epcot lake buena vista florida 
1931185	computerscience	automatic image annotation automatic image tagging linguistic indexing process automatically assigns metadata form captioning keywords digital image application vision techniques image retrieval systems organize locate images database method regarded type multi class image classification classes vocabulary size typically image analysis form extracted feature vectors training annotation machine learning techniques attempt automatically apply annotations images methods learned correlations image features training annotations techniques developed machine translation translate textual vocabulary visual vocabulary clustered regions blobs efforts included classification approaches relevance models advantages automatic image annotation content based image retrieval cbir queries naturally user cbir requires users search image concepts color texture finding queries image features images override concept user focusing traditional methods image retrieval libraries relied manually annotated images expensive time consuming constantly growing image databases existence annotation engines online including alipr real time tagging engine developed pennsylvania university researchers behold companies playment edgecase edgecase vott https github vott dataloop dataloop built automatic engines video annotation additional companies infolks datapure scaleapi figure offer mix automatic image annotation mix manual overview automation fails major simultaneous image classification annotation 
1940262	computerscience	vision image processing otsu method named automatically perform clustering based image thresholding reduction graylevel image binary image algorithm assumes image classes pixels modal histogram foreground pixels background pixels calculates optimum threshold separating classes combined spread intra class variance minimal equivalently sum pairwise squared distances constant inter class variance maximal otsu method roughly dimensional discrete analog fisher discriminant analysis otsu method jenks optimization method extension original method multi level thresholding referred multi otsu method otsu method otsu method exhaustively search threshold minimizes theintra class variance variance class defined weighted sum variances classes weights probabilities classes separatedby threshold variances classes class probability computed bins histogram otsu minimizing intra class variance maximizing inter class variance expressed terms class probabilities 11 andclass 12 class 13 relations easily verified class probabilities class computed iteratively ideayields effective algorithm matlab octave implementation histogramcounts 256 element histogram grayscale image gray levels typical bit images level threshold image double matlab built functions codice codice image processing toolbox implemented otsu method multi otsu method limitations otsu method exhibits performance histogram assumed bimodal distribution assumed possess deep sharp valley peaks object compared background histogram exhibits bimodality variances object background intensities compared difference image severely corrupted additive noise sharp valley gray level histogram degraded incorrect threshold determined otsu method segmentation error define object size ratio object entire image difference difference average intensities object background experimental performance global thresholding techniques including otsu method limited object size difference variances object background intensities noise improvements improvements focusing limitations otsu method famous effective dimensional otsu method approach gray level pixel average neighborhood studied binarization greatly improved images corrupted noise pixel average gray level neighborhood calculated gray level picture divided values average gray level divided values pair formed pixel gray level average neighborhood pair belongs dimensional bin total bins 25 total occurrence frequency 26 pairformula 27 divided total pixels image 28 defines joint probability mass function dimensional histogram dimensional otsu method developed based onthe dimensional histogram probabilities classes denoted intensity vectors classes total vector expressed probability diagonal negligible easy verify inter class discrete matrix defined asthe trace discrete matrix expressed aswheresimilar dimensional otsu method optimal threshold 38 maximizing algorithm 40 iteratively dimensional otsu method values 40 changed maximum isnotice evaluating fast recursive dynamic programming algorithm improve time performance dynamic programming approach 2d otsu method time complexity researches reduce computation cost summed tables build tables sum sum sum runtime complexity maximum pixels bins bins note coarse resolution termsof threshold bins reduced matlab implementation function inputs output hists 46 2d histogram grayscale neighborhood average grayscale pair total pairs image determined bins 2d histogram direction threshold threshold 
1940509	computerscience	science instruction set zisc refers architecture based solely pattern matching absence micro instructions classical sense chips comparable neural networks marketed synapses neurons acronym zisc alludes reduced instruction set risc history zisc technology based ideas artificial neural networks massively parallel processing concept invented guy paillet design zisc architecture alleviates memory bottleneck blending pattern memory pattern learning recognition logic massively parallel computing solves allotting neuron memory allowing simultaneous solving settled disputing commercial production ibm released zisc35 36 neurons 1993 zisc78 2000 manufacturing discontinued 2001 1993 2010 darpa intel developed ni1000 time ibm patent august 2007 cm1k cognimem 024 neurons introduced cognimem cm1k designed anne menendez guy paillet practical zisc focus pattern recognition retrieval data mining security tasks applications controversy techcrunch software emulations types chips image recognition tech companies facebook google applied miscellaneous pattern detection tasks produced microseconds chips released 2007 junko yoshida times compared neuromem chip machine machine capable predict crimes scanning people person series describing heart data foreshadow real life escalation era massive data collection 
1952952	computerscience	networking term link aggregation applies methods combining aggregating multiple network connections parallel increase throughput single connection sustain provide redundancy links fail link aggregation lag combines physical ports single bandwidth data path implement traffic load sharing ports enhance connection reliability umbrella terms method include port trunking link bundling ethernet network nic bonding channel bonding nic teaming umbrella terms encompass vendor independent standards link aggregation control protocol lacp ethernet defined ieee 802 1ax previous ieee 802 3ad proprietary solutions network architects implement aggregation lowest layers osi model layer aggregation occurs balance network load links implementations advantage methods provide failover combining occur multiple interfaces share logical address ip physical address mac address interface address requires link aggregation method performance advantages channel bonding differentiated load balancing load balancing divides traffic network interfaces network socket osi model layer basis channel bonding implies division traffic physical interfaces level packet osi model layer data link osi model layer basis description link aggregation addresses ethernet connections bandwidth limitations lack resilience regard issue bandwidth requirements scale linearly ethernet bandwidths historically increased tenfold generation megabit 100 mbit 1000 mbit 000 mbit started bump bandwidth ceilings option generation cost prohibitive alternative solution introduced network manufacturers 1990s combine physical ethernet links logical link channel bonding solutions required manual configuration identical equipment aggregation involves single failure typical port cable port connection usual switch switch switch configuration cable ports cable plugged fail multiple physical connections level protocols designed fail completely seamlessly ieee link aggregation standardization process mid 1990s network switch manufacturers included aggregation capability proprietary extension increase bandwidth switches manufacturer developed method led compatibility ieee 802 study create inter operable link layer standard november 1997 meeting agreed include automatic configuration feature add redundancy link aggregation control protocol initial release 802 3ad 2000 gigabit channel bonding schemes ieee standard link aggregation clause 43 ieee 802 standard march 2000 ieee 802 3ad task force network equipment manufacturer joint standard proprietary standards 802 layer 2008 802 maintenance task force report 9th revision project november 2006 802 layers 802 1x security positioned protocol stack link aggregation defined 802 sublayer resolve discrepancy 802 3ax 802 1ax task force formed formal transfer protocol 802 publication ieee 802 1ax 2008 november 2008 link aggregation control protocol ieee specification link aggregation control protocol lacp method control bundling physical ports form single logical channel lacp network device negotiate automatic bundling links sending lacp packets peer connected device implements lacp lacp features practical examplespractical notes lacp sending frames lacpdus links protocol enabled device link lacp enabled independently send frames links enabling units detect multiple links combine single logical link lacp configured modes active passive active mode send frames configured links passive mode acts speak spoken controlling accidental loops device active mode proprietary link aggregation addition ieee link aggregation substandards proprietary aggregation schemes including cisco etherchannel port aggregation protocol juniper aggregated ethernet avaya multi link trunking split multi link trunking routed split multi link trunking distributed split multi link trunking zte smartgroup huawei eth trunk connectify speedify network devices support link aggregation software based implementations – bsd lagg package linux bonding driver solaris dladm aggr – exist operating systems linux bonding driver linux bonding driver method aggregating multiple network interface controllers nics single logical bonded interface called nic slaves majority modern linux distributions linux kernel linux bonding driver integrated loadable kernel module ifenslave interface user level control program pre installed donald becker programmed original linux bonding driver beowulf cluster patches linux kernel driver modes modes linux bonding driver network interface aggregation modes supplied parameters kernel bonding module load time command linearguments insmod modprobe command linux distribution specific configuration file behavior single logical bonded interface depends bonding driver mode default parameter balance rr linux team driver linux team driver alternative bonding driver main difference team driver kernel essential code rest code link validation lacp implementation decision userspace teamd daemon usage network backbone link aggregation offers inexpensive set speed backbone network transfers data single port device deliver link aggregation network backbone speed grow incrementally demand network increases replace hardware backbone installations install cabling fiber optic pairs initially additional cabling labor costs cost cable running extra cable reduces future labor costs networking change link aggregation extra cables increase backbone speeds extra cost ports frames balancing traffic network administrators avoid reordering ethernet frames tcp suffers additional overhead dealing packets goal approximated sending frames session link common implementations l2 l3 hashes based mac ip addresses ensuring flow physical link provide distribution links trunk single pairs hosts communicate hashes provide variation effectively limits client bandwidth aggregate single maximum bandwidth communication partner extreme link loaded completely idle reason load balancing utilization trunked links reached real life implementations advanced switches employ l4 hash tcp udp port increase traffic variation links – depending ports vary – bring balance closer distribution maximum throughput multiple switches utilized optimize maximum throughput multiple network switch topology switches configured parallel isolated network systems configuration switches isolated reason employ topology isolated network hosts cluster configured performance multiple switches cost effective single larger switch access network required individual host equipped additional network device connected anexternal network host additionally acts gateway network interfaces cluster node connected separate network switches network interfaces cluster node inter connections network switches linux bonding driver mode typically employed configurations type balance rr balance rr mode individual connections hosts effectively utilize interface bandwidth network interface cards nics trunked provide network links throughput single nic central file server establish aggregate gigabit connection gigabit nics teamed note data signaling rate 1gbit misleading depending methodologies throughput link aggregation employed windows windows server 2012 supports link aggregation natively previous windows server versions relied manufacturer support feature device driver software intel released advanced networking services ans bond intel fast ethernet gigabit cards nvidia supports teaming nvidia network access manager firewall tool hp teaming tool hp branded nics etherchanneled nic teaming support modes etherchannel port aggregation including 802 3ad lacp addition basic layer aggregation windows xp sp3 servers multiple ip interfaces network perform load balancing users internet connection increase connection speed sharing load interfaces broadcom offers advanced functions broadcom advanced control suite bacs teaming functionality basp broadcom advanced server program offering 802 3ad static lags lacp smart teaming require configuration switches configure teaming bacs mix nics vendors broadcom nics required capabilities create teaming linux unix linux freebsd netbsd openbsd macos opensolaris commercial unix distributions aix implement ethernet bonding trunking level deal nics manufacturers drivers nic supported kernel virtualization platforms citrix xenserver vmware esx native support link aggregation xenserver offers static lag lacp vsphere esxi supports static lag lacp natively virtual distributed switch hyper bonding teaming offered hyper visor os level mentioned methods teaming windows applies hyper limitations single switch modes balance rr balance xor broadcast 802 3ad physical ports link aggregation reside logical switch scenarios leave single failure physical switch links connected offline modes active backup balance tlb balance alb set switches failover modes active sessions fail arp restarted vendors proprietary extensions resolve issue aggregate multiple physical switches logical switch split multi link trunking smlt protocol multiple ethernet links split multiple switches stack preventing single failure additionally allowing switches load balanced multiple aggregation switches single access stack devices synchronize inter switch trunk ist connecting access device single device switch block prevent packet duplication smlt enhanced resiliency failover recovery speed trunks 10 mbit 100 mbit 000 mbit 10 gbit operating transparently devices link speed implementations ports aggregation consist physical type copper ports 100 1000base‑t multi mode fiber ports single mode fiber ports ieee standard requires link duplex identical speed 100 000 000 mbit switches phy independent meaning switch mixture copper sx lx lx10 gbics maintaining phy usual approach aggregate 1000base sx fiber link 1000base lx diverse path link speed gbit duplex links path propagation time standard engineered issue ethernet aggregation mismatch aggregation mismatch refers matching aggregation type link switches implement 802 1ax standard support static configuration link aggregation link aggregation statically configured switches fail statically configured switch device configured lacp examples ethernet ethernet interfaces channel bonding requires assistance ethernet switch host operating stripe delivery frames network interfaces manner striped disks raid array reason discussions channel bonding refer redundant array inexpensive nodes rain redundant array independent network interfaces modems analog modems multiple dial links pots bonded throughput bonded connections closer aggregate bandwidth bonded links throughput routing schemes simply load balance outgoing network connections links dsl multiple dsl lines bonded bandwidth united kingdom adsl bonded 512kbit upload bandwidth megabit download bandwidth access megabit bandwidth docsis docsis specifications data cable catv systems multiple channels bonded docsis 32 downstream upstream channels bonded typically 8mhz wide docsis defines complicated arrangements involving aggregation level subcarriers larger notional channels wireless broadband broadband bonding type channel bonding refers aggregation multiple channels osi layers level channels bonded wired links dsl additionally bond multiple cellular links aggregated wireless bonded link previous bonding methodologies resided osi layers requiring coordination telecommunications companies implementation broadband bonding implemented layers coordination commercial implementations broadband channel bonding include mimo 
1964509	computerscience	notoc korea center kcc north korean government technology center founded october 24 1990 kcc administers country code level domain employs 000 people kcc operates development production centers regional centers runs kcc technology college technology institute kcc branch offices china germany syria united arab emirates linux started development red star os distribution localised north korea kcc political establishment company technological modernity lagging rest zeitgeist north korea cctld registered 2007 kcc manage registry support european company kcc implemented cctld infrastructure north korean government goal kcc projects north korea 2001 served clients europe china south korea japan middle east operates naenara north korea official portal nosotek north korean venture company develops games published news corporation company pyongyang center 
2031045	computerscience	computing hardware acceleration hardware specially perform functions efficiently software running purpose transformation data routine computed calculated purely software running generic cpu purely custom hardware mix operation computed faster application specific hardware designed programmed compute operation software performed purpose processor approach advantages disadvantages implementation computing tasks hardware decrease latency increase throughput hardware acceleration typical advantages software include rapid development leading faster times market recurring engineering costs heightened portability ease updating features patching bugs cost overhead compute operations advantages hardware include speedup reduced power consumption latency increased parallelism bandwidth utilization functional components integrated circuit cost ability update designs etched silicon costs functional verification times market hierarchy digital computing systems ranging purpose processors customized hardware tradeoff flexibility efficiency efficiency increasing magnitude application implemented hierarchy hierarchy includes purpose processors cpus specialized processors gpus fixed function implemented field programmable gate arrays fpgas fixed function implemented application specific integrated circuit asics hardware acceleration advantageous performance practical functions fixed updates software solutions advent reprogrammable logic devices fpgas restriction hardware acceleration fixed algorithms eased 2010 allowing hardware acceleration applied domains requiring modification algorithms processing control flow overview integrated circuits created perform arbitrary operations analog digital signals computing signals digital interpreted binary data hardware software operate binary representation perform computing accomplished calculating boolean functions bits input outputting result output device downstream storage processing computational equivalence hardware software software hardware compute computable function custom hardware offers performance watt functions software hardware description languages hdls verilog vhdl model semantics software synthesize design netlist programmed fpga composed logic gates application specific integrated circuit stored program computers vast majority software based computing occurs machines implementing von neumann architecture collectively stored program computers programs stored data executed processors typically cpu cores processors fetch decode instructions data operands memory instruction cycle execute instructions constituting software program relying common cache code data leads von neumann bottleneck fundamental limitation throughput software processors implementing von neumann architecture modified harvard architecture instructions data separate caches memory hierarchy overhead decoding instruction opcodes multiplexing execution units microprocessor microcontroller leading circuit utilization intel hyper threading technology simultaneous multithreading exploiting utilization processor functional units instruction level parallelism hardware threads hardware execution units hardware execution units rely von neumann modified harvard architectures perform instruction fetch decode steps instruction cycle incur stages overhead calculations register transfer level hardware design time circuit costs incurred instruction fetch decoding stages reclaimed reclamation saves time power circuit computation reclaimed resources increased parallel computation functions communication memory increased input output capabilities opportunity cost purpose utility emerging hardware architectures rtl customization hardware designs emerging architectures memory computing transport triggered architectures tta networks chip noc benefit increased locality data execution context reducing computing communication latency modules functional units custom hardware limited parallel processing capability logic blocks integrated circuit die hardware offer massive parallelism software purpose processors offering possibility implementing parallel random access machine pram model common build multicore manycore processing units microprocessor ip core schematics single fpga asic specialized functional units composed parallel digital signal processing embedded processor ip core hardware acceleration employed repetitive fixed tasks involving conditional branching amounts data nvidia cuda gpus implemented implementation metrics device mobility increased relative performance specific acceleration protocols required metricizations characteristics physical hardware dimensions power consumption operations throughput summarized categories task efficiency implementation efficiency flexibility metrics hardware operations throughput energy consumed tasks accelerated summing integers suppose compute sum integers assuming integers codice hold sum software syntaxhighlight lang constexpr 20 constexpr « bignum array sum const std array ints syntaxhighlight algorithm runs linear time notation hardware sufficient chip calculation parallelized 20 time steps prefix sum algorithm algorithm requires logarithmic time space algorithm syntaxhighlight lang systemverilog parameter 20 parameter « function array sum takes advantage parallel resources application specific hardware software purpose computing paradigms architectures stream processing hardware acceleration applied stream processing applications examples hardware acceleration include bit blit acceleration functionality graphics processing units gpus memristors accelerating neural networks regular expression hardware acceleration spam control server industry intended prevent regular expression denial service redos attacks hardware performs acceleration purpose cpu separate unit referred hardware accelerator 3d accelerator cryptographic accelerator traditionally processors sequential instructions executed designed purpose algorithms controlled instruction fetch moving temporary register file hardware accelerators improve execution specific algorithm allowing concurrency specific datapaths temporary variables reducing overhead instruction control fetch decode execute cycle modern processors multi core feature parallel single instruction multiple data simd units hardware acceleration yields benefits hardware acceleration suitable computation intensive algorithm executed frequently task program depending granularity hardware acceleration vary functional unit functional block motion estimation mpeg 
2056516	computerscience	opencv source vision library programming functions aimed real time vision originally developed intel supported willow garage itseez acquired intel library cross platform source bsd license opencv supports deep learning frameworks tensorflow torch pytorch caffe history officially launched 1999 opencv project initially intel initiative advance cpu intensive applications series projects including real time ray tracing 3d display walls main contributors project included optimization experts intel russia intel performance library team days opencv goals project alpha version opencv released public ieee conference vision pattern recognition 2000 betas released 2001 2005 version released 2006 version pre release released october 2008 major release opencv october 2009 opencv includes major interface aiming easier type safe patterns functions implementations existing terms performance multi core systems official releases occur months development independent russian team supported commercial corporations august 2012 support opencv profit foundation opencv maintains developer user 2016 intel signed agreement acquire itseez leading developer opencv applications opencv application include support opencv includes statistical machine learning library programming language opencv written primary interface retains comprehensive extensive interface bindings python java matlab octave api interfaces online documentation wrappers languages perl haskell ruby developed encourage adoption wider audience developments algorithms opencv developed interface hardware acceleration library intel integrated performance primitives proprietary optimized routines accelerate cuda based gpu interface progress september 2010 opencl based gpu interface progress october 2012 documentation version 13 docs opencv os support opencv runs desktop operating systems windows linux macos freebsd netbsd openbsd opencv runs mobile operating systems android ios maemo blackberry user official releases sourceforge sources github opencv cmake 
2057290	computerscience	retrieval tf–idf tfidf short term frequency–inverse document frequency numerical statistic intended reflect word document collection corpus weighting factor searches retrieval mining user modeling tf–idf increases proportionally times word appears document offset documents corpus word helps adjust frequently tf–idf popular term weighting schemes 83 based recommender systems digital libraries tf–idf variations tf–idf weighting scheme search engines central tool scoring ranking document relevance user query tf–idf filtering subject fields including summarization classification simplest ranking functions computed summing tf–idf query term sophisticated ranking functions variants simple model motivations term frequency suppose set english documents rank document relevant query brown cow simple start eliminating documents brown cow leaves documents distinguish count times term occurs document times term occurs document called term frequency documents varies greatly adjustments definition form term weighting hans peter luhn 1957 summarized inverse document frequency term common term frequency tend incorrectly emphasize documents happen word frequently weight meaningful terms brown cow term keyword distinguish relevant relevant documents terms common brown cow inverse document frequency factor incorporated diminishes weight terms occur frequently document set increases weight terms occur rarely karen spärck jones 1972 conceived statistical interpretation term specificity called inverse document frequency idf cornerstone term weighting definition tf–idf product statistics term frequency inverse document frequency determining exact values statistics term frequency term frequency simplest choice raw count term document times term occurs document denote raw count simplest scheme possibilities includeinverse document frequency inverse document frequency measure word common rare documents logarithmically scaled inverse fraction documents word dividing total documents documents term logarithm quotient withterm frequency–inverse document frequency tf–idf calculated asa weight tf–idf reached term frequency document document frequency term collection documents weights tend filter common terms ratio idf log function equal idf tf–idf equal term appears documents ratio logarithm approaches bringing idf tf–idf closer justification idf idf introduced term specificity karen spärck jones 1972 paper heuristic theoretical foundations troublesome decades afterward researchers theoretic justifications spärck jones explanation propose theory connection zipf law attempts idf probabilistic footing estimating probability document term relative document frequency define idf asnamely inverse document frequency logarithm inverse relative document frequency probabilistic interpretation takes form applying theoretic notions retrieval leads define event spaces required probability distributions documents account queries terms tf–idf suppose term count tables corpus consisting documents listed calculation tf–idf term performed raw frequency form frequency document document word appears document relative frequency idf constant corpus accounts ratio documents include word corpus documents include word tf–idf word implies word informative appears documents word occurs times document finally base logarithm terms idea tf–idf applies entities terms 1998 concept idf applied citations authors argued uncommon citation shared documents weighted highly citation documents addition tf–idf applied visual purpose conducting object matching videos entire sentences concept tf–idf prove effective plain scheme idf tf–idf applied citations researchers improvement simple citation count weight idf component derivates term weighting schemes derived tf–idf tf–pdf term frequency proportional document frequency tf–pdf introduced 2001 context identifying emerging topics media pdf component measures difference term occurs domains derivate tf–iduf tf–iduf idf calculated based document corpus searched recommended idf calculated users personal document collections authors report tf–iduf equally effective tf–idf applied situations user modeling access global document corpus 
2069686	computerscience	modular audio recognition framework marf source platform collection voice sound speech natural language processing nlp algorithms written java arranged modular extensible framework attempts facilitate addition algorithms marf library applications source learning extension applications framework detailed manual api reference javadoc format project documented marf applications source code documentation released bsd style license 
2070605	computerscience	stochastic neural networks type artificial neural networks built introducing random variations network network neurons stochastic transfer functions stochastic weights tools optimization random fluctuations escape local minima neural network stochastic transfer functions boltzmann machine neuron binary valued chance firing depends neurons network stochastic neural networks applications risk management oncology bioinformatics fields 
2088675	computerscience	probabilistic latent semantic analysis plsa probabilistic latent semantic indexing plsi retrieval circles statistical technique analysis mode occurrence data derive dimensional representation observed variables terms affinity hidden variables latent semantic analysis plsa evolved compared standard latent semantic analysis stems linear algebra downsizes occurrence tables singular decomposition probabilistic latent semantic analysis based mixture decomposition derived latent class model model observations form occurrences documents plsa models probability occurrence mixture conditionally independent multinomial distributions topic note topics hyperparameter chosen advance estimated data formulation symmetric formulation generated latent class conditional probabilities formulation asymmetric formulation document latent class chosen conditionally document word generated class documents occurrence couple discrete variables modelled parameters equal 11 parameters grows linearly documents addition plsa generative model documents collection estimated generative model documents parameters learned em algorithm application plsa discriminative setting fisher kernels plsa applications retrieval filtering natural language processing machine learning reported aspect model probabilistic latent semantic analysis severe overfitting history latent class model references negative matrix factorization terminology coined 1999 thomas hofmann 
2090057	computerscience	statistics kernel density estimation kde parametric estimate probability density function random variable kernel density estimation fundamental data smoothing inferences population based finite data sample fields signal processing econometrics termed parzen–rosenblatt window method emanuel parzen murray rosenblatt credited independently creating current form definition xn univariate independent identically distributed sample drawn distribution unknown density ƒ estimating shape function ƒ kernel density estimator iswhere kernel negative function smoothing parameter called bandwidth kernel subscript called scaled kernel defined intuitively choose data trade bias estimator variance choice bandwidth discussed range kernel functions commonly uniform triangular biweight triweight epanechnikov normal epanechnikov kernel optimal square error sense loss efficiency kernels listed convenient mathematical properties normal kernel ϕ standard normal density function construction kernel density estimate interpretations fields density estimation thermodynamics equivalent heat generated heat kernels fundamental solution heat equation data locations xi methods construct discrete laplace operators clouds manifold learning kernel density estimates closely histograms endowed properties smoothness continuity suitable kernel compare construction histogram kernel density estimators data histogram horizontal axis divided intervals bins cover range data bins data falls interval box height 12 data falls bin stack boxes kernel density estimate normal kernel variance 25 red dashed lines data xi kernels summed kernel density estimate solid blue curve smoothness kernel density estimate evident compared discreteness histogram kernel density estimates converge faster true underlying density continuous random variables bandwidth selection bandwidth kernel parameter exhibits strong influence estimate illustrate simulated random sample standard normal distribution plotted blue spikes rug plot horizontal axis grey curve true density normal density variance comparison red curve undersmoothed spurious data artifacts arising bandwidth 05 green curve oversmoothed bandwidth obscures underlying structure black curve bandwidth 337 considered optimally smoothed density estimate close true density common optimality criterion select parameter expected risk function termed integrated squared error weak assumptions ƒ ƒ unknown real density function mise amise nh h4 notation amise asymptotic mise consists leading termswhere function 5and ƒ derivative ƒ minimum amise solution differential equationorneither amise amise formulas involve unknown density function ƒ derivative ƒ variety automatic data based methods developed selecting bandwidth review studies carried compare efficacies consensus plug selectorssubstituting bandwidth asymptotic −1 amise amisegives amise −4 notation weak assumptions exist parametric estimator converges faster rate kernel estimator note −4 rate slower typical −1 convergence rate parametric methods bandwidth held fixed varied depending location estimate balloon estimator samples pointwise estimator produces powerful method termed adaptive variable bandwidth kernel density estimation bandwidth selection kernel density estimation heavy tailed distributions difficult rule thumb bandwidth estimator gaussian basis functions approximate univariate data underlying density estimated gaussian optimal choice bandwidth minimises integrated squared error iswhere standard deviation samples approximation termed normal distribution approximation gaussian approximation silverman 1986 rule thumb rule thumb easy compute caution yield inaccurate estimates density close normal estimating bimodal gaussian mixture sample 200 figure true density kernel density estimates—one rule thumb bandwidth usinga solve equation bandwidth estimate based rule thumb bandwidth oversmoothed matlab script kde relation characteristic function density estimator sample xn natural estimate characteristic function asknowing characteristic function probability density function fourier transform difficulty applying inversion leads diverging integral estimate 12 unreliable ’s circumvent estimator 12 multiplied damping function equal origin falls infinity “bandwidth parameter” controls fast dampen function 12 ψh range ’s 12 remains practically unaltered region ’s common choice function ψ uniform function effectively truncating interval integration inversion gaussian function function ψ chosen inversion applied density estimator bewhere fourier transform damping function ψ kernel density estimator coincides characteristic function density estimator statistical implementation exhaustive list software implementations kernel density estimators includes 
2152217	computerscience	freertos real time operating kernel embedded devices ported 35 microcontroller platforms distributed mit license implementation freertos designed simple kernel consists files code readable easy port maintainable written assembly functions included architecture specific scheduler routines freertos methods multiple threads tasks mutexes semaphores software timers tick mode power applications thread priorities supported freertos applications completely statically allocated alternatively rtos objects dynamically allocated schemes memory allocation advanced features typically operating systems linux windows device drivers advanced memory management user accounts networking emphasis compactness speed execution freertos thread library operating command interface posix abstraction add ons supported popular ssl tls libraries wolfssl freertos implements multiple threads host program thread tick method regular short intervals thread tick method switches tasks depending priority robin scheduling scheme usual interval 1000 100 interrupt hardware timer interval changed suit application download prepared configurations demonstrations port compiler allowing rapid application design freertos lot documentation rtos tutorials additional manuals tutorials fee details rtos design derivations amazon freertos amazon extension freertos referred freertos freertos libraries iot support amazon services version 2017 amazon stewardship freertos code including updates original kernel safertos safertos developed complementary version freertos common functionality designed safety critical implementation freertos subjected hazop weaknesses identified resolved result iec 61508 sil development life cycle level software component safertos developed wittenstein integrity systems partnership real time engineers primary developer freertos project safertos freertos share scheduling algorithm apis developed differing objectives safertos developed solely language meet requirements certification iec61508 safertos reside solely chip read memory microcontroller standards compliance implemented hardware memory safertos code utilized original certified configuration certification systems kernel portion designs safertos included rom stellaris microcontrollers texas instruments safertos source code separately purchased usage scenario header file map safertos api functions location read memory openrtos openrtos commercially licensed version amazon freertos sold wittenstein integrity systems product support companies amazon freertos kernel libraries freertos mit license 
2163522	computerscience	subsidiary formed 1991 intent advance art computing solve difficult technological innovation collaboration academic government industry researchers team employs 000 scientists physicists engineers mathematicians including turing award winners fields medal winners macarthur fellows dijkstra prize winners includes core labs directed technical fellow eric horvitz experiences technologies directed corporate vice president peter lee 2010 2018 154 000 patents filed worldwide largest percentage patents 20 categorized broad sponsors fellowship graduate students laboratories labs collaborations invests multi collaborative joint academic institutions barcelona supercomputing center inria carnegie mellon university massachusetts institute technology sao paulo foundation fapesp centre social nui 
2182112	computerscience	jonathan bowen fbcs frsa born 1956 british scientist overview jonathan bowen chairman museophile limited emeritus professor london south bank university headed centre applied formal methods professor science birmingham city university visiting professor pratt institute york city university westminster king college london visiting academic university college london education bowen born oxford son humphry bowen educated dragon school bryanston school prior matriculation university college oxford oxford university received degree engineering science career bowen imperial college london oxford university computing laboratory oxford university department science university reading london south bank university formal methods notation chair user 1990s 2011 2002 bowen elected chair british society facs specialist formal aspects computing science 2005 bowen associate editor chief journal innovations systems software engineering associate editor editorial board acm computing surveys journal covering software engineering formal methods 2008–9 associate praxis integrity systems industrial project notation bowen major online museums 1994 founded virtual library museums vlmp online museums directory international council museums icom started virtual museum computing 2002 founded museophile limited museums online discussion forums industry oxford instruments marconi instruments logica silicon graphics altran praxis bowen elected fellow royal society encouragement arts manufactures commerce rsa 2002 british society bcs 2004 liveryman worshipful company technologists city london 
2191771	computerscience	cpu core voltage vcore power supply voltage supplied cpu digital circuit gpu device processing core power cpu heat dissipates product voltage current draws modern cpus cmos current proportional clock speed cpu drawing current clock cycles subthreshold leakage power saving clock speed conserve power manage heat laptop desktop processors power management feature software operating adjust clock speed core voltage dynamically voltage regulator module converts 5v 12 voltage cpu core voltage required cpu trend core voltages conserve power cmos designer challenge cmos voltages ground supply voltage source gate drain terminals fets supply voltage voltage mosfet current supplied fet proportional gate source voltage reduced threshold voltage dependent geometrical shape fet channel gate physical properties capacitance reduce reduce supply voltage increase current increase capacitance load driven fet gate current drive proportional capacitance requires designer trend supply voltage goal clock speed improvements photolithography reduction threshold voltage improve note channel mosfets mosfets halving 18 24 months moore law distance terminals mosfet switch called channel nature relationship terminal voltages current processor overclocked clock speed increased cost stability withstand clocks core voltage increased cost power consumption heat dissipation overvolting overvolting involves running processor specifications damage shorten cpu life dual voltage cpu dual voltage cpu split rail design voltages processor core external input output voltages remain volts compatibility single voltage cpu single power voltage chip supplying power internal power 2002 microprocessor market statistics cpus single voltage cpus cpus pentium mmx single voltage cpus dual voltage cpus introduced performance gain increasing clock speeds finer semiconductor fabrication processes excess heat generation power supply concerns laptop computers voltage regulator external voltage levels transformed voltages reduce power usage heat produced ability operate frequencies vrt feature intel p5 pentium processors typically intended mobile environment refers splitting core voltage supply voltage vrt processor core voltage save power compared typical pentium processor core voltage 3v pentium mmx processors called split rail power supply 
2203602	computerscience	design programs htdp textbook matthias felleisen robert bruce findler matthew flatt shriram krishnamurthi systematic design programs published 2001 mit press edition published 2018 freely online print book introduces concept design recipe step process creating programs statement book originally conjunction teachscheme project programbydesign colleges universities teaching program design principles htdp design process starts careful analysis statement goal extracting rigorous description kinds data desired program consumes produces structure data descriptions determines organization program book carefully introduces complex kinds data sets introductory programming book starts atomic forms data progresses compound forms data including data arbitrarily data definition book explains organize program principle enabling programmer encounters form data construct program systematically structure interpretation programs sicp htdp relies variant scheme programming language programming environment dubbed drracket series programming languages language supports functions atomic data simple structures language adds expressive power previous exception largest teaching language languages htdp functional programming languages 2004 paper structure interpretation science curriculum authors distinguish pedagogical focus htdp sicp htdp designed textbook address issues students teachers sicp postsecondary education colleges schools htdp classes including 
2214847	computerscience	geometry processing mesh processing concepts applied mathematics science engineering design efficient algorithms acquisition reconstruction analysis manipulation simulation transmission complex 3d models implies concepts data structures algorithms analogous signal processing image processing image smoothing convolve intensity signal blur kernel formed laplace operator geometric smoothing achieved convolving surface geometry blur kernel formed laplace beltrami operator applications geometry processing algorithms cover wide range multimedia entertainment classical aided design biomedical computing reverse engineering scientific computing geometry processing common topic siggraph premier graphics academic conference main topic annual symposium geometry processing geometry processing life cycle geometry processing involves shape 2d 3d shape live space arbitrary dimensions processing shape involves stages life cycle birth shape instantiated methods model mathematical representation scan shape born analyzed edited repeatedly cycle involves acquiring measurements distances shape smoothness shape euler characteristic editing involve denoising deforming performing rigid transformations final stage shape life consumed consumed viewer rendered asset game movie instance shape life defined decision shape satisfies criteria fabricated real method 3d printing laser cutting discrete representation shape shape shapes geometry processing properties pertaining geometry topology geometry shape concerns position shape space tangents normals curvature includes dimension shape lives topology shape collection properties change smooth transformations applied shape concerns dimensions holes boundaries orientability shape orientable shape mobius strip computers discretized shapes geometry processing represented triangle meshes graph node graph vertex position encodes geometry shape directed edges connect vertices triangles hand rule direction called normal triangle forms mesh combinatoric nature encode topology shape addition triangles class polygon meshes represent shape advanced representations progressive meshes encode coarse representation sequence transformations produce fine resolution representation shape applied meshes variety applications including geomorphs progressive transmission mesh compression selective refinement properties shape euler characteristic property 3d shape euler characteristic alternatively defined terms genus continuous sense connected components holes donut holes torus connected components boundary surface concrete mesh pair pants connected component holes connected components boundary waist leg holes euler characteristic bring discrete euler characteristic mesh computed terms vertices edges surface reconstruction poisson reconstruction surface mesh depending shape initialized birthed shape exist nebula sampled represent surface space transform surface mesh poisson reconstruction strategy employed method indicator function function determines space belong surface shape computed sampled key concept gradient indicator function sampled equal surface normal formally suppose collection sampled surface denoted space normal 11 gradient indicator function defined 12the task reconstruction variational indicator function surface function 13 14 minimized 15 vector field defined samples variational view minimizer 16as solution poisson equation obtaining approximation 16 18 19 20 lie surface reconstructed marching cubes algorithm construct triangle mesh function 16 applied subsequent graphics applications registration common encountered geometry processing merge multiple views single object captured angles positions registration registration optimal rigid transformation align surface 22 surface 23 formally 24 projection surface 22 surface 23 optimal rotation matrix 27 translation vector 28 minimize objective function 29while rotations linear rotations linearized skew symmetric matrices distance function 30 linear amenable linear approximations change 22 iterative solution iterative closest icp employed solve transformations iteratively solving transformation icp random sample 22 chosen projected 23 sample uniformly random surface triangle mesh random sampling broken stages uniformly sampling triangle uniformly sampling triangles triangle probability proportional surface optimal transformation calculated based difference 34 projection iteration projections calculated based result applying previous transformation samples process repeated convergence smoothing shapes defined scanned accompanying noise signal acting surface actual surface geometry reducing noise data denoising noise reduction surface fairing task geometric smoothing analogous signal noise reduction employs approaches pertinent lagrangian minimized derived recording conformity initial signal 35 smoothness signal approximated magnitude gradient weight 36 37 variation 38 emits conditionformula 40 discretizing piecewise constant elements signal vertices obtainformula 41 choice 42 chosen 43 cotangent laplacian 44 45 term map image laplacian variation adjoint linear solve parameter 36 47 triangle meshes determine values laplacian matrix 48 analyzing geometry connected triangles mesh 49where 50 51 angles edge 52the mass matrix operator computes local integral function set mesh triangles 53parameterization occasionally flatten 3d surface flat plane process parameterization goal coordinates map surface distortions minimized manner parameterization optimization major applications mesh parameterization texture mapping mass springs method measure distortion accrued mapping process measure edges 2d mapping differs lengths original 3d surface formal terms objective function written 54where 55 set mesh edges 56 set vertices optimizing objective function result solution maps vertices single vertex uv coordinates borrowing idea graph theory apply tutte mapping restrict boundary vertices mesh unit circle convex polygon prevents vertices collapsing single vertex mapping applied boundary vertices positioned barycentric interpolation neighbours tutte mapping suffers severe distortions attempts edge lengths equal correctly account triangle sizes actual surface mesh squares conformal mappings measure distortion variations coordinate functions wobbliness distortion apparent mass springs methods variations coordinate functions approach objective function dirichlet energy 57there minimize angle distortion preserve orthogonality 58 addition mapping proportionally sized regions original setting jacobian coordinate functions 59putting requirements augment dirichlet energy objective function 60to avoid vertices mapped single require solution optimization norm orthogonal trivial solution deformation deformation concerned transforming rest shape shape typically transformations continuous alter topology shape modern mesh based shape deformation methods satisfy user deformation constraints handles selected vertices regions mesh propagate handle deformations rest shape smoothly removing distorting details common forms interactive deformations based skeleton based cage based based deformation user apply transformations set called handles shape skeleton based deformation defines skeleton shape user bones rotate joints cage based deformation requires cage drawn shape user manipulates cage volume encloses based deformation handles provide sparse set constraints deformation user moves stay rest surface 61 immersed 62 mapping 63 64 2d parametric domain mapping 34 transformed surface ideally transformed shape adds distortion original model distortion terms displacements 67 laplacian based energy applying laplace operator mappings measure position relative neighborhood handles smooth energy minimize written 68 method translation invariant unable account rotations rigid deformation scheme applies rigid transformation 69 handle 70 rotation matrix 71 translation vector there’s rotations advance pick “best” rotation minimizes displacements achieve local rotation invariance requires function 72 outputs rotation surface energy optimize 73 74 75note translation vector final objective function translations constant gradient segmentation seemingly trivial determining triangle mesh easy surface pose determining function 77 return 78 79 81 simplest shape closed determine 79 surface cast ray 83 direction query count times 84 passes surface 79 ray pass 88 time enters pass bounded ray entering exit 79 84 79 logic applies previous ray intersect extra time time leaves 95now times guarantee closed pair pants article mesh semantic holes waist legs naive attempt solve shoot rays random directions classify 79 rays intersected odd times quantify cast 99 rays 100 associate 101 average 102 ray 103in limit shooting rays method handles meshes accurate rays required method computationally ideal robust approach generalized winding inspired 2d winding approach solid angle 79 triangle mesh determine 79 generalized winding 79 107 proportional sum solid angle contribution triangle mesh 108for closed mesh 107 equivalent characteristic function volume represented 111because 107 harmonic function degrades gracefully meaning segmentation change poked holes closed mesh reason generalized winding handles meshes robustly boundary smoothly passes holes mesh limit generalized winding equivalent ray casting method rays infinity 
2266644	computerscience	multilayer perceptron mlp class feedforward artificial neural network mlp consists layers nodes input layer hidden layer output layer input nodes node neuron nonlinear activation function mlp utilizes supervised learning technique called backpropagation training multiple layers linear activation distinguish mlp linear perceptron distinguish data linearly separable multilayer perceptrons colloquially referred vanilla neural networks single hidden layer theory theory activation function multilayer perceptron linear activation function neurons linear function maps weighted inputs output neuron linear algebra layers reduced layer input output model mlps neurons nonlinear activation function developed model frequency action potentials firing biological neurons common activation functions sigmoids bythe hyperbolic tangent ranges logistic function shape ranges output 3th node neuron weighted sum input connections alternative activation functions proposed including rectifier softplus functions specialized activation functions include radial basis functions radial basis networks class supervised neural network models layers mlp consists layers input output layer hidden layers nonlinearly activating nodes mlps connected node layer connects weight node layer learning learning occurs perceptron changing connection weights piece data processed based error output compared expected result supervised learning carried backpropagation generalization squares algorithm linear perceptron represent error output node 7th data training target produced perceptron node weights adjusted based corrections minimize error entire output byusing gradient descent change weight iswhere output previous neuron 14 learning rate selected ensure weights converge response oscillations derivative calculated depends induced local field 15 varies easy prove output node derivative simplified towhere 17 derivative activation function vary analysis difficult change weights hidden node relevant derivative isthis depends change weights 19th nodes represent output layer change hidden layer weights output layer weights change derivative activation function algorithm represents backpropagation activation function theory terminology term multilayer perceptron refer single perceptron multiple layers perceptrons organized layers alternative multilayer perceptron network mlp perceptrons perceptrons strictest sense true perceptrons formally special artificial neurons threshold activation function heaviside step function mlp perceptrons employ arbitrary activation functions true perceptron performs binary classification mlp neuron perform classification regression depending activation function term multilayer perceptron applied respect nature nodes layers composed arbitrarily defined artificial neurons perceptrons interpretation avoids loosening definition perceptron artificial neuron applications mlps ability solve stochastically approximate solutions extremely complex fitness approximation mlps universal function approximators cybenko theorem create mathematical models regression analysis classification regression response variable categorical mlps classifier algorithms mlps popular machine learning solution 1980s finding applications diverse fields speech recognition image recognition machine translation software faced strong competition simpler support vector machines backpropagation networks returned successes deep learning 
2271282	computerscience	series 40 shortened s40 software platform application user interface ui software nokia broad range mid tier feature phones vertu luxury phones mobile phone platforms hundreds millions devices nokia announced 25 january 2012 company sold series 40 devices smartphones nokia windows phone 2012 symbian 2012 2013 series 40 phones asha 308 309 311 advertised smartphones support smartphone features multitasking fledged browser 2014 acquired nokia mobile phones business licensing agreement company mobile allowed nokia brand feature phones series 40 range july 2014 company memo revealed future production series 40 devices replaced series 30 history series 40 underlying operating called intelligent architecture isa called nokia operating series 40 introduced 1999 release nokia 7110 96 65 pixel monochrome display phone wap browser s40 ui evolved resolution ui resolution color ui enhanced graphical generation series 40 2005 introduced support devices resolutions qvga 240×320 customize feel ui comprehensive themes 2012 nokia asha mobile phones 200 201 210 302 306 305 308 310 311 303 311 released series 40 final feature phone running series 40 nokia 515 2013 running 6th edition technical applications series 40 communication applications telephone internet telephony voip messaging email client pop3 imap4 capabilities browser media applications camera video recorder music video player radio phonebook personal management pim applications calendar tasks basic file management series 60 applications gallery folders subfolders gallery default location files transferred bluetooth user installed applications series 40 mobile java applications flash lite applications supported screensavers browser integrated browser access content service provider xhtml gateway version series 40 called series 40 6th edition introduced browser based webkit source components webcore javascriptcore browser delivers support 01 css2 javascript ajax series 60 series 40 uc browser browser enhance user browsing experience feature phones asha lineup nokia xpress browser proxy servers compress optimize fashion opera mini synchronization support syncml synchronization address book calendar notes external services s40 phones synchronization settings ota message software platform series 40 embedded software platform software development standard facto content application development technologies supports java midlets java midp cldc technology provide location communication messaging media graphics capabilities s40 supports flash lite applications 
2279892	computerscience	wirth law adage performance software slower rapidly hardware faster adage named niklaus wirth discussed 1995 paper plea lean software history wirth attributed martin reiser preface book oberon wrote hope progress hardware cure software ills critical observer observe software manages outgrow hardware size sluggishness observers time trend obvious 1987 contributing factors acceptance growing software rapidly growing hardware performance customers ignorance features essential nice enhanced user convenience functionality supposedly justify increased size software wirth argues people increasingly misinterpreting complexity sophistication details cute essential hidden cost result calls creation leaner software pioneered development oberon software developed 1986 1989 based hardware primary goal software developed fraction memory capacity processor power required sacrificing flexibility functionality user convenience names law restated 2009 attributed larry founder google referred law attributed sergey brin google conference 2009 common forms names leading hardware software companies 1990s intel ceos andy grove gates intel giveth taketh andy giveth taketh gates law speed software halves 18 months variant wirth law borrowing gates founder observation speed commercial software slows 50 18 months negating benefits moore law occur variety reasons featuritis code cruft developer laziness management turnover design philosophy coincide previous manager law named david variant stating software efficiency halves 18 months compensating moore law 
2303660	computerscience	sixth edition unix called version unix v6 version unix operating wide release bell labs released 1975 direct predecessor targeted dec pdp 11 family minicomputers superseded version unix 1978 1979 v6 systems remained regular operation 1985 corporation licensed version unix educational institutions licensed version commercial users 20 000 remained version 1980s enhanced v6 basis commercially sold unix version interactive bell pwb unix based v6 earlier unreleased versions based v4 v5 whitesmiths produced marketed binary compatible v6 clone idris code original v6 unix bsd license sco ancient unix systems source code source code license explicit forbid v6 teaching tool notably university california berkeley johns hopkins university university south wales unsw uc berkeley distributed set add programs called berkeley software distribution 1bsd fledged operating distribution unsw professor john lions famous commentary unix 6th edition edited selection main kernel implemented digital pdp 11 40 main source kernel documentation unix developers license restrictions unix versions book distributed samizdat photo copying portability interdata 32 1977 richard miller ross nealon supervision professor juris reinfelds wollongong university completed port v6 unix interdata 32 proving portability unix systems programming language practice wollongong interdata unix level included utilities developed wollongong releases features v7 notably compiler wollongong unix port platform pdp series computers proving portable operating systems feasible language write 1980 version licensed wollongong palo alto published edition interdata 32 time bell labs port interdata 32 completed externally released goal port improve portability unix produce portable version compiler portable compiler pcc distributed v7 versions unix produce unix 32v port vax ibm vm 370 unix portability project completed princeton 1976–1977 unix kernel adapted guest operating ibm vm 370 virtualization environment version nucleus amdahl internal unix offering amdahl uts variants extensions bell labs developed variants v6 including stripped mini unix pdp 11 models lsi unix lsx lsi 11 real time operating unix rt merged v6 unix earlier mert hypervisor decided distribution bell labs pre v7 bug fixes constitute support disallowed antitrust settlement tape patchset slipped lou katz usenix distributed university sydney released australian unix share accounting method ausam november 1979 v6 variant improved security process accounting eastern bloc clones v6 unix appeared local built pdp 11 clones mnos augmented partial compatibility bsd unix elektronika bk personal bkunix based lsx v6 teaching mit 2002 2006 subsequently replaced x86 clone called xv6 
2310753	computerscience	radial basis function rbf real valued function depends distance origin alternatively distance called center function satisfies property radial function norm euclidean distance distance functions sums radial basis functions typically approximate functions approximation process interpreted simple neural network context originally surfaced david broomhead david lowe 1988 stemmed michael powell seminal 1977 rbfs kernel support vector classification rbf implementation ready rbf exploited engineering applications types commonly types radial basis functions include writing inverse critical radius approximation radial basis functions typically build function approximations formformula 15where approximating function 16 represented sum 17 radial basis functions center 18 weighted coefficient 19 weights 19 estimated matrix methods linear squares approximating function linear weights 19 approximation schemes time series prediction control nonlinear systems exhibiting simple chaotic behaviour 3d reconstruction graphics hierarchical rbf pose space deformation rbf network sumformula 15can interpreted simple single layer type artificial neural network called radial basis function network radial basis functions role activation functions network continuous function compact interval principle interpolated arbitrary accuracy sum form 23 radial basis functions approximant 16 differentiable respect weights 19 weights learned standard iterative methods neural networks radial basis functions manner yields reasonable interpolation approach fitting set chosen covers entire range systematically equidistant data ideal polynomial term orthogonal radial basis functions estimates fitting set tend perform 
2321845	computerscience	journal acm peer reviewed scientific journal covering science theoretical aspects official journal association computing machinery current editor chief Éva tardos cornell university journal established 1954 scientists universally hold journal acm jacm esteem 
2328319	computerscience	medium dependent interface mdi describes interface physical electrical optical network physical layer implementation physical medium carry transmission ethernet twisted pair defines medium dependent interface crossover mdi interface auto mdi ports network interfaces detect connection require crossover automatically chooses mdi mdi configuration properly match link ethernet popular ethernet family defines common medium dependent interfaces 10base5 connection coaxial cable vampire tap pair connectors 10base2 connection coaxial cable typically single bnc connector piece attached twisted pair cabling 8p8c modular connectors incorrectly called rj45 context fiber variety connectors depending manufacturer physical space availability 10base 100base tx separate twisted pairs directions communication twisted pair cables conventionally wired pin pin pinouts medium dependent interface referred mdi mdi medium dependent interface crossover connecting mdi port mdi port straight cable connect mdi ports mdi ports crossover cable conventionally mdi devices mdi hubs switches hubs switches mdi port switchable connect hubs switches crossover cable mdi mdi terminology refers variants ethernet twisted pair technology female 8p8c port connection network device refers transmit wires mdi device connected receive wires mdi device straight cables connect pins transmit mdi device pins receive mdi device pins receive pins mdi device transmit pins mdi device convention network hubs bridges switches mdi configuration nodes personal computers workstations servers routers mdi interface routers devices uplink normal switch mdi mdi specific port requirement connecting transmitter receiver vice versa odd crossovers devices mdi port internal crossover connecting mdi mdi requires straight cable crossover total connecting mdi mdi crossover mdi mdi crossovers requires nother crossover cable odd complicated setups multiple patch panels structured cabling connection multiple patch building cable segments idea crossovers central hub switch secondary hub switch auto mdi connect ports configuration mdi mdi mdi mdi 100 mbit connection 10base 100base tx ethernet crossover cable cross transmit receive signals cable matched connector level confusion kinds cables hierarchical star network topologies prompted automatic solution auto mdi automatically detects required cable connection type configures connection appropriately removing crossover cables interconnect switches connecting pcs peer peer enabled link type cable auto mdi operate correctly data rate interface duplex setting set auto auto mdi developed hewlett packard engineers daniel joseph dove bruce melvin pseudo random generator decides network port attach transmitter receiver twisted pairs auto negotiate link auto mdi ports connected normal modern products algorithm resolution time typically 500 asynchronous timer resolve extremely rare probability 5×1021 loop switching subsequently dove promoted auto mdi 1000base standard developed patented algorithms forced mode auto mdi link automatically established port auto negotiate implemented device occasionally crossover cable connecting auto mdi mdi hub switch autonegotiation deactivated routers hubs switches including 100 gigabit gigabit devices practice auto mdi 100 mbit connections automatically switch proper configuration cable connected gigabit faster ethernet links twisted pair cable cable pairs simultaneous transmission directions reason dedicated transmit receive pairs crossover cables required 1000base communication physical medium attachment sublayer pma identification pair continues cables pairs unusually swapped crossed 
2352843	computerscience	blender foundation nonprofit organization responsible development blender source 3d content creation program foundation produced animated short films elephants dream 2006 buck bunny 2008 sintel 2010 tears steel 2012 2017 goals foundation chaired ton roosendaal original author blender software funded donations entrepreneurs companies community foundations goals worldwide internet community access 3d technology blender core foundation resources support community formed developing blender organizes annual blender conference amsterdam discuss plans future blender staffing booth represent blender siggraph conference graphics donations maintain blender hire developers blender software projects blender foundation organized community driven projects affiliated blender institute program including freely licensed films source video game yo frankie 2008 foundation projects intended validate improve 3d source content creation pipeline blender project created blender software released permissive license terms source material addition demonstrating capabilities software projects detailed production material sketches tutorials textures models serve examples blender user community finished products purposes 18 march 2006 blender foundation released film elephants dream response success elephants dream blender foundation established blender institute support future software content development projects blender institute operates studio entrepotdok building amsterdam blender foundation located headed ton roosendaal april 2008 blender institute released film buck bunny based movie blender institute released game project yo frankie november 2008 30 september 2010 blender institute released project sintel october 2011 concept script development blender film project titled tears steel contrary previous blender institute projects 100 graphics focus tears steel combination live action footage generated characters environments live action footage shot sony f65 camera project released 26 september 2012 gooseberry movie project movie project initiated blender foundation ton roosendal announced project january 2010 ambitious project primary goals gooseberry movie project film produced blender institute film called cosmos laundromat 2014 release announced minute pilot entitled cosmos laundromat cycle released youtube august 2015 premiered netherlands film festival 24 september 2015 pilot jury prize animago 2015 international conference 3d animation 2013 episode short animated series released blender foundation umbrella 2016 short released hero sixth movie project announced september 2017 released 16th april 2018 technical target hero improve grease pencil tools 
2355246	computerscience	honorary chairman akira murata started murata manufacturing personal venture october 1944 december 1950 reorganized company murata manufacturing paid capital ¥1 murata manufacturing involved manufacturing ceramic passive electronic components capacitors overwhelming share worldwide ceramic filters frequency sensors march 31 2013 murata manufacturing 24 subsidiaries japan 52 overseas united canada mexico brazil germany france italy united kingdom switzerland netherlands spain hungary finland china taiwan south korea singapore malaysia philippines thailand hong kong vietnam india april 13 2012 murata announced deal acquire rf monolithics 78 share august 23 2014 murata announced acquisition peregrine semiconductor corporation july 28 2016 memorandum understanding signed murata sony announcing intent sell portion battery business sony energy devices corporation october 2017 murata announced sponsorship exhibit epcot theme park florida walt disney entitled spectaculab science oriented presentation emphasizes stem themes support children education products murata variety electronic products ranging communication wireless modules power supplies company famous manufacturing lumped components rf filters based processing technologies film film ltcc temperature fired ceramics includes monolithic ceramic capacitors multilayer ceramic devices chip inductors filters crystal filters filters ceramic resonators murata conducts lot technology rf components outcome published patents murata holds 300 patents patent applications technology ceramic capacitors 
2368154	computerscience	clinical decision support cdss health technology designed provide physicians health professionals clinical decision support cds assistance clinical decision tasks definition proposed robert hayward centre health evidence clinical decision support systems link health observations health knowledge influence health choices clinicians improved health care cdsss constitute major topic artificial intelligence medicine effectiveness evidence effectiveness cdss mixed 2014 systematic review benefit terms risk death cdss combined electronic health record benefits terms outcomes 2005 systematic review concluded cdsss improved practitioner performance 64 studies cdsss improved patient outcomes 13 studies sustainable cdsss features improved practitioner performance include methodological quality studies cdsss increased 1973 2004 2005 systematic review decision support systems improved clinical practice 68 trials cdss features success include systematic reviews optimistic effects cds 2011 stating gap postulated empirically demonstrated benefits ehealth technologies cost effectiveness demonstrated evaluation effectiveness cdss implementing rational treatment bacterial infections published 2014 authors term study cdss characteristics clinical decision support defined active knowledge systems items patient data generate specific advice implies cdss simply decision support focused knowledge management achieve clinical advice patient care based multiple items patient data purpose main purpose modern cdss assist clinicians care clinicians interact cdss analyse reach diagnosis based patient data days cdsss conceived literally decisions clinician clinician input wait cdss output choice clinician simply output modern methodology cdsss assist clinician interacts cdss utilizing knowledge cdss analysis patient data human cdss typically cdss suggestions clinician clinician expected pick discount erroneous cdss suggestions main types cdss detailed clinical decision support clinician specific type cdss ddss diagnosis decision support systems ddss requests patients data response proposes set diagnoses doctor takes output ddss determines diagnoses relevant tests narrow diagnosis cdss based reasoning cbr cbr previous data determine beams optimal beam angles radiotherapy brain cancer patients medical physicists oncologists review recommended treatment plan determine viability classification cdss based timing doctors systems care dealing patient timing pre diagnosis diagnosis post diagnosis pre diagnosis cdss systems physician prepare diagnoses cdss diagnosis review filter physician preliminary diagnostic choices improve final post diagnosis cdss systems data derive connections patients medical history clinical predict future events claimed decision support replace clinicians common tasks future approach national health service england ddss operated patient phone operative medically trained triage medical conditions hours suggesting suitable step patient ambulance practitioner day suggestion disregarded patient phone operative common sense caution suggests based implicit conclusion worst diagnosis revealed patient incorrect based medically trained person opinion initial triage purposes knowledge based cdss cdsss consist knowledge base inference engine mechanism communicate knowledge base rules associations compiled data form rules determining drug interactions rule drug drug alert user interface advanced user edit knowledge base drugs inference engine combines rules knowledge base patient data communication mechanism user input knowledge based cdss cdsss knowledge base form artificial intelligence called machine learning computers learn experiences patterns clinical data eliminates writing rules expert input systems based machine learning explain reasons conclusions called black boxes meaningful discerned human inspection clinicians diagnoses reliability accountability reasons post diagnostic systems suggesting patterns clinicians depth types knowledge based systems support vector machines artificial neural networks genetic algorithms regulations united enactment american recovery reinvestment 2009 arra push widespread adoption health technology health technology economic clinical health hitech initiatives hospitals clinics integrating electronic medical records emrs computerized physician entry cpoe health processing storage institute medicine iom promoted usage health technology including clinical decision support systems advance quality patient care iom published report 1999 err human focused patient safety crisis united incredibly deaths statistic attracted attention quality patient care enactment hitech included arra encouraging adoption health detailed laws cdss emrs defined office national coordinator health technology onc approved department health human services hhs definition meaningful published absence laws cdss vendors viewed legal duty care patients adversely cdss usage clinicians technology patient care duties care legal regulations explicitly defined effective legislations performance shift payment incentives cdss attractive challenges adoption clinical challenges effort medical institutions software companies produce viable cdsss support aspects clinical tasks complexity clinical workflows demands staff time care institution deploying support ensure fluid integral clinical workflow cdsss met varying amounts success suffered common preventing reducing successful adoption acceptance sectors healthcare domain cdsss impact pharmacy billing sectors commonly pharmacy prescription systems perform batch based checking negative drug interactions report warnings professional sector success cdss billing claims filing hospitals rely medicare reimbursements stay operation systems created examine proposed treatment plan current rules medicare plan attempts address care patient financial institution cdsss aimed diagnostic tasks success limited deployment scope leeds abdominal pain operational 1971 university leeds hospital reported produced correct diagnosis 91 compared clinicians success rate 79 wide range efforts institutions produce systems widespread adoption acceptance achieved offerings roadblock acceptance historically workflow integration tendency focus functional decision core cdss existed causing deficiency planning clinician product situ cdsss stand applications requiring clinician cease current switch cdss input data inputted examine produced additional steps break flow clinician perspective cost precious time technical challenges barriers implementation clinical decision support systems steep technical challenges biological systems profoundly complicated clinical decision utilize enormous range relevant data electronic evidence based medicine patient symptoms medical history family history genetics historical geographical trends disease occurrence published clinical data medicinal effectiveness recommending patient treatment clinically deterrent cdss acceptance workflow integration mentioned source contention medical support systems produce massive alerts systems produce volume warnings require escalation annoyance clinicians pay attention warnings causing critical alerts missed maintenance core challenges facing cdss difficulty incorporating extensive quantity clinical published ongoing basis tens thousands clinical trials published studies manually read evaluated scientific legitimacy incorporated cdss accurate 2004 stated process gathering clinical data medical knowledge putting form computers manipulate assist clinical decision support infancy feasible business centrally incompletely individual doctor published addition laborious integration data difficult quantify incorporate existing decision support schema instances clinical papers conflicting properly resolving sorts discrepancies subject clinical papers meta analysis months complete evaluation cdss offer demonstrably improve clinical workflow outcome evaluation cdss process quantifying improve quality measure effectiveness cdsss serve purposes generic metric applies systems attributes consistency experts apply wide spectrum systems evaluation benchmark cdss depends goal diagnostic decision support rated based consistency accuracy classification disease compared physicians decision support systems evidence based medicine rated based incidence patient improvement financial reimbursement care providers combining electronic health records implementing electronic health records ehr inevitable challenge reasons challenge uncharted issues complications implementation phase ehr numerous studies undertaken challenges implementing electronic health records ehrs received attention process transitioning legacy ehrs systems electronic health records future healthcare industry capture utilise real time data provide quality patient care ensuring efficiency effective time resources incorporating ehr cdss process medicine potential change medicine taught practiced level ehr cdss clinical decision support systems cdss systems designed impact clinician decision individual patients time decisions beneficial integrated cdss ehr benefits implement cdss integrated ehr historically required planning healthcare facility organisation purpose cdss successful effective success effectiveness measured increase patient care delivered reduced adverse events occurring addition saving time resources benefits terms autonomy financial benefits healthcare facility organisation benefits cdss combined ehr successful cdss ehr integration provision practice quality care patient ultimate goal healthcare errors occurred healthcare minimise provide quality patient care addressed implementation cdss electronic health records ehrs cdsss beneficial future healthcare facilities 100 electronic terms real time patient simplifying modifications occur ensure systems measurable benefits clinical decision support systems physician performance patient outcomes remain subject ongoing barriers implementing electronic health records ehr healthcare settings incurs challenges maintaining efficiency safety rollout implementation process effective understanding ehr users perspectives key success ehr implementation projects addition adoption actively fostered clinical approach cdss main concern moving integrated ehr cdss key aspects data entry addressed implementing cdss avoid potential adverse events occurring aspects include service oriented architecture proposed technical address barriers status australia july 2015 planned transition ehrs australia facing difficulties majority healthcare facilities running completely paper based systems transition phase scanned ehrs moving transition phase victoria attempted implement ehr healthsmart program unexpectedly costs cancelled project south australia successful victoria implementation ehr public healthcare organisations centrally hand national health service centrally administered national programme 2000s included ehrs remit expensive disaster process implementing enterprise patient administration epas foundation public hospitals health care sites ehr expected 2014 facilities connected successful integration cdss increase benefits ehr july 2015 reported 75 health care facilities implemented epas largest health country federated centrally administered model south wales consistent progress statewide implementation ehrs current iteration technology emr2 includes cdss features sepsis pathway identifying risk patients based data input electronic record june 2016 93 194 sites scope initial roll implemented emr2 
2373410	computerscience	context aware network form network synthesis properties dumb network intelligent network architectures dumb networks feature intelligent peripheral devices core network control monitor application creation operation network follow principle applications set peripheral devices control exercised network network assumes users applications equal priority conflict undesired interaction handled independent applications network suited customization individual user addition applications pure internet ideal dumb network intelligent network contrast dumb network suited applications reliability stability network supply monitor control application creation operation telephone network intelligent network—service failure telephone network disruptive business hazardous public safety context aware network network overcome limitations dumb intelligent network models create synthesis combines network models designed customization application creation time ensuring application operation compatible preferences individual user expressed preferences enterprise collectivity owns network semantic context aware network grid networks pervasive networks autonomic networks application aware networks service oriented networks elements context aware model context aware network applications composed existing network applications techniques modeling applications identification applications satisfy specific functional requirements nonfunctional requirements method applications terms purposes application business process bpel process linked larger objectives organization including priority consequences failure context aware network descriptions function handle conflict incompatible applications accessing resources violation level constraints context aware network monitors application operation ensure compatible level requirements constraints conflicts resolved light context aware network suited applications reliability evolution customization required finding purchase development enterprise business processes customer relations management service oriented architectures specialization context aware model current rage enterprise computing underlying principles context aware handle authoring creation management operation fly context aware services book 
2400746	computerscience	history corporate company pragmatic decision merger deciding tomy international subsidiaries takara tomy japan decision tomy built considerable brand recognition internationally majority takara international hit products microman transformers battle beasts beyblade daman sold branded toy companies hasbro considered financial cost changing editorial policies western business publications ignore merger declarations declare company bought western media takara tomy merger characterised takara tomy assumption losses takara financially weakened time merger takara sales tomy management takara tomy discussed merging times including times takara appeared stronger japanese corporate law merger companies equal basis post merger media speculation control brands takara tomy merger arose tomy copyright packaging including takara brands shipped hasbro simply result practical decision tomy international subsidiaries japan takara tomy continues tomy takara distinct brand names toy ranges originated separate company toy ranges stand products carry takara tomy brand takara purchased majority stake tatsunoko production june 2005 studio complete subsidiary takara tomy march 2006 merger tomy founded 1982 sale distribution tomy products europe brought toys zoids games pop pirate west success tomy slogan traditionally trust tomy 2006 tomy launched consumers online tomy catalogue 2011 takara tomy acquired rc2 corporation rc2 brand learning curve included lamaze compass products takara tomy manufactured broad range products based properties include tomy tomica plarail zoids idaten jump nohohon zoku tomy branded baby care products takara space pets choro penny racers transformers daman koeda chan treena microman merged takara tomy produces sells wide variety toy game brands license thomas friends disney pokémon naruto game life jinsei game rockman megaman mermaid melody pichi pichi pitch kirarin revolution sugarbunnies animal crossing tomy rights licenses vary region examples product synergy merged company combining takara jinsei game game life license tomy pokémon license produce pokémon jinsei game tomy sells products worldwide including baby pre school toys baby monitors mechanical electronic games consumer electronics children arts crafts products vast range toys suited girls boys selection disney pokémon thomas tank engine merchandise publish videogames japan based zoids naruto anime series responsible distribution hasbro products japan play doh jenga monopoly company responsible distribution pony products japan bushiroad acquired distribution rights starting franchise owned hasbro 2015 bushiroad disowned distribution rights sega toys reacquired rights generations franchise 1960s tomy sponsor toy maker television giant robo merged takara shortly bankruptcy mentioned company list notable products include 
2422681	computerscience	uima short unstructured management architecture oasis standard content analytics originally developed ibm component software architecture development discovery composition deployment multi modal analytics analysis unstructured integration search technologies structure uima architecture dimensions implementations apache uima reference implementation uima maintained apache software foundation uima software projects 
2506529	computerscience	science machine learning cellular neural networks cnn cellular nonlinear networks cnn parallel computing paradigm neural networks difference communication allowed neighbouring units typical applications include image processing analyzing 3d surfaces solving partial differential equations reducing visual geometric maps modelling biological vision sensory motor organs cnn architecture variety architectures difficult precise definition cnn processor architecture standpoint cnn processors finite fixed fixed location fixed topology locally interconnected multiple input single output nonlinear processing units nonlinear processing units referred neurons cells mathematically cell modeled dissipative nonlinear dynamical encoded initial inputs variables define behavior dynamics continuous continuous time cnn ct cnn processors discrete discrete time cnn dt cnn processors cell output communicates cells external devices output typically real valued complex quaternion multi valued cnn cnn cnn processors processing units identical applications require identical units called uniform processor cnn nup cnn processors consist types cells original chua yang cnn cnn processor cell weighted sum inputs output piecewise linear function original perceptron based neural networks functions perform limited incapable modeling linear functions xor complex functions realizable linear cnn cnn processors cells defined normed space commonly dimensional euclidean geometry grid cells limited dimensional spaces defined arbitrary dimensions square triangle hexagonal spatially invariant arrangement topologically cells arranged infinite plane toroidal space cell interconnect local meaning connections cells radius distance measured topologically connections time delayed processing temporal domain cnn architectures cells relative interconnects applications require spatially variant topology multiple neighborhood size cnn mns cnn processors multiple layer cnn cnn processors cells layer identical extend capability cnn processors definition collection independent interacting entities forming integrated behavior distinct qualitatively entities connections local exchange happen globally diffusion sense cnn processors systems dynamics derived interaction processing units processing units result exhibit emergent collective behavior mathematically relationship cell neighbors located influence defined coupling law determines behavior processor coupling laws modeled fuzzy logic fuzzy cnn laws modeled computational verb logic computational verb cnn verb cnn fuzzy verb cnns modelling social networks local couplings achieved linguistic terms literature review idea cnn processors introduced leon chua lin yang’s 1988 article cellular neural networks theory cellular neural networks applications ieee transactions circuits systems articles chua yang outline underlying mathematics cnn processors mathematical model demonstrate specific cnn implementation inputs static processing units converge perform calculations applications cnn processors image processing pattern recognition largest application leon chua active cnn publishes articles international journal bifurcation chaos editor ieee transactions circuits systems international journal bifurcation variety articles cnn processors authored knowledgeable researchers focus cnn architectures dynamical aspects cnn processors key article tamas roska leon chua’s 1993 article cnn universal machine analogic array introduced algorithmically programmable analog cnn processor engineering community multi national effort funded office naval national science foundation hungarian academy sciences researched hungarian academy sciences university california article proved cnn processors producible researchers physical platform cnn theories article companies started invest larger capable processors based basic architecture cnn universal processor tamas roska key contributor cnns biologically inspired processing platforms algorithms published numerous key articles involved companies institutions developing cnn technology overviews cnn processors published literature references paper cellular neural networks review written neural nets wirn vietri 1993 valerio cimagalli marco balsi paper definitions cnn types dynamics implementations applications readable document book cellular neural networks visual computing foundations applications written leon chua tamas roska examples exercises illustrates manner uncommon papers journal articles book covers aspects cnn processors serve textbook masters references considered invaluable manage organize vast cnn literature coherent framework cnn literature proceedings international workshop cellular neural networks applications proceedings online ieee xplore conferences held 1990 1992 1994 1996 1998 2000 2002 2005 2006 workshop held july 14–16 santiago composetela spain topics include theory design applications algorithms physical implementations programming training methods understanding analog semiconductor based cnn technology analogic computers product addition published articles publication list cnn technologies optical computing commonly functions implemented cnn processors reference image processing libraries cnn based visual computers analogic’s cnn based systems processing architectures cnn processors hybrid ann continuous automata processing units cnn nn processor units multi input dynamical systems behavior systems driven weights processing unit’s linear interconnect main discriminator cnn processors connections locally ann connections global neurons layer connected layer feed nn neurons interconnected hopfield networks anns weights interconnections processing system’s previous feedback cnn processors weights determine dynamics interconnectivity anns tend exploit locality data set processing result highly redundant systems robust fault tolerant behavior catastrophic errors cross ann cnn processor ratio memory cnn rmcnn rmcnn processors cell interconnect local topologically invariant weights store previous control dynamics weights cells modified learning creating term memory topology dynamics cnn processors closely resembles cnn processors consists fixed identical processors spatially discrete topologically uniform difference cnn processors continuous valued discrete values cnn processor cell behavior defined linear function processor cells defined machine exceptions continuous valued cellular automata continuous automata continuous resolution depending continuous automata cnn continuous spatial automata consist infinite spatially continuous continuous valued automata considerable performed field continuous spaces easier mathematically model discrete spaces allowing quantitative approach opposed empirical approach researchers cellular automata continuous spatial automata processors physically realized unconventional processing platform chemical conceivable cnn processors terms resolution input output modeled continuous spatial automata model computation dynamical behaviors cnn processors expressed mathematically series ordinary differential equations equation represents individual processing unit behavior entire cnn processor defined initial conditions inputs cell interconnect topology weights cells cnn processors generate respond signals specific dynamical properties cnn processors generate multi scroll chaos synchronize chaotic systems exhibit multi level hysterisis cnn processors designed solve local level processor intensive expressed function space time cnn processors implement pass pass filters morphological operators approximate wide range partial differential equations pde heat dissipation wave propagation cnn processors reaction diffusion processors processors spatially invariant topologically invariant analog parallel processors characterized reactions agents combine create agent diffusions spreading agents processors typically implemented chemicals petri dish processor light input camera output processors implemented multilayer cnn processor processors create voronoi diagrams perform skeletonisation main difference chemical implementation cnn implementation cnn implementations considerably faster chemical counterparts chemical processors spatially continuous cnn processors spatially discrete researched processor belousov zhabotinsky processors simulated layer cnn processors implemented semiconductor computations performed generation propagation signals grow change time computations occur signal occur interaction signals type processing signals gaining momentum wave processing involves generation expanding eventual collision waves wave processing measure distances optimal paths computations occur particles gliders solutions filterons localized structures maintain shape velocity structures interact collide static signals store implement boolean functions computations occur complex growing evolving localized behavior worms ladders pixel snakes addition storing performing boolean functions structures interact create destroy static structures cnn processors intended analog calculations types cnn processors implement boolean function allowing simulating universal turing machines utm capable simulating algorithm performed processors based von neumann architecture type cnn processors universal cnn utm cnn architecture consists additional layer ann solution stated marvin minsky cnn processors simplest realization conway’s game life wolfram’s rule 110 simplest universal turing machine unique dynamical representation systems researchers apply techniques hardware developed cnn understand continuous space cnn processors slight modifications equivalent cellular automata creates emergent behavior processing platform construction arbitrary boolean functions called universal result class cnn processors commonly referred universal cnn processors original cnn processors perform linearly separable boolean functions essentially marvin minsky introduced respect perceptions neural networks translating functions digital logic table domains cnn domain functions considerably simplified bit odd parity generation logic typically implemented nested exclusive gates represented sum function nested absolute functions reduction function complexity cnn implementation parameters represented continuous real domain methods select cnn processor template weights synthesis involves determine coefficients offline leveraging previous libraries papers articles mathematically deriving suits training processor researchers propagation genetic algorithms learn perform functions propagation algorithms tend faster genetic algorithms provide mechanism solution discontinuous noisy search space technology processing platform remains intellectual exercise implemented hardware integrated processors based billiard balls implementation advantages purpose serve teaching device cnn processors implemented current technology plans implement cnn processors future technologies include interfaces programming interfacing implemented variety systems cursory examination types cnn processors advantages disadvantages future roadmap cnn processors cnn processors implemented semiconductors plans migrate cnn processors emerging technologies future semiconductor based cnn processors segmented analog cnn processors digital cnn processors cnn processors emulated digital processors analog cnn processors developed analog computers common 1950 1960s gradually replaced digital computers 1970s analog processors considerably faster applications optimizing differential equations modeling nonlinearities reason analog computing lost favor lack precision difficulty configure analog solve complex equation analog cnn processors share advantages predecessors speed analog cnn processors perform real time ultra frame rate 000 frame processing unachievable digital processors analog implementation cnn processors requires consumes power digital counterparts accuracy analog cnn processors compare digital counterparts applications noise process variances perceptually affect image quality algorithmically programmable analog cnn processor created 1993 named cnn universal processor internal controller allowed multiple templates performed data set simulating multiple layers allowing universal computation included design single layer 8x8 ccn interfaces analog memory switching logic software processor developed determine cnn processor producibility utility cnn concept proved promising 2000 organizations designing algorithmically programmable analog cnn processors anafocus mixed signal semiconductor company emerged university seville introduced ace prototype cnn processor product ace processor contained 20x20 processor units ace processor 48x48 grayscale processor units ace processor 128x128 grayscale processor units time processing elements increase speed improved functions perform increased seamless detector interface integrated silicon yielding considerably improved interface ability embed detector interface cnn processor real time interaction sensing processing anafocus multilayer prototype cnn processors processor layer 32x32 cnn processor cnn processors culminating released commercially eye ris product consists processors processors software development kits support program integrate analog processor anafocus analogic computers include cnn processors visual systems founded 2000 researchers algorithmically programmable cnn universal processor analogic computers mission commercialize speed biologically inspired systems based cnn processors 2003 analogic computers developed pci visual processor board included ace 4k processor texas instrument dip module speed frame grabber allowed cnn processing easily included desktop considerably improving usability capability cnn analog processors 2006 analogic computers developed ultra speed smart camera product includes ace 4k processor models product development team pursuing bionic eyeglass bionic eyeglass dual camera wearable platform based ultra speed smart camera designed provide assistance blind people functions bionic eyeglass perform route recognition color processing researchers developed custom analog cnn processors analog cnn processor developed team university degli studi di catania generate gaits hexapod robot researchers national chiao tung university designed rm cnn processor learn pattern learning recognition researchers national lien ho institute technology developed min max cnn mmcnn processor learn cnn dynamics diversity cnn processors momentum cnn gained plausible analog cnn development efforts common future speed power consumption drawbacks analog cnn processors analog cnn processors create erroneous environment process variation applications errors noticeable situations minor deviations result catastrophic failures chaotic communication process variation change trajectory phase space lost synchronicity stability severity considerable performed ameliorate researchers optimizing templates accommodate variation researchers improving semiconductor process closely match theoretical cnn performance researchers investigating robust cnn architectures lastly researchers developing methods tune templates target specific chip operating conditions templates optimized match processing platform process variation limit current analog cnn processors barrier creating complex processing units process variation resolved ideas nested processing units linear inputs implemented real time analog cnn processor semiconductor real estate processing units limits size cnn processors largest anavision cnn based vision processor consists 4k detector megapixel detectors affordable consumer cameras feature size reductions predicted moore’s law result minor improvements reason alternate technologies resonant tunneling diodes neuron bipolar junction transistors explored architecture cnn processors reevaluated star cnn processors analog multiplier time shared multiple processor units proposed expected result processor unit reduction size percent fast energy efficient digital cnn processors share process variation feature size analog counterparts digital cnn processors include nested processor units linearities addition digital cnn flexible cost easier integrate common implementation digital cnn processors fpga eutecus founded 2002 operating berkeley intellectual property synthesized altera fpga digital 320x280 fpga based cnn processors 30 frame plans fast digital asic eustecus strategic partner analogic computers fpga designs analogic’s products eutecus developing software libraries perform tasks including limited video analytics video security market feature classification multi target tracking signal image processing flow processing routines derived cnn processing perform cnn simulations prototyping speed applications options precise cnn emulation software packages scnn 2000 speed prohibitive mathematical techniques jacobi’s iterative method recursions derive steady solution cnn processor techniques performed mathematics tool matlab lastly digital cnn processors emulated highly parallel application specific processors graphics processors implementing neural networks graphics processors exploration community researchers perusing alternate technologies cnn processors current cnn processors circumvent digital counterparts share term common semiconductor based processors include limited speed reliability power consumption analogic computers developing optical cnn processors combine optics lasers biological holographic memories initially technology exploration 500x500 cnn processor perform 300 giga operations promising technology cnn processors nanotechnology nanotechnology concept investigated single electron tunneling junctions single electron current transistors create mcculloch pitts cnn processing units summary cnn processors implemented provide users effectively leverage advantages address disadvantages underling technology semiconductors researchers transitioning cnn processors emerging technologies cnn architecture suited specific processing processors purchase foreseeable future applications philosophy methodologies cnn researchers varied potential cnn architecture platform attracted people variety backgrounds disciplines exploring practical implementations cnn processors cnn processors model physical phenomena researchers exploring theoretical mathematical computational philosophical ideas cnn processors applications engineering understood behavior cnn processors exploited perform specific task scientific cnn processors explore phenomenon cnn processors versatile platforms variety applications cnn processors designed perform image processing original application cnn processors perform real time ultra frame rate 000 frame processing unachievable digital processors applications particle detection jet engine fluids spark plug detection cnn processors achieve 50 000 frames applications missile tracking flash detection spark plug diagnostics microprocessors outperformed conventional supercomputer cnn processors lend local level processor intensive operations feature extraction level gain adjustments color constancy detection contrast enhancement deconvolution image compression motion estimation image encoding image decoding image segmentation orientation preference maps pattern learning recognition multi target tracking image stabilization resolution enhancement image deformations mapping image inpainting optical flow contouring moving object detection axis symmetry detection image fusion processing capabilities flexibility cnn processors prototyped field applications flame analysis monitoring combustion waste incinerator detection infrared imagery calorimeter cluster peak energy physics anomaly detection potential field maps geophysics laser dot detection metal inspection detecting manufacturing defects seismic horizon picking perform biometric functions fingerprint recognition vein feature extraction tracking generating visual stimuli emergent patterns gauge perceptual resonances cnn processors medical biological performing automated nucleated cell counting detecting hyperplasia segment images anatomically pathologically meaningful regions measure quantify cardiac function measure timing neurons detect brain abnormalities lead seizures potential future application cnn microprocessors combine dna microarrays real time dna analysis hundreds thousands dna sequences major bottleneck dna microarray analysis time process data form images cnn microprocessor researchers reduced time perform calculation 7ms cnn processors generate analyze patterns textures motivation cnn processors understand pattern generation natural systems generate turing patterns understand situations form types patterns emerge presence defects asymmetries cnn processors approximate pattern generation systems create stationary fronts spatio temporal patterns oscillating time hysteresis memory heterogeneity pattern generation aid performance image generation compression real time generation stochastic coarse grained biological patterns texture boundary detection pattern texture recognition classification control actuator systems ongoing effort incorporate cnn processors sensory computing actuating machines emerging field cellular machines basic premise create integrated cnn processors sensory signal processing decision control reason cnn processors provide power size eventually cost computing actuating suited cellular machines cellular machines eventually create sensor actuator network san type mobile hoc networks manet military intelligence gathering surveillance inhospitable environments maintenance planetary exploration cnn processors proven versatile control functions optimize function genetic algorithm measure distances perform optimal path finding complex dynamic environment theoretically learn associate complex stimuli create antonymous gaits level motors robotic nematodes spiders lamprey gaits central pattern generator cpg function feedback environment allowing robust flexible biologically inspired robot motor cnn based systems operate environments function processing units disabled variety dynamical behavior cnn processors intriguing communication systems chaotic communications cnn processors researched potential power consumption robustness spread spectrum features premise chaotic communication chaotic signal carrier wave chaotic phase synchronization reconstruct original message cnn processors transmitter receiver encode decode message data encryption decryption source authentication watermarking detecting complex patterns spectrogram images sound processing transient spectral signals detection cnn processors neuromorphic processors meaning emulate aspects biological neural networks original cnn processors based mammalian retinas consist layer photodetectors connected layers locally coupled neurons cnn processors interdisciplinary goal design systems leverage knowledge ideas neuroscience contribute real validation theories cnn processors implemented real time replicates mammalian retinas validating original cnn architecture chosen modeled correct aspects biological neural networks perform task mammalian life cnn processors limited verifying biological neural networks vision processing simulate dynamic activity mammalian neural networks olfactory bulb locust antennal lobe responsible pre processing sensory detect differences repeating patterns cnn processors understand systems modeled simple coupled units living cells biological networks physiological systems ecosystems cnn architecture captures dynamics nature simple analyze conduct experiments stochastic simulation techniques scientists explore spin population dynamics lattice based gas models percolation phenomena simulation applications include heat transfer mechanical vibrating systems protein production josephson transmission jtl seismic wave propagation geothermal structures instances 3d dimensional cnn prove complex shapes emergent phenomena complex systems establishing link art dynamical systems vlsi technology cnn processors variety mathematical concepts researching equilibrium systems constructing linear systems arbitrary complexity collection simple understood dynamic systems studying emergent chaotic dynamics generating chaotic signals discovering dynamic behavior researching systemics trandisiplinary scientific field studies natural systems goal systemics researchers develop conceptual mathematical framework analyze model understand systems including limited atomic mechanical molecular chemical biological ecological social economic systems topics explored emergence collective behavior local activity impact global behavior quantifying complexity spatial topologically invariant measure complexity arouse enthusiasm seth lloyd professor massachusetts institute technology mit identified 32 definitions complexity mathematically advantageous analyzing systems economic social systems references computational complexity int’l workshop cellular neural networks applications 2004 
2576553	computerscience	united nations university international institute software technology unu iist portuguese instituto internacional para tecnologia programação da universidade das nações unidas united nations university training centre based macau china history 1989 council united nations university decided establish macau united nations university international institute software technology unu iist training centre university unu iist door 1992 blessing governments portugal china macau initial donors institute united nations institute address pressing global human survival development welfare international operation advanced training software technology history 2000 2010 decade unu iist positions university organ united nations generation committed providing vital critical software systems mentoring exceptional academics developing communication technology ict changed immensely decades defined mission strategic plan 2010 plan calls unu iist embark dramatic focused response computing environment potential serve sustainable development eventually unu decided evolve iist institute computing society ics administration director unu iist professor peter haddawy center electronic governance center electronic governance unu iist international center excellence practice electronic governance established 2007 center built contribution unu iist emacao project 2004–2006 emacao program 2007 collaborative initiative build utilize foundation electronic government macao sar 2010 official programme unu iist mission center electronic governance unu iist support governments developing countries strategic technology transform public organizations relationships citizens businesses civil society activities center include applied policy capacity building forms development – strategy development software development institutional development development communities practice teaching center regularly organizes conducts schools seminars lectures presentations government leaders managers researchers educators aspects electronic governance courses presentation materials events conferences center established 2007 leads organization series international conferences electronic governance icegov editions macao cairo bogota beijing 
2578705	computerscience	zhou chaochen born november 1937 chinese scientist zhou chaochen professor beijing china studied undergraduate department mathematics mechanics peking university 1954–1958 postgraduate institute computing technology chinese academy sciences cas 1963–1967 peking university cas visit oxford university computing laboratory oxford university department science 1989–1992 time prime investigator duration calculus interval logic real time systems european esprit procos project provably correct systems periods 1990–1992 1995–1996 zhou chaochen visiting professor department science technical university denmark lyngby invitation professor dines bjørner principal fellow 1992–1997 director unu iist macau 1997–2002 retirement returned beijing 2007 zhou chaochen prof dines bjørner director unu iist honoured occasion 70th birthdays zhou chinese academy sciences zhou chaochen married children 
2592865	computerscience	architecture cycles instruction aka clock cycles instruction clocks instruction cpi aspect processor performance average clock cycles instruction program program fragment multiplicative inverse instructions cycle definition average cycles instruction process defined 1where instructions instruction type clock cycles instruction type total instruction count summation sums instruction types benchmarking process explanation assume classic risc pipeline stages stage requires clock cycle instruction passes stages sequentially pipelining instruction fetched stage previous instruction finishes stage clock cycles takes execute instruction cpi processor subscalar pipelining instruction fetched clock cycle exploiting instruction level parallelism theoretically instructions pipeline stages instruction stage instruction complete stage clock cycle average clock cycles takes execute instruction cpi processor scalar single execution unit processor cpi attainable multiple execution unit processor achieve cpi values cpi processor superscalar cpi values pipelining execution units stages executions units instructions fetched stage previous instructions finish stage average clock cycles takes execute instruction cpi cpi values pipelining execution units executions units instructions fetched clock cycle exploiting instruction level parallelism instructions complete stage clock cycle average clock cycles takes execute instruction cpi examples multi cycle mips types instructions program cpi 6example determine effective cpi mips millions instructions rate execution time program 7formula 8since 10formula 11therefore 12 
2615949	computerscience	omega network network configuration parallel computing architectures indirect topology relies perfect shuffle interconnection algorithm connection architecture 8x8 omega network multistage interconnection network meaning processing elements pes connected multiple stages switches inputs outputs addresses figure outputs stage connected inputs stage perfect shuffle connection connections stage represent movement deck cards divided equal decks shuffled card deck alternating card deck terms binary representation pes stage perfect shuffle cyclic logical left shift bit address shifted left bit moving bit stage adjacent pairs inputs connected simple exchange element set straight pass inputs outputs crossed send input output vice versa processing element omega network switches stage log2n stages manner switches set determines connection paths network time methods destination tag routing xor tag routing discussed omega network highly blocking path input output network destination tag routing destination tag routing switch settings determined solely message destination bit destination address select output switch stage bit upper output selected output selected bit destination address select output switch stage final output selected message destination 001 switch settings upper upper message destination 101 switch settings upper switch settings hold sending message xor tag routing xor tag routing switch settings based source xor destination xor tag 1s bit positions swapped 0s bit positions source destination common bit xor tag select setting switch stage bit switch set pass switch crossed bit tag set switch stage final output selected 001 wishes send message 010 xor tag 011 switch settings a2 straight b3 crossed c2 crossed applications multiprocessing omega networks connectors cpus shared memory decrease probability cpu memory connection bottleneck class networks built illinois cedar multiprocessor ibm rp3 nyu ultracomputer 
2622712	computerscience	notoc visualization toolkit vtk source freely software 3d graphics image processing visualization vtk consists class library interpreted interface layers including tcl java python kitware team created continues extend toolkit offers professional support consulting services vtk vtk supports wide variety visualization algorithms including scalar vector tensor texture volumetric methods advanced modeling techniques implicit modeling polygon reduction mesh smoothing cutting contouring delaunay triangulation vtk extensive visualization framework suite 3d interaction widgets supports parallel processing integrates databases gui toolkits qt vtk cross platform runs linux windows mac unix platforms core vtk implemented toolkit requiring users build applications combining objects application supports automated wrapping core python java tcl vtk applications written interpreted programming languages vtk worldwide commercial applications development basis advanced visualization applications molekel paraview visit vistrails moose 3dslicer mayavi osirix vtk source toolkit licensed bsd license history vtk initially created 1993 companion software book visualization toolkit object oriented approach 3d graphics published prentice hall book software written researchers schroeder ken martin lorensen time permission ownership software resided continues reside authors core vtk written users developers improve apply real medical systems businesses graciously contributed researchers penny rheinghans teach book supporters included jim ahrens los alamos national labs unnamed generous oil gas supporters sandia national labs strong supporters developers focus adding visualization vtk support active worldwide vtk community ken lisa avila charles law hoffman left kitware 1998 time hundreds additional developers created premier visualization founding kitware vtk community grew rapidly toolkit usage expanded academic commercial applications vtk forms core 3dslicer biomedical computing application numerous papers ieee visualization conferences based vtk appeared vtk 1024 processor los alamos national laboratory process petabyte data 2005 paraview based vtk real time rendering zsu 23 russian anti aircraft vehicle hit planar wave cell calculation united army laboratory vtk forms basis collaborations kitware national organizations sandia los alamos livermore national labs vtk foundation data visualization vtk key computing tools established national alliance medical image computing mic nih roadmap initiative future computing tools vtk includes expansion toolkit support ingestion processing display informatics data supported sandia national laboratories titan project represents concentrated efforts unify scientific visualization informatics functionality 
2651093	computerscience	edge enhancement image processing filter enhances edge contrast image video attempt improve acutance apparent sharpness filter identifying sharp edge boundaries image edge subject background contrasting color increasing image contrast edge creating subtle bright dark highlights edges image called overshoot undershoot leading edge defined viewed typical viewing distance process prevalent video field appearing degree majority broadcasts dvds modern television set sharpness control edge enhancement printers font graphics printing quality digital cameras perform edge enhancement adjusted edge enhancement analog digital process analog edge enhancement analog video equipment modern crt televisions properties edge enhancement applied image vary properties common algorithm unsharp masking parameters edge enhancement applied horizontal vertical direction directions amounts applying edge enhancement images originally sourced analog video effects edge enhancement forms image sharpening edge enhancement enhance subtle uniform image texture grain appears flat smooth image benefit imperfections image reproduction grain noise imperfections subject natural imperfections person skin obvious process drawback image natural apparent sharpness image increased level flat smooth forms image sharpening edge enhancement capable improving perceived sharpness acutance image enhancement completely reversible image lost result filtering sharpening operations image compound loss leading artifacts ringing image edge enhancement applied picture dvd video edge enhancement applied dvd player played television displayed essentially edge enhancement filter creates edges existing edges enhanced viewing conditions ideal edge enhancement required produce pleasant sharp image losing varies factors image viewed nearer distance larger display size medium inherently sharp person excellent eyesight typically demand finer lesser edge enhancement image display size viewing distance medium inherently softer person poorer eyesight reason cinema enthusiasts invest larger quality screens complain edge enhancement commercially produced dvd videos claiming edge enhancement optimized playback poorer quality television screens loss result edge enhancement noticeable viewing conditions 
2655175	computerscience	image histogram type histogram acts graphical representation tonal distribution digital image plots pixels tonal histogram specific image viewer judge entire tonal distribution glance image histograms modern digital cameras photographers aid distribution tones captured image lost blown highlights blacked shadows raw image format dynamic range displayed image approximation raw file horizontal axis graph represents tonal variations vertical axis represents pixels tone left horizontal axis represents black dark middle represents medium grey hand represents light pure white vertical axis represents size captured zones histogram dark image majority data left center graph conversely histogram bright image dark shadows data center graph image manipulation histograms image editors typically provisions create histogram image edited histogram plots pixels image vertical axis brightness horizontal axis algorithms digital editor user visually adjust brightness pixel dynamically display adjustments improvements picture brightness contrast field vision image histograms tools thresholding contained graph representation pixel distribution function tonal variation image histograms analyzed peaks valleys threshold edge detection image segmentation occurrence matrices 
2672495	computerscience	rise sics swedish institute science leading institute applied communication technology sweden founded 1985 rise sics institute expansive industry century total digitalization products services businesses sics midst revolution boosting competitive strength swedish industry quality efficiency sweden’s public sector january 2005 sics 88 employees 77 researchers 30 phd degrees sics 200 employees 160 researchers 83 phd degrees institute headquartered kista district stockholm main office electrum building software software packages developed sics academic output sics 100 refereed publications academic journals conferences workshops sics researchers receive academic degrees persons academia tenured positions sics ranked 15th acknowledged science institution article december 2004 issue highly esteemed journal proceedings national academy sciences pnas sics swedish institution included list european institutions inria 13 american institutions larger sics funding sics owned jointly 60 swedish government 40 swedish industry government owners institutes sweden rise swedish ict defence materiel administration fmv industry owners consortium ericsson asea brown boveri abb saab green cargo bombardier transportation teliasonera sics funded owners national funding sources vinnova swedish government agency innovation systems swedish foundation strategic ssf industrial collaboration partners sics participates european projects funded european commission history rise sics formed 1985 owned swedish government 
2701254	computerscience	bachelor science bachelor science science abbreviated bcompsc bcs type bachelor degree awarded collegiate study science awarded depending factors institution requirements academic calendar awarded science degree programs emphasize mathematical theoretical foundations computing core curriculum depending school result degrees including post secondary institutions honors bachelor science degree introduced upgrade regular bachelor program requires additional study studying engineering basic skills engineering student engineering based theories principles computation physics mathematics engineering principles applied resolution technical require creation development software hardware network architectures engineering studies intended people vocation oriented scientific aspects development evolution science capabilities lead development projects adaptability fast continuously evolving environments educational objectives pursued degree engineering specific skills proposed engineering professional qualifications finishing degree required skills qualifications software engineer comprise theoretical aspects science electronics list classification professional profiles demanded https orientacion universia carreras universitarias 52 perfil profesional ingenieria informatica 68 typical requirements science wide field courses required earn bachelor science degree vary typical list requirements includes topics schools emphasis mathematics require additional courses basic set science courses students typically choose additional courses variety fields schools students specialize science 
2702169	computerscience	network bridge networking device creates single aggregate network multiple communication networks network segments function called network bridging bridging distinct routing routing multiple networks communicate independently remain separate bridging connects separate networks single network osi model bridging performed data link layer layer segments bridged network wireless device wireless bridge types network bridging technologies simple bridging multiport bridging learning transparent bridging source route bridging transparent bridging transparent bridging table called forwarding base control forwarding frames network segments table starts entries bridge receives frames destination address entry table frame flooded ports bridge flooding frame segments received flooded frames host destination network respond forwarding database entry created source destination addresses process source addresses recorded entries table destination addresses looked table matched proper segment send frame digital equipment corporation dec originally developed technology 1980s context port bridge forwarding base filtering database bridge reads frame destination address decides filter bridge determines destination host segment network forwards frame segment destination address belongs segment source address bridge filters frame preventing reaching network transparent bridging operate devices ports bridge connected hosts bridge ports connected bridge port connected bridge port connected bridge port sends frame addressed bridge bridge examines source address frame creates address port entry forwarding table bridge examines destination address frame forwarding table floods ports frame received hosts host examines destination address ignores frame host recognizes destination address match generates response return path bridge adds address port entry forwarding table bridge address forwarding table forwards response port host hosts port burdened response communication flooding network simple bridging simple bridge connects network segments typically operating transparently deciding frame frame basis network store technique typically forwarding frame integrity verified source network csma delays accommodated destination network contrast repeaters simply extend maximum span segment bridges frames required cross bridge additionally bridges reduce collisions creating separate collision domain bridge multiport bridging multiport bridge connects multiple networks operates transparently decide frame frame basis traffic additionally multiport bridge decide traffic simple bridge multiport bridge typically store operation multiport bridge function serves basis network switches implementation forwarding base stored content addressable memory cam initially received ethernet frame switch learns frames source mac address adds ingress interface build forwarding base switch forwards frame interface cam based frames destination mac address destination address unknown switch sends frame interfaces ingress interface behaviour called unicast flooding forwarding bridge learns addresses connected nodes forwards data link layer frames layer forwarding method forwarding methods bridge fourth methods performance increasing methods switch products input output port bandwidths 
2710684	computerscience	delay tolerant networking dtn approach network architecture seeks address technical issues heterogeneous networks lack continuous network connectivity examples networks operating mobile extreme terrestrial environments planned networks space term disruption tolerant networking gained currency united support darpa funded dtn projects disruption occur limits wireless radio range sparsity mobile nodes energy resources attack noise history 1970s spurred decreasing size computers researchers developing technology routing fixed locations computers field hoc routing inactive 1980s widespread wireless protocols reinvigorated field 1990s mobile hoc networking manet vehicular hoc networking increasing concurrently separate manet activities darpa founded nasa mitre develop proposal interplanetary internet ipn internet pioneer vint cerf developed initial ipn architecture relating necessity networking technologies cope delays packet corruption deep space communications 2002 kevin fall started adapt ideas ipn design terrestrial networks coined term delay tolerant networking dtn acronym paper published 2003 sigcomm conference motivation dtns mid 2000s brought increased dtns including growing academic conferences delay disruption tolerant networking growing combining sensor networks manets dtn field optimizations classic hoc delay tolerant networking algorithms examine factors security reliability verifiability understood traditional networking routing ability transport route data source destination fundamental ability communication networks delay disruption tolerant networks dtns characterized lack connectivity lack instantaneous paths challenging environments popular hoc routing protocols aodv dsr fail establish routes protocols establish complete route route established actual data instantaneous paths difficult impossible establish routing protocols store approach data incrementally moved stored network hopes eventually reach destination common technique maximize probability message transferred replicate copies message hope succeed reaching destination feasible networks amounts local storage internode bandwidth relative expected traffic common spaces inefficiency outweighed increased efficiency shortened delivery times maximum advantage unscheduled forwarding opportunities storage internode throughput opportunities tightly constrained discriminate algorithm required concerns bundle protocols efforts provide shared framework algorithm application development dtns rfc 4838 rfc 5050 published 2007 define common abstraction software running disrupted networks commonly bundle protocol protocol defines series contiguous data blocks bundle—where bundle semantic application progress individual block bundles routed store manner participating nodes varied network transport technologies including ip ip based transports transport layers carrying bundles local networks called bundle convergence layers bundle architecture operates overlay network providing naming architecture based endpoint identifiers eids coarse grained class service offerings protocols bundling leverage application level preferences sending bundles network store nature delay tolerant protocols routing solutions delay tolerant networks benefit exposure application layer network scheduling influenced application data received entirety variation packet delay bundle protocols collect application data bundles heterogeneous network configurations level service guarantees service guarantees set application level rfc 5050 bundle protocol specification includes bulk normal expedited markings security issues addressing security issues major focus bundle protocol security concerns delay tolerant networks vary depending theenvironment application authentication privacyare critical security guarantees difficult toestablish network persistent connectivity thenetwork hinders complicated cryptographic protocols hinders key exchange devicemust identify intermittently visible devices solutions typically modified mobile hoc network anddistributed security distributedcertificate authorities pki schemes original solutions delay tolerant community include ofidentity based encryption nodes receiveinformation encrypted public identifier tamper evident tables gossiping protocol efforts efforts investigating issues involved dtn efforts dtn interplanetary internet examining bundle protocol space 
2786727	computerscience	stream processing programming paradigm equivalent dataflow programming event stream processing reactive programming applications easily exploit limited form parallel processing applications multiple computational units floating unit graphics processing unit field programmable gate arrays fpgas explicitly managing allocation synchronization communication units stream processing paradigm simplifies parallel software hardware restricting parallel computation performed sequence data stream series operations kernel functions applied element stream kernel functions pipelined optimal local chip memory reuse attempted minimize loss bandwidth accredited external memory interaction uniform streaming kernel function applied elements stream typical kernel stream abstractions expose data dependencies compiler tools automate optimize chip management tasks stream processing hardware scoreboarding initiate direct memory access dma dependencies elimination manual dma management reduces software complexity elimination hardware cached reduces data expanse involved service specialized computational units arithmetic logic units 1980s stream processing explored dataflow programming language sisal streams iteration single assignment language applications stream processing essentially compromise driven data centric model traditional dsp gpu type applications image video digital signal processing purpose processing randomized data access databases sacrificing flexibility model implications easier faster efficient execution depending context processor design tuned maximum efficiency trade flexibility stream processing suitable applications exhibit application characteristics examples records streams include record read input perform operations write output permissible multiple inputs multiple outputs piece memory readable writable comparison prior parallel paradigms basic computers started sequential execution paradigm traditional cpus sisd based conceptually perform operation time computing evolved data managed increased obvious sequential programming model cope increased processing power efforts spent finding alternative perform massive amounts computations solution exploit level parallel execution result efforts simd programming paradigm allowed applying instruction multiple instances data time simd swar environment complicated structures mimd parallelism paradigms efficient real implementations plagued limitations memory alignment synchronization issues limited parallelism simd processors survived stand components embedded standard cpus simple program adding arrays 100 component vectors 400 total conventional sequential paradigm sequential paradigm familiar variations exist loops structures ultimately boil construct parallel simd paradigm packed registers swar oversimplified assumes instruction codice instruction intrinsics account vector components data format clarity method reduces decoded instructions numelements componentsperelement numelements jump instructions decreased loop times gains result parallel execution mathematical operations happened packed simd register holds data parallelism speed limited assumption performing parallel operations note common altivec sse parallel stream paradigm simd mimd paradigm dataset defined component block defined separately describing set data assumed rows result inferred sources kernel simplicity mapping input output data applied kernels complex implementation paradigm unroll loop internally throughput scale chip complexity easily utilizing hundreds alus elimination complex data patterns extra power stream processing branch simd mimd processing confused simd implementations streaming manner performance comparable model envisions usage pattern performance applied generic processors standard cpu 5x speedup reached contrast hoc stream processors easily reach 10x performance attributed efficient memory access levels parallel processing degrees flexibility allowed model stream processors impose limitations kernel stream size consumer hardware lacks ability perform precision math lacks complex indirection chains limits instructions executed stanford university stream processing projects included stanford real time programmable shading project started 1999 prototype called imagine developed 2002 project called merrimac 2004 researched stream enhanced processors graphics processing units rapidly evolved speed functionality days dozens stream processing languages developed specialized hardware programming model notes challenge realm parallel processing lie type hardware architecture easy program question real environment acceptable performance machines imagine straightforward single threaded model automated dependencies memory allocation dma scheduling result mit stanford finding optimal layering tasks programmer tools hardware programmers beat tools mapping algorithms parallel hardware tools beat programmers figuring smartest memory allocation schemes concern mimd designs cell programmer deal application partitioning multiple cores deal process synchronization load balancing efficient multi core programming tools severely lacking drawback simd programming issue array structures aos structure arrays soa programmers build data structures meaning happened structures assembled arrays nicely organized array structures aos structure laid memory compiler produce interleaved data sense structures contiguous constant offset size attribute structure instance element instance offset depends structure definition considered compiler policies position variables simd ized allocated continuous memory space simd operations packed memory location array lies color xyz defined component vector quantities simd processors support component operations exceptions kinds limitations simd acceleration standard cpus nasty proposed solution structure arrays soa readers experienced identifier pointer element array allocated java programmers roughly equivalent drawback attributes spread memory cache misses update reds greens blues stream processors usage structures encouraged application view attributes defined flexibility gpus reference set attributes 16 attribute application components format components primitive data types supported attributes attached memory block defining stride consecutive elements attributes effectively allowing interleaved data gpu stream processing gather attributes single set parameters structure magic global variable performs operations scatters memory processing retrieving modern stream processing frameworks provide fifo interface structure data literal stream abstraction data dependencies implicitly enabling runtime hardware advantage knowledge efficient computation simplest efficient stream processing modalities raftlib enables linking independent compute kernels data flow graph stream operators models computation stream processing streaming applications level language models computation mocs dataflow models process based models generic processor architecture historically cpus implementing tiers memory access optimizations increasing performance compared slow growing external memory bandwidth gap widened amounts die dedicated hiding memory latencies fetching opcodes alus expensive die dedicated actual mathematical machinery rough estimation architecture exists stream processors programming model transistors dedicated management view stream processors exist controlled environment gpus exist add board apply imagine cpus dirty job managing resources running applications stream processor equipped fast efficient proprietary memory bus crossbar switches common multi buses employed exact memory lanes dependent market range written 64 bit wide interconnections entry level mid range models fast 128 bit crossbar switch matrix segments models deploy huge amounts memory 512 mb slower crossbar 256 bits wide contrast standard processors intel pentium athlon 64 single 64 bit wide data bus memory access patterns predictable arrays exist dimension fixed kernel invocation closely matches multiple pointer indirection indirection chain guaranteed finally read write specific memory stream simd nature stream processor execution units alus clusters read write operations expected happen bulk memories optimized bandwidth latency difference rambus ddr sdram efficient memory bus negotiations 90 stream processor chip requiring global data stored memory knowing kernel temporaries dependencies pays internally stream processor features clever communication management circuits stream register file srf conceptually cache stream data stored transferred external memory bulks cache software controlled structure alus srf shared alu clusters key concept innovation stanford imagine chip compiler automate allocate memory optimal transparent programmer dependencies kernel functions data programming model enables compiler perform flow analysis optimally pack srfs commonly cache dma management majority project schedule stream processor imagine totally automates tests stanford compiler job scheduling memory hand tuned effort proof lot clusters inter cluster communication assumed rare internally cluster efficiently exploit alus intra cluster communication common highly efficient alus fetched data alu equipped local register files lrfs basically usable registers tiered data access pattern easy temporary data slow memories silicon implementation highly efficient power saving hardware loop issues magnitude speedup expected mainstream gpus computing streaming manner applications benefit communication latencies biggest pci express improved duplex communications gpu generic stream processor amounts time counter productive datasets changing kernel expensive operation stream architecture incurs penalties streams behaviour referred short stream pipelining widespread heavily practice stream processors gpus featuring pipelines exceeding 200 stages cost switching settings dependent setting modified considered expensive avoid levels pipeline techniques deployed über shaders texture atlases techniques game oriented nature gpus concepts generic stream processing stream programming libraries languages programming languages stream processors start java add extensions provide specific instructions application developers tag kernels streams applies shading languages considered stream programming languages degree commercial examples stream programming languages include commercial implementations purpose tied specific hardware vendor examples purpose languages include vendor specific languages include event based processingbatch file based processing emulates actual stream processing performance continuous operator stream processingstream processing services 
2849640	computerscience	jifeng born august 1943 chinese scientist jifeng graduated mathematics department fudan university 1965 1965 1985 instructor east china normal university 1980–81 visiting scholar stanford university university san francisco california united 1984 1998 jifeng senior fellow programming oxford university computing laboratory oxford university department science extensively formal aspects computing science prof sir tony hoare unifying theories programming book 1986 jifeng professor science east china normal university shanghai 1996 professor science shanghai jiao tong university 1998 senior fellow international institute software technology unu iist united nations university based macau moved shanghai 2005 jifeng include sound methods specification systems communications application standards techniques designing implementing specifications software hardware reliability 2005 elected chinese academy sciences 2013 70th birthday celebrated east china normal university international day festschrift association international conference theoretical aspects computing ictac books jifeng written science books including 
2878626	computerscience	optical photonic computing photons produced lasers diodes computation decades photons promised bandwidth electrons conventional computers projects focus replacing current components optical equivalents optical digital processing binary data approach appears offer short term prospects commercial optical computing optical components integrated traditional computers produce optical electronic hybrid optoelectronic devices lose 30 energy converting electronic energy photons conversion slows transmission messages optical computers eliminate optical electrical optical oeo conversions lessening electrical power application specific devices synthetic aperture radar sar optical correlators designed principles optical computing correlators detect track objects classify serial time domain optical data optical components binary digital fundamental building block modern electronic computers transistor replace electronic components optical equivalent optical transistor required achieved materials linear refractive materials exist intensity incoming light intensity light transmitted material manner current response bipolar transistor optical transistor create optical logic gates assembled level components cpu nonlinear optical crystals manipulate light beams controlling light beams computing optical computing function substituting electrical components data format conversion photons electrons slower controversy disagreements researchers future capabilities optical computers compete semiconductor based electronic computers terms speed power consumption cost size question critics note real logic systems require logic level restoration cascadability fan input–output isolation electronic transistors cost power speed optical logic competitive niche applications major breakthroughs linear optical device technology required change nature computing misconceptions challenges prospects challenge optical computing computation nonlinear process multiple signals interact light electromagnetic wave interact electromagnetic wave presence electrons material strength interaction weaker electromagnetic waves light electronic signals conventional result processing elements optical requiring power larger dimensions conventional electronic transistors misconception light travel faster drift velocity electrons frequencies measured thz optical transistors capable extremely frequencies electromagnetic wave obey transform limit rate optical transistor respond signal limited spectral bandwidth fiber optic communications practical limits dispersion constrain channels bandwidths 10s ghz silicon transistors obtaining dramatically faster operation electronic transistors require practical methods transmitting ultrashort pulses highly dispersive waveguides photonic logic photonic logic photons light logic gates nand xor xnor switching nonlinear optical effects signals combined resonators photonic logic build energy constructive interference enhancing optical nonlinear effects approaches investigated include photonic logic molecular level photoluminescent chemicals demonstration witlicki performed logical operations molecules sers unconventional approaches time delays optical computing basic idea delay light signal perform computations solve complete difficult conventional computers basic properties light approach solving time delays steps attacked hamiltonian path tackled simplest subset sum optical device solving instance a1 a2 a3 a4 depicted light enter start node divided rays intensity rays arrive node moments a1 divided subrays whichwill arrive 3rd node moments a1 a2 a1 a2 represents subsets set a1 a2 expect fluctuations intensity signal moments destination node expect fluctuations 16 moments subsets fluctuation target moment solution subset sum elements equals practical implementation cables cables increased fixed solution expected moment wavelength based computing wavelength based computing solve sat variables clause variables clause wavelength contained light ray considered assignments variables optical device prisms mirrors discriminate proper wavelengths satisfy computing xeroxing transparencies approach xerox machine transparent sheets performing computations sat variables clauses variables clause solved steps masking optical beams travelling salesman solved optical approach tsp paths generated stored binary matrix multiplied gray scale vector distances cities multiplication performed optically optical correlator optical fourier processors computations scientific applications require frequent 2d discrete fourier transform dft – solving differential equations describing propagation waves transfer heat modern gpu technologies typically enable speed computation 2d dfts techniques developed perform dfts optically utilising natural fourier transforming property lenses input encoded liquid crystal spatial light modulator result measured conventional cmos ccd image sensor optical architectures offer superior scaling computational complexity inherently highly interconnected nature optical propagation solve 2d heat equations ising machines physical computers design inspired theoretical ising model called ising machines yoshihisa yamamoto pioneered building ising machines photons initially yamamoto colleagues built ising machine lasers mirrors optical components commonly optical table team hewlett packard labs including dave kielpinski developed photonic chip design tools build ising machine single chip integrating 052 optical components single chip 
2889768	computerscience	image stitching photo stitching process combining multiple photographic images overlapping fields view produce segmented panorama resolution image commonly performed software approaches image stitching require exact overlaps images identical exposures produce seamless stitching algorithms benefit exposed images dynamic range imaging regions overlap digital cameras stitch photos internally image stitching modern applications process stages image stitching process divided main components image registration calibration blending issues image stitching illumination views guaranteed stitching images create visible seam reasons seam appearing background changing images continuous foreground major issues deal presence parallax lens distortion scene motion exposure differences panoramic stitching ideal set images reasonable overlap 15–30 overcome lens distortion detectable features set images consistent exposure frames minimize probability seams occurring ideal real life intensity varies scene contrast intensity frames lens distortion motion scene misalignment ghosting ratio height panorama image account create visually pleasing composite keypoint detection feature detection automatically correspondences images robust correspondences required estimate transformation align image image composted corners blobs harris corners difference gaussian harris corners dog features repeatable distinct operators detection developed hans moravec 1977 involving automatic navigation robot clustered environment moravec defined concept image concluded matching regions images moravec operator considered corner detector defines intensity variations directions corners moravec finding corners distinct regions image register consecutive image frames harris stephens improved moravec corner detector differential corner score respect direction processing step build interpretations robot environment based image sequences moravec method match consecutive image frames tracking corners edges frames sift surf keypoint detector algorithms note patented commercial usage restricted feature detected descriptor method sift descriptor applied match registration image registration involves matching features set images direct alignment methods search image alignments minimize sum absolute differences overlapping pixels direct alignment methods calibrate images additionally users input rough model panorama feature matching stage neighboring images searched matching features features matching result search accurate execution comparison faster estimate robust model data common method ransac ransac abbreviation random sample consensus iterative method robust parameter estimation fit mathematical models sets observed data outliers algorithm deterministic sense produces reasonable result probability probability increasing iterations performed probabilistic method time algorithm ransac algorithm applications vision including simultaneous solving correspondence estimation fundamental matrix pair stereo cameras basic assumption method data consists inliers data distribution explained mathematical model outliers data fit model outliers considered noise erroneous measurements simply incorrect data homography estimation ransac fit models pairs checking models relate model – homography produces correct matches – chosen answer ratio outliers data ransac outputs decent model fitting data calibration image calibration aims minimize differences ideal lens models camera lens combination optical defects distortions exposure differences images vignetting camera response chromatic aberrations feature detection methods register images absolute positions features recorded saved stitching software data geometric optimization images addition placing images panosphere panotools derivative programs method alignment alignment transform image match view image composted alignment simple terms change coordinates adopts coordinate outputs image matching required viewpoint types transformations image pure translation pure rotation similarity transform includes translation rotation scaling image transformed affine projective transform projective transformation farthest image transform set dimensional planar transformations visible features preserved transformed image straight lines parallelism maintained affine transform projective transformation mathematically coordinate x’ transformed image homography matrix expressing x’ camera intrinsics k’ rotation translation real coordinates x’ getusing equations homography relation x’ derivethe homography matrix parameters degrees freedom homography computed direct linear transform singular decomposition matrix constructed coordinates correspondences dimensional vector elements reshaped homography matrix simple apply svd column singular vector true lies space degrees freedom algorithm requires correspondences ransac estimate homography multiple correspondences correct homography matrix maximum inliers compositing compositing process rectified images aligned single shot scene compositing automatically algorithm correspondences overlap blending image blending involves executing adjustments figured calibration stage combined remapping images output projection colors adjusted images compensate exposure differences applicable dynamic range merging motion compensation deghosting images blended seam adjustment minimize visibility seams images seam reduced simple gain adjustment compensation basically minimizing intensity difference overlapping pixels image blending algorithm allots weight pixels center image gain compensated multi band blended images compare ijcv 2007 straightening method rectify image matthew brown david lowe paper ‘automatic panoramic image stitching invariant features’ methods straightening apply global rotation vector vertical rendering frame effectively removes wavy output panoramaseven gain compensation image edges visible unmodelledeffects vignetting intensity decreases edge image parallax effects unwanted motion optical centre mis registration errors mismodellingof camera radial distortion reasons propose blending strategy called multi band blending projective layouts image segments space stitched images arranged map projections rectilinear rectilinear projection stitched image viewed dimensional plane intersecting panosphere single lines straight reality straight directions image wide views 120° start exhibit severe distortion image borders rectilinear projection cube cubic mapping panorama viewing panorama mapped squares cube 90 90 degree panorama cylindrical cylindrical projection stitched image 360° horizontal field view limited vertical field view panoramas projection meant viewed image wrapped cylinder viewed viewed 2d plane horizontal lines curved vertical lines remain straight vertical distortion increases rapidly nearing panosphere cylindrical formats mercator miller cylindrical distortion poles panosphere spherical spherical projection equirectangular projection strictly speaking cylindrical projection stitched image 360° horizontal 180° vertical field view sphere panoramas projection meant viewed image wrapped sphere viewed viewed 2d plane horizontal lines curved cylindrical projection vertical lines remain vertical panini panorama basically map sphere mapping projections cartographers desired additionally specialized projections aesthetically pleasing advantages normal cartography projections hugin panini projection named italian vedutismo painter giovanni paolo pannini ptgui vedutismo projection projections combined image fine tuning final output image stereographic stereographic projection fisheye projection form planet panorama virtual camera straight setting field view ground virtual camera creates tunnel conformality stereographic projection produce visually pleasing result equal fisheye projection discussed stereographic projection article artifacts image stitching errorsclick stitched imagethe images pivot entrance pupil camera lead parallax errors final product captured scene features rapid movement dynamic motion artifacts occur result time differences image segments blind stitching feature based alignment methods autostitch opposed manual selection stitching imperfections assembly panorama avoid parallax distortion issue images stitching format camera keeping stationary exposures lens images parallax issues sliding adapters market movement capture device dslr medium format digital capture movement camera adapter flex adapter phase simple linear stitching axis horizontal alcatraz image multistitch adapter plate user create images overlap precisely planes creating images stitching photographic advantage stitching format camera capture device remains plane exposure rotational imperfections cylindrical distortions eliminated software dedicated programs include autostitch hugin ptgui panorama tools image composite editor clevr stitcher programs stitch multiple images popular adobe systems photoshop includes tool photomerge versions auto blend programs videostitch stitch videos vahana vr enables real time video stitching image stitching module quickphoto microscope software enables interactively stitch multiple fields view microscope camera live view manual stitching microscopy samples 
2891273	computerscience	barebone partially assembled platform unassembled kit allowing customization costs retail desktop notebook barebook server purposes form factor manufacturers produce systems specialized standard form factor sold pre built unit motherboard power supply installed components assembling barebone hand expensive buying pre configured retailer save time labor compared building scratch typical barebone desktop consists cpu tower pre fitted motherboard power supply purchaser platform equip ram optionally hard drive operating installed cost flash drive additional input output devices required depending install operating built motherboard deemed insufficient audio adapter network adapter common motherboards capable solutions peripherals keyboard mouse monitor acquired separately barebone systems include graphics processor ram rarely mass storage media hard drives operating software pcs normal desktop pc windows operating systems sold barebone include software linux refurbished computers repackaged barebone computers computers returned refurbishing missing broken obsolete hard drives peripherals upgrade limitations future upgradeability barebone limited motherboard component space extra devices memory pci card slots desired motherboard compatible faster processors memory originally purchased barebone barebones limit maximal processor thermal design power tdp support cpus fit socket manufacturers companies manufacture barebone computers 
2901245	computerscience	unix refers versions unix operating dec pdp pdp 11 vax interdata 32 32 computers developed bell labs computing sciences center history term unix appeared bell technical journal 57 jul aug 1978 distinguish versions internal bell labs pwb unix mert code base diverged primary csrc version term version unix retroactively applied earlier versions prior v8 operating commonly called simply unix caps unix time sharing licensed version educational institutions version commercial sites schools paid 200 20 000 discouraging commercial version version 1980s unix versions referred edition manual describes versions officially released bell labs grew organically unix edition tenth edition common referring version unix manual edition modern editions unix—excepting unix implementations coherent minix linux—derive 7th edition starting 8th edition versions unix close relationship bsd 1cbsd basis 8th edition usenet post 2000 dennis ritchie versions unix closer bsd unix included bsd code legacy 2002 caldera international released unix v1 32v foss permissive bsd software license 2017 unix heritage society alcatel lucent usa behalf nokia bell laboratories released v8 v9 v10 condition assert copyright rights respect commercial copying distribution performance display creation derivative unix®1 editions 
2932011	computerscience	standard image digital image file institutions image processing image compression algorithms standard images labs compare visually quantitatively images chosen represent natural typical images class processing techniques deal images chosen range challenges image reconstruction algorithms reproduction fine textures sharp transitions edges uniform regions historical origins images transmission calibration material original paris lyon fax link analogue fax equipment photographic equipment printing trade largest user standardized image calibration technology coming television digital image transmission systems common images standard size images 512×512 720×576 images tiff files university southern california signal image processing institute kodak released set 24 768×512 images pngs comparing image compression techniques 
2937077	computerscience	graphics digital imaging image scaling refers resizing digital image video technology magnification digital material upscaling resolution enhancement scaling vector graphic image graphic primitives image scaled geometric transformations loss image quality scaling raster graphics image image pixels generated decreasing pixel scaling visible quality loss standpoint digital signal processing scaling raster graphics dimensional sample rate conversion conversion discrete signal sampling rate local sampling rate mathematical image scaling interpreted form image resampling image reconstruction view nyquist sampling theorem theorem downsampling image resolution original carried applying suitable 2d anti aliasing filter prevent aliasing artifacts image reduced carried image sampling reconstruction filter takes anti aliasing filter sophisticated approach upscaling treats inverse solving question generating plausible image scaled input image variety techniques applied including optimization techniques regularization terms machine learning examples algorithms image size changed simpler increasing image size nearest neighbor interpolation replacing pixel nearest pixel output upscaling multiple pixels color preserve sharp details pixel art introduce jaggedness smooth images nearest nearest neighbor mathematical nearest common implementation rounding produces artifacts faster calculate bilinear interpolation interpolating pixel color values introducing continuous transition output original material discrete transitions desirable continuous tone images algorithm reduces contrast sharp edges undesirable art bicubic interpolation yields increase computational complexity sinc resampling theory reconstruction perfectly bandlimited signal practice assumptions sinc resampling completely met real digital images lanczos resampling approximation sinc method yields bicubic interpolation regarded computationally efficient approximation lanczos resampling weakness bilinear bicubic algorithms sample specific pixels scaling threshold sampling algorithms algorithms sample adjacent pixels losing data rough trivial solution issue box sampling target pixel box original image sample pixels box ensures input pixels contribute output major weakness algorithm hard optimize solution downscale sampling scaling mipmaps mipmap prescaled set downscale copies downscaling nearest larger mipmap origin ensure scaling threshold bilinear scaling algorithm fast easy optimize standard frameworks opengl cost image memory standard implementation simple interpolation based fourier transform pads frequency domain components smooth window based approach reduce ringing conservation recovery details notable ringing circular bleeding content left border border edge directed interpolation algorithms aim preserve edges image scaling algorithms introduce staircase artifacts examples algorithms task include edge directed interpolation nedi edge guided image interpolation eggi iterative curvature based interpolation icbi directional cubic convolution interpolation dcci 2013 analysis dcci scores psnr ssim series images magnifying graphics resolution colors 256 colors achieved hqx pixel art scaling algorithms produce sharp edges maintain level vector extraction vectorization offer approach vectorization creates resolution independent vector representation graphic scaled resolution independent version rendered raster image desired resolution technique adobe illustrator live trace inkscape scalable vector graphics suited simple geometric images photographs fare vectorization complexity method machine learning detailed images photographs complex artwork programs method include waifu2x neural enhance applications image scaling applications browsers image editors image file viewers software magnifiers digital zoom process generating thumbnail images outputting images screens printers video application magnification images theaters hdtv ready output devices pal resolution content dvd player upscaling performed real time output signal saved pixel art scaling pixel art graphics resolution rely careful placing individual pixels limited palette colors graphics rely stylized visual cues define complex shapes resolution individual pixels scaling pixel art difficult specialized algorithms developed handle pixel art graphics traditional scaling algorithms perceptual cues account typical application improve appearance fourth generation earlier video games arcade console emulators designed real time input images 60 frames fast hardware algorithms suitable gaming real time image processing algorithms provide sharp crisp graphics minimizing blur scaling art algorithms implemented wide range emulators 2d game engines game engine recreations hqmame dosbox scummvm gained recognition gamers technologies encouraged revival 1980s 1990s gaming experiences filters commercial emulators xbox live virtual console psn classic resolution games visually appealing modern hd displays released games incorporate filters include sonic ultimate genesis collection akumajō dracula chi rondo 
2938351	computerscience	scalar processors represent class processors scalar processor processes data item time typical data items integers floating scalar processor classified sisd processor single instructions single data flynn taxonomy contrast vector processor single instruction operates simultaneously multiple data items referred simd difference analogous difference scalar vector arithmetic superscalar processor hand executes instruction clock cycle simultaneously dispatching multiple instructions redundant functional units processor functional unit separate cpu core execution resource single cpu arithmetic logic unit bit shifter multiplier 
2997698	computerscience	logical methods science peer reviewed access scientific journal covering theoretical science applied logic established 2005 editor chief lars birkedal aarhus university abstracting indexing journal abstracted indexed current contents engineering computing technology mathematical reviews science citation expanded scopus zentralblatt math journal citation reports journal 2016 impact factor 661 
3025266	computerscience	ternary called trinary ternary logic values popular binary base calculations types ternary computing deals discrete ternary digits defined connelly history calculating machine built thomas fowler wood 1840 operated balanced ternary modern electronic ternary setun built 1958 soviet union moscow university nikolay brusentsov notable advantages binary computers eventually replaced electricity consumption production cost 1970 brusentsov built enhanced version called setun 70 usa ternary computing emulator ternac binary machine developed 1973 ternary qtc developed canada balanced ternary ternary computing commonly implemented terms balanced ternary digits −1 negative balanced ternary digit replacing − vice versa easy subtract inverting − digits normal addition balanced ternary express negative values easily positive leading negative sign decimal advantages calculations efficient ternary binary digit signs mandatory nonzero digits magnitude notation signs concise potential future applications advent mass produced binary components computers ternary computers diminished significance donald knuth argues brought development future advantage ternary logic elegance efficiency happen combining optical ternary logic ternary fiber optics dark orthogonal polarizations light −1 ibm reports infrequently ternary computing topics papers actively engaged josephson junction proposed balanced ternary memory cell circulating superconducting currents clockwise counterclockwise advantages proposed memory circuit capability speed computation power consumption simple construction elements ternary operation 2009 quantum proposed quantum ternary qutrit typical qubit basic quantum element called qudit ternary computers popular culture robert heinlein time love sapient computers secundus planet framing story set including minerva unbalanced ternary minerva reporting calculation result original ternary readout unit pair pair comma unit nil nil comma unit pair pair comma unit nil nil nil virtual adepts roleplaying game ternary computers howard tayler webcomic schlock mercenary modern ternary ais extra digit boolean true false operations intimate understanding fuzzy logic binary computers conjoiners alastair reynolds revelation space series ternary logic program computers nanotechnology devices 
3044244	computerscience	series 80 crystal short lived mobile software platform enterprise professional level smartphones nokia introduced 2000 symbian os common physical properties symbian os user interface type screen resolution 640×200 pixels qwerty keyboard series 80 size communicator screens separate development market nokia 9300i announced 2005 final series 80 device nokia series 80 platform final communicator nokia e90 
3057187	computerscience	independent toyota motors founded 1949 25 company owned toyota motor toyota companies march 2016 sales toyota accounted 50 total revenue 44 revenue originated car manufacturers japan germany china denso ranks largest auto supplier 2016 denso corporation consisted 189 subsidiaries 63 japan 34 americas 34 europe 58 asia oceania total 151 775 employees company escalating global production structure establishing manufacturing complexes india mexico indonesia accommodate global demand products 2013 denso listed 242 fortune global 500 list total revenue 43 meaning word denso 電装 den derived japanese den electric chi device sales company develops manufactures auto including gasoline diesel engine components hybrid vehicle components climate control systems instrument clusters air bag systems pre crash radar systems spark plugs denso develops manufactures automotive components household heating equipment industrial robots qr code denso industrial robot gained wide public attention japan conducted game shogi japanese chess professional players 2014 denso global sales distributed motorsports denso toyota helpful toyota participating developing cars motorsports series denso autoparts electronics toyota racing development toyota motorsport gmbh cologne germany operated toyota team toyota rally championship team toyota fia endurance championship team toyota ts030 hybrid denso kinetic energy recovery consists motor generator unit mgu electric motor inverter finished 2013 24 hours le mans toyota family denso products japanese motorsport cars nippon japan super 500 300 denso wave denso wave subsidiary produces automatic identification products bar code readers products industrial robots programmable logic controllers creating dimensional qr code japan robot association support orin standard denso international america denso international america american subsidiary denso corporation 1970 denso corporation decided expand overseas kariya japan north america march 1971 denso sales california founded hawthorne california company staffed 12 associates americans objective denso sales california promote air conditioner systems options japanese vehicles 1975 denso corporation sales division denso sales southfield michigan september 1975 denso international america service center cedar falls iowa agricultural contract john deere including starter motors meters denso international america employs 17 000 people 38 locations north central south america march 31 2008 combined sales totaled american locations price fixing january 30 2012 justice department announced investigation discovered massive price fixing scheme denso yazaki played role conspiracy fixed prices allocated components car manufacturers toyota honda extended michigan japan investigation denso agreed pay fine 78 
3089375	computerscience	interlock feature mechanisms functions mutually dependent prevent undesired finite machine consist electrical electronic mechanical devices systems applications interlock prevent machine harming operator damaging preventing element changing element vice versa elevators equipped interlock prevents moving elevator doors prevents stationary elevator doors moving idiot proof strategies interlock confused simple safety switch typical household microwave oven switch disables magnetron door interlock considered interlock door locked magnetron magnetron prevented operating door interlocks include sophisticated elements curtains infrared beams photodetectors interlocking program digital analogue electronics simple switches locks trapped key interlocking trapped key interlocking method ensuring safety industrial environments forcing operator predetermined sequence defined selection locks switches called trapped key releasing trapping predetermined sequence control power isolated key released grant access individual multiple doors prevent access electric kiln trapped key interlock disconnecting switch kiln door switch key held interlock attached disconnecting switch kiln door switch releases key key unlock kiln door key removed switch interlock plunger interlock mechanically prevents switch closing power applied kiln kiln door locked releasing key key returned disconnecting switch interlock interlock ensure energy supply machine interrupted machine entered adjustment maintenance microprocessors microprocessor architecture interlock hardware stalls pipeline inserts bubbles hazard detected hazard cleared hazard software program loads data bus calls data cycle loads multiple cycles load hazard mechanical interlocks strictly mechanical form internal firearm safety blocks motion trigger sear firing pin breech properly closed locked operation device press cutter hand fed workpiece hand removed buttons actuate device hand greatly reduces possibility operation endangering operator fool proof systems augmented cable–pulled gloves worn operator retracted danger stroke machine major engineering operator safety tendency operators ignore safety precautions outright disabling forced interlocks pressure factors safeties require facilitate operator cooperation electrical people generators supplement power business event main municipal power offline safely transfer power source generator main safety interlock employed interlock consists switches prevent main power generator power powering dwelling simultaneously safeguard power sources running overload condition generator power feed main dangerous voltage reach lineman repairing main feed building interlock device designed generator provide backup power prevents main generator power connected time circuit breakers operate interference event overload condition interlock devices electrical systems employ mechanical device manage movement circuit breakers padlocks prevent accidentally activating main power authorization 
3100948	computerscience	structural similarity ssim method predicting perceived quality digital television cinematic pictures kinds digital images videos version model developed laboratory image video engineering live university texas austin developed jointly laboratory computational vision lcv york university ssim measuring similarity images ssim reference metric measurement prediction image quality based initial uncompressed distortion image reference ssim designed improve traditional methods peak signal noise ratio psnr squared error mse history predecessor ssim called universal quality uqi wang–bovik developed zhou wang bovik 2001 evolved collaboration hamid sheikh eero simoncelli current version ssim published april 2004 ieee transactions image processing addition defining ssim quality paper context developing evaluating perceptual quality measures including connections human visual neurobiology perception direct validation human subject ratings ssim rapidly image processing community march 2000 frtv phase report video quality experts concluded proposed models perceptual quality ineffective 2004 ssim paper cited 15 000 times google scholar cited papers image processing video engineering fields accorded ieee signal processing society paper award 2009 received ieee signal processing society sustained impact award 2016 indicative paper unusually impact publication inventors ssim accorded individual primetime engineering emmy award television academy 2015 structural similarity difference respect techniques mentioned mse psnr approaches estimate absolute errors hand ssim perception based model considers image degradation perceived change structural incorporating perceptual phenomena including luminance masking contrast masking terms structural idea pixels strong inter dependencies spatially close dependencies carry structure objects visual scene luminance masking phenomenon image distortions context tend visible bright regions contrast masking phenomenon distortions visible activity texture image algorithm ssim calculated windows image measure windows common size ssim satisfies condition symmetry 21formula components ssim based comparison measurements samples luminance 24 contrast 25 structure 26 individual comparison functions 27formula 28formula 29with addition definitions ssim weighted combination comparative measures 31setting weights 32 reduced form application evaluate image quality applied luma applied color rgb values chromatic ycbcr values resultant ssim decimal reachable identical sets data perfect structural similarity structural similarity typically calculated window sizes 8×8 window displaced pixel pixel image authors propose subgroup windows reduce complexity calculation variants multi scale ssim advanced form ssim called multiscale ssim ssim conducted multiple scales process multiple stages sampling reminiscent multiscale processing vision perform equally ssim subjective image video databases component ssim component ssim ssim form ssim takes account human eye differences precisely textured edge regions smooth regions metric calculated weighted average ssim categories regions edges textures smooth regions proposed weighting edges 25 textured smooth regions authors mention weighting ignoring edge distortions leads closer subjective ratings suggests edge regions play dominant role image quality perception structural dissimilarity structural dissimilarity dssim distance metric derived ssim triangle inequality satisfied video quality metrics worth noting original version ssim designed measure quality images parameters temporal effects human perception human judgment temporal variants ssim developed simple application ssim estimate video quality calculate average ssim frames video sequence complex wavelet ssim complex wavelet transform variant ssim cw ssim designed deal issues image scaling translation rotation scores images conditions cw ssim takes advantage complex wavelet transform yields scores images cw ssim defined 34where 35is complex wavelet transform signal 1and 37is complex wavelet transform signal additionally 39is positive purposes function stability ideally ssim cw ssim maximum maximum signals perfectly structurally structural similarity application performance computation cost ssim broadcast cable satellite television industries dominant method measuring video quality broadcast post production houses television industry achievements basis team emmy award ssim included video quality measurement tools globally including marketed video clarity national instruments rodhe schwarz ssimwave ssim variants – multiscale ssim – reference perceptual image video quality models evidenced citation count wide industry acceptance industry recognition awards specific applications ssim ability quantify human visual perceptual quality applications variety examples performance comparison popularity ssim compared metrics including simple metrics mse psnr perceptual image video quality metrics ssim repeatedly outperform mse derivates accuracy including authors paper dosselmann yang claims performance ssim “much closer mse” assumed dispute advantage ssim mse analytical functional dependency metrics ssim correlate mse based methods subjective databases databases ssim creators cite reibman poole mse outperformed ssim database packet loss–impaired video paper analytical link psnr ssim identified 
3226361	computerscience	photography term acutance describes subjective perception sharpness edge contrast image acutance amplitude derivative brightness respect space nature human visual image acutance appears sharper increase acutance increase real resolution historically acutance enhanced chemically development negative acutance developers optical printing unsharp masking digital photography onboard camera software image postprocessing tools photoshop gimp offer sharpening facilities unsharp mask algorithm derived eponymous analog processing method image light gray lines drawn gray background transition instantaneous sharp represented resolution acutance left artificially increased adding pixel wide darker border pixel wide brighter border actual sharpness image unchanged apparent sharpness increased acutance artificially increased acutance drawbacks overdone viewers borders separately create halos dark shimmering bright tools image processing techniques unsharp masking increase acutance real images resampling pass filtering resampling overshoot increases acutance reduce absolute gradient reduces acutance filtering resampling clipping ringing artifacts bicubic interpolation image processing resizing images definition definition acutance determined imaging sharp knife edge producing shaped distribution maximum density d1 minimum density d2 – steeper transitions yield acutance summing slope curve acutance acutance image gradient density intensity vector quantity acutance image vector field sharpness perceived sharpness combination resolution acutance combination captured resolution changed processing acutance changed properly perceived sharpness steepness transitions slope change output divided change position – maximized output sharpening filters position resolution coarse grain noise sharpening filters increase acutance increasing perception sharpness degrade signal noise ratio term heard analogy critical focus obtaining maximal optical resolution limited sensor film lens practice minimizing camera shake – tripod alternative support mirror lock cable release timer image stabilizing lenses – optimal aperture lens scene 2–3 stops wide deeper scenes balances diffraction blur defocus blur lens limits wide 
3235536	computerscience	google translate multilingual machine translation service developed google translate offers interface mobile apps android ios api helps developers build browser extensions software applications google translate supports 100 languages levels serves 500 people daily launched april 2006 statistical machine translation service united nations european parliament transcripts gather linguistic data translating languages translates english target language translation patterns millions documents decide translation accuracy criticized ridiculed occasions november 2016 google announced google translate switch neural machine translation engine google neural machine translation gnmt translates sentences time piece piece broader context figure relevant translation rearranges adjusts human speaking proper grammar originally enabled languages 2016 gnmt gradually languages history google translation complimentary translation service developed google april 2006 translates multiple forms texts media phrases webpages originally google translate released statistical machine translation smt translating required english translating selected language mandatory step smt predictive algorithms translate poor grammatical accuracy google initially hire experts resolve limitation evolving nature language january 2010 google introduced android app ios version february 2011 serve portable personal interpreter february 2010 integrated browsers chrome pronounce automatically recognize picture spot unfamiliar languages 2014 google acquired word lens improve quality visual voice translation scan picture device translated instantly automatically identifies foreign languages translates speech requiring individuals tap mic button speech translation november 2016 google transitioned translating method called “neural machine translation deep learning techniques translate sentences time ensures accuracy context 2018 translates 100 day functions google translate translate multiple forms media includes speech images videos functions include handwritten translation features google translate pronunciation dictionary listen translation additionally google translate introduced translate app translation mobile phone offline mode features google translate translate multiple forms media including speech images sites real time video language supports 100 languages levels serves 500 people daily languages google translate pronounce translated highlight phrases source target simple dictionary single word input detect language selected unknown language automatically identified user enters url source google translate produce hyperlink machine translation users save translations phrasebook languages entered screen keyboard handwriting recognition speech recognition browser integration google translate browsers optional downloadable extension translation engine february 2010 google translate integrated google chrome browser default optional automatic translation mobile apps google translate app android ios supports 100 languages translate 37 languages photo 32 voice conversation mode 27 real time video augmented reality mode android app released january 2010 ios february 2011 january 2011 android version experimented conversation mode allowed users communicate fluidly nearby person language originally limited english spanish feature received support 12 languages testing october january 2015 apps gained ability translate physical signs real time device camera result google acquisition word lens app original january launch supported languages july update support 20 languages enhanced speed conversation mode translations api 2011 google announced google translate api software developers deprecated cease functioning translate api stated reason substantial economic burden caused extensive abuse set december 2011 response public pressure google announced june 2011 api continue paid service api numerous party websites apps original decision deprecate led developers criticize google question viability google apis products google assistant google translate translations google assistant devices google assistant runs google google pixel buds supported languages languages supported google translate method translation april 2006 google translate launched statistical machine translation engine google translate apply grammatical rules algorithms based statistical analysis traditional rule based analysis original creator franz josef och criticized effectiveness rule based algorithms favor statistical approaches based method called statistical machine translation och darpa contest speed machine translation 2003 och head google machine translation leaving human longevity july 2014 och solid base developing usable statistical machine translation pair languages scratch consist bilingual corpus parallel collection 150 200 monolingual corpora statistical models data translate languages acquire huge linguistic data google united nations european parliament transcripts google translate translate language l1 l2 translates english target language l1 en l2 google translate generates translation patterns hundreds millions documents decide translation detecting patterns documents translated human translators google translate intelligent guesses translation october 2007 languages arabic chinese russian google translate based systran software engine online translation services babel fish defunct october 2007 google translate proprietary house technology based statistical machine translation google translate community google constantly seeks volunteers “translate community” translate languages people speak improve google translate accuracy contribute google phrase type translated version google translation phrase individuals translation statistical machine translation google deployed called “neural machine translation” quality translation languages traditional translation method called “statistical machine translation “rule based” translation method utilizes predictive algorithms guess translate texts foreign languages aims translate phrases single gather overlapping phrases translation analyzes bilingual corpora generate statistical model translates texts language google neural machine translation september 2016 team google led software engineer harold gilchrist announced development google neural machine translation gnmt increase fluency accuracy google translate november announced google translate switch gnmt google translate neural machine translation artificial neural network capable deep learning short term memory networks gnmt improves quality translation based machine translation ebmt method learns millions examples translates sentences time piece piece broader context figure relevant translation rearranges adjusts human speaking proper grammar gnmt proposed architecture learning tested languages supported google translate framework learns time create natural translations gnmt network capable interlingual machine translation encodes semantics sentence simply memorizing phrase phrase translations invent universal language commonality inbetween languages gnmt enabled languages english chinese french german japanese korean portuguese spanish turkish march 2017 enabled hindi russian vietnamese languages indonesian bengali gujarati kannada malayalam marathi punjabi tamil telugu languages april gnmt capability translate language l1 l2 improves previous versions google translate translated english target language l1 en l2 gnmt capable shot translation translating language pair japanese korean explicitly crowdsourcing 2014 google launched translate community platform aimed improving translation service seeking volunteers august 2016 google crowdsource app released android users translation tasks offered accuracy google translate reliable human translation sufficient ability provide accurate translation gist foreign language ability translate phrases consistent manner conducted 2011 showcased google translate score ucla minimum score english proficiency exam identical choice flexibility choosing alternative expressions produces translation human translation perspective formality referential cohesion conceptual cohesion languages translated sentence structure sentence human translation google carried required native speakers language rate translation scale google translate 43 average limitations differences complexity nature language accuracy vary greatly languages languages produce typically western languages english spanish accurate accuracy african languages poorest asian european languages google translate performs english target language source language european union prominence translated eu parliament notes 2010 analysis french english translation accurate source shorter rule based machine translations perform evident chinese english translations edits translations submitted chinese edit sentences edit arbitrary sets characters leading incorrect edits russian english google translate draft dictionary common sense correct numerous mistakes 2018 translate accurate russian wikipedia accessible read english quality translate checked adding extension chrome applying left language links wikipedia article google translate deployed technology called “neural machine translation translate sentences block context time alternative translation word phrase “written translation” function word limit translated transferred document form translated “document translate” function machine translation identify double meanings word word foreign language meanings translated language result lead mistranslations additionally grammatical error remains major limitation google translate attempts accuracy reviews shortly launching translation service time google international competition english–arabic english–chinese machine translation translation mistakes oddities google translate statistical matching translate translated include nonsensical obvious errors swapping common terms nonequivalent common terms language inverting sentence meaning novelty websites bad translator translation party utilized service produce humorous translating multiple languages children game telephone court usage 2017 google translate court hearing court officials teesside magistrates court failed book interpreter chinese defendant 
3247560	computerscience	notoc ascii stereograms form ascii art based stereograms produce optical illusion dimensional image crossing eyes appropriately single image pair images 3d figure instance viewer diverge eyes adjacent letters row focusing capital os ensure image central dot stable focus rest image 3d apparent os figure reversed 3d effects crossing eyes diverging figure distances figure demonstrates dramatically 3d image achieved moving viewer head screen increases stereo moving horizontally vertically produces effects figure single image random stereogram sirts based idea single image random dot stereogram sirds word relief image clicks people included stereograms signature electronic mail messages news articles figure figure floor wall ceiling figure single image random stereogram figure stereogram signature moving animated versions ascii stereograms emphasis stereo highlight individual sort secret message disguised paragraph block justified figure emphasized single sources figures david thomas jonathan bowen charles durst marty hewes stereograms appeared publicly accessible alt 3d usenet newsgroup figure invented spot wikipedian originally adapted article ascii stereograms author article permission 
3259263	computerscience	demis hassabis born 27 july 1976 british artificial intelligence researcher neuroscientist video game designer entrepreneur class games player life education hassabis born greek cypriot father chinese singaporean mother grew north london child prodigy chess hassabis reached master standard age 13 elo rating 2300 captained england junior chess teams represented university cambridge oxford cambridge varsity chess matches 1995 1996 1997 winning blue hassabis educated christ college finchley funded comprehensive school east finchley north london completed gce advanced level scholarship level exams age 15 16 bullfrog hassabis games career bullfrog productions level designing syndicate 17 designing lead programming 1994 game theme park games designer peter molyneux theme park simulation video game sold copies golden joystick award inspired genre management sim games university cambridge hassabis left bullfrog study queens college cambridge completed science tripos graduating 1997 double university cambridge career graduation lionhead graduating cambridge hassabis lionhead studios renowned games designer peter molyneux hassabis bullfrog productions founded company lionhead hassabis lead programmer 2001 god game black white elixir studios hassabis left lionhead 1998 elixir studios london based independent games developer signing publishing deals eidos interactive vivendi universal addition managing company hassabis served executive designer bafta nominated games evil genius release elixir game highly ambitious unusual political simulation game delayed huge scope final game reduced original vision greeted lukewarm reviews receiving metacritic score 62 100 evil genius tongue cheek bond villain simulator fared score 75 100 april 2005 intellectual property technology rights sold publishers studio closed university college london neuroscience elixir studios hassabis returned academia phd cognitive neuroscience university college london ucl 2009 supervised eleanor maguire sought inspiration human brain algorithms continued neuroscience artificial intelligence visiting scientist jointly massachusetts institute technology mit harvard university earning henry wellcome postdoctoral fellowship gatsby charitable foundation computational neuroscience unit ucl 2009 field autobiographical memory amnesia authored influential papers published nature science neuron pnas highly cited papers published proceedings national academy sciences united america systematically time patients damage hippocampus amnesia unable imagine experiences finding established link constructive process imagination reconstructive process episodic memory recall based follow functional magnetic resonance imaging fmri study hassabis developed theoretical account episodic memory identifying scene construction generation online maintenance complex coherent scene key process underlying memory recall imagination received widespread coverage mainstream media listed scientific breakthroughs field journal science deepmind 2010 hassabis founded deepmind london based machine learning startup shane legg mustafa suleyman hassabis suleyman friends childhood met legg postdocs university college london gatsby computational neuroscience unit hassabis recruited university friend elixir partner david silver deepmind mission solve intelligence intelligence solve concretely deepmind aims meld insights neuroscience machine learning developments computing hardware unlock increasingly powerful purpose learning algorithms creation artificial intelligence agi company focused training learning algorithms master games december 2013 famously announced pioneering breakthrough training algorithm called deep network dqn play atari games superhuman level raw pixels screen inputs deepmind investors included profile tech entrepreneurs 2014 google purchased deepmind £400 remained independent entity based london google acquisition company notched achievements notable creation alphago program defeated champion lee sedol complex game considered holy grail board positions resistance existing programming techniques alphago beat european champion fan hui october 2015 winning champion lee sedol march 2016 additional deepmind accomplishments include creating neural turing machine advancing safety creation partnership national health service nhs united kingdom moorfields eye hospital improve medical service identify onset degenerative eye conditions deepmind artificial intelligence protein folding toughest science december 2018 deepmind tool alphafold 13th critical assessment techniques protein structure prediction casp predicting accurate structure 25 43 proteins “this lighthouse project major investment terms people resources fundamental real scientific hassabis guardian demonstration power deepmind application bodes understanding cures diseases serves component potential noble prize worth breakthroughs decade deepmind responsible technical advancements machine learning produced award winning papers company advances deep learning reinforcement learning pioneered field deep reinforcement learning combines methods hassabis predicted artificial intelligence beneficial technologies mankind ethical issues remain awards honours games hassabis expert player games including 
3274742	computerscience	learning automaton type machine learning algorithm studied 1970s learning automata select current action based experiences environment fall range reinforcement learning environment stochastic markov decision process mdp history learning automata traced michael lvovitch tsetlin 1960s soviet union colleagues published collection papers matrices automata functions additionally tsetlin reasonable collective automata behaviour automata games learning automata investigated researches united 1960s term learning automaton narendra thathachar introduced survey paper 1974 definition learning automaton adaptive decision unit situated random environment learns optimal action repeated interactions environment actions chosen specific probability distribution updated based environment response automaton obtains performing action respect field reinforcement learning learning automata characterized policy iterators contrast reinforcement learners policy iterators manipulate policy π policy iterators evolutionary algorithms formally narendra thathachar define stochastic automaton consist paper investigate stochastic automata bijective allowing confuse actions automaton correspond discrete discrete parameter markov process time step automaton reads input environment updates randomly chooses successor probabilities outputs action automaton environment reads action sends input automaton frequently input set nonpenalty penalty response environment automaton learn minimize penalty responses feedback loop automaton environment called model model arbitrary finite input set model interval real finite action set learning automata finite action set learning automata fala class learning automata actions finite mathematical terms size action set finite 
3328438	computerscience	thomas shi tao huang born june 26 1936 shanghai researcher professor emeritus university illinois urbana champaign uiuc huang leading figures vision pattern recognition human interaction life education thomas shi tao huang born june 26 1936 shanghai 1949 family moved taiwan huang studied electronics national taiwan university received bachelor degree 1956 huang united study massachusetts institute technology mit mit initially peter elias theory image coding william schreiber time scanning equipment commercially build scanner digitizing reproducing images programs written assembly language prototype lincoln lab tx descriptions digitized images stored paper tape punched holes huang supervised schreiber thesis picture statistics linearly interpolative coding 1960 thesis pictorial noise 1963 master focused algorithms image coding adaptive techniques interpolation sensitivity edges doctorate included subjective effects pictorial noise spectrum career huang accepted position faculty department electrical engineering mit remained 1963 1973 accepted position electrical engineering professor director signal processing laboratory purdue university 1973 remaining 1980 1980 huang accepted chair electrical engineering university illinois urbana champaign uiuc april 15 1996 huang william everitt distinguished professor electrical engineering uiuc involved coordinated science laboratory csl served head image formation processing beckman institute advanced science technology chair beckman institute track human intelligent interaction 2012 named swanlund chair endowed title uiuc dr huang retired teaching december 2014 continues active researcher dr huang founding editor international journal vision graphics image processing springer verlag springer series sciences helped organize international picture coding symposium 1969 international workshop bitrate video coding 1993 international conference automatic gesture recognition 1995 repeated events dr huang tended focus development concepts methodologies theories algorithms wide application multimodal multimedia signal processing mit developed algebraic procedure testing stability conditions dimensional filters based double bilinear transformation ansell method published digital holography purdue nonlinear filters median filters standard technique removal noise images earliest dealt image compression extending enhancement restoration analysis developed approaches binary document compression utilized dimensional scanned examining scan detecting transition subsequent differs statistical predictions experimental model performance conformed 1969 huang grant anderson teams propose method block transform coding building huang peter schultheiss 1984 tsai huang frequency domain multi frame method discrete fourier transform observed resolution satellite images acquisition stage continuous fourier transform resolution image inverse fourier transform final image increased resolution dr huang wavelet methods encoding fractal coding wavelet coding content based image retrieval multimedia databases images video audio enables searches encoded images size retrieved images include relevance feedback adapting database systems user intentions browsing searching constructing tables contents semantic indexes video multimedia image sequence audio closed captions modelling dr huang identification dimensional motion structure rigid objects multiple images features identified compression television images development image standards human vision dr huang modeling analysis synthesis images human hands body initial motivation support bitrate model based video coding video phone teleconferencing idea model user transmitted reconstructed receiving sufficient extract send movement drive model regenerate video sequence tools developed type scenarios applicable including virtual space conferencing avatars electronic games dr huang considers image speech processing fundamentally speech recognition sound processing images huang mark hasegawa johnson students created database speech recorded automobiles usable benchmark testing audio visual speech recognition algorithms developed methods detecting audio elements attract human attention enable humans effectively amounts audio recordings dr huang multimodal human interaction interface design researchers combine audio video based techniques identification human affective huang attempts develop series algorithms extract multi modality optimal screening amounts data multiple sources optimizing types amounts data compressed transmitted opportunistic sensing applications military civilian dr huang hopes develop natural effective humans interact virtual environment speech gesture projects include visual hand tracking gesture recognition visual lip reading enhance audio speech recognition accuracy integration speech recognition visual gesture analysis controlling displays virtual environments audio visual recognition gender age emotion gender emotion detection received media attention software examine mona lisa concluding portrait female theorized based da vinci enigmatic smile happy sad 2015 dr huang dr ann willemsen dunlap interdisciplinary project develop generated avatar capable emotions online communication medical patients exploring performance computing data develop techniques deep learning tasks studied surprisingly recognition project team astronomer robert brunner train feedforward neural network identify images galaxies honors outstanding achievements huang received numerous honors awards career including awards named dr huang supervised 100 graduate students huang advised prominent researchers field vision including zhangyang atlas wang 2012 thomas margaret huang fund graduate created response appeals students james kuch chang wen chen celebrate contributions dr huang wife mentors teachers contributions researcher fund provide scholarships support students human intelligent interaction beckman institute 
3337942	computerscience	robotics competition frc international school robotics competition teams school students coaches mentors week period build game playing robots weigh robots complete tasks scoring balls goals flying discs goals tubes racks hanging bars balancing robots balance beams game required set tasks annually teams standard set allowed budget encouraged specialized robotics competition robotics competition programs organized lego league jr lego league tech challenge robotics competition unique culture built values gracious professionalism embraces competition inherent program rejects trash talk chest thumping embracing empathy respect teams coopertition emphasizes teams cooperate compete time goal program inspire students science technology leaders 2018 29th competition 647 teams 91 000 students 25 000 mentors 27 countries built robots competed 63 regional competitions 85 district qualifying competitions district championships 800 teams slots attend championship events competed tournament addition field competition teams team competed awards recognizing entrepreneurship creativity engineering industrial design safety controls media quality exemplifying core values program teams reside united canada china mexico israel turkey australia contributing teams history founded 1989 inventor entrepreneur dean kamen inspiration assistance physicist mit professor emeritus woodie flowers kamen disappointed kids—particularly women minorities—who science technology careers decided inventor looked activities captured enthusiasm students decided combining excitement sports competition science technology potential distilling sports recipe engaging people kamen straightforward school school aspirational required explained quizzes tests competitions trophies letters teachers coaches nurture judge create teamwork participants justify sports teamwork classroom cheating nonjudgmental space contrast science math traditional educational settings soured embarrassment uncertainty kamen stated feels predicts participants responsible technological advances robotics competition season 1992 event school gymnasium hampshire competition scale size tech challenge vex robotics competition games robots relied wired connection receive data drivers transitioned wireless teams 647 teams 28 countries competed 2018 power 171 veteran teams meaning competed previous season 476 rookie teams meaning 2018 season competition countries represented listed decreasing teams 2018 competition championship championship culmination robotics competition competition season occurs late april roughly 800 teams participated championship events 2018 held april houston texas detroit michigan media exposure pbs documentary gearing teams 2008 season television series dean dean kamen appeals promoting prior commercial breaks 2010 robotics competition season team 3132 thunder macquarie university student film crew document robotics competition australia crew produced documentary film called wombot film premiered 2011 dungog film festival book called cool written neal bascomb story team 1717 goleta california competed 2009 game season movie adaptation directed michael bacall produced cnn documentary fail education america aired 15 2011 robotics competition teams 2011 season documentary profiled student team covering geographic socioeconomic levels shaan patel team 1403 cougar robotics maria castro team 842 falcon robotics brian whited team 3675 eagletrons august 14 2011 abc aired special called science rock roll featured famous musical artists black eyed peas willow smith executive producer special program special focus robotics competition included segments tech challenge lego league lego league jr 1996 1998 championship covered espn 2013 macy thanksgiving day parade robotics competition teams robots led parade robot cutting ribbon shooting confetti 2014 movie robotics competition robot built team 2468 team 2012 season featured cade yeager garage shooting foam basketball game pieces rebound rumble 2015 kickoff time broadcast nbcuniversal subsidiary comcast ondemand month january 2015 fourth season fosters 2013 series episodes featuring characters competing regional robotics competition competition notably episode girl code 
3367262	computerscience	circular convolution cyclic convolution aperiodic functions schwartz functions occurs convolved normal periodic summation function situation arises context circular convolution theorem identical operation expressed terms periodic summations functions infinite integration interval reduced period  that situation arises context discrete time fourier transform dtft called periodic convolution  in dtft product discrete sequences periodic convolution dtfts individual sequences function defined periodic summation function convolution ∗ exists convolution ∗ periodic identical arbitrary parameter periodic summation integral called periodic convolution functions normalized expressed periodic summation function operation referred circular convolution functions discrete sequences discrete sequences period write circular convolution functions special extent ≤ reducible matrix multiplication kernel integral transform circulant matrix practical illustrated figure duration sequence duration sequence values circular convolution identical values x∗h   desired result sequence finite impulse response fir filter circular convolution efficient compute fast fourier transform fft algorithm circular convolution theorem methods dealing sequence practical sequence divided segments blocks processed piecewise filtered segments carefully pieced edge effects eliminated overlapping input blocks output blocks explain compare methods discuss context sequence 201 fft size of     1024 overlapping input blocksthis method block size equal fft size 1024 terms normal linear convolution normal convolution performed block start decay transients block edges filter latency 200 samples 824 convolution outputs unaffected edge effects discarded simply computed gaps output input blocks contiguous gaps avoided overlapping input blocks 200 samples sense 200 elements input block saved carried block method referred overlap save method requires save output samples fft compute 824 unaffected dft samples option computing samples leading trailing edge effects overlapped circular convolution 1024 inverse fft ifft output 200 samples edge effects discarded 824 unaffected samples illustrate fourth frame figure depicts block periodically circularly extended frame depicts individual components linear convolution performed entire sequence edge effects contributions extended blocks overlap contributions original block frame composite output colored green represents unaffected portion overlapping output blocksthis method overlap add contiguous input blocks size 824 pads 200 valued samples overlaps adds 1024 element output blocks discarded 200 values output block saved addition block methods advance 824 samples 1024 ifft overlap save avoids initial padding final addition 
3446185	computerscience	science hierarchical protection domains called protection rings mechanisms protect data functionality faults improving fault tolerance malicious behaviour providing security approach diametrically capability based security operating systems provide levels access resources protection hierarchical levels layers privilege architecture hardware enforced cpu architectures provide cpu modes hardware microcode level rings arranged hierarchy privileged trusted numbered privileged trusted operating systems level privileges interacts physical hardware cpu memory special gates rings outer access resources predefined manner opposed allowing arbitrary usage correctly gating access rings improve security preventing programs privilege level misusing resources intended programs spyware running user program prevented camera informing user hardware access function device drivers programs browsers running numbered rings request access network resource restricted numbered implementations multiple rings protection revolutionary concepts introduced multics operating highly secure predecessor unix family operating systems 645 mainframe hardware access control sufficient provide support rings hardware multics supported trapping transitions software successor honeywell 6180 implemented hardware support rings purpose systems rings hardware cpu modes windows windows server 2008 predecessors rings kernel mode user mode earlier versions windows processors supported protection levels modern cpu architectures including popular intel x86 architecture include form protection windows nt operating unix utilize feature os extent rings kernel code device drivers privileged code user programs access permissions unprivileged code user programs dos kernel drivers applications typically exclusive protected mode drivers dos extenders real mode os runs effectively protection 386 memory managers emm386 addition dr dos emm386 xx optionally modules dpms openvms modes called decreasing privileges kernel executive supervisor user renewed design structure proliferation xen vmm software ongoing discussion monolithic micro kernels usenet newsgroups forums design structure ngscb initiative hypervisors embedded firmware intel vt vanderpool original multics rings modern systems hardware remains aware current executing instruction thread times special machine register systems virtual memory assigned hardware data eclipse 8000 bits program counter pc served register code executing virtual pc set 0xe200000 automatically calling subroutine memory automatically transfer hardware severely restricts control passed enforces restrictions types memory access performed rings x86 special gate structure referenced instruction transfers control secure predefined entry level trusted rings functions supervisor operating systems architecture hardware restrictions designed limit opportunities accidental malicious breaches security addition privileged special capabilities real memory addressing bypasses virtual memory hardware arm v7 architecture implements privilege levels application operating hypervisor unusually level 0 pl0 privileged level level 2 pl2 privileged hypervisor level protection combined processor modes master kernel privileged supervisor mode slave unprivileged user mode systems operating systems running hardware supporting forms protection effective architecture requires close cooperation hardware operating operating systems designed multiple hardware platforms limited rings supported platform security model simplified kernel user hardware finer granularity rings modes supervisor mode terms supervisor mode hardware mediated flag changed code running level software level tasks threads flag set running userspace applications flag determines execute machine code operations modifying registers descriptor tables performing operations disabling interrupts idea modes operate program supervisor mode trusted fail failure crash supervisor mode execution mode processors enables execution instructions including privileged instructions access address space memory management hardware peripherals mode operating runs monolithic kernel operating runs supervisor mode applications user mode types operating systems exokernel microkernel share behavior examples pc processors modes x86 processors modes divided rings programs code runs fail time impact rest rarely configured levels access existing systems switching user mode kernel mode cost performance measured basic request codice cost 1000 1500 cycles machines 100 actual switch 70 user kernel space 40 rest kernel overhead l3 microkernel minimization overhead reduced cost 150 cycles maurice wilkes wrote eventually hierarchical protection rings closely match requirements programmer improvement simple modes rings protection lent efficient implementation hardware attractiveness fine grained protection remained rings protection provide answer proved blind alley gain performance determinism systems functions viewed application logic device drivers kernel mode security applications access control firewalls operating monitors cited examples embedded database management treme db kernel mode developed kernel mode deployment provide local database kernel based application functions eliminate context switches occur kernel functions interact database running user mode functions moved rings direction linux kernel instance injects vdso processes functions require transition syscall functions static data kernel prevents transition lightweight syscall function gettimeofday hypervisor mode cpus intel amd offer x86 virtualization instructions hypervisor control hardware access mutually incompatible intel vt codenamed vanderpool amd codenamed pacifica create guest operating operations natively guests host os assist virtualization vt pacifica insert privilege level beneath add machine code instructions intended hypervisor privilege level privilege level x86 instruction set controls access program running processor resources memory regions ports special instructions privilege levels ranging privileged privileged modern operating systems level kernel executive level application programs resource level levels privilege levels rings lesser privileged process access privileged process protection fault exception reported os privilege levels current operating systems wide market share including windows macos linux ios android paging mechanism bit privilege level supervisor user bit windows nt level real mode programs 8086 executed level privilege level virtual mode 8086 executes programs level potential future multiple privilege levels supported x86 isa family include containerization virtual machines host operating kernel instructions privilege access kernel mode applications running guest os virtual machine container lowest level privileges user mode virtual machine guest os kernel intermediate level instruction privilege invoke virtualize kernel mode operations calls view guest operating iopl iopl privilege level flag flag ia 32 compatible x86 cpus occupies bits 12 13 flags register protected mode mode privilege level current program task current privilege level cpl cpl0 cpl1 cpl2 cpl3 task program equal iopl task program access ports iopl changed codice codice current privilege level iopl port permissions tss determining ability task access port hardware features cpu hardware architectures provide flexibility exploited operating systems proper complex cpu modes requires close cooperation operating cpu tie os cpu architecture os cpu designed hardware features left unexploited os designed compatible multiple cpu architectures cpu mode features os reason windows levels hardware architectures supported powerpc mips implemented privilege levels multics operating designed special cpu architecture designed multics advantage cpu modes exception rule degree interoperation os hardware cost effective potential advantages security stability ultimately purpose distinct operating modes cpu provide hardware protection accidental deliberate corruption environment breaches security software trusted portions software allowed execute unrestricted environment kernel mode paradigmatic designs absolutely software executes user modes processor generates fault exception condition user mode stability unaffected processor generates fault exception condition kernel mode operating systems halt unrecoverable error hierarchy modes exists based security faults exceptions privilege level destabilize numbered privilege levels fault kernel mode privilege crash entire fault affect rings transitions modes discretion executing thread transition level privilege privilege kernel user modes transitions levels privilege secure hardware controlled gates traversed executing special instructions external interrupts received microkernel operating systems attempt minimize code running privileged mode purposes security elegance ultimately sacrificing performance 
3492955	computerscience	fiber fttx spelled fibre fiber loop generic term broadband network architecture optical fiber provide local loop mile telecommunications fiber optic cables carry data copper cables distances copper telephone networks built 20th century replaced fiber fttx generalization configurations fiber deployment arranged fttp ftth fttb fiber laid premises building fttc fiber laid cabinet node copper wires completing connection residential served balanced pair distribution plant trade cost capacity closer fiber head cost construction channel capacity served metallic facilities cost saved running fiber fiber key method drive generation access nga describes upgrade broadband step change speed quality service typically asymmetrical download speed 24 mbit fast upload speed definition superfast generation broadbandofcom defined nga ofcom march 2010 review wholesale local access market super fast broadband broadband products provide maximum download speed 24 mbit threshold commonly considered maximum speed supported current generation copper based networks network called hybrid fiber coaxial hfc network cable television operators synonymous fiber loop advanced services hfc networks fixed wireless mobile wireless technologies wi wimax 3gpp term evolution lte alternative providing internet access definitions telecommunications industry differentiates distinct fttx configurations terms widespread promote consistency comparing ftth penetration rates countries ftth councils europe north america asia pacific agreed definitions ftth fttb 2006 update 2009 2011 2015 ftth councils formal definitions fttc fttn benefits fiber optic cables carry data speeds distances copper cables traditional telephone lines adsl common form gigabit ethernet 1gbit runs economical category 5e category augmented category unshielded twisted pair copper cabling gbit ethernet fiber easily reach tens kilometers fttp selected major communications provider carry data gbit symmetrical connections consumer homes fttp configurations bring fiber building offer speeds remaining segments standard ethernet coaxial cable fiber future proof data rate connection limited terminal equipment fiber permitting substantial speed improvements equipment upgrades fiber upgraded type employed fibers chosen multimode single mode critical applicability future connections gbit rising popularity definition demand video streaming applications devices youtube netflix roku facebook live demand reliable bandwidth crucial people utilize services fttc fiber transitions copper street cabinet users standard ethernet configurations existing copper cabling bit rate digital subscriber vdsl downstream rates 80 mbit falls extremely distance 100 meters fiber premises fiber premises fttp form fiber optic communication delivery optical fiber optical distribution network central office premises occupied subscriber term fttp ambiguous refer fttc fiber terminates utility pole reaching premises fiber premises categorized optical fiber apartment building provide distinction ftth fttb fiber panel subscriber apartment unit ftth fiber apartment building shared electrical ground floor floor fttb fiber curb cabinet node fiber curb cabinet fttc telecommunications based fiber optic cables platform serves customers customers connection platform coaxial cable twisted pair curb abstraction easily pole mounted device communications closet typically terminating fiber customer premises equipment fttc fiber node neighborhood fttn identified distinguished fiber cabinet fttc telecommunication architecture based fiber optic cables cabinet serving neighborhood customers typically connect cabinet traditional coaxial cable twisted pair wiring served cabinet mile radius customers cabinet serves radius architecture typically called fttc fttk fttn delivery broadband services speed internet speed communications protocols broadband cable access typically docsis form digital subscriber dsl cabinet customers data rates vary exact protocol close customer cabinet fttp fttn existing coaxial twisted pair infrastructure provide mile service costly deploy term bandwidth potential limited relative implementations bring fiber closer subscriber variant technique cable television providers hybrid fiber coaxial hfc acronym fttla fiber amplifier replaces analog amplifiers customer neighborhood customers fttc delivery broadband services speed internet existing wire communications protocols broadband cable access typically docsis form dsl connecting curb cabinet customers protocols data rates vary exact protocol close customer cabinet feasible cable fiber copper ethernet capable connecting curb 100mbit 1gbit connection cheap outdoor category copper thousands feet ethernet protocols including power ethernet poe supported fixed wireless technologies rely poe including motorola canopy power radios capable running 12vdc power supply fed feet cable power networking deployments rely fttc ieee p1901 protocol predecessor homeplug av existing electric service cables 1gbit curb pole cabinet ac electrical outlet home—coverage equivalent robust wi implementation advantage single cable power data avoiding cable cost liabilities fttc costs deploy historically bandwidth potential fttp practice relative advantage fiber depends bandwidth backhaul usage based billing restrictions prevent mile capabilities customer premises equipment maintenance restrictions cost running fiber vary geography building type united canada largest deployment fttc carried bellsouth telecommunications acquisition bellsouth deployment fttc future deployments based fttn fttp existing fttc plant removed replaced fttp verizon announced march 2010 winding verizon fios expansion concentrating completing network fios franchises deploying suggesting ftth uneconomic verizon announced ces 2010 entry smart power utility data management arenas indicating p1901 based fttc existing wire approach reach homes access additional revenues secure aes 128 bandwidth required advanced metering infrastructure largest 1gbit deployment united chattanooga tennessee conducted power utility epb ftth fttc reaching subscriber 600 square mile monthly pricing 350 reflected cost deployment chattanooga epb reduced monthly pricing 70 month historically telephone cable companies avoided hybrid networks modes transport presence customer premises increased competitive cost pressure availability existing wire solutions smart grid deployment requirements chattanooga hybrid networking tools major vendors alcatel lucent qualcomm atheros wi solutions edge networks ieee 1905 ieee 802 21 protocol efforts snmp improvements fttc deployments uneconomic serve fttp ftth fttc serves halfway measure fixed wireless ftth special advantages smart appliances electric vehicles rely plc deployments operators rolling speed internet access networks mid 2000s network topology active ethernet deliver services central office subscribers homes fiber termination handled residential gateway advanced digital broadcast subscriber shared consumer electronics ce devices 2007 italian access providers fastweb telecom italia vodafone wind participated initiative called fiber italy aim creating countrywide fiber network italy pilot italian capital rome symmetrical bandwidth 100 mbit telecom italia refused fiber italy initiative ambitious plan bring fiber fiber business 138 cities 2018 december 2010 total fiber enabled homes passed 348 000 subscribers september 2010 european commission published recommendation regulated access nga networks list measures promote deployment fast broadband generation access networks portugal telecom plans complete fiber nationwide roll 2020 200 mbs 100mbs costs 22 euros month google fiber speed gbit fttp copper telephone networks built 20th century replaced fttp countries fttn fttc fttn interim step ftth triple play services delivered approach proven grow subscriber arpu considerably fttn operators including united germany deutsche telekom greece ote swisscom tim italy proximus belgium nbn™ australia canadian operators telus cogeco bell canada optical distribution networks direct fiber simplest optical distribution network architecture direct fiber fiber leaving central office customer networks provide excellent bandwidth costly fiber central office machinery south africa city cape town largest direct fiber networks cape town forefront telecommunication connectivity fiber ground competitive offerings argument direct fiber multiple operators patch network easily troubleshooting simple direct fiber favored entrants competitive operators benefit layer networking technologies excluded passive optical network pon active optical network aon form regulatory remedy topology shared fiber commonly fiber leaving central office shared customers fiber close customers split individual customer specific fibers aons pons achieve split active optical network aons rely electrically powered network equipment distribute signal switch router signals optical electrical optical transformation aon signal leaving central office directed customer intended incoming signals customers avoid colliding intersection powered equipment buffering active ethernet type ethernet mile common aon optical ethernet switches distribute signal incorporating customers premises central office switched ethernet network networks identical ethernet networks businesses academic institutions purpose connect homes buildings central office connect computers printers location switching cabinet handle 000 customers 400–500 typical neighborhood equipment performs layer switching layer switching routing offloading layer routing carrier central office ieee 802 3ah standard enables service providers deliver 100mbit duplex single mode optical fiber fttp depending provider speeds 1gbit commercially passive optical network passive optical network pon multipoint fttp network architecture unpowered optical splitters enable single optical fiber serve 128 customers pon reduces fiber central office equipment required compared architecture downstream signal coming central office broadcast customer premises sharing fiber encryption prevent eavesdropping upstream signals combined multiple access protocol time division multiple access tdma ethernet protocol ethernet pppoe common delivering triple quad play voice video data mobile services fiber hybrid fiber coaxial hfc networks active pppoe dedicated fiber operator central office subscribers homes hybrid networks fttn transport data fiber intermediate ensure throughput speeds mile copper connections approach increasingly popular telecoms service providers north america telus europe fastweb telecom italia telekom austria deutsche telekom google looked approach deliver multiple services access networks united electrical network private property signal typically converted electrical format optical network terminal ont itu term unit onu identical ieee term converts optical signal electrical signal film filter technology units require electrical power operation providers connect backup batteries power outages ensure emergency access telecommunications optical terminations range optical network terminals units provide tdma time slot assignments upstream communication ftth forms fttb common building existing ethernet phone cable systems connect optical network terminal unit systems reach unit combine signals transport common medium ethernet closer user equipment router network interface controller separate signals convert protocol fttc fttn combined internet video telephone signal travels building existing telephone cable wiring reaches user living space vdsl docsis modem converts data video signals ethernet protocol user category cable 
3499226	computerscience	introduction algorithms book thomas cormen charles leiserson ronald rivest clifford stein book textbook algorithms courses universities commonly cited reference algorithms published papers 000 citations documented citeseerx book sold copies 20 fame led common abbreviation clrs cormen leiserson rivest stein edition clr cormen leiserson rivest preface authors write book written comprehensive teaching professional environments chapter focuses algorithm discusses design techniques application specific programming language algorithms written pseudocode descriptions focus aspects algorithm mathematical properties emphasize efficiency editions edition textbook include stein author book initialism clr included chapters arithmetic circuits algorithms parallel computers dropped edition addition fourth author edition refer book clrs edition book white book algorithms edition predominant color cover changed green causing nickname shortened book algorithms edition published august 2009 plans edition started 2014 fourth edition published 2019 earliest cover design mobile depicted cover red 1959 alexander calder whitney museum american art york city 
3503207	computerscience	multi core processor single computing component independent processing units called cores read execute program instructions instructions ordinary cpu instructions add data branch single processor multiple instructions separate cores time increasing speed programs amenable parallel computing manufacturers typically integrate cores single integrated circuit die chip multiprocessor cmp multiple dies single chip package microprocessors personal computers multi core multi core processor implements multiprocessing single physical package designers couple cores multi core device tightly loosely cores share caches implement message passing shared memory inter core communication methods common network topologies interconnect cores include bus dimensional mesh crossbar homogeneous multi core systems include identical cores heterogeneous multi core systems cores identical heterogeneous cores share instruction set amd accelerated processing units cores share instruction set single processor systems cores multi core systems implement architectures vliw superscalar vector multithreading multi core processors application domains including purpose embedded network digital signal processing dsp graphics gpu improvement performance gained multi core processor depends software algorithms implementation gains limited fraction software parallel simultaneously multiple cores amdahl law called embarrassingly parallel realize speedup factors cores split fit core cache avoiding slower main memory applications accelerated programmers invest prohibitive effort factoring parallelization software ongoing topic terminology terms multi core dual core commonly refer sort central processing unit cpu applied digital signal processors dsp chip soc terms refer multi core microprocessors manufactured integrated circuit die separate microprocessor dies package referred multi chip module article terms multi core dual core cpus manufactured integrated circuit contrast multi core systems term multi cpu refers multiple physically separate processing units special circuitry facilitate communication terms core massively multi core multi core architectures cores tens thousands systems soft microprocessor cores single fpga core considered semiconductor intellectual property core cpu core development manufacturing technology improves reducing size individual gates physical limits semiconductor based microelectronics major design concern physical limitations heat dissipation data synchronization methods improve cpu performance instruction level parallelism ilp methods superscalar pipelining suitable applications inefficient difficult predict code applications suited thread level parallelism tlp methods multiple independent cpus commonly increase tlp combination increased space refined manufacturing processes demand increased tlp led development multi core cpus commercial incentives business motives drive development multi core architectures decades improve performance cpu shrinking integrated circuit ic reduced cost device ic alternatively circuit transistors design increased functionality complex instruction set computing cisc architectures clock rates increased magnitude decades late 20th century megahertz 1980s gigahertz 2000s rate clock speed improvements slowed increased parallel computing form multi core processors pursued improve processing performance multiple cores cpu chip lead sales cpu chips cores intel produced 48 core processor cloud computing core x86 architecture technical factors manufacturers implemented symmetric multiprocessing smp designs discrete cpus issues implementing multi core processor architecture supporting software additionally continue delivering regular performance improvements purpose processors manufacturers intel amd multi core designs sacrificing manufacturing costs performance applications systems multi core architectures developed alternatives strong contender established markets integration peripheral functions chip advantages proximity multiple cpu cores die cache coherency circuitry operate clock rate signals travel chip combining equivalent cpus single die improves performance cache snoop alternative bus snooping operations simply signals cpus travel shorter distances signals degrade quality signals data time period individual signals shorter repeated assuming die physically fit package multi core cpu designs require printed circuit board pcb space multi chip smp designs dual core processor power coupled single core processors principally decreased power required drive signals external chip cores share circuitry l2 cache interface bus fsb terms competing technologies silicon die multi core design proven cpu core library designs produce product risk design error devising wider core design adding cache suffers diminishing returns multi core chips performance energy factor mobile devices operate batteries core multi core cpu energy efficient chip efficient single monolithic core performance energy challenge additional overhead writing parallel code disadvantages maximizing usage computing resources multi core processors requires adjustments operating os support existing application software ability multi core processors increase application performance depends multiple threads applications integration multi core chip chip production yields difficult manage thermally density single core designs intel partially countered creating quad core designs combining dual core single die unified cache dual core dies opposed producing cores single die requiring produce quad core cpu architectural view ultimately single cpu designs silicon surface multiprocessing cores development commitment architecture carry risk obsolescence finally raw processing power constraint performance processing cores sharing bus memory bandwidth limits real performance advantage 2009 report dr jun single core close memory bandwidth limited dual core 30 70 improvement memory bandwidth 90 improvement expected amdahl law claim dubious application cpus running faster single core communication cpus limiting factor count 100 improvement hardware trends trend processor development increasing cores processors hundreds thousands cores theoretically addition multi core chips mixed simultaneous multithreading memory chip special purpose heterogeneous asymmetric cores promise performance efficiency gains processing multimedia recognition networking applications core includes performance core called power core called trend improving energy efficiency focusing performance watt advanced fine grain ultra fine grain power management dynamic voltage frequency scaling laptop computers portable media players chips designed outset cores evolved single core designs referred manycore designs emphasising qualitative differences architecture composition balance cores multi core architecture variety architectures core design repeated consistently homogeneous mixture cores optimized heterogeneous role article cpu designers debate multi core future rick merritt times 2008 includes comments software effects outdated version anti virus application create thread scan process gui thread waits commands user cancel scan multi core architecture benefit application single thread heavy lifting inability balance multiple cores programming multithreaded code requires complex ordination threads easily introduce subtle difficult bugs interweaving processing data shared threads thread safety code difficult debug single threaded code breaks perceived lack motivation writing consumer level threaded applications relative rarity consumer level demand maximum hardware threaded applications incur additional performance penalty single processor machines extra overhead development difficult justify preponderance single processor machines serial tasks decoding entropy encoding algorithms video codecs impossible parallelize result generated create result entropy decoding algorithm increasing emphasis multi core chip design stemming grave thermal power consumption posed increase processor clock speeds extent software multithreaded advantage chips single constraint performance future developers unable design software exploit resources multiple cores ultimately reach insurmountable performance ceiling telecommunications market design parallel datapath packet processing quick adoption multiple core processors datapath control plane mpus replace traditional network processors based proprietary microcode picocode parallel programming techniques benefit multiple cores existing parallel programming models cilk openmp openhmpp fastflow skandium mpi erlang multi core platforms intel introduced abstraction parallelism called tbb efforts include codeplay sieve cray chapel sun fortress ibm x10 multi core processing ability modern computational software development developers programming languages modern languages support multi core functionality requires numerical libraries access code written languages fortran perform math computations faster languages intel mkl amd acml written native languages advantage multi core processing balancing application workload processors problematic performance characteristics conceptual models deal coordination language program building blocks programming libraries functions block native implementation processor type users simply program abstractions intelligent compiler chooses implementation based context managing concurrency acquires central role developing parallel applications basic steps designing parallel applications hand server multi core processors ideal users connect simultaneously independent threads execution servers application servers throughput licensing vendors license software processor rise ambiguity processor consist single core combination cores embedded applications embedded computing operates processor technology distinct mainstream pcs technological drives multi core apply application natural fit multi core technologies task easily partitioned processors addition embedded software typically developed specific hardware release issues software portability legacy code supporting independent developers critical pc enterprise computing result easier developers adopt technologies result variety multi core processing architectures suppliers multi core network processing devices mainstream companies freescale semiconductor cavium networks wintegra broadcom manufacturing products processors developer key challenge exploit cores devices achieve maximum networking performance level performance limitations inherent smp operating address issue companies 6wind provide portable packet processing software designed networking data plane runs fast path environment os digital signal processing trend applies texas instruments core tms320c6488 core tms320c5441 freescale core msc8144 core msc8156 stated core successors entries include storm family stream processors 40 80 purpose alus chip programmable simd engine picochip processors single die focused communication applications benchmarks development multicore processors compares options benchmarks developed evaluations existing benchmarks include splash parsec cosmic heterogeneous systems 
3538953	computerscience	sebastian thrun born 14 1967 innovator entrepreneur educator scientist germany ceo kitty hawk corporation chairman founder udacity google vp fellow professor science stanford university carnegie mellon university google founded google google driving car team adjunct professor stanford university georgia tech thrun led development robotic vehicle stanley 2005 darpa grand challenge exhibit smithsonian institution national museum american history team developed vehicle called junior darpa grand challenge 2007 thrun led development google driving car thrun probabilistic algorithms robotics applications including robotic mapping recognition contributions age elected national academy engineering academy sciences leopoldina 2007 guardian recognized 20 fighters internet freedom life education thrun born 1967 solingen germany west germany son winfried kristin grüner thrun completed vordiplom intermediate examination science economics medicine university hildesheim 1988 university bonn completed diplom degree 1993 summa cum laude 1995 science statistics career 1995 joined science department carnegie mellon university cmu scientist 1998 assistant professor director robot learning laboratory cmu faculty cmu founded master program automated learning discovery program broad machine learning scientific discovery 2001 thrun spent sabbatical stanford university returned cmu endowed professorship finmeccanica associate professor science robotics thrun left cmu july 2003 associate professor stanford university appointed director sail january 2004 2007–2011 thrun professor science electrical engineering stanford april 2011 thrun relinquished tenure stanford google google fellow january 23 2012 founded online private educational organization udacity google vp fellow development google driverless car thrun interviewed 2018 documentary artificial intelligence trust robotics thrun developed autonomous robotic systems earned international recognition 1994 started university bonn rhino project doctoral thesis advisor armin cremers 1997 thrun colleagues wolfram burgard dieter fox developed robotic tour guide deutsches museum bonn 1997 1998 follow robot minerva installed smithsonian national museum american history washington dc guided tens thousands visitors week deployment period thrun cmu pitt nursebot project fielded interactive humanoid robot nursing pittsburgh pennsylvania 2002 thrun helped develop mapping robots project colleagues william whittaker scott thayer professors carnegie mellon university stanford university 2003 engaged development robot stanley 2005 darpa grand challenge graduate student michael montemerlo advised william whittaker led software development robot 2007 thrun robot junior 2007 darpa urban challenge thrun joined google sabbatical stanford students google developed google street view thrun contributions robotics theoretical contributed probabilistic robotics field marries statistics robotics substantial contributions mobile robot localization mapping slam control probabilistic techniques mainstream robotics numerous commercial applications fall 2005 thrun published textbook entitled probabilistic robotics term workers dieter fox wolfram burgard 2007 japanese translation probabilistic robotics japanese market thrun principal investors stanford spin vectormagic 
3591552	computerscience	concrete mathematics foundation science ronald graham donald knuth oren patashnik published 1989 textbook science departments substantive light hearted treatment analysis algorithms contents history book mathematical knowledge skills science analysis algorithms preface topics concrete mathematics blend continuous discrete mathematics calculus frequently explanations exercises term concrete mathematics denotes complement abstract mathematics book based begun 1970 knuth stanford university book expands material mathematical preliminaries knuth art programming readers introduction famous series books concrete mathematics informal humorous style authors reject dry style mathematics textbooks margins mathematical graffiti comments submitted editors knuth patashnik students stanford knuth books readers invited claim reward error book—in error technically historically typographically politically incorrect book popularized lot mathematical notation includes iverson bracket floor ceiling functions notation rising falling factorials typography donald knuth edition concrete mathematics ams euler typeface concrete roman font 
3596825	computerscience	resel res olution el ement concept image analysis describes actual spatial image resolution image volume resels image equal pixel voxels image actual image resels vary image local resolution expressed resels pixel resels voxel functional neuroimaging analysis estimate resels random field theory statistical inference keith worsley proposed estimate resels roughness history word resel pixel voxel waldo tobler word 
3673806	computerscience	real time executive multiprocessor systems rtems real time executive missile systems real time executive military systems real time operating rtos designed embedded systems source software development late 1980s versions ftp 1993 oar corporation managing rtems project cooperation steering committee includes user representatives design rtems designed real time embedded systems support api standards including posix µitron api classic rtems api originally based real time executive interface definition rteid specification rtems includes port freebsd tcp ip stack support filesystems including nfs fat filesystem rtems provide form memory management processes posix terminology implements single process multithreaded environment reflected rtems posix services memory mapping process forking shared memory rtems closely corresponds posix profile 52 single process threads filesystem architectures rtems ported target processor architectures rtems application domains experimental physics industrial control epics community includes multiple people active rtems submitters rtems popular space supports multiple microprocessors developed space including sparc erc32 leon mips mongoose coldfire powerpc architectures space hardened models rtems orbiting mars electra software radio nasa mars reconnaissance orbiter esa trace gas orbiter license rtems distributed modified gnu public license gpl allowing linking rtems objects files executable covered gpl license based gnat modified public license language modified specific ada programming language 
3825008	computerscience	air gap air wall air gapping network security measure employed computers ensure secure network physically isolated unsecured networks public internet unsecured local network network network interfaces connected networks physical conceptual air gap analogous air gap plumbing maintain water quality classified settings air gapped network network interfaces wired wireless connected networks ordinary computers plugged wired network virtually wireless network interface controller wifi connected nearby wireless networks access internet update software represents security vulnerability air gapped computers wireless interface controller permanently disabled physically removed data air gapped write data physical medium thumbdrive physically computers physical access easier control electronic network interface attacked time exterior insecure malware infects secure export secure data environments networks devices rated handle levels classified disconnected devices networks referred unclassified referring classified classified level occasionally referred red classified black unclassified access policies based bell–lapadula confidentiality model data moved minimal security measures requires stringent procedures ensure protection data level classification concept represents maximum protection network save device transfer data air gapped data removable storage medium removable disk usb flash drive physically carry storage access easily controlled upside network regarded closed terms signals emissions security unable accessed downside transferring analyzed computers secure network extraordinarily labor intensive involving human security analysis prospective programs data entered air gapped networks human manual entry data security analysis viruses stuxnet agent btz bridge gap exploiting security holes handling removable media possibility acoustic communication demonstrated researchers researchers demonstrated feasibility data exfiltration frequency signals examples examples types networks systems air gapped include systems features connect public internet effectively air gapped including thermostats internet connections automobiles bluetooth wi cellular phone connectivity limitations limitations imposed devices environments include ban wireless connections secure network restrictions em leakage secure network tempest faraday cage scientists 2013 demonstrated viability air gap malware designed defeat air gap isolation acoustic signaling shortly network security researcher dragos ruiu badbios received press attention 2014 researchers introduced airhopper bifurcated attack pattern feasibility data exfiltration isolated nearby mobile phone frequency signals 2015 bitwhisper covert signaling channel air gapped computers thermal manipulations introduced bitwhisper supports bidirectional communication requires additional dedicated peripheral hardware 2015 researchers introduced gsmem method exfiltrating data air gapped computers cellular frequencies transmission generated standard internal bus renders cellular transmitter antenna projectsauron malware discovered 2016 demonstrates infected usb device remotely leak data air gapped malware remained undetected relied hidden partitions usb drive visible windows transport channel air gapped connected internet share files systems nfcdrip discovery stealthy data exfiltration nfc field communication radio abuse signal detection 2018 nfc enables devices establish effective communication bringing centimeters researchers abused transmit range expected 100 meters malware exploit hardware combinations leak sensitive air gapped systems air gap covert channels hardware combinations mediums bridge air gap including acoustic light seismic magnetic thermal radio frequency 
3828482	computerscience	intuitive surgical american corporation develops manufactures markets robotic products designed improve clinical outcomes patients minimally invasive surgery notably da vinci surgical company nasdaq 100 500 september 30 2017 installed base 271 units worldwide – 770 united 719 europe 561 asia 221 rest history eventually led development da vinci surgical performed late 1980s profit institute sri international 1990 sri received funding national institutes health sri developed prototype robotic surgical caught defense advanced projects agency darpa potential surgeons operate remotely soldiers wounded battlefield 1994 dr frederic moll sri device time time moll employed guidant guidant avail 1995 moll introduced john freund left acuson corporation freund negotiated option acquire sri intellectual property incorporated company named intuitive surgical devices freund moll robert younge acuson wrote business plan company raised initial venture capital investors included mayfield fund sierra ventures morgan stanley company refined sri prototype originally lenny leonardo da vinci ready testing 1997 company prototypes advanced named da vinci themes named leonardo mona final version prototype nicknamed da vinci surgical stuck eventually commercialized testing intuitive surgical marketing europe 1999 awaiting fda approval united company raised 46 initial public offering 2000 fda approved da vinci surgical laparoscopic surgery address gallbladder disease gastroesophageal disease 2001 fda approved prostate surgery fda subsequently approved thoracoscopic surgery cardiac procedures performed adjunctive incisions gynecologic procedures shortly public intuitive surgical sued patent infringement motion chief rival motion robotic surgery field earlier intuitive surgical zeus robotic surgical zeus approved europe food drug administration approved procedure time fda approved da vinci uncertainty created litigation companies drag company growth 2003 intuitive surgical motion agreed merge litigation zeus ultimately phased favor da vinci buyout motion stock intuitive selling 14 share adjusted stock splits merger stock price rose 2015 500 growth systems sold 60 2002 compared 431 2014 surgical procedures performed 000 2002 compared 540 000 2014 finances fiscal 2017 intuitive surgical reported earnings 660 annual revenue 129 increase 15 previous fiscal cycle intuitive surgical shares traded 307 share market capitalization valued 58 november 2018 da vinci surgical da vinci surgical robotic surgical controlled surgeon console commonly prostatectomies increasingly cardiac valve repair gynecologic surgical procedures overview da vinci designed improve conventional laparoscopy surgeon operates standing hand held shafted instruments wrists da vinci consists surgeon console typically patient patient cart interactive robotic arms controlled console arms tools hold objects scalpel scissors bovie unipolar bipolar electrocautery instruments fourth arm endoscopic camera lenses surgeon stereoscopic vision console surgeon sits console eye holes image procedure maneuvering arms hand controllers sided foot controls operate energy supplied instruments cauterize coagulate cut tissue left sided foot controls endoscopic camera bring surgical image closer da vinci scales filters translates surgeon hand movements precise micro movements instruments operate incisions body providing surgeons superior visualization enhanced dexterity precision ergonomic comfort da vinci surgical surgeons perform minimally invasive procedures involving complex dissection reconstruction patient da vinci procedure offer potential benefits minimally invasive procedure including pain blood loss blood transfusions da vinci enable shorter hospital stay quicker recovery faster return normal daily activities da vinci surgical costs da vinci released april 2009 cost 75 addition maintenance contracts expenditures instruments surgery surgical procedures performed robot traditional critics hospitals hard time recovering cost clinical data support claim improved patient outcomes efficacy robotic surgery item advertisement medical services critics voiced concern lack studies term superior laparoscopic surgery lawsuit june 2018 intuitive surgical settled class action lawsuits payment 43 
3829034	computerscience	waikato environment knowledge analysis weka suite machine learning software written java developed university waikato zealand software licensed gnu public license description weka collection visualization tools algorithms data analysis predictive modeling graphical user interfaces easy access functions original java version weka tcl party modeling algorithms implemented programming languages data preprocessing utilities makefile based running machine learning experiments original version designed tool analyzing data agricultural domains java based version weka development started 1997 application educational purposes advantages weka include weka supports standard data mining tasks data preprocessing clustering classification regression visualization feature selection weka techniques predicated assumption data flat file relation data fixed attributes numeric nominal attributes attribute types supported weka access sql databases java database connectivity process result returned database query weka access deep learning deeplearning4j capable multi relational data mining separate software converting collection linked database tables single table suitable processing weka covered algorithms included weka distribution sequence modeling user interfaces weka main user interface explorer essentially functionality accessed component based knowledge flow interface command experimenter systematic comparison predictive performance weka machine learning algorithms collection datasets explorer interface features panels providing access main components workbench native regression tools weka regression classification tools native packages included executible weka software native downloaded weka environment native packages famous tool m5p model tree package list tools regression tools extension packages version package manager easier installation extension packages functionality included weka prior version moved extension packages change easier contribute extensions weka maintain software modular architecture independent updates weka core individual extensions 
3833695	computerscience	term 17th century written reference dates 1613 meant computes person performing mathematical calculations electronic computers commercially human supposed fixed rules authority deviate teams people frequently undertake tedious calculations divided parallel frequently calculations performed independently separate teams check correctness 20th century term human applied individuals prodigious powers mental arithmetic mental calculators origins sciences approach astronomical complex calculations organized human computing frenchman alexis claude clairaut 1713–1765 divided computation determine time return halley comet colleagues joseph lalande nicole reine lepaute human computers involved plotting future movements astronomical objects create celestial tables almanacs late 1760s computers nautical almanac british admiralty included william wales israel lyons richard dunthorne project overseen nevil maskelyne maskelyne borrow tables sources reduce calculations team computers johannes kepler assisting scientist computation temporary position moved advancements women excluded exceptions mary edwards 1780s 1815 computers british nautical almanac navigation sea united version nautical almanac 1840s maria mitchell computers staff innovations human computing included boys octagon royal greenwich observatory astronomer royal george airy airy computers hired 1835 backlog astronomical data airy organized octagon manager pre printed computing forms standardized methods calculating checking nautical almanac computers operated remain standard computing operations 80 1870s united signal corps created organizing human computing track weather patterns built previous navy smithsonian meteorological project signal corps computing staff processed data collected finished intensive hour shifts individual human responsible data women increasingly involved computing 1865 private companies hired computing manage office staffs late nineteenth century edward charles pickering organized harvard computers woman approach anna winlock harvard observatory computing job 1875 1880 computers harvard observatory women standard pay started cents hour huge demand women offered harvard computers women astronomers era computers florence cushman henrietta swan leavitt annie jump cannon pickering 1888 1893 1896 cannon classify stars rate minute mina fleming harvard computers published draper catalogue stellar spectra 1890 catalogue organized stars spectral lines catalogue continued expanded harvard computers stars successive volumes 1893 frances galton created committee conducting statistical inquiries measurable characteristics plants animals reported royal society committee advanced techniques scientific supported scientists raphael weldon scientist supported committee wife florence tebb weldon human weldon logarithms mathematical tables created crelle calculating machine karl pearson lab university london weldon hampered committee pearson create mathematical committee allowed data correlation pearson brought correlation biometrics laboratory pearson volunteer salaried computers women alice lee salaried computers histograms chi squared statistics pearson beatrice frances cave brown cave pearson lab 1906 mastered art mathematical table mathematical tables human computers compile 18th 19th century western european mathematical tables trigonometry logarithms tables names principal mathematician involved project tables army unknown unsung computers accurate tables degree precision navigation engineering approaches differed break project form distance piece computers educated middle class women society deemed unseemly engage professions receive send packets calculations post royal astronomical society eventually space committee mathematical tables committee professional organization human computers 1925 fluid dynamics human computers predict effects building afsluitdijk zuiderzee simulation set hendrik lorentz visionary application meteorology scientific lewis fry richardson 1922 estimated 64 000 humans forecast weather globe solving attending differential equations numerically 1910 human computers calculate stresses masonry dam wartime computing electronics human computers women involved calculating ballistics tables war wars computers department agriculture united iowa college human computers calculating machines electrical computers aid 1930s columbia university statistical bureau created benjamin wood organized computing established indiana university cowles commission national council human computers played integral roles war war effort united depletion male labor force draft computers war women frequently degrees mathematics 1940s women hired examine nuclear particle tracks left photographic emulsions manhattan project human computers variety mechanical aids assisted numerical studies complex formulas nuclear fission war naca human computers flight transcribe raw data celluloid film oscillograph paper slide rules electric calculators reduced data standard engineering units margot lee shetterly biographical book hidden figures documents contributions african american women served human computers nasa naca begun hiring black women computers 1940 dorothy vaughan 1943 langley center special hire aid war effort electrical computers human computers women drafted programmers people responsible setting eniac premiere purpose electronic digital built university pennsylvania war drafted corps human computers professional programmers women including kay mcnulty betty snyder marlyn wescoff ruth lichterman betty jean jennings fran bilas human assisted computation term human researchers refer human computation usage human refers activities humans context human based computation hbc usage questionable reason hbc computational technique machine outsources algorithmic tasks humans time humans context hbc sequence exact steps executed yield answer hbc agnostic humans solve term outsourcing definition humans human computers context hbc rare 
3960515	computerscience	networking jumbo frames jumbos ethernet frames 1500 bytes payload limit set ieee 802 standard conventionally jumbo frames carry 9000 bytes payload variations exist care term gigabit ethernet switches gigabit ethernet network interface cards support jumbo frames fast ethernet switches fast ethernet network interface cards support jumbo frames inception ethernet frame processed passes network processing contents single frame preferable processing content broken frames cpu time reducing interrupts minimizes overhead byte count reduces frames processed analogous physically mailing packet papers single envelopes sheet saving envelopes cutting sorting time jumbo frames gained initial prominence alteon websystems introduced acenic gigabit ethernet adapters vendors size jumbo frames official ieee 802 ethernet standard adoption jumbo frames 9000 byte payload frames potential reduce overheads cpu cycles demonstrated positive jumbo frames tcp performance presence jumbo frames adverse network latency bandwidth links frame size connection typically limited lowest frame size intermediate links 802 token frames 4464 byte mtu fddi transport 4352 byte atm 9180 byte 802 11 transport 7935 byte mtus ieee 802 ethernet standard mandates support 1500 byte mtu frames 1518 byte total frame size 1522 byte optional ieee 802 1q vlan qos tag 9000 bytes preferred payload size jumbo frames arose discussions joint engineering team internet2 federal government networks recommendation national education networks meet mandatory purchasing criterion manufacturers 9000 bytes conventional mtu size jumbo frame size 9018 9022 bytes ieee 802 1q field ethernet equipment support jumbo frames 9216 bytes ieee 802 1ab 2009 ieee 802 3bc 2009 lldp discovery standard ethernet maximum frame tlv subtype frame detection port octet field ieee 802 2015 allowed values 1518 basic frames 1522 802 1q tagged frames 2000 multi tagged envelope frames error detection larger frames suffer undetected errors simple crc32 error detection ethernet frames larger data increases probability errors cancel additional mechanisms developed improve error detection network layers ietf solutions adopting jumbo frames avoids data integrity reduction service data unit castagnoli crc polynomial implemented sctp transport rfc 4960 iscsi rfc 7143 selection polynomial based documented paper 32 bit cyclic redundancy codes internet applications castagnoli polynomial 0x1edc6f41 achieves hamming distance hd ethernet mtu 16 360 bit data word hd 114 663 bits times ethernet mtu additional bits error detection ability mtu sized data compared ethernet crc standard polynomial sacrificing hd capability data word sizes 72 kbits crc checksum simple additive checksums contained udp tcp transports errors generated internal nics detected tcp udp proven ineffective detecting bus specific bit errors errors simple summations tend cancelling testing led adoption rfc 3309 compiled evidence based simulated error injection real data demonstrated errors detected major impediments adoption jumbo frames inability upgrade existing ethernet infrastructure avoid reduction ability detect errors crc calculations software slower performance achieved simple additive checksums tcp udp overcome performance penalty nics load sctp checksum calculations cpus support sse4 utilize crc32c instruction featured extension vector math instruction set support castagnoli crc polynomial purpose transport designed handle data chunks tcp transport designed carry scsi data provide improved error detection rates jumbo frames increase ethernet mtu reduction error detection configuration vendors include headers size settings maximum frame size including frame headers maximum layer packet size maximum transfer unit mtu maximum layer packet size excluding frame headers values configured equipment vendors settings match mixture devices configured jumbo frames devices configured jumbo frames network potential network performance issues bandwidth efficiency jumbo frames raise efficiency ethernet network processing hosts reducing overhead tcp ipv4 processing efficiency hosts increase ratio payloads times improvement depends packets processed host hosts tcp offload engine receive benefit hosts process frames cpu baby giant frames baby giant baby jumbo frames ethernet frames larger allowed ieee ethernet standards baby giant frames required enable ip mpls ethernet deliver ethernet services implementations require jumbo user frames encapsulated mpls frame format encapsulated proper ethernet frame format ethertype values 0x8847 0x8848 increased overhead extra mpls ethernet headers support 1600 byte frames mandatory requirement carrier ethernet networks super jumbo frames super jumbo frames sjfs considered frames payload size 9000 bytes relative scalability network data throughput function packet transfer rates complex manner payload size packet bit rate increases packet payload size increase direct proportion maintain equivalent timing parameters implies covariant scaling numerous intermediating logic circuits network path accommodate maximum frame size required difficult lengthy process increase path mtu performance national education networks 1500 bytes 9000 bytes subsequent increase 64 000 bytes time main factor involved increase maximum segment size mss increase memory buffer size intervening persistence mechanisms path main benefit reduction packet rate nodes intermediate transit nodes nodes reciprocating logic handle packets total machine cycles spent processing packet headers decreases average mss packets increases total data transmitted relationship increasingly average network bit rate increases gigabits alternate approach cpu load independent frame size send offload lso approach eliminate packet overhead jumbo frames designed reduce receive offload lro inbound counterpart segment offload eliminate packet overhead borne cpu jumbo frames remain beneficial inbound traffic jumbo frames bandwidth perspective reduce bandwidth data overhead 
3991954	computerscience	cpu modes called processor modes cpu cpu privilege levels names operating modes central processing unit architectures restrictions type scope operations performed processes cpu design operating privileges application software ideally highly trusted kernel code allowed execute unrestricted mode including supervisory portions operating runs restricted mode request kernel perform behalf operation damage compromise impossible untrusted programs alter damage programs computing practice calls time hurt performance computing uncommon designers time critical software device drivers kernel privileges multiple modes implemented—allowing hypervisor multiple operating supervisors beneath basic design virtual machine systems mode types unrestricted mode called kernel mode designations exist master mode supervisor mode privileged mode restricted modes referred user modes names slave mode kernel mode cpu perform operation allowed architecture instruction executed operation initiated memory accessed cpu modes restrictions cpu operations enforced hardware typically instructions permitted those—including operations—that alter global machine memory accessed user mode capabilities cpu typically subset kernel mode hardware emulation native architectures standard kernel mode cpu architectures support multiple user modes hierarchy privileges architectures based security hierarchy privileges resembles set concentric rings kernel mode center multics hardware implementation security hardware platforms designed lines including intel 80286 protected mode ia 64 referred mode protection extend resources cpu hardware hardware registers track current operating mode cpu additional virtual memory registers table entries data track mode identifiers resources cpu operating status word cpu access memory additionally validated separate virtual memory segment targeted access physical targeted demonstrated psp handheld hardware supports popek goldberg virtualization requirements writing software efficiently support virtual machine simpler software believes running supervisor mode running user mode 
4118276	computerscience	conditional random fields crfs class statistical modeling method applied pattern recognition machine learning structured prediction crfs fall sequence modeling family discrete classifier predicts label single sample neighboring samples crf context account linear chain crf popular natural language processing predicts sequences labels sequences input samples crfs type discriminative undirected probabilistic graphical model encode relationships observations construct consistent interpretations labeling parsing sequential data natural language processing biological sequencesand vision crfs applications pos tagging shallow parsing named entity recognition gene finding peptide critical functional region finding tasks alternative hidden markov models hmms vision crfs object recognition image segmentation description lafferty mccallum pereira define crf observations random variables graph thatformula conditional random field random variables conditioned obey markov property withrespect graph 11 meansthat 12 13 neighbors crf undirected graphical model nodes divided disjoint sets observed output variables conditional distribution 17 modeled inference graphs exact inference crfs intractable inference crf basically mrf arguments hold exist special exact inference feasible exact inference impossible algorithms approximate solutions include parameter learning learning parameters 18 maximum likelihood learning 19 nodes exponential family distributions nodes observed training optimization convex solved gradient descent algorithms quasi newton methods bfgs algorithm hand variables unobserved inference solved variables exact inference intractable graphs approximations examples sequence modeling graph chain graph input sequence observed variables 20 represents sequence observations 21 represents hidden unknown variable inferred observations 22 structured form chain edge 23 22 simple interpretation 22 labels element input sequence layout admits efficient algorithms conditional dependency 22 20 defined fixed set feature functions form 33 measurements input sequence partially determine likelihood 22 model assigns feature numerical weight combines determine probability 22 linear chain crfs applications conceptually simpler hidden markov models hmms relax assumptions input output sequence distributions hmm loosely understood crf specific feature functions constant probabilities model transitions emissions conversely crf loosely understood generalization hmm constant transition probabilities arbitrary functions vary positions sequence hidden depending input sequence notably contrast hmms crfs feature functions feature functions inspect entire input sequence 20 inference range feature functions probabilistic interpretation variants crfs semi markov crfs crfs extended models 22 dependent fixed 38 previous variables conventional formulations crfs training inference practical values 38 ≤ computational cost increases exponentially 38 advance managed ameliorate issues leveraging concepts tools field bayesian nonparametrics crf infinity approach constitutes crf type model capable learning infinitely temporal dynamics scalable fashion effected introducing potential function crfs based sequence memoizer nonparametric bayesian model learning infinitely dynamics sequential observations render model computationally tractable crf infinity employs field approximation postulated potential functions driven devising efficient approximate training inference algorithms model undermining capability capture model temporal dependencies arbitrary exists generalization crfs semi markov conditional random field semi crf models variable segmentations label sequence 21 power crfs model range dependencies 22 reasonable computational cost finally margin models structured prediction structured support vector machine alternative training procedure crfs latent dynamic conditional random field latent dynamic conditional random fields ldcrf discriminative probabilistic latent variable models dplvm type crfs sequence tagging tasks latent variable models trained discriminatively ldcrf sequence tagging task sequence observations 44 main model solve assign sequence labels 45 finite set labels modeling ordinary linear chain crf set latent variables inserted chain rule probability capturing latent structure observations labels ldcrfs trained quasi newton methods specialized version perceptron algorithm called latent variable perceptron developed based collins structured perceptron algorithm models applications vision gesture recognition video streams shallow parsing software partial list software implement generic crf tools partial list software implement crf tools 
4155662	computerscience	statistics image processing smooth data set create approximating function attempts capture patterns data leaving noise fine scale structures rapid phenomena smoothing data signal modified individual noise reduced adjacent increased leading smoother signal smoothing aid data analysis extract data assumption smoothing reasonable provide analyses flexible robust algorithms smoothing smoothing distinguished partially overlapping concept curve fitting terminology applications mixed interpolating spline fits smooth curve data called smoothing linear smoothers smoothed values written linear transformation observed values smoothing operation linear smoother matrix representing transformation smoother matrix hat matrix operation applying matrix transformation called convolution matrix called convolution matrix convolution kernel simple series data multi dimensional image convolution kernel dimensional vector algorithms common algorithms moving average capture trends repeated statistical surveys image processing vision smoothing ideas scale space representations simplest smoothing algorithm rectangular unweighted sliding average smooth method replaces signal average adjacent positive integer called smooth odd triangular smooth rectangular smooth implements weighted smoothing function specific smoothing filter types 
4182449	computerscience	tablet commonly shortened tablet mobile device typically mobile operating lcd touchscreen display processing circuitry rechargeable battery single flat package tablets computers personal computers lack capabilities modern tablets resemble modern smartphones differences tablets larger smartphones screens larger measured diagonally support access cellular network touchscreen display operated gestures executed finger stylus mouse trackpad keyboard larger computers portable computers classified presence appearance physical keyboards species tablet slate booklet physical keyboards accept input virtual keyboard touchscreen displays compensate lack physical keyboard tablets connect independent physical keyboards wireless bluetooth usb pcs keyboards distinct tablets form tablet conceptualized middle 20th century stanley kubrick depicted fictional tablets 1968 science fiction film prototyped developed decades century 2010 apple released ipad mass market tablet achieve widespread popularity tablets rapidly rose ubiquity product category personal educational workplace applications sales stabilizing mid 2010s history tablet operating development pen computing electrical devices data input output flat display existed 1888 telautograph sheet paper display pen attached electromechanical actuators 20th century devices characteristics imagined created blueprints prototypes commercial products addition academic systems companies released commercial products 1980s input output types fictional prototype tablets tablet computers appeared science fiction 20th century helped promote disseminate concept wider audience examples include additionally real life projects proposed created tablet computers tablets earlier tablet products pencept penpad cic handwriter september 1989 grid systems released commercially successful tablet gridpad products based extended versions dos operating 1992 ibm announced april shipped developers october 2521 thinkpad corporation penpoint os based penpoint eo personal communicator 1993 hardware including hobbit cpu apple launched apple newton personal digital assistant 1993 apple newton os initially running hardware manufactured motorola incorporating arm cpu apple developed acorn computers operating platform design licensed sharp digital ocean manufacture variants 1996 palm released palm os based palmpilot touch stylus based pda touch based devices initially incorporating motorola dragonball 68000 cpu 1996 fujitsu released stylistic 1000 tablet format pc running windows 95 100 mhz amd486 dx4 cpu mb ram offering stylus input option connecting conventional keyboard mouse intel announced strongarm processor based touchscreen tablet 1999 webpad branded intel tablet 2000 norwegian company screen media german company dosch amand gmbh released freepad based linux opera browser internet access dect dmap europe 10mbit device 16 mb storage 32 mb ram x86 compatible 166 mhz geode microcontroller national semiconductor screen 12 touch sensitive slots sim cards enable support television set box freepad sold norway middle east company dissolved 2003 april 2000 launched pocket pc 2000 touch capable windows ce operating devices manufactured manufacturers based mix x86 mips arm superh hardware 2002 attempted define tablet pc mobile field business devices failed pricing usability decisions limited original purpose existing devices heavy held hand extended periods legacy applications created desktop interfaces adapted slate format nokia plans internet tablet 2000 model manufactured 2001 nokia m510 running epoc featuring opera browser speakers inch 800×600 screen released fears market ready nokia entered tablet space 2005 nokia 770 running maemo debian based linux distribution custom internet tablet user interface application framework layer named hildon instance software platform generic computing tablet device intended internet consumption nokia commit platform future mobile devices project competed house platforms replaced series 60 nokia term internet tablet refer portable appliance focused internet media consumption range personal digital assistant pda ultra mobile pc umpc mobile phones n900 runs maemo n9 meego release ipad axiotron introduced aftermarket heavily modified apple macbook called modbook mac os based tablet modbook apple inkwell handwriting gesture recognition digitization hardware wacom mac os talk digitizer integrated tablet modbook supplied party driver launch ultra mobile pc intel started mobile internet device initiative hardware combined tabletized linux configuration intel developed lightweight moblin mobile linux operating successful launch atom cpu series netbooks 2010 nokia intel combined maemo moblin projects form meego linux based operating supports netbooks tablets tablet meego neofonie wetab launched september 2010 germany wetab extended version meego operating called wetab os wetab os adds runtimes android adobe air proprietary user interface optimized wetab device september 27 2011 linux foundation announced meego replaced 2012 tizen modern tablets android 2000s era dominating platforms tablet computers reach market 2008 plans android based tablets appeared products released 2009 archos pocket sized model inch touchscreen released proprietary operating 2009 released android camangi webstation released q2 2009 lte android tablet appeared late 2009 icd verizon unit called ultra version called vega released time ultra inch display vega 15 inches products 2010 manufacturers waited android honeycomb adapted tablets debuted february 2011 apple credited defining class consumer device ipad shaped commercial market tablets successful tablet time release ipads competing devices tested military 2011 cleared secure 2013 debut 2010 pushed tablets mainstream samsung galaxy tab continuing trends features listed march 2012 pc magazine reported 31 internet users owned tablet viewing published content video news selling devices apple ipad 100 million sold release april 2010 mid october 2012 ipad market share units dropped 36 2013 android tablets climbing 62 android tablet sales volume 121 devices 52 2012 2013 individual brands android operating devices compatibles follow ipad amazon kindle 7 million barnes noble nook 5 million blackberry playbook announced september 2010 blackberry tablet os blackberry playbook officially released canadian consumers april 19 2011 hewlett packard announced touchpad running webos 2 ghz qualcomm snapdragon cpu released june 2011 august 18 2011 hp announced discontinuation touchpad sluggish sales 2013 mozilla foundation announced prototype tablet model foxconn firefox os firefox os discontinued 2016 canonical hinted ubuntu tablets 2014 february 2016 commercial release bq aquaris ubuntu tablet utilizing ubuntu touch operating canonical terminated support project lack market april 2017 ubports community project february 2014 83 mobile app developers targeting tablets 93 developers targeting smartphones 2014 23 b2b companies deployed tablets sales activities survey report corporate visions ipad holds majority north america western europe japan australia americas android tablets popular asia china russia exception africa eastern europe 2015 tablet sales increase apple remained largest seller market share declined 25 samsung vice president gary riding 2016 tablets models expensive designed keyboard stylus reflected changing 2016 android reigns market 65 apple takes spot 26 windows distant remaining 2018 computing devices android accounted ios remainder pcs forms desktop notebook tablet running operating systems windows macos chromeos linux late 2017 ipad pro received ios 11 update adding ability multiple windows drag drop app browse user files types tablets loosely categories physical size operating installed input output technology slate size slate varies slates inches 15 cm models larger inch 25 cm category include samsung galaxy tab pro 12 12 inches 31 cm toshiba excite 13 inches 33 cm dell xps 18 18 inches 47 cm march 2013 thinnest tablet market sony xperia tablet 27 inches 9 mm september 2015 apple released ipad pro screen size larger regular ipad mini tablet mini tablets weigh slates typical screen sizes commercially successful mini tablets introduced amazon kindle barnes noble nook tablet samsung galaxy tab 2011 google nexus 2012 operate identically ordinary tablets specifications compared september 14 2012 amazon released upgraded version kindle kindle hd screen resolution features compared predecessor remaining inches october 2012 apple released ipad mini inch screen size inches regular ipad powerful current ipad july 24 2013 google released upgraded version nexus fhd display dual cameras stereo speakers color accuracy performance improvement built wireless charging variant 4g lte support mobile verizon september 2013 amazon updated tablet kindle hdx november 2013 apple released ipad mini remained inches matched hardware ipad air phablet smartphones tablets devices differentiated typically screens tablets lacking cellular network capability 2010 crossover touchscreen smartphones screens larger inches released size considered larger traditional smartphone creating hybrid category phablet forbes publications phablet portmanteau phone tablet time introduction phablets screens inches 2017 screen sizes inches considered typical examples phablets 2017 onward samsung galaxy note series models inches lg v10 v20 inches sony xperia xa ultra inches huawei mate inches huawei honor mediapad x2 inches distinct tablets pcs physical keyboards concealable folding touchscreen convertible detachable detachable 1s typically display virtual keyboard touchscreens physical keyboards concealed detached 1s processors operating systems laptops flexibility operation tablet pc hybrid combination tablet laptop features essential feature desktop operating windows opposed mobile operating additionally 1s typical laptop ports usb displayport connect traditional pc peripheral devices external displays distinct tablets operate simple tablets media consumption devices 1s capacity media consumption content creation 1s called laptop desktop replacement computers species 1s gaming tablet tablets modified adding physical gamepad buttons pad thumb sticks gaming experience combined touchscreen features typical tablet tablets targeted native os games emulator games nvidia shield tablet display running android runs android games purchased google play store pc games streamed tablet computers models nvidia powered video cards nintendo switch hybrid console gaming tablet runs nintendo switch software features detachable joy controllers motion controls gaming modes table mode kickstand traditional docked mode handheld mode booklet booklets dual touchscreen tablet computers clamshell design fold laptop examples include courier discontinued 2010 sony tablet considered flop toshiba libretto w100 customized business tablet customized business tablets built business customer hardware software perspective delivered business business transaction hardware transportation company consumer grade gps module shelf tablet insufficient accuracy tablet customized embedded professional grade antenna provide gps signal tablets ruggedized field software transportation company remove software functions android internet browser reduce costs unnecessary cellular network data consumption employee add custom package management software applications resistive touchscreen special hardware software table tablet touchscreen tablet designed casual restaurants devices users food drinks play games pay 2013 restaurant chains including chili olive garden red robin 2014 popular brands ziosk presto devices criticized servers claim restaurants determine hours based customer feedback unrelated service hardware architecture major architectures dominate tablet market arm holdings arm architecture intel amd x86 intel x86 including x86 64 powered ibm compatible pc 1981 apple macintosh computers 2006 cpus incorporated tablet pcs offer performance ability versions windows windows desktop enterprise applications windows based x86 tablets include joojoo intel announced plans enter tablet market atom 2010 october 2013 intel foundry operation announced plans build fpga based quad cores arm x86 processors arm cpu architecture choice manufacturers smartphones 95 arm pdas digital cameras 80 arm set boxes dsl routers smart televisions 70 arm storage devices tablet computers 95 arm dominance release mobile focused comparatively power efficient 32 bit arm610 processor originally designed apple newton 1993 arm3 acorn a4 laptop 1992 chip psion palm nokia pdas smartphones camera phones cameras arm licensing model supported success allowing device manufacturers license alter fabricate custom soc derivatives tailored products helped manufacturers extend battery life shrink component count size devices multiple licensees ensured multiple fabricators supply identical products encouraging price competition forced unit prices fraction x86 equivalents architecture historically limited support windows ce 2012 release windows announced additional support architecture shipping arm based tablet branded surface x86 64 intel core i5 variant branded surface pro intel tablet chip sales units 2012 12 units 2013 intel chairman andy bryant stated 2014 goal quadruple tablet chip sales 40 units investment 2015 display key component tablet computers touch input touchscreen liquid crystal display lcd user navigate easily type virtual keyboard screen press icons screen apps files tablet gridpad grid systems corporation tablet featured stylus pen tool aid precision touchscreen device screen keyboard respond screen touches clicks keyboard mouse operation precise eye–hand coordination touchscreens forms mid 2010s tablets capacitive touchscreens multi touch earlier resistive touchscreen devices users styluses perform inputs handwriting recognition arm powered tablets galaxy note support stylus support handwriting recognition wacom trig digital pens provide 2500 dpi resolution handwriting exceeding resolution capacitive touch screens factor pens support pressure sensitivity allowing variable stroke based characters chinese japanese korean writing built capability pressure sensing pressure digital art applications autodesk sketchbook apps exist ios android platforms handwriting recognition 2015 google introduced handwriting input support 82 languages features 2007 access capacitive screens success iphone features common multi touch features user touch screen multiple trigger actions natural user interface features flash memory solid storage instant warm booting external usb bluetooth keyboards defined tablets tablets released mid 2010 version arm processor battery life arm cortex family powerful tasks internet browsing light production mobile games features definition anti glare display touchscreen weight battery life comparably sized laptop wireless local internet connectivity wi standard optional mobile broadband bluetooth connecting peripherals communicating local devices ports wired connections charging usb ports devices support remote controller docking station keyboard additional connectivity board flash memory ports removable storage cloud storage services backup syncing data devices local storage lansoftware operating tablets conventional pcs operating systems dual booting rare tablet operating systems classes desktop os based tablets thicker heavier require storage cooling battery life processor intensive graphical applications addition mobile apps ports mobile based tablets reverse mobile apps battery life conservatively processor battery common laptop q1 2018 android tablets 62 market apple ios 23 market windows 14 market android android linux based operating google offers source apache license designed mobile devices smartphones tablet computers android supports cost arm systems tablets running android released 2009 vendors motorola lenovo delayed deployment tablets 2011 android reworked include tablet features android honeycomb released 2011 versions support larger screen sizes tablets access google play service android includes operating middleware key applications vendors sell customized android tablets kindle nook consume mobile content provide app store larger google play fragmenting android market chrome os devices chrome os market 2017 2019 tablets 1s touchscreen 360 degree hinge ios ipad runs ios created iphone ipod touch ipad released 2011 built underlying unix implementation macos user interface radically ios designed fingers features required stylus earlier tablets apple introduced multi touch gestures moving fingers zoom pinch zoom ios built arm architecture windows windows pen computing windows 1991 supported tablets running windows xp tablet pc tablet pcs pen based functional x86 pcs handwriting voice recognition functionality windows xp tablet pc edition pen support tablet support business versions windows vista windows tablets running windows touchscreen mouse input hand writing recognition gesture support tablet pc announced ultra mobile pc initiative 2006 brought windows tablets touch centric form factor 2008 prototype screen tablet called courier cancelled project 2012 released windows features aspects operating user interface platform designed touch based devices tablets operating introduced application store style application optimized tablets introduced windows rt edition windows arm based devices launch windows rt accompanied release devices operating systems manufacturers including release surface slate tablets hybrids convertibles released july 2015 windows introduces universal apps expanding metro style apps apps designed multiple product families identical code‍—‌including pcs tablets smartphones embedded systems xbox surface hub windows holographic windows user interface revised handle transitions mouse oriented interface touchscreen optimized interface based input devices‍—‌particularly pcs interfaces include updated start menu windows replaced earlier editions windows hybrid os operation hardware companies built hybrid devices possibility windows android operating systems application store apps pre installed supplied online distribution sources app stores provide centralized catalogs software device software purchasing installation updates mobile device suppliers adopt walled garden approach supplier controls software applications apps software development kits restricted approved software developers reduce impact malware provide software approved content rating control application quality exclude competing vendors apple google amazon barnes noble strategy originally allowed arbitrary apps installed december 2011 excluded parties apple ibm agreed cooperate cross selling ibm developed applications ipads iphones enterprise level accounts proponents source software violates spirit personal control traditional personal computers sales 2010 tablet businesses jumped business started conferences events trade 2012 intel reported tablet program improved productivity 19 000 employees average 57 minutes day october 2012 display screen shipments tablets surpassing shipments laptop display screens tablets increasingly construction industry blueprints field documentation relevant device carrying amounts paper 2014 44 online consumers tablets jump 2011 tablet increasingly common children 2014 survey mobiles frequently object play american children age 12 mobiles play video game consoles board games puzzles play vehicles blocks dolls action figures majority parents mobile toy 2014 thirds american olds access tablet reader tablets adults personal internet connected 2015 study children tablet device 2017 tablet sales worldwide surpassed sales desktop computers worldwide pc sales flat quarter 2018 2010 2014 figures estimated gartner 2014 2018 figures estimated idc manufacturer note consists vendors market share 2017 2018 data breaks amazon hwawei lenovo consistencyby operating survey conducted online publishers association opa called digital content dcn march 2012 72 tablet owners ipad 32 android tablet 2012 android tablet adoption increased 52 tablet owners owned ipad 51 owned android powered tablet percentages add 100 tablet owners type 2013 android market share rose 61 ios 36 late 2014 android market share rose 72 ios 22 windows 2016 android 65 marketshare apple 26 windows marketshare q1 2018 android tablets 62 market apple ios 23 market windows 14 market sleep blue wavelength light lit tablets impact ability fall asleep reading night suppression melatonin experts harvard medical school limiting tablets reading evening delayed body clock teenagers prone stay late evening sleep morning risk increases sleep deficiencies pc app lux android apps lumen twilight attempt decrease impact sleep filtering blue wavelengths display ios includes night shift shifts colors device display warmer hours plane electromagnetic waves emitted type device type electronic device landing phases totally prohibited board commercial flights 13 november 2013 european aviation safety agency easa announced mobile terminals authorized flights european airlines phases 2014 onwards condition cellular functions deactivated airplane mode activated easa formally confirmed december 11 2013 tablets readers smartphones mp3 players portable gaming consoles announcements tourism french historical monuments equipped digital tactile tablets called histopad application integrated ipad mini offering interaction augmented virtual reality pieces visit visitor control visit interactive personalized professional specific sectors professionals construction industry insurance experts lifeguards surveyors called rugged shelf models field withstand extreme hot cold shocks climatic environments hardened addition satellite iridium type connectivity type tablet thorium connectivity 
4234887	computerscience	united advanced placement science suite advanced placement courses examinations covering science offered college board school students opportunity earn college credit college level courses suite consists current classes discontinued class ap science taught pascal 1984–1998 exams 1999–2003 java 2004 ap science principles ap science principles introductory science focus computing powers designed parallel ap science emphasize computational thinking fluency meant equivalent semester science ap science principles introduced 2016–2017 school ap science ap science programming class emphasizes object oriented programming methodology solving algorithm development overview data structures abstraction ap science exam tests students knowledge java meant equivalent semester science sponsored program technology education literacy schools teals aims increase students ap science classes ap science ab discontinued ap science ab included topics ap science formal depth study algorithms data structures data abstraction binary trees studied ap science ab ap science recursive data structures dynamically allocated structures fundamental ap science ab ap science ab equivalent college students exam ap science ab discontinued 2009 exam administration 
4253501	computerscience	apertium source rule based machine translation platform software released terms gnu public license overview apertium shallow transfer machine translation finite transducers lexical transformations hidden markov models speech tagging word category disambiguation constraint grammar taggers language pairs breton french existing machine translation systems commercial proprietary technologies hard adapt usages technologies language pairs difficult instance integrate single multilingual content management apertium language independent specification ease contributing apertium efficient development enhancing project growth apertium released 40 stable language pairs delivering fast translation intelligible errors easily corrected source project apertium tools potential developers build language pair contribute project history apertium originated machine translation engines project opentrad funded spanish government developed transducens universitat alacant originally designed translate closely languages expanded treat divergent language pairs create machine translation develop linguistic data dictionaries rules xml formats language data developed collaboration universidade vigo universitat politècnica catalunya universitat pompeu fabra support stable version arabic aragonese asturian basque breton bulgarian catalan danish english esperanto french galician hindi icelandic indonesian italian kazakh macedonian malaysian maltese northern sami norwegian bokmål nynorsk occitan portuguese romanian sardinian serbo croatian slovene spanish swedish tatar urdu welsh languages list companies involved development apertium including prompsit language engineering imaxin software eleka ingeniaritza linguistikoa project 2009 2010 2011 2012 2013 2014 editions google summer code 2010 2011 2012 2013 2014 2015 2016 2017 editions google code apertium step step view apertium diagram displays steps apertium takes translate source language translate target language translated language pairs list stable language pairs hover language codes languages represent 
4324903	computerscience	bigdog dynamically stable quadruped military robot created 2005 boston dynamics owned softbank foster miller nasa jet propulsion laboratory harvard university concord field station funded darpa project shelved bigdog deemed loud combat history bigdog funded defense advanced projects agency darpa hopes serve robotic pack mule accompany soldiers terrain rough conventional vehicles wheels treads bigdog legs movement allowing surfaces defeat wheels legs variety sensors including joint position ground contact bigdog features laser gyroscope stereo vision bigdog stands tall weighs size mule capable traversing difficult terrain running carrying climbing 35 degree incline locomotion controlled onboard receives input robot sensors navigation balance managed control bigdog walking pattern controlled legs equipped friction hydraulic cylinder actuators power joints bigdog locomotion behaviors vary greatly stand sit walk crawling gait lifts leg time walk trotting gait lifting diagonal legs trot running gait travel speed bigdog varies crawl velocity trot velocity bigdog project headed dr martin buehler 2012 received joseph engelberger award robotics industries association dr buehler professor mcgill university headed robotics lab developing legged walking running robots built actuators sensors joint position force movement ultimately controlled onboard manages sensors 50 sensors located bigdog measure attitude acceleration body motion force joint actuators engine speed temperature hydraulic pressure robot internal engine level control position force joints level control velocity altitude locomotion controlled onboard bigdog featured episodes junk 20 hungry beast articles scientist popular science popular mechanics wall street journal march 23 2008 boston dynamics released video footage generation bigdog alphadog footage bigdog ability walk icy terrain recover balance kicked refined equivalent designed boston dynamics exceed bigdog terms capabilities dismounted soldiers february 2012 darpa support militarized legged squad support ls3 variant bigdog demonstrated capabilities hike tough terrain starting summer 2012 darpa planned complete development refine key capabilities 18 months ensuring worth dismounted warfighters rolled squads operating theatre bigdog demonstrate ability complete trek 24 hours refuelling carrying load refinement vision sensors conducted february 2013 boston dynamics released video footage modified bigdog arm arm pick objects throw robot relying legs torso power motions arm news writer supposed lift weights discontinuation december 2015 bigdog project discontinued hopes day pack mule soldiers field gas powered engine deemed noisy combat project electric robot named spot quieter carry projects progress spot mini progress built hardware bigdog powered stroke cylinder kart engine operating 000 rpm engine drives hydraulic pump drives hydraulic leg actuators leg actuators hip joint knee ankle joints total 16 actuator unit consists hydraulic cylinder servo valve position sensor force sensor onboard computing power ruggedized pc 104 board stack pentium class running qnx 
4345916	computerscience	histogram equalization method image processing contrast adjustment image histogram overview method increases global contrast images usable data image represented close contrast values adjustment intensities distributed histogram local contrast gain contrast histogram equalization accomplishes effectively spreading frequent intensity values method images backgrounds foregrounds bright dark method lead views bone structure ray images photographs exposed key advantage method straightforward technique invertible operator theory histogram equalization function original histogram recovered calculation computationally intensive disadvantage method indiscriminate increase contrast background noise decreasing usable signal scientific imaging spatial correlation intensity signal separating dna fragments quantized signal noise ratio hampers visual detection histogram equalization produces unrealistic effects photographs scientific images thermal satellite ray images class images apply false color histogram equalization produce undesirable effects visible image gradient applied images color depth applied bit image displayed bit gray scale palette reduce color depth unique shades gray image histogram equalization applied images color depth palette size continuous data 16 bit gray scale images implement histogram equalization image change palette change operation expressed original image histogram equalization mapping operation palette define palette leave image unchanged histogram equalization implemented palette change hand palette remains unchanged image modified implementation image change palette change preserves original data modifications method multiple histograms called subhistograms emphasize local contrast contrast examples methods include adaptive histogram equalization contrast limiting adaptive histogram equalization clahe multipeak histogram equalization mphe multipurpose beta optimized bihistogram equalization mbobhe goal methods mbobhe improve contrast producing brightness shift loss artifacts modifying algorithm signal transform equivalent histogram equalization happen biological neural networks maximize output firing rate neuron function input statistics proved fly retina histogram equalization specific class histogram remapping methods methods seek adjust image easier analyze improve visual quality retinex projection projection project histogrammed image application modified histogram original image functioning table pixel brightness values pixels position input single channel images function histogram bin destination image coordinates bin determined values pixels input terms statistics output image pixel characterizes probability input pixel belongs object histogram implementation discrete grayscale image occurrences gray level probability occurrence pixel level image total gray levels image typically 256 total pixels image image histogram pixel normalized define cumulative distribution function px aswhich image accumulated normalized histogram create transformation form produce image flat histogram image linearized cumulative distribution function cdf range constant properties cdf perform transform inverse distribution function defined aswhere range notice maps levels range normalized histogram map values original range simple transformation applied result detailed derivation color images describes histogram equalization grayscale image color images applying method separately red green blue components rgb color values image applying method red green blue components rgb image yield dramatic image color balance relative distributions color channels change result applying algorithm image converted color space lab color space hsl hsv color space algorithm applied luminance channel hue saturation image histogram equalization methods 3d space trahanias venetsanopoulos applied histogram equalization 3d color space whitening probability bright pixels dark han proposed cdf defined iso luminance plane uniform gray distribution examples consistency statistical usage cdf cumulative distribution function replaced cumulative histogram article links cumulative distribution function derived dividing values cumulative histogram pixels equalized cdf defined terms rank image bit grayscale image values histogram image table pixel values count excluded sake brevity cumulative distribution function cdf pixel values contribute increase cdf excluded brevity cdf minimum subimage 52 maximum 154 cdf 64 154 coincides pixels image cdf normalized histogram equalization cdfmin minimum cumulative distribution function image pixels 64 height grey levels 256 note scale values original data range inclusive equation cdf scaling 255 preserves ness minimum equalization scaling data 255 inclusive cdf 78 46 78 row 7th column normalized becomesonce values equalized image normalized cdf yield equalized values notice minimum 52 maximum 154 255 
4543102	computerscience	scoreboarding centralized method cdc 6600 dynamically scheduling pipeline instructions execute conflicts hardware scoreboard data dependencies instruction logged instructions released scoreboard determines conflicts issued incomplete instructions instruction stalled unsafe continue scoreboard monitors flow executing instructions dependencies resolved stalled instruction issued stages instructions decoded stages data structure control execution instructions scoreboard maintains status tables algorithm detailed algorithm scoreboard control remarks scoreboarding method stall issue stage functional unit future instructions executed wait structural hazard resolved techniques tomasulo algorithm avoid structural hazard resolve war waw dependencies register renaming 
4543249	computerscience	unified reservation station unified scheduler decentralized feature microarchitecture cpu register renaming tomasulo algorithm dynamic instruction scheduling reservation stations permit cpu fetch data computed waiting stored register read instructions issued designate reservation station input read multiple instructions write register proceed logically written checks operands raw execution unit structural hazard starting execution instructions stored parameters executed ready identified unit execute instruction implicitly register renaming solves war waw hazards associative structure cost comparators compare returned processing units stored addresses tomasulo algorithm instructions issued sequence reservation stations buffer instruction operands instruction operand reservation station listens common data bus operand operand reservation station buffers execution instruction functional units adder multiplier reservation station output functional unit connects common data bus reservation stations listening operands 
4558491	computerscience	statistical machine translation smt machine translation paradigm translations generated basis statistical models parameters derived analysis bilingual corpora statistical approach contrasts rule based approaches machine translation based machine translation ideas statistical machine translation introduced warren weaver 1949 including ideas applying claude shannon theory statistical machine translation introduced late 1980s 1990s researchers ibm thomas watson center contributed resurgence machine translation nowadays studied machine translation method basis idea statistical machine translation theory document translated probability distribution string target language english translation string source language french modeling probability distribution approached approach lends implementation apply bayes theorem translation model probability source string translation target string language model probability target language string decomposition attractive splits subproblems finding translation picking probability rigorous implementation perform exhaustive search strings native language performing search efficiently machine translation decoder foreign string heuristics methods limit search space time keeping acceptable quality trade quality time usage speech recognition translation systems store native strings translations document typically translated sentence sentence language models typically approximated smoothed gram models approaches applied translation models additional complexity sentence lengths word languages statistical translation models initially word based models ibm hidden markov model stephan vogel model franz joseph och advances introduction phrase based models incorporated syntax quasi syntactic structures benefits frequently cited benefits statistical machine translation rule based approach word based translation word based translation fundamental unit translation word natural language typically translated sentences compound morphology idioms ratio lengths sequences translated called fertility tells foreign native word produces assumed theory covers concept practice true english word corner translated spanish rincón esquina depending internal external angle simple word based translation translate languages fertility word based translation systems simply cope fertility map single word multiple translating english french word english produce french words— english producing single french word word based translation freely giza package gpled includes training program ibm models hmm model model word based translation phrase based systems common phrase based giza align corpus alignments extract phrases deduce syntax rules matching actively discussed community predominance giza distributed implementations online phrase based translation phrase based translation aim reduce restrictions word based translation translating sequences lengths sequences called blocks phrases typically linguistic phrases phrasemes statistical methods corpora restricting phrases linguistic phrases syntactically motivated syntactic categories decreases quality translation syntax based translation syntax based translation based idea translating syntactic units single strings phrase based partial parse trees sentences utterances idea syntax based translation statistical counterpart advent strong stochastic parsers 1990s examples approach include dop based synchronous context grammars hierarchical phrase based translation hierarchical phrase based translation combines strengths phrase based syntax based translation synchronous context grammar rules grammars constructed extension methods phrase based translation reference linguistically motivated syntactic constituents idea introduced chiang hiero 2005 challenges statistical machine translation statistical machine translation deal include sentence alignment parallel corpora single sentences language translated sentences vice versa sentence aligning performed gale church alignment algorithm word alignment sentence alignment corpus aforementioned gale church alignment algorithm learn translation model align source target sentence pair solutions ibm models hmm approach statistical anomalies real training sets override translations proper nouns train berlin mis translated train paris abundance train paris training setidioms depending corpora idioms translate idiomatically canadian hansard bilingual corpus hear invariably translated bravo parliament hear hear bravo word word languages classification naming typical subject verb object sentence talk instance svo vso languages additional differences word instance modifiers nouns located question statement speech recognition speech signal textual representation mapped blocks languages smt machine translator manage sequences word program designer attempts solutions included models distribution location item translation guessed aligned location ranked language model selected skype voice communicator started testing speech translation machine translation technological trends speech slower rate speech recognition ideas speech recognition statistical machine translation vocabulary oov smt systems typically store word forms separate symbols relation word forms phrases training data translated lack training data human domain differences morphology mobile devices rapid increase computing power tablets smartphones combined wide availability speed mobile internet access machine translation systems experimental systems developed assist foreign health workers developing countries systems market apple’s ios users dictate messages built asr recognizes speech recognition edited online projects universal speech translation advanced star1 continuation star project eu bridge2 conducting translation sentences recognized spoken language growing combining speech recognition machine translation speech synthesis achieve speech speech translation lists passed asr statistical machine translation combining systems raises achieve sentence segmentation normalization punctuation prediction quality translations 
4605351	computerscience	natural language processing latent dirichlet allocation lda generative statistical model sets observations explained unobserved explain data observations collected documents posits document mixture topics word presence attributable document topics lda topic model history context population genetics lda proposed pritchard stephens donnelly 2000 context machine learning applied lda rediscovered independently david blei andrew michael jordan 2003 graphical model topic discovery papers 016 998 citations august 2017 topics lda document viewed mixture topics document considered set topics assigned lda identical probabilistic latent semantic analysis plsa lda topic distribution assumed sparse dirichlet prior sparse dirichlet priors encode intuition documents cover set topics topics set frequently practice disambiguation precise assignment documents topics lda generalization plsa model equivalent lda uniform dirichlet prior distribution lda model topics classified cat dog topic probabilities generating milk meow kitten classified interpreted viewer cat naturally word cat probability topic dog topic probabilities generating word puppy bark bone probability special relevance function word roughly probability classes separate category topic semantically epistemologically defined identified basis automatic detection likelihood term occurrence lexical word occur topics probability typical set neighboring topic document assumed characterized set topics standard bag model assumption individual exchangeable model grayed observable variables variables latent variables proposed original paper sparse dirichlet prior model topic word distribution intuition probability distribution topic skewed set probability model applied variant lda plate notation model denotes topics dimensional vectors storing parameters dirichlet distributed topic word distributions vocabulary helpful entities represented 11 matrices created decomposing original document word matrix represents corpus documents modeled view consists rows defined documents columns defined topics 11 consists rows defined topics columns defined refers set rows vectors distribution 15refers set rows distribution topics generative process infer topics corpus imagine generative process documents created infer reverse engineer imagine generative process documents represented random mixtures latent topics topic characterized distribution lda assumes generative process corpus 16 consisting 17 documents 18 choose 19 20 andformula 21 dirichlet distribution symmetric parameter 22 typically sparse 23 choose 24 25 26 typically sparse3 word positions 27 20 29the lengths 18 treated independent data generating variables 33 34 subscript dropped plate diagrams definition formal description lda mathematically random variables inference learning distributions set topics word probabilities topic word topic mixture document bayesian inference original paper variational bayes approximation posterior distribution alternative inference techniques gibbs sampling expectation propagation derivation equations collapsed gibbs sampling 11s 10s integrated simplicity derivation documents assumed 38 derivation equally valid document lengths vary model total probability model bold font variables denote vector version variables 40 41 integrated 10s independent 11s treat 11 separately focus focus hidden model 51 document replace probabilities equation true distribution expression write explicit equation 53 word tokens 51 document word symbol 55 word vocabulary assigned 56 topic 53 dimensional dimensions limited specific parenthesized 58 todenote 59 denotes word tokens 51 document assigned 56 topic equation rewritten 63 integration changed equation integration form dirichlet distribution dirichlet distribution attention 40 derivation 40 41 list steps derivation clarity write final equation 71 41 integrated goal gibbs sampling approximate distribution 74 75 invariable gibbs sampling equations derived 76 key derive conditional probability 78 denotes 79 hidden variable 80 word token 81 document assume wordsymbol 82 word vocabulary 83 denotes 79s 78 note gibbs sampling sample 78 probability exact ofbut ratios probabilities 78 equation simplified finally 90 meaning 53 78 excluded equation simplified leveraging property gamma function split summation merge 93 independent summation dropped note derived article discussion integrating dirichlet distribution priors bayesian network faster sampling focused speeding inference latent dirichlet allocation support capture massive topics documents update equation collapsed gibbs sampler mentioned earlier natural sparsity advantage intuitively document subset topics 95 word appears subset topics 96 update equation rewritten advantage sparsity 97in equation terms sparse terms 98 99 normalize term summing topics 103 summation topics document 104 105 sparse summation topics word 33 assigned corpus 107 hand dense values 22 26 compared terms sampling topic sample random variable uniformly 110 check bucket sample lands 107 fall bucket fall bucket sampling topic takes time original collapsed gibbs sampler fall buckets check subset topics record sparse topics topic sampled 103 bucket 113 time topic sampled 105 bucket 115 time 95 96 denotes topics assigned current document current word type notice sampling topic updating buckets basic 118 arithmetic operations applications extensions techniques topic modeling classic retrieval models techniques latent semantic indexing independent component analysis probabilistic latent semantic indexing negative matrix factorization gamma poisson distribution lda model highly modular easily extended main field modeling relations topics achieved distribution simplex dirichlet correlated topic model approach inducing correlation structure topics logistic normal distribution dirichlet extension hierarchical lda hlda topics joined hierarchy nested chinese restaurant process lda extended corpus document includes types names lda dual model nonparametric extensions lda include hierarchical dirichlet process mixture model topics unbounded learnt data nested chinese restaurant process topics arranged hierarchy structure learnt data earlier plsa lda lda model essentially bayesian version plsa model bayesian formulation perform datasets bayesian methods avoid overfitting data datasets models tend converge difference plsa variable 104 represent document training set plsa document model 120—the probability topics—to learned training set em algorithm infer 121—the topic distribution 104 blei argues step cheating essentially refitting model data variations lda automatically natural images categories bedroom forest treating image document patches image variations called spatial latent dirichlet allocation 
4612055	computerscience	company description yanmar founded march 1912 osaka japan magokichi yamaoka company specializes diesel engines light fishing boats hulls ships tractors combine harvesters rice planting machines gas heat pumps snow throwers transporters tillers mini excavators portable diesel generators utv heavy utility machinery company 1912 manufactured gasoline powered engines launching practical diesel engine 1930s https yanmar global history yanmar supplies engines john deere tractors thermo king corporation coolers refrigerated trucks trailers 20 yanmar established growing presence domestic uav market japan helicopter uavs agricultural spraying forms aerial application yanmar patron league division soccer team cerezo osaka sponsor afc champions league yanmar racing weather forecast programmes japanese television sponsor german football club borussia dortmund global sponsor manchester united company origin company combination yanma dragonfly names oniyanma ginyanma yama company founder magokichi yamaoka 
4624565	computerscience	hierarchical telecommunications network backhaul portion network comprises intermediate links core network backbone network subnetworks edge network contracts pertaining networks backhaul obligation carry packets backbone network business definition backhaul commercial wholesale bandwidth provider offers quality service qos guarantees appears telecommunications trade literature sense backhaul connection defined technically operates manages takes legal responsibility connection uptime technical commercial definitions backhaul refers network communicates global internet paid wholesale commercial access rates internet exchange core network access location middle mile networks exist customer lan exchanges local wan wlan connection instance network hampshire maine fiber company tariffed public dark fiber networks backhaul alternative encourage local national carriers reach broadband cell phone serving serve retail networks connect buildings customers cell phones communicating single cell tower constitute local subnetwork connection cell tower rest backhaul link core internet service provider network presence term backhaul entire wired network networks wireless wired backhaul microwave bands mesh network edge network topologies capacity wireless channel packets microwave fiber links telephone company internet service provider providing backhaul academic education networks commercial networks municipal networks increasingly common connect public broadband backhaul national broadband plans motivated perceived break monopoly incumbent commercial providers plan instance specifies community anchor institutions connected gigabit fiber optics 2020 definition visualizing entire hierarchical network human skeleton core network represent spine backhaul links limbs edge networks hands feet individual links edge networks fingers toes examples include backhaul technologies choice backhaul technology account parameters capacity cost reach resources frequency spectrum optical fiber wiring rights backhaul solutions categorised wired leased lines copper fibre wireless multipoint capacity radio links wired expensive solution impossible deploy remote wireless suitable viable option multi hop wireless architecture overcome hurdles wired solutions create efficient coverage growing demand emerging markets cost major factor deciding technologies wireless backhaul solution offer carrier grade services easily feasible wired backhaul connectivity backhaul technologies include backhaul capacity leased network operator network operator selects technology limited technologies requirement specific short term links emergency disaster relief public events cost time major factors rule wired solutions pre existing infrastructure accessible wifi mesh networks wireless backhaul data rates increase range wireless network coverage reduced raising investment costs building infrastructure access cover service mesh networks unique enablers reduce cost flexible architecture mesh networking access connected wirelessly exchange data frames gateway mesh requires costly cable constructions backhaul network reduces total investment cost mesh technology’s capabilities boost extending coverage service easily flexibly cost reduction scale capacity mesh desirable instance kyushu university mimo mesh project based fukuoka city fukuoka prefecture japan developed technology building capacity mesh infrastructure key component called ipt intermittent periodic transmit proprietary packet forwarding scheme designed reduce radio interference forwarding path mesh networks 2010 hundreds wireless lan access incorporating technology installed commercial shopping entertainment complex canal city hakata successful operation largest indoor wireless multi hop backhauls network wireless multi hop relay 11 access delivering bandwidth users actual throughput double standard mesh network systems conventional packet forwarding latency multi hop relays suffers degree compromises voice ip communications solutions connections backhaul common wireless mesh network hotspot solutions supported source router firmware including dd wrt openwrt derivatives sputnik agent hotspot chillispot supported anchorfree examples routers wrt54g ieee 802 21 standard specifies basic capabilities systems including 802 11u unknown user authentication 802 11s hoc wireless mesh networking support effectively arbitrary wired connections teamed ganged appears single backhaul – virtual private cloud proprietary networks meraki follow principles term backhaul type connectivity controversial technically invert business definition customer providing connectivity internet vendor providing authentication management services transition wireless wired backhaul wireless backhaul easy deploy moving presence wireless connections slower occupy spectrum user devices 8 ghz devices proliferate require truck rolls typically times wired backhaul limited bandwidth viewed initial temporary measure wiring issues strategies moving wireless wired backhaul involve building wired connections improve performance latency simple quantitative analysis spectrum freed user purposes trip delay latency achieved bandwidth network respond stress conditions notably requests connections wireless backhaul accommodate sources notably forbes magazine 3g 4g lte networks thehardware issues network wires switching management designed future proof wireless network require change endpoints equipment wireless backhaul configuration supports simultaneous dual band communication band user communication backhaul equipment supports wired connections typically power ethernet outdoor applications unpowered ethernet assuming reasonable software flexibility bands repurposed user connectivity backhaul shifts wired connection nodes powered connected indirectly ac dc power source suggesting single cable solutions power ethernet dc ieee p1901 ac power data dominate power shorter range nodes municipal wi projects usage rural software issues software defined networking sdn easing transition link layer technologies notably openradio openflow gigaom broadband openradio isp software architecture gangs backhaul sources optimal copper existing wire infrastructure 2012 technologies data centres wide carriers verizon announcing support customer networks companies involved called sdn revolution carrier data centre initiatives trend redundant backhaul hybrid networking lattice hierarchy backhaul instance ieee p1905 standard permits ieee 802 21 standard supports applications connection multiple connections lan level standards enable hybrid networks devices connect protocols tied single backhaul device account solely device cloud computing commercial industrial precedents consumer level technology cell towers moving microwave fiber optic range power nodes including cell phone towers connected fiber optic increasingly carrier ethernet protocols replacing connections firm npd stat projects 2014 ethernet dominant technology wireless backhaul 85 usage base stations momentum ethernet ruraltelecom march april 2012 wired networks backhaul bonus 50 100 mbit ethernet circuits standard range including submarine networks scale range networks including transcontinental submarine telecommunications cables laid hvdc cables route companies including prysmian hvdc power cables telecommunications cables prysmian company business telecom fttx reflects telecommunications backhaul range voltage electricity transmission technologies common identical terms route clearing liability outages legal aspects https books google books legal aspects submarine voltage 
4635549	computerscience	rugged ruggedized ruggedised designed operate reliably harsh usage environments conditions strong vibrations extreme temperatures wet dusty conditions designed inception type rough typified conditions external housing internal components cooling arrangements ruggedized hardened computers share design robustness frequently terms interchangeable typical environments rugged laptops tablet pcs pdas public safety field sales field service manufacturing retail healthcare transportation distribution military agricultural industries individuals outdoor recreation activities construction virtually rugged computers share underlying design philosophy providing controlled environment installed electronics rugged computers engineered operate multiple challenges including electronic components selected ability withstand operating temperatures typical commercial components design engineering decisions reduction cabling addition liquid cooling heat sinks rugged materials ensure performance harsh environments features include sealed keyboards protect intrusion dust liquids scratch resistant screens readable direct sunlight rugged units prices study environments rugged computers commonly total cost ownership 36 percent rugged notebooks 33 percent handhelds pdas compared conventional rugged versions cost failure rates impact productivity factors laptops ruggedized laptop built operate reliably dusty wet environments conditions computers thicker stronger housing regular laptop industrial construction military purposes engineered mobile vibration shock drop dust waterproof comply requirements performance governmental grade security equipped current legacy ports including serial expresscard pcmcia vga commonly outdoor environments levels ruggedization standardized measured certifications std 810 ip atex tablets rugged tablet semi rugged rugged semi rugged protective rain resistant body rugged tablets engineered extreme temperatures harsh conditions designed resist drops shocks vibrations maintaining strength dust waterproof tablet internally solid hard drive moving laptops tablets require fan improving dust water resistance rugged options barcode scanner serve logistics transport sector levels ruggedization measured certifications ip std 810 atex smartphones rugged smartphone thicker completely sealed housing protects kinds elements water dust shock vibration smartphone left sandstorm frozen blizzard underwater true rugged smartphone susceptible damage rugged smartphone rugged tablet typically meets ip certification military standard specifications dust shock vibration rain humidity solar radiation altitude temperature extremes manufactures rugged smartphone complicated structure material level quality expectation rugged smartphones push talk ptt capabilities nfc barcode reader functions suit industrial construction logistics wireless connectivity wireless capability key requirement enterprise mobility applications reported wireless transmission failure rates times rugged notebooks compared rugged units difference attributed experience rugged notebook vendors integrating multiple radios products transmission failure leads minutes lost productivity user login company network vpn enterprises cellular networks enable time connectivity users major vendors rugged computers offer built wireless lan wireless wan capabilities partner cellular carriers verizon offerings handoff wireless lan wireless wan connections mobile vpn connection persist creating connected infrastructure simpler user eliminates application crashes data loss 
4636520	computerscience	access linux platform alp discontinued source software based operating referred generation version palm os mobile devices developed marketed access tokyo japan platform included execution environments java classic palm os gtk based native linux applications alp demonstrated devices variety conferences including 3gsm linuxworld guadec source mobile alp announced february 2006 initial versions platform software development kits officially released february 2007 coordinated effort access esteemo nec ntt docomo panasonic platform basis shared platform implementing revised version mode mobile oriented applications platform moap application programming interfaces apis conforming specifications limo foundation smartphone alp edelweiss emblaze mobile scheduled mid 2009 shelved release renamed monolith smartphone developed sharp corporation cooperation emblaze mobile partners scheduled 2009 released officially cancelled june 2010 result platform launched independently devices referenced access feel user interface designed goals earlier palm os releases aim preserving zen palm design philosophy centered applications simple aspects interface included task based orientation file document orientation commonly desktop systems appearance platform intended highly customizable provide differentiation specific devices contexts releases modern gesture support close palm os base frameworks maemo nokia internet tablet framework alp based components drawn gnome project including gtk gstreamer frameworks variety core components drawn mainstream source projects including bluez matchbox cramfs components licensed gnu public license gpl gnu lesser public license lgpl source licenses meaning alp environment software level components alp released mozilla public license hiker project components addressed issues application life cycle intertask communication exchange structured data security time event based notifications common development applications mobile devices application development alp standard apis common operations defined standards portable operating interface posix linux standard base lsb standard addresses telephony device customizing messaging topics frameworks apis defined access applications alp developed linux native code legacy palm os applications garnet vm emulation environment java execution environments supported development launchpad application manager hiker framework alp sdk eclipse based integrated development environment ide plug ins predecessor palm os development environment compilers embedded application binary interface eabi enabled arm versions standard gnu compiler collection gcc tool chain security alp combination user space policy based security framework kernel space linux security module implement fine grained access controls components alp security implementation released hiker framework controls based signatures certificates unsigned applications allowed access predefined set safe apis 
4726017	computerscience	science synchronization refers distinct concepts synchronization processes synchronization data process synchronization refers idea multiple processes handshake reach agreement commit sequence action data synchronization refers idea keeping multiple copies dataset coherence maintain data integrity process synchronization primitives commonly implement data synchronization synchronization synchronization multi processor systems concurrent processes single processor systems mentioned main synchronization forks joins job arrives fork split jobs serviced tasks serviced job waits jobs processing joined leave parallel programming require synchronization parallel processes wait processes occur producer consumer producer consumer relationship consumer process dependent producer process data produced exclusive resources multiple processes dependent resource access time operating ensure processor accesses time reduces concurrency thread process synchronization thread synchronization defined mechanism ensures concurrent processes threads simultaneously execute program segment critical processes access critical controlled synchronization techniques thread starts executing critical serialized segment program thread wait thread finishes proper synchronization techniques applied race condition values variables unpredictable vary depending timings context switches processes threads suppose processes concurrently executing share common resource critical figure synchronization avoid conflicts accessing shared resource process access resource assigned process time assigned process process process wait process frees resource figure synchronization requirement considered processes threads executed board plane ticket check mails validating credentials user password atm provide service provide correct pin mutual exclusion synchronization deals minimizing synchronization challenges exascale algorithm design minimize reduce synchronization synchronization takes time computation distributed computing reducing synchronization drew attention scientists decades increasingly gap improvement computing latency increases experiments global communications synchronization distributed computers takes dominated share sparse iterative solver receiving increasing attention emergence benchmark metric performance conjugate gradient hpcg ranking 500 supercomputers classic synchronization classic synchronization newly proposed synchronization scheme primitive hardware synchronization systems provide hardware support critical code single processor uniprocessor disable interrupts executing running code preemption inefficient multiprocessor systems key ability require implement synchronization multiprocessor set hardware primitives ability atomically read modify memory location capability cost building basic synchronization primitives increase processor count increases alternative formulations basic hardware primitives provide ability atomically read modify location read write performed atomically hardware primitives basic building blocks build wide variety user level synchronization operations including locks barriers architects expect users employ basic hardware primitives expect primitives programmers build synchronization library process complex tricky modern hardware special atomic hardware instructions set memory word compare swap contents memory synchronization strategies programming languages java prevent thread interference memory consistency errors blocks code wrapped synchronized lock object sections forces thread acquire lock object execute block lock automatically released thread acquired lock executing block leaves block enters waiting block variable updates thread synchronized block visible threads acquire lock execute block java synchronized blocks addition enabling mutual exclusion memory consistency enable signaling—i sending events threads acquired lock executing code block waiting lock block java synchronized sections combine functionality mutexes events primitive synchronization monitor object lock monitor java declaring object lock object method marked synchronized framework synchronization primitives synchronization designed cooperative demanding thread process follow synchronization mechanism accessing protected resources critical consistent locking signaling lightweight synchronization types spinwait interlocked operations mechanisms synchronization implementation synchronization spinlock effective implementing synchronization spinlocks accessing shared resource piece code processor checks flag flag reset processor sets flag continues executing thread flag set locked threads spinning loop checking flag set spinlocks effective flag reset cycles lead performance issues wastes processor cycles waiting barriers barriers simple implement provide responsiveness based concept implementing wait cycles provide synchronization threads running simultaneously starting barrier time thread1 reaches barrier wait thread reach barrier2 correct data threads reach barrier start time thread reaches barrier3 wait threads correct data barrier synchronization multiple threads threads waiting threads thread waiting thread severe degradation process performance barrier synchronization wait function ith thread represented wbarrier wait time thread tbarrier threads arrived rthread arrival rate threads experiments 34 total execution time spent waiting slower threads semaphores semaphores signalling mechanisms threads processors access semaphore flag fixed time thread wishes access decrements flag thread leaves flag incremented flag thread access blocked chooses wait semaphores thread process code semaphores called binary semaphore mutex semaphore thread allowed access access denied mathematical foundations synchronization originally process based concept lock object primary usage databases types file lock read read–write read locks processes threads readers–writer locks exclusive single process thread time locks derived file databases data shared memory processes threads object file locked time locked simultaneously overlap causing deadlock exception java ada exclusive locks thread based rely compare swap processor instruction abstract mathematical foundation synchronization primitives history monoid level theoretical devices process calculi petri nets built history monoid synchronization examples synchronization examples respect platforms synchronization windows windows synchronization linux linux enabling disabling kernel preemption replaced spinlocks uniprocessor systems prior kernel version linux disabled interrupt implement short critical sections version linux preemptive synchronization solaris solaris pthreads synchronization pthreads platform independent api data synchronization distinctly concept data synchronization refers multiple copies set data coherent maintain data integrity figure database replication multiple copies data synchronized database servers store data locations examples include challenges data synchronization challenges user data synchronization data formats complexity data formats tend grow complex time organization grows evolves building simple interfaces applications source target transform data passing target application etl extraction transformation loading tools helpful stage managing data format complexities real timeliness real time systems customers current status shop current status parcel delivery—a real time parcel tracking— current balance account real time updated enable smooth manufacturing process real time material enterprise running stock synchronizing customer manufacturing process real life exist examples real time processing successful competitive advantage data security fixed rules policies enforce data security vary depending security maintained correctly source captures data security access privileges enforced target systems prevent potential misuse issue handling secret confidential personal sensitivity confidentiality data transfer encrypted data quality data quality constraint management maintain quality data common practice store data location share people systems applications locations helps preventing inconsistencies data performance phases involved data synchronization process steps critical amounts data synchronization process carefully planned executed avoid negative impact performance 
4827706	computerscience	donald knuth prize prize outstanding contributions foundations science named donald knuth history knuth prize awarded 1996 includes award 5000 prize awarded acm sigact ieee society technical committee mathematical foundations computing prizes awarded alternation acm symposium theory computing ieee symposium foundations science prestigious conferences theoretical science contrast gödel prize recognizes outstanding papers knuth prize awarded individuals impact field winners prize instituted 1996 awarded 
4829643	computerscience	pattern stone simple ideas computers book daniel hillis published 1998 basic books book attempts explain concepts science layman terms metaphor analogy book moves boolean algebra topics theory parallel computing cryptography algorithms heuristics universal computing turing machines promising technologies quantum computing emergent systems 
4891153	computerscience	machine translation field computational linguistics investigates software translate speech natural language 1950s machine translation reality references subject 17th century machine translation georgetown experiment involved successful automatic translation russian sentences english 1954 earliest recorded projects researchers georgetown experiment asserted belief machine translation solved soviet union experiments performed shortly success experiment ushered era funding machine translation united achieved progress slower expected 1966 alpac report fulfilled expectations georgetown experiment dramatically reduced funding grew statistical models machine translation common expensive 1980s computational power increased exists autonomous automatic quality translation unrestricted programs capable providing output strict constraints programs online google translate systran powers altavista babelfish yahoo babelfish 2008 mid 1930s patents translating machines applied georges artsrouni automatic bilingual dictionary paper tape russian peter troyanskii submitted detailed proposal included bilingual dictionary method dealing grammatical roles languages based grammatical esperanto separated stages stage consisted native speaking editor source language organize logical forms exercise syntactic functions stage required machine translate forms target language stage required native speaking editor target language normalize output troyanskii proposal remained unknown late 1950s time computers utilized set proposals based machine translation 1949 warren weaver researcher rockefeller foundation translation memorandum proposals based theory successes code breaking war theories universal principles underlying natural language weaver submitted proposals earnest universities united january 1954 georgetown ibm experiment held york head office ibm public demonstration machine translation demonstration reported newspapers garnered public toy 250 translated 49 carefully selected russian sentences english – field chemistry encouraged idea machine translation imminent stimulated financing worldwide systems bilingual dictionaries hand coded rules fixing word final output eventually considered restrictive linguistic developments time generative linguistics transformational grammar exploited improve quality translations period operational systems installed united air force produced ibm washington university atomic energy commission euratom italy developed georgetown university quality output poor met customers terms speed 1950s yehoshua bar hillel government machine translation assess possibility automatic quality translation machines bar hillel semantic ambiguity double meaning illustrated sentence word pen meanings meaning write ink meaning container human meaning obvious bar hillel claimed universal encyclopedia machine deal time type semantic ambiguity solved writing source texts machine translation controlled language vocabulary word meaning 1960s alpac report seventies 1960s soviet union united concentrated russian–english language pair objects translation chiefly scientific technical documents articles scientific journals rough translations produced sufficient basic understanding articles article discussed subject deemed confidential human translator complete translation discarded blow machine translation 1966 publication alpac report report commissioned government delivered alpac automatic language processing advisory committee scientists convened government 1964 government concerned lack progress expenditure report concluded machine translation expensive accurate slower human translation expenditures machine translation reach quality human translator future report recommended tools developed aid translators – automatic dictionaries – computational linguistics continue supported publication report profound impact machine translation united lesser extent soviet union united kingdom completely abandoned decade canada france germany continued main exceptions founders systran peter toma logos bernard scott established companies 1968 1970 served department defense 1970 systran installed united air force subsequently commission european communities 1976 meteo developed université montréal installed canada 1977 translate weather forecasts english french translating close 80 000 day 30 replaced competitor 30 september 2001 1960s concentrated limited language pairs input demand 1970s cost systems translate range technical commercial documents demand spurred increase globalisation demand translation canada europe japan 1980s 1990s 1980s diversity installed systems machine translation increased systems relying mainframe technology systran logos ariane g5 metal result improved availability microcomputers market machine translation systems companies advantage europe japan usa systems brought market china eastern europe korea soviet union 1980s lot activity japan generation japan intended leap competition hardware software project japanese electronics firms involved creating software translating english fujitsu toshiba ntt brother catena matsushita mitsubishi sharp sanyo hitachi nec panasonic kodensha nova oki 1980s typically relied translation variety intermediary linguistic representation involving morphological syntactic semantic analysis 1980s surge methods machine translation developed ibm based statistical methods makoto nagao methods based translation examples technique termed based machine translation defining feature approaches neglect syntactic semantic rules reliance manipulation corpora 1990s encouraged successes speech recognition speech synthesis speech translation development german verbmobil project language converter falcon machine translation technology designed army laboratory fielded 1997 translate documents soldiers bosnia growth machine translation result advent cost powerful computers 1990s machine translation transition mainframe computers personal computers workstations companies led pc market time globalink microtac merger companies december 1994 corporate intergraph systran offer pc versions time sites internet altavista babel fish systran technology google language tools initially systran technology exclusively 2000s field machine translation major statistical machine translation based machine translation speech translation focused moving domain limited systems domain unlimited translation systems projects europe star united str dust darpa gale solutions automatically translating parliamentary speeches broadcast news developed scenarios domain content limited special speeches translated cover variety topics french german project quaero investigates possibility machine translations multi lingual internet project seeks translate webpages videos audio files internet companies statistical machine translation commercially omniscien technologies asia online sdl language weaver sells translation products services google proprietary statistical language combinations google language tools proprietary statistical translate knowledge base articles ta offers domain adapted machine translation solution based statistical linguistic knowledge renewed hybridisation researchers combining syntactic morphological linguistic knowledge statistical systems combining statistics existing rule based systems 
5104401	computerscience	outline overview topical guide vision vision – interdisciplinary field deals computers gain level understanding digital images videos perspective engineering seeks automate tasks human visual vision tasks include methods acquiring digital images image sensors image processing image analysis reach understanding digital images deals extraction dimensional data real produce numerical symbolic interpret image data forms video sequences views multiple cameras multi dimensional data medical scanner technological discipline vision seeks apply theories models construction vision systems scientific discipline vision concerned theory artificial systems extract images history vision history vision 
5151542	computerscience	windows embedded ce codenamed yamazaki sixth major release windows embedded operating targeted enterprise specific tools industrial controllers consumer electronics devices digital cameras ce features kernel supports 32 768 processes 32 process limit prior versions process receives virtual address space 32 mb windows embedded ce released november 2006 includes partial source code os serves basis zune hd windows mobile based windows ce windows phone major release windows phone operating based windows embedded ce r3 windows phone windows embedded compact features features r3 windows embedded ce r3 finalized september 2009 oems serves base platform zune hd windows phone ce r3 includes features abilities note features listed specific windows phone zune hd 
5205640	computerscience	variable assembly language val based control language designed unimation industrial robots val robot language permanently stored val includes programming language direct individual applications val language easy understand syntax concise explanatory instruction set commands communications robot consist easy understand word sequences control programs written controls robot real time val continuous trajectory computation permits complex motions executed efficient memory reduction complexity val continuously generates robot control commands simultaneously interact human operator permitting program generation modification convenient feature val ability libraries manipulation routines complex operations easily programmed combining predefined subtasks val language consists monitor commands program instructions monitor commands prepare execution user written programs program instructions provide repertoire create val programs controlling robot actions terminology terms frequently val operations monitor val monitor administrative program oversees operation accepts user input initiates response instructions user written programs direct robot performs computations control robot editor val editor aid entering modifying existing enter modify robot control programs list instructions telling val programs written users tasks robot perform location location position object space orientation theobject locations define positions orientations robot tool assume program execution val programming conventions apply numerical values supplied val commands instructions preceding monitor command description symbols indicating command typed user dot signifies command performed val level monitor mode user program executed prompt dot asterisk command performed time val executing program prompt asterisk symbols command executed monitor commands program instructions abbreviated entering monitor command program instruction function abbreviated characters unique commands instructions angle brackets enclose item describes actual argument programmer supply item position entering command instruction note brackets clarification included command instruction val commands instructions optional arguments notations optional arguments enclosed square brackets comma argument comma retained argument monitor base command form 300 millimeter change direction commandcould entered note commas preceding 300 correctly relate direction change angle brackets square brackets entered command instruction types numerical arguments commands instructions type restrictions values accepted val rules observed nearest representable val function val regulate control robot user commands instructions addition compact stand val designed highly interactive minimize programing time provide programming aids external communication standard val operator console terminal manual control box input commands data user operator console serves primary communication device direct play terminal printing terminal interaction devices automated cell typically handled monitoring input channels switching outputs robot control modest cell programmable devices val operating controller levels operation prom memory retains contents finitely val controller switched monitor responsible control robot commands manual control unit terminal programs increase versatility flexibility val monitor perform commands user program executed commands processed include controlling status defining robot locations storing retrieving floppy disk creating editing robot control programs 
5289626	computerscience	timit corpus phonemically lexically transcribed speech american english speakers sexes dialects transcribed element delineated time timit designed acoustic phonetic knowledge automatic speech recognition systems commissioned darpa corpus design joint effort massachusetts institute technology sri international texas instruments ti speech recorded ti transcribed mit verified prepared publishing national institute standards technology nist telephone bandwidth version called ntimit network timit timit ntimit freely membership linguistic data consortium monetary payment required access dataset 
5386671	computerscience	structure motion sfm photogrammetric range imaging technique estimating dimensional structures dimensional image sequences coupled local motion signals studied fields vision visual perception biological vision sfm refers phenomenon humans living creatures recover 3d structure projected 2d retinal motion field moving object scene principle humans perceive lot dimensional structure environment moving observer moves objects observer images sensed time finding structure motion finding structure stereo vision instances correspondence images reconstruction 3d object correspondence images features corner edges gradients multiple directions tracked image feature detectors scale invariant feature transform sift maxima difference gaussians dog pyramid features step sift finding dominant gradient direction rotation invariant descriptor rotated fit orientation common feature detector surf speeded robust features surf dog replaced hessian matrix based blob detector evaluating gradient histograms surf computes sums gradient components sums absolute values features detected images matched matching algorithms track features image lukas–kanade tracker matched features incorrectly matched matches filtered ransac random sample consensus algorithm remove outlier correspondences paper fischler bolles ransac solve location determination ldp objective determine space project image set landmarks locations feature trajectories time reconstruct 3d positions camera motion alternative called direct approaches geometric 3d structure camera motion estimated images intermediate abstraction features corners approaches structure motion incremental sfm camera poses solved collection global sfm poses cameras solved time intermediate approach core sfm partial reconstructions computed integrated global solution applications geosciences structure motion photogrammetry multi view stereo hyperscale landform models images acquired range digital cameras optionally network ground control technique limited temporal frequency provide cloud data comparable density accuracy generated terrestrial airborne laser scanning fraction cost structure motion remote rugged environments terrestrial laser scanning limited equipment portability airborne laser scanning limited terrain roughness causing loss data image foreshortening technique applied settings rivers badlands sandy coastlines fault zones landslides coral reef settings sfm applied characterization rock masses determination properties orientation persistence discontinuities range digital cameras utilized including digital slr compact digital cameras smart phones accuracy data achieved expensive cameras include lenses optical quality technique offers exciting opportunities characterize surface topography unprecedented multi temporal data detect elevation position volumetric symptomatic earth surface processes structure motion context digital surveying methods cultural heritage cultural heritage structural control documentation conservation humanity main duties unesco view sfm properly estimate situations planning maintenance efforts costs control restoration constraints exist connected accessibility impossibility install invasive surveying pillars permit traditional surveying routines total stations sfm invasive approach structure direct interaction structure operator accurate qualitative considerations fast respond monument’s management operational phase accurate preparation photogrammetric surveying established relation distance object focal ground sampling distance gsd sensor’s resolution programmed photographic acquisitions vertical overlapping 60 figure 02 external links structure motion software toolboxes source solutions matlabpython 
5389424	computerscience	arduino source hardware software company project user community designs manufactures single board microcontrollers microcontroller kits building digital devices interactive objects sense control physically digitally products licensed gnu lesser public license lgpl gnu public license gpl permitting manufacture arduino boards software distribution arduino boards commercially preassembled form diy kits arduino board designs variety microprocessors controllers boards equipped sets digital analog input output pins interfaced expansion boards breadboards shields circuits boards feature serial communications interfaces including universal serial bus usb models loading programs personal computers microcontrollers typically programmed dialect features programming languages addition traditional compiler toolchains arduino project integrated development environment ide based processing language project arduino project started 2003 program students interaction design institute ivrea ivrea italy aiming provide cost easy novices professionals create devices interact environment sensors actuators common examples devices intended beginner hobbyists include simple robots thermostats motion detectors arduino bar ivrea italy founders project meet bar named arduin ivrea margrave march ivrea king italy 1002 1014 history arduino project started interaction design institute ivrea idii ivrea italy time students basic stamp microcontroller cost 50 considerable expense students 2003 hernando barragán created development platform wiring master thesis project idii supervision massimo banzi casey reas casey reas creating ben fry processing development platform project goal create simple cost tools creating digital projects engineers wiring platform consisted printed circuit board pcb atmega168 microcontroller ide based processing library functions easily program microcontroller 2003 massimo banzi david mellis idii student david cuartielles support cheaper atmega8 microcontroller wiring continuing wiring forked project renamed arduino initial arduino core team consisted massimo banzi david cuartielles tom igoe gianluca martino david mellis barragán invited participate completion wiring platform lighter expensive versions distributed source community estimated mid 2011 300 000 official arduinos commercially produced 2013 700 000 official boards users hands october 2016 federico musto arduino ceo secured 50 ownership company april 2017 wired reported musto fabricated academic record company personal linkedin accounts italian business documents musto listed holding phd massachusetts institute technology biography claimed mba york university wired reported university record musto attendance musto admitted interview wired earned degrees time massimo banzi announced arduino foundation arduino foundation established project remains unclear controversy surrounding musto continued july 2017 reportedly pulled source licenses schematics code arduino prompting scrutiny outcry october 2017 arduino announced partnership arm holdings arm announcement arm recognized independence core arduino lock arm architecture arduino intends continue technology vendors architectures trademark dispute 2008 founders arduino project created company arduino llc hold trademarks arduino manufacture sale boards external companies arduino llc royalty founding bylaws arduino llc founders transfer ownership arduino brand newly formed company 2008 gianluca martino company smart projects registered arduino trademark italy secret cofounders revealed arduino company register trademark originally registered discovered registered italy negotiations gianluca firm bring trademark control original arduino company failed 2014 smart projects refusing pay royalties appointed ceo federico musto renamed company arduino srl created arduino copying graphics layout original arduino rift arduino development team january 2015 arduino llc filed lawsuit arduino srl 2015 arduino llc created worldwide trademark genuino brand united maker faire york october 2016 arduino llc founder ceo massimo banzi arduino srl ceo federico musto announced merger companies 2017 arduino owned arduino trademarks july 2017 bcmi founded massimo banzi david cuartielles david mellis tom igoe acquired arduino arduino trademarks fabio violante ceo replacing federico musto arduino hardware arduino source hardware hardware reference designs distributed creative commons attribution share alike license arduino layout production files versions hardware hardware software designs freely copyleft licenses developers requested arduino exclusive official product derived permission official policy document arduino emphasizes project incorporating official product arduino compatible products commercially released avoided project names duino arduino boards consist atmel bit avr microcontroller atmega8 atmega168 atmega328 atmega1280 atmega2560 varying amounts flash memory pins features 32 bit arduino based atmel sam3x8e introduced 2012 boards single double row pins female headers facilitate connections programming incorporation circuits connect add modules termed shields multiple stacked shields individually addressable i²c serial bus boards include linear regulator 16 mhz crystal oscillator ceramic resonator designs lilypad 8 mhz dispense onboard voltage regulator specific form factor restrictions arduino microcontrollers pre programmed boot loader simplifies uploading programs chip flash memory default bootloader arduino uno optiboot bootloader boards loaded program code serial connection serial arduino boards level shifter circuit convert rs 232 logic levels transistor–transistor logic ttl level signals current arduino boards programmed universal serial bus usb implemented usb serial adapter chips ftdi ft232 boards model uno boards substitute ftdi chip separate avr chip usb serial firmware reprogrammable icsp header variants arduino mini unofficial boarduino detachable usb serial adapter board cable bluetooth methods traditional microcontroller tools arduino ide standard avr programming isp programming arduino board exposes microcontroller pins circuits diecimila duemilanove current uno provide 14 digital pins produce pulse modulated signals analog inputs digital pins pins board female inch 54 mm headers plug application shields commercially arduino nano arduino compatible bare bones board boarduino boards provide male header pins underside board plug solderless breadboards arduino compatible arduino derived boards exist functionally equivalent arduino interchangeably enhance basic arduino adding output drivers school level education simplify buggies robots electrically equivalent change form factor retaining compatibility shields variants processors varying compatibility official boards original arduino hardware produced italian company smart projects arduino branded boards designed american companies sparkfun electronics adafruit industries 17 versions arduino hardware commercially produced shields arduino arduino compatible boards printed circuit expansion boards called shields plug supplied arduino pin headers shields provide motor controls 3d printing applications global positioning gps ethernet liquid crystal display lcd breadboarding prototyping shields diy software program arduino hardware written programming language compilers produce binary machine code target processor atmel development environment bit avr 32 bit arm cortex based microcontrollers avr studio atmel studio ide arduino integrated development environment ide cross platform application windows macos linux written programming language java originated ide languages processing wiring includes code editor features cutting pasting searching replacing automatic indenting brace matching syntax highlighting simple mechanisms compile upload programs arduino board message console toolbar buttons common functions hierarchy operation menus source code ide released gnu public license version arduino ide supports languages special rules code structuring arduino ide supplies software library wiring project common input output procedures user written code requires basic functions starting sketch main program loop compiled linked program stub main executable cyclic executive program gnu toolchain included ide distribution arduino ide employs program avrdude convert executable code file hexadecimal encoding loaded arduino board loader program board firmware sketch sketch program written arduino ide sketches saved development files file extension ino arduino software ide pre saved sketches extension pde minimal arduino program consist functions arduino boards light emitting diode led current limiting resistor connected pin 13 ground convenient feature tests program functions typical program beginners akin blink repeatedly blinks board led integrated arduino board program functions internal libraries included ide environment program loaded arduino board manufacturer libraries source nature arduino project facilitated publication software libraries developers augment projects recognitions arduino project received honorary mention digital communities category 2006 prix ars electronica 
5454605	computerscience	gordon bell prize award association computing machinery conjunction conference series supercomputing conference prize recognizes outstanding achievement performance computing applications main purpose track progress time parallel computing acknowledging rewarding innovation applying performance computing applications science engineering scale data analytics prize established 1987 cash award 000 2011 accompanies recognition funded gordon bell pioneer performance parallel computing prizes preceded nominal prize 100 established alan karp numerical analyst ibm challenged claims mimd performance improvements proposed letters editor communications acm karp gordon bell prize judges individuals teams apply award submitting technical paper describing conference submissions process finalists conference submissions included conference proceedings prize criteria acm gordon bell prize intended recognize performance achievements demonstrate earlier multiple prizes awarded reflect types achievements current policies prize awarded categories depending entries received special achievement scalability special achievement time solution entry demonstrates exceptional scalability terms strong weak scaling total time solve science engineering 
5508085	computerscience	theory computing peer reviewed access scientific journal covering theoretical science journal established 2005 published department science university chicago editor chief lászló babai university chicago 
5574880	computerscience	minix project create availability functioning unix operating published bsd license successor project earlier versions minix main goal project fault tolerant detecting repairing faults fly user intervention main envisaged embedded systems education minix supports ia 32 arm architecture processors emulators virtual machines bochs vmware workstation virtual pc oracle virtualbox qemu port powerpc architecture development distribution live downloaded live usb stick image release minix r3 0rc6 d5e4fc0 iso bz2 09 2017 minix believed intel management engine intel platform controller hub starting introduction 11 skylake kaby lake processors intel os intel processors starting installations windows gnu linux macos goals project reflecting nature monolithic kernel based systems driver minix creator tanenbaum 3–7 times bugs usual program bring minix aims create operating reliable healing multiserver unix clone achieve code running kernel minimal file server process server device driver running separate user mode processes driver carefully monitored named reincarnation server driver fails respond pings server shut replaced fresh driver monolithic bug driver easily crash kernel occur minix history minix publicly announced 24 october 2005 andrew tanenbaum keynote speech association computing machinery acm symposium operating systems principles conference serves edition tanenbaum woodhull textbook comprehensively redesigned usable resource limited embedded computers applications requiring reliability reliability policies main goals minix reliability principles enhance reliability discussed reduce kernel size monolithic operating systems linux freebsd hybrids windows millions lines kernel code contrast minix 000 lines executable kernel code easier code cage bugs monolithic kernels device drivers reside kernel peripheral installed unknown untrusted code inserted kernel bad code driver bring minix device driver separate user mode process drivers execute privileged instructions change tables perform arbitrary input output write absolute memory kernel calls services kernel checks authority limit drivers memory access monolithic kernels driver write word memory accidentally corrupt user programs minix user expects data file builds descriptor telling access addresses passes descriptor file pass driver file driver kernel write descriptor impossible write addresses buffer survive bad pointers dereferencing bad pointer driver crash driver process reincarnation server restart crashed driver automatically drivers disk network recovery transparent user processes audio printer user notice monolithic kernels dereferencing bad pointer driver leads crash tame infinite loops driver infinite loop scheduler gradually priority idle eventually reincarnation server responding status requests kill restart looping driver monolithic kernel looping driver hang limit damage buffer overflows minix fixed messages internal communication eliminates buffer overflows buffer management exploits overrunning buffer trick program returning function overwritten stack return address attacker controlled memory overrun buffer minix attack mitigated instruction data space split code read instruction space executed termed executable space protection attacks rely running legitimately executable memory malicious return libc return oriented programming prevented mitigation restrict access kernel functions device drivers kernel services copying data users address spaces kernel calls minix kernel bit map driver calls authorized monolithic kernels driver kernel function authorized restrict access ports kernel maintains table telling ports driver access driver touch ports monolithic kernels buggy driver access ports belonging device restrict communication os components driver server communicate driver server process bit map determines destinations process send reincarnate dead sick drivers special process called reincarnation server periodically pings device driver driver dies fails respond correctly pings reincarnation server automatically replaces fresh detecting replacing functioning drivers automatic user action feature disk drivers release recover disk drivers shadowed random access memory ram driver recovery affect running processes integrate interrupts messages interrupt occurs converted level notification driver driver waiting message interrupt notification time codice message scheme eliminates nested interrupts driver programming easier architecture level microkernel 000 lines code assembly language handles interrupts scheduling message passing supports application programming interface api 30 kernel calls authorized servers drivers user programs calls issue posix calls send messages servers kernel calls perform functions setting interrupts copying data address spaces level device drivers running separate userland process controls device disk printer drivers access port space issue instructions kernel calls list ports write values written overhead typically 500 ns scheme kernel check authorization audio driver write disk level servers operating functionality located user processes file service sending messages file server close read write files file server disk performed sending messages disk driver controls disk key servers reincarnation server job poll servers drivers check health periodically component fails respond correctly exits infinite loop reincarnation server parent process drivers servers kills faulty component replaces fresh automatically healing interfering running programs reincarnation server process server microkernel trusted computing base fail crashes reducing trusted computing base lines code linux windows systems 20 000 lines greatly enhances reliability differences minix prior versions minix developed tools people learn design operating systems minix released 1987 12 000 lines x86 assembly language source code kernel memory manager file minix printed book tanenbaum originally developed minix compatibility ibm pc ibm pc microcomputers time minix released 1991 included support microchannel ibm ps systems ported motorola 68000 sparc architectures supporting atari commodore amiga apple macintosh sun microsystems sparcstation platforms version minix running user process sunos minix released 1997 x86 solaris hosted sparc architectures minix vmd created vrije universiteit researchers virtual memory support window minix modern operating tools unix applications prof tanenbaum improvements structure kernel minix release reliable minix version released nov 2009 x11 emacs gcc perl python almquist bash ftp client ssh client telnet client pine 400 common unix utility programs addition x11 version marks transition feature version improved future ability withstand device driver crashes automatically replaced running processes minix healing applications demanding reliability minix released february 2012 version features including clang compiler experimental symmetric multiprocessing support procfs ext2fs filesystem support gnu debugger gdb netbsd integrated release including bootloader libc utilities libraries minix released september 2014 release version support arm architecture addition x86 supports netbsd userland thousands netbsd packages running box mascot rocky raccoon mascot minix minixcon minixcon conference sharing talks efforts researches minix minixcon2017 cancelled lack talks submitted 
5648968	computerscience	luis von ahn born 19 august 1978 guatemalan entrepreneur consulting professor science department carnegie mellon university pittsburgh pennsylvania pioneers crowdsourcing founder company recaptcha sold google 2009 founder ceo duolingo popular language learning platform biography von ahn born grew guatemala city german guatemalan descent received mathematics summa cum laude duke university 2000 phd science carnegie mellon university 2005 2006 von ahn faculty carnegie mellon school science carnegie mellon university professor includes captchas human computation earned international recognition numerous honors awarded macarthur fellowship 2006 david lucile packard foundation fellowship 2009 sloan fellowship 2009 faculty fellowship 2007 presidential career award scientists engineers 2012 named 50 brains science discover recognition lists include popular science brilliant silicon 50 influential people technology mit technology review tr35 innovators 35 fast company 100 innovative people business siglo veintiuno biggest newspapers guatemala chose person 2009 2011 foreign policy magazine spanish named influential intellectual latin america spain von ahn field cryptography nicholas hopper john langford provide rigorous definitions steganography prove private key steganography 2000 pioneering manuel blum captchas generated tests humans routinely pass computers mastered devices sites prevent automated programs bots perpetrating scale abuse automatically registering accounts purchasing huge tickets resale scalpers captchas brought von ahn widespread fame public coverage york times usa discovery channel nova sciencenow mainstream outlets von ahn thesis completed 2005 publication term human computation coined referring methods combine human brainpower computers solve solve von ahn thesis games purpose gwaps games played humans produce computation famous esp game online game randomly paired people simultaneously picture communicate lists phrases picture time limit rewarded match match accurate description picture database accurate image search technology esp game licensed google form google image labeler improve accuracy google image search von ahn games brought coverage mainstream media thesis doctoral dissertation award carnegie mellon university school science july 2006 von ahn tech talk google human computation crowdsourcing watched viewers 2007 von ahn invented recaptcha form captcha helps digitize books recaptcha images displayed user books digitized optical character recognition identify people identified recaptcha 100 000 sites transcribing 40 day 2011 awarded nico habermann development chair science awarded junior faculty unusual promise school science 2018 von ahn awarded lemelson mit prize dedication improving technology von ahn ceo duolingo language education platform teaching von ahn unusual techniques teaching multiple teaching awards carnegie mellon university fall 2008 teaching carnegie mellon entitled science combination graph theory social science covers topics network game theory auction theory 
5908824	computerscience	dr king sun fu october 1930—april 29 1985 goss distinguished professor purdue university west lafayette indiana instrumental founding international association pattern recognition iapr served president recognized extensive contributions pioneer field pattern recognition image analysis machine intelligence honor memory professor king sun fu iapr biennial king sun fu prize living person recognition outstanding technical contribution field pattern recognition king sun fu prize 1988 azriel rosenfeld biography fu born october 1930 nanking nanjing china historical capitals received national taiwan university 1953 university toronto 1955 university illinois urbana champaign 1959 fu died april 29 1985 washington dc academic life fu organized international conference pattern recognition icpr 1973 served chairman conference evolved formation international association pattern recognition 1976 elected president reorganized pattern recognition committee chairman 1974 led founding ieee transactions pattern analysis machine intelligence tpami served editor chief 1978 king sun invited lectures china decades academia sinica 1978 instrumental establishing microelectronics science technology center national chiao tung university 1984 
5978424	computerscience	field multivariate statistics kernel principal component analysis kernel pca extension principal component analysis pca techniques kernel methods kernel originally linear operations pca performed reproducing kernel hilbert space background linear pca recall conventional pca operates centered data vector multivariate observations operates diagonalizing covariance matrix eigendecomposition covariance matrix rewritten asit easy construct hyperplane divides arbitrary clusters 11 creates linearly independent vectors covariance perform eigendecomposition explicitly linear pca kernel pca trivial arbitrary 11 function chosen calculated explicitly allowing possibility dimensional 11 evaluate data space avoid 11 space feature space create kernelwhich represents product space gramian matrix intractable feature space dual form arises creation kernel mathematically formulate version pca solve eigenvectors eigenvalues covariance matrix 16 space kernel trick elements column represent dot product transformed data respect transformed kernels feature space kernel formulation pca restricted computes principal components projections data components evaluate projection feature space 16 kth principal component 18 superscript component powers note 20 denotes dot product simply elements kernel 21 left calculate normalize 22 solving eigenvector equationwhere data set 24 25 eigenvalues eigenvectors normalize eigenvectors 26 require thatcare 28 original space guaranteed centered feature space compute explicitly centered data required perform effective principal component analysis centralize 29where 31 denotes matrix element takes 32 29 perform kernel pca algorithm caveat kernel pca illustrated linear pca eigenvalues rank eigenvectors based variation data captured principal component data dimensionality reduction applied kpca practice variations data typically caused wrong choice kernel scale datasets practice data set leads storing deal perform clustering dataset populate kernel clusters method yield common compute eigenvalues eigenvectors concentric clouds kernel pca identify color represent involved algorithm transformation relocates data kernelapplying kernel pca yields image gaussian kernel kernel measure closeness equal coincide equal infinity note principal component distinguish impossible linear pca linear pca operates dimensional space concentric clouds linearly separable applications kernel pca demonstrated novelty detection image noising 
6079030	computerscience	reald 3d digital stereoscopic projection technology sold reald technology watching 3d films theaters cinemas worldwide reald 3d installed 26 500 auditoriums 200 exhibitors 72 countries june 2015 technology reald 3d cinema technology polarized 3d circularly polarized light produce stereoscopic image projection advantage circular polarization linear polarization viewers tilt head theater naturally double darkened images systems head tilt result incorrect parallax prevent brain correctly fusing stereoscopic images resolution digital cinema grade video projector alternately projects eye frames left eye frames switching 144 times projector texas instruments digital light processing device sony reflective lcos liquid crystal silicon push pull electro optical liquid crystal modulator called zscreen projector lens alternately polarize frame circularly polarizes frames clockwise eye counter clockwise left eye audience wears circularly polarized glasses oppositely polarized lenses ensures eye designated frame reald cinema frame projected times reduce flicker called triple flash source video produced 24 frames eye total 48 frames result subtle ghosting stuttering horizontal camera movements silver screen maintain light polarization reflection reduce reflection loss counter light loss polarization filter absorption result 3d picture extend screen 
6152185	computerscience	mathematics softmax function takes normalized vector normalizes probability distribution prior applying softmax vector elements negative sum applying softmax element interval softmax neural networks map normalized output probability distribution predicted output classes softmax function softargmax normalized exponential function generalization logistic function squashes dimensional vector arbitrary real values dimensional vector real values entry interval entries add standard unit softmax function standard exponential function coordinate divided sum exponential function applied coordinate normalizing constant output coordinates sum base positive written real yielding expression fields base fixed fixed scale parameter varied interpretations smooth arg max softmax misleading function smooth maximum smooth approximation maximum function smooth approximation arg max function function maximum term softmax closely logsumexp function smooth maximum reason prefer accurate term softargmax term softmax conventional machine learning term softargmax emphasize interpretation formally arg max function categorical output 12 arg max function hot representation output assuming unique max arg output coordinate 14 15 arg max 16 meaning 17 unique maximum 16 encoding 19 argument maximum generalized multiple arg max values multiple equal 17 maximum dividing max args formally arguments assuming maximum 21 argument maximum arguments equal simply 22 multiple arg max values singular singularities form singular set – arg max discontinuous jump discontinuity – single arg max singular regular representation softargmax smooth approximation arg max softargmax converges arg max notions convergence function softargmax converges arg max pointwise meaning fixed input 23 softargmax converge uniformly arg max meaning intuitively converge rates converge arbitrarily slowly softargmax continuous arg max continuous singular set coordinates equal uniform limit continuous functions continuous failure converge uniformly inputs coordinates equal maximum arg max change input yields change output 24 25 26 inputs closer singular set 27 slower converge softargmax converge compactly singular set conversely softargmax converges arg min singular set arg min values language tropical analysis softmax deformation quantization arg max arg min log semiring max semiring min semiring recovering arg max arg min limit called tropicalization dequantization fixed input larger relative temperature output arg max difference relative temperature difference relative temperature close arg max difference relative temperature 100 temperature 30 eventually differences relative shrinking temperature interpretation limit behavior probability theory probability theory output softmax function represent categorical distribution – probability distribution outcomes statistical mechanics statistical mechanics softmax function boltzmann distribution gibbs distribution set 31 microstates inputs 17 energies denominator partition function denoted factor called coldness thermodynamic beta inverse temperature applications softmax function multiclass classification methods multinomial logistic regression softmax regression multiclass linear discriminant analysis naive bayes classifiers artificial neural networks multinomial logistic regression linear discriminant analysis input function result distinct linear functions predicted probability class sample vector weighting vector composition linear functions 34 softmax function 35 denotes product 36 37 operation equivalent applying linear operator defined 37 vectors 36 transforming original highly dimensional input vectors dimensional space 40 neural networks softmax function final layer neural network based classifier networks commonly trained log loss cross entropy regime linear variant multinomial logistic regression function maps vector specific real derivative account kronecker delta simplicity derivative sigmoid function expressed function multinomial logit probability model softmax activation function reinforcement learning field reinforcement learning softmax function convert values action probabilities function commonly action 43 corresponds expected reward action 44 called temperature parameter allusion statistical mechanics temperatures 45 actions probability temperature expected rewards affect probability temperature 46 probability action expected reward softmax normalization sigmoidal softmax normalization reducing influence extreme values outliers data removing dataset outlier data include dataset preserving significance data standard deviation data nonlinearly transformed sigmoidal functions logistic sigmoid function hyperbolic tangent function tanh sigmoid function limits range normalized data values sigmoid function linear smooth nonlinearity extremes ensuring data limited range maintains resolution values standard deviation hyperbolic tangent function tanh limits range normalized data values −1 hyperbolic tangent function linear slope sigmoid function sigmoid smooth monotonic nonlinearity extremes sigmoid function remains differentiable sign derivative slope unaffected normalization ensures optimization numerical integration algorithms continue rely derivative estimate output normalized produced input region linearisation properties geometrically softmax function maps vector space 40 interior standard 50 simplex cutting dimension range 50 dimensional simplex 52 dimensional space linear constraint output sum meaning lies hyperplane main diagonal 53 softmax uniform distribution outputs 54 equal scores yield equal probabilities softmax invariant translation coordinate adding 55 inputs yields 57 multiplies exponent factor 58 59 ratios change geometrically softmax constant diagonals dimension eliminated corresponds softmax output independent translation input scores choice score normalize input scores assuming sum subtract average 61 62 softmax takes hyperplane sum 63 simplex positive values sum 1formula 64 analogously exponent takes 65 positive contrast softmax invariant scaling instance 66 67the standard logistic function special dimensional axis dimensional space axis plane variable fixed 68 65 variable vary denote 70 71 standard logistic function 72 complement meaning add dimensional input alternatively expressed 73 outputs 74 75the softmax function gradient logsumexp function smooth maximum defining partial derivatives expressing partial derivatives vector gradient yields softmax history softmax function statistical mechanics boltzmann distribution foundational paper formalized popularized influential textbook softmax decision theory credited axiom independence irrelevant alternatives rational choice theory deduce softmax luce choice axiom relative preferences machine learning term softmax credited john bridle 1989 conference papers input softmax 064 175 475 024 064 175 output weight original input function highlight largest values suppress values maximum note softmax scale invariant input sums softmax 138 153 169 125 138 153 values softmax emphasizes maximum note 169 475 initial proportion 25 computation simple python code syntaxhighlight lang pycon » import math» 0» z» print 20 09 54 72 20 09» sum sum » print sum 114 98» softmax sum exp» print softmax 064 175 475 024 064 175 syntaxhighlight python numpy syntaxhighlight lang pycon » import numpy np» 0» softmax lambda sum » softmax array 02364054 06426166 1746813 474833 02364054 syntaxhighlight julia code syntaxhighlight lang jlcon julia 07 element array float64 julia sum element array float64 syntaxhighlight code syntaxhighlight lang softmax sum softmax syntaxhighlight 
6362237	computerscience	jtekt corporation japanese corporation created january 2006 merger companies koyo seiko toyoda machine toyoda machine machine tool sales north central south america aftermarket support services machine manufacturing engineering services supplied jtekt toyoda americas corporation toyoda arlington heights manufactured products division operates wixom mi support offices monterrey mexico itu brazil jtekt corporation machine tools manufactured japan jtekt corporation taiwan wele mechatronics toyoda strategic alliance company exported globally jtekt north america jtekt north america separate legal entity headed coo mike davidson reports ceo locations operations united canada mexico 2009 jtekt purchased needle bearing business automotive bearings timken needle roller bearing business torrington company timken purchased 2003 jtekt gained manufacturing locations technical center business office north america locations worldwide headquarterstechnical centersmanufacturing locationsreferences jtekt sona india 
6435232	computerscience	opinion mining sentiment analysis emotion refers natural language processing analysis computational linguistics biometrics systematically identify extract quantify study affective subjective sentiment analysis applied voice customer materials reviews survey responses online social media healthcare materials applications range marketing customer service clinical medicine examples objective challenges sentiment analysis simple examples types basic task sentiment analysis classifying polarity document sentence feature aspect level—whether expressed opinion document sentence entity feature aspect positive negative neutral advanced polarity sentiment classification instance emotional angry sad happy precursors sentimental analysis include inquirer hints quantifying patterns separately psychological examined person psychological based analysis verbal behavior subsequently method patent volcani fogel looked sentiment identified individual phrases respect emotional scales current based called effectcheck synonyms increase decrease level evoked emotion scale subsequent efforts sophisticated mere polar view sentiment positive negative turney pang applied methods detecting polarity product reviews movie reviews document level classify document polarity multi scale attempted pang snyder pang lee expanded basic task classifying movie review positive negative predict star ratings star scale snyder performed depth analysis restaurant reviews predicting ratings aspects restaurant food atmosphere star scale steps bringing approaches—learning lexical knowledge based —were 2004 aaai spring symposium linguists scientists researchers aligned proposed shared tasks benchmark data sets systematic computational affect appeal subjectivity sentiment statistical classification methods neutral class assumption neutral texts lie boundary binary classifier researchers polarity categories identified proven specific classifiers max entropy svms benefit introduction neutral class improve accuracy classification principle operating neutral class algorithm proceeds identifying neutral language filtering assessing rest terms positive negative sentiments builds classification step approach involves estimating probability distribution categories naive bayes classifiers implemented nltk neutral class depends nature data data clustered neutral negative positive language sense filter neutral language focus polarity positive negative sentiments contrast data neutral deviations positive negative affect strategy harder distinguish poles method determining sentiment scaling commonly negative neutral positive sentiment −10 scale negative positive simply positive upper limit adjust sentiment term relative environment level sentence piece unstructured analyzed natural language processing concept environment score based sentiment relate concept score movement sophisticated understanding sentiment adjust sentiment concept relative modifications surround intensify relax negate sentiment expressed concept affect score alternatively texts positive negative sentiment strength score goal determine sentiment polarity strength subjectivity objectivity identification task commonly defined classifying sentence classes objective subjective difficult polarity classification subjectivity phrases depend context objective document subjective sentences news article quoting people opinions mentioned dependent definition subjectivity annotating texts pang removing objective sentences document classifying polarity helped improve performance feature aspect based refers determining opinions sentiments expressed features aspects entities cell phone digital camera bank feature aspect attribute component entity screen cell phone service restaurant picture quality camera advantage feature based sentiment analysis possibility capture nuances objects features generate sentiment responses hotel convenient location mediocre food involves identifying relevant entities extracting features aspects determining opinion expressed feature aspect positive negative neutral automatic identification features performed syntactic methods topic modeling deep learning detailed discussions level sentiment analysis liu methods features existing approaches sentiment analysis main categories knowledge based techniques statistical methods hybrid approaches knowledge based techniques classify affect categories based presence unambiguous affect happy sad afraid bored knowledge bases list obvious affect assign arbitrary probable affinity emotions statistical methods leverage elements machine learning latent semantic analysis support vector machines bag pointwise mutual semantic orientation deep learning sophisticated methods detect holder sentiment person maintains affective target entity affect opinion context feature speaker opined grammatical relationships grammatical dependency relations deep parsing hybrid approaches leverage machine learning elements knowledge representation ontologies semantic networks detect semantics expressed subtle manner analysis concepts explicitly convey relevant implicitly linked concepts source software tools deploy machine learning statistics natural language processing techniques automate sentiment analysis collections texts including online news internet discussion online reviews blogs social media knowledge based systems hand publicly resources extract semantic affective natural language concepts sentiment analysis performed visual content images videos multimodal sentiment analysis approaches direction sentibank utilizing adjective noun pair representation visual content addition vast majority sentiment classification approaches rely bag model disregards context grammar word approaches analyses sentiment based compose meaning phrases result incur additional annotation overhead human analysis component required sentiment analysis automated systems analyze historical tendencies individual commenter platform classified incorrectly expressed sentiment automation impacts 23 comments correctly classified humans humans disagree argued inter human agreement upper bound automated sentiment classifiers eventually reach structure sentiments topics complex sentiment analysis monotonic respect sentence extension word substitution compare dog stay hotel dog stay hotel address issue rule based reasoning based approaches applied sentiment analysis including defeasible logic programming tree traversal rules applied syntactic parse tree extract topicality sentiment domain setting evaluation accuracy sentiment analysis principle agrees human judgments measured variant measures based precision recall target categories negative positive texts human raters typically agree 80 time inter rater reliability program achieves 70 accuracy classifying sentiment humans accuracy sound impressive program 100 time humans disagree 20 time disagree answer hand systems errors human assessors figures comparable instance trouble negations exaggerations jokes sarcasm typically easy handle human reader errors overly naive human utility practical commercial tasks sentiment analysis defined academic called question simple dimensional model sentiment negative positive yields actionable client worrying public discourse brand corporate reputation fit market evaluation sentiment analysis moved task based measures formulated representatives agencies market professionals focus replab evaluation data set content consideration question brand reputation rise social media blogs social networks fueled sentiment analysis proliferation reviews ratings recommendations forms online expression online opinion virtual currency businesses market products identify opportunities manage reputations businesses automate process filtering noise understanding conversations identifying relevant content actioning appropriately field sentiment analysis complicating matter rise anonymous social media platforms 4chan reddit democratizing publishing stage based democratizing data mining content published step aim accomplished teams universities focus understanding dynamics sentiment communities sentiment analysis cyberemotions project instance identified role negative emotions driving social networks discussions sentiment analysis algorithms simple terms express sentiment product service cultural factors linguistic nuances differing contexts extremely difficult string written simple pro sentiment humans disagree sentiment illustrates task computers shorter string harder short strings sentiment analysis microblogging twitter valid online indicator political sentiment tweets political sentiment demonstrates close correspondence parties politicians political positions indicating content twitter messages plausibly reflects offline political landscape sentiment analysis twitter capture public mood human reproduction cycles planetary scale public health relevance adverse drug reactions application recommender systems recommender sentiment analysis proven valuable technique recommender aims predict preference item target user mainstream recommender systems explicit data set collaborative filtering rating matrix content based filtering meta data items social networking services commerce websites users provide review comment feedback items user generated provide rich source user sentiment opinions numerous products items item reveal feature aspects item users sentiments feature item feature aspects play role meta data content based filtering valuable recommender features broadly mentioned users reviews crucial features influence user experience item meta data item producers consumers ignore features concerned users items common features user sentiments feature item receive sentiments users users sentiments features regarded multi dimensional rating score reflecting preference items based feature aspects sentiments extracted user generated hybrid recommender constructed types motivation recommend candidate item user motivation candidate item numerous common features user preferred items motivation candidate item receives sentiment features preferred item reasonable items features function utility items preferred user hand shared feature candidate items users positive sentiment negative sentiment evaluated item recommended user based motivations combination ranking score similarity sentiment rating constructed candidate item difficulty sentiment analysis applying sentiment analysis reviews feedback challenge spam biased reviews direction focused evaluating helpfulness review review feedback written helpful recommender review designed hinder sales target product harmful recommender written researchers short form user generated treated result short form reviews helpful form easier filter noise short form form growing bring proportionate increase features sentiments 
6491750	computerscience	sanli born august 24 1935 academician chinese academy engineering cae professor tsinghua university dean professor school engineering science shanghai university biography china’s pioneers science engineering domestic awards fields architecture organization achievement cluster based performance ziqian2000 organized professor sanli shanghai university grade award government shanghai 2001 addition president hong kong polytechnic university offered university’s outstanding scholar award 1995 professor published 12 books 100 papers key journals international conferences book risc single multiple issuing architecture special grade award excellent academic books conferred education commission professor deputy director technology consultant committee shanghai municipal government executive director chinese federation chief scientist performance computing project climbing program 1995 2000 served chairperson disciplines academic degree committee china council elected vice president president ieee mainland separately 1993 1994 1995 1996 elected times serve board directors euromicro european association 1984 1997 
6774211	computerscience	parallax barrier device image source liquid crystal display stereoscopic multiscopic image viewer wear 3d glasses normal lcd consists opaque layer series precisely spaced slits allowing eye set pixels creating sense depth parallax lenticular printing produces printed products lenticular lenses displays disadvantage method simplest form viewer positioned defined spot experience 3d versions technology addressed issue tracking adjust relative positions pixels barrier slits location user eyes allowing user experience 3d wide range positions disadvantage horizontal pixel count viewable eye halved reducing horizontal resolution image history principle parallax barrier independently invented auguste berthier published article stereoscopic pictures including idea illustrated diagram pictures purposely exaggerated dimensions interlaced image strips frederic ives exhibited functional autostereoscopic image 1901 ives selling specimen images novelties commercial 2000s sharp developed electronic flat panel application technology commercialization selling laptops 3d lcd screens displays sharp manufactured developed companies tridelity spatialview hitachi released 3d mobile phone japanese market distribution kddi 2009 fujifilm released fujifilm finepix real 3d w1 digital camera features built autostereoscopic lcd measuring diagonal nintendo implemented technology portable gaming consoles nintendo 3ds nintendo 3ds xl including previous console nintendo 3ds applications addition films games technique molecular modelling airport security navigation 2010 model range rover allowing driver view gps directions passenger watches movie nintendo 3ds hand held game console lg optimus 3d thrill smartphones htc evo 3d sharp galapagos smartphone series technology harder apply 3d television sets requirement wide range viewing angles toshiba 21 inch 3d display parallax barrier technology pairs images cover viewing angle 30 degrees design slits parallax barrier viewer left image pixels position left eye image pixels eye choosing geometry parallax barrier parameters optimised pixel – barrier separation parallax barrier pitch pixel aperture parallax barrier slit pixel separation closer parallax barrier pixels wider angle separation left images stereoscopic display left images hit left eyes views separated degrees pixel barrier separation derived snell’s law 1for angles 3therefore 4for typical auto stereoscopic display pixel pitch 65 micrometers eye separation 63mm viewing distance 30 cm refractive 52 pixel barrier separation 470 micrometers pitch pitch parallax barrier ideally roughly times pitch pixels optimum design perturbation barrier pitch compensates edges display viewed angle centre enables left images target eyes appropriately positions screen optimum pixel aperture barrier slit parallax barrier resolution display performance brightness crosstalk simulated fresnel diffraction theory simulations deduced slit light passing slits diffracted heavily causing crosstalk brightness display reduced slit light passing slit diffract wider slits create crosstalk geometric ray paths design suffers crosstalk brightness display increased slit trade crosstalk brightness barrier position note parallax barrier lcd pixels light slit passes left image pixel left direction vice versa produces basic parallax barrier techniques switching parallax barrier left eye pixels left image pixels true eye resolution display reduced advantageous parallax barrier switched 3d 2d image required method switching parallax barrier form liquid crystal material parallax barrier created image formed liquid crystal display time multiplexing increase resolution time multiplexing increasing resolution parallax barrier design eye resolution panel design requires display switch fast avoid image flicker images swap frame tracking barriers increased viewing freedom standard parallax barrier viewer position location left eye views left eyes ‘tracked 3d system’ viewing freedom increased considerably tracking position user adjusting parallax barrier left views directed user eyes correctly identification user viewing angle facing camera display image processing software recognise position user adjustment angle left views projected mechanically electronically shifting parallax barrier relative pixels crosstalk crosstalk interference exists left views 3d display display crosstalk eye image intended eye faintly superimposed perception crosstalk stereoscopic displays studied acknowledged presence levels crosstalk stereoscopic display detrimental effects crosstalk image include ghosting loss contrast loss 3d depth resolution viewer discomfort visibility crosstalk ghosting increases increasing contrast increasing binocular parallax image stereoscopic image contrast exhibit ghosting stereoscopic display image contrast measurement technique quantify level crosstalk 3d display involves measuring percentage light deviates view crosstalk typical parallax barrier based 3d eye position subjective tests carried determine image quality 3d images conclude quality 3d crosstalk countermeasures diffraction major crosstalk theoretical simulations diffraction predictor experimental crosstalk measurements emulsion parallax barrier systems simulations predict crosstalk caused parallax barrier highly dependent sharpness edges slits transmission barrier opaque transparent sharply moves barrier slit produces wide diffraction pattern crosstalk transition smoother diffraction spread crosstalk produced prediction consistent experimental soft edged barrier pitch 182 micrometers slit 48 micrometers transition opaque transmissive occurred region micrometers soft edged barrier crosstalk crosstalk harder edged barrier diffraction simulations parallax barrier slit edges transmission decreases micrometers region crosstalk image processing alternative crosstalk countermeasure figure principle crosstalk correction main types autostereoscopic displays parallax barrier 
6836612	computerscience	autoencoder type artificial neural network learn efficient data codings unsupervised manner aim autoencoder learn representation encoding set data typically dimensionality reduction training network ignore signal “noise reduction reconstructing learnt autoencoder generate reduced encoding representation close original input autoencoder concept learning generative models data powerful 2010s involved sparse autoencoders stacked deep neural networks purpose autoencoder learns compress data input layer short code uncompress code closely matches original data forces autoencoder engage dimensionality reduction learning ignore noise architectures stacked sparse autoencoder layers image recognition encoding layer learn encode easy features corners analyze layer output encode local features nose encode nose final encoding layer encodes image code matches concept cat decoding layers learn decode learnt code representation original form close alternative generative model manually fed codes learned cat flying attempt generate image flying cat flying cat structure architecturally simplest form autoencoder feedforward recurrent neural network single layer perceptrons multilayer perceptron mlp – input layer output layer hidden layers connecting – output layer nodes input layer purpose reconstructing inputs predicting target inputs autoencoders unsupervised learning models autoencoder consists encoder decoder defined transitions simplest hidden layer encoder stage autoencoder takes input maps image 11 referred code latent variables latent representation 12 element wise activation function sigmoid function rectified linear unit 13 weight matrix 14 bias vector decoder stage autoencoder maps 11 reconstruction 16 shape 17 19 decoder 20 encoder depending design autoencoder autoencoders trained minimise reconstruction errors squared errors 17 averaged input training set feature space 23 dimensionality input space 24 feature vector 25 regarded compressed representation input 26 hidden layers larger input layer autoencoder learn identity function useless experimental autoencoders learn features variations techniques exist prevent autoencoders learning identity function improve ability capture learn richer representations denoising autoencoder denoising autoencoders partially corrupted input training recover original undistorted input technique introduced specific approach representation representation robustly corrupted input recovering clean input definition implicit assumptions train autoencoder denoise data perform preliminary stochastic mapping 27 corrupt data 28 input normal autoencoder exception loss computed initial input 29 30 sparse autoencoder autoencoders originally invented 1980s initial versions difficult train encodings compete set set bits solved sparse autoencoding sparse autoencoder hidden units inputs hidden units allowed active time sparsity achieved additional terms loss function training comparing probability distribution hidden unit activations desired manually zeroing strongest hidden unit activations referred sparse autoencoder variational autoencoder vae variational autoencoder models inherit autoencoder architecture strong assumptions distribution latent variables variational approach latent representation learning additional loss component specific training algorithm called stochastic gradient variational bayes sgvb assumes data generated directed graphical model 31 encoder learning approximation 32 posterior distribution 33 34 35 denote parameters encoder recognition model decoder generative model objective variational autoencoder form 37 stands kullback–leibler divergence prior latent variables set centred isotropic multivariate gaussian 38 alternative configurations considered contractive autoencoder cae contractive autoencoder adds explicit regularizer objective function forces model learn function robust slight variations input values regularizer corresponds frobenius norm jacobian matrix encoder activations respect input final objective function form concrete autoencoder concrete autoencoder variation standard autoencoder architecture designed discrete feature selection standard autoencoder learns latent representation combination input features concrete autoencoder enforces latent space consist features user concrete autoencoder continuous relaxation categorical distribution gradients pass feature selector layer standard backpropagation learn optimal subset input features minimize reconstruction loss relationship principal component analysis pca linear activations single sigmoid hidden layer optimal solution autoencoder principal component analysis pca weights autoencoder single hidden layer size 40 40 size input span vector subspace spanned 40 principal components output autoencoder orthogonal projection subspace autoencoder weights equal principal components orthogonal principal components recovered singular decomposition training training algorithm autoencoder summarized asan autoencoder trained variants backpropagation conjugate gradient method steepest descent effective fundamental backpropagation train networks hidden layers errors backpropagated layers minuscule insignificant network learn reconstruct average training data advanced backpropagation methods conjugate gradient method solve extent result slow learning process poor solutions remedied initial weights approximate final solution process finding initial weights referred pretraining stephen luttrell based rsre developed technique unsupervised training hierarchical organizing neural nets hidden layers equivalent deep autoencoders geoffrey hinton developed alternative pretraining technique training layered deep autoencoders method involves treating neighbouring set layers restricted boltzmann machine pretraining approximates solution backpropagation technique fine tune model takes deep belief network 
7174467	computerscience	connected component labeling alternatively connected component analysis blob extraction region labeling blob discovery region extraction algorithmic application graph theory subsets connected components uniquely labeled based heuristic connected component labeling confused segmentation connected component labeling vision detect connected regions binary digital images color images data dimensionality processed integrated image recognition human interaction interface connected component labeling operate variety blob extraction performed binary image thresholding step applicable gray scale color images blobs counted filtered tracked blob extraction distinct blob detection overview graph vertices connecting edges constructed relevant input data vertices required comparison heuristic edges connected neighbors algorithm traverses graph labeling vertices based connectivity relative values neighbors connectivity determined medium image graphs connected neighborhood connected neighborhood labeling stage graph partitioned subsets original recovered processed definition usage term connected components labeling ccl definition consistent academic literature connected components analysis cca varies terms terminology definition rosenfeld define connected components labeling “of labeled image positions connected component binary input image unique label shapiro define ccl operator “input binary image output symbolic image label assigned pixel integer uniquely identifying connected component pixel belongs ”there consensus definition connected components analysis academic literature interchangeably ccl extensive definition shapiro “connected component analysis consists connected component labeling black pixels property measurement component regions decision definition connected components analysis expressed account “connected components analysis derives feature vector connected component binary input image feature vector connected component tuple composed functions component’s pattern ”algorithms algorithms discussed generalized arbitrary dimensions albeit increased time space complexity component time fast simple method implement understand based graph traversal methods graph theory short pixel connected component connected pixels connected component labelled pixel image algorithm vincent soille watershed segmentation algorithm implementations exist linked list formed indexes pixels connected steps method defining linked list specifies depth breadth search application difference strategy simplest queue implemented singly linked list result depth search strategy assumed input image binary image pixels background foreground connected components foreground pixels desired algorithm steps written note pixels labelled queue queue pixel check neighbours add queue algorithm check neighbours foreground pixel check neighbours background pixels pass simple implement understand pass algorithm hoshen–kopelman algorithm iterates dimensional binary data algorithm passes image pass assign temporary labels record equivalences pass replace temporary label label equivalence class input data modified situ carries risk data corruption labeling maintained additional data structure connectivity checks carried checking neighbor pixels labels neighbor elements labels assigned north east north north west west current pixel assuming connectivity connectivity north west neighbors current pixel conditions checked determine label assigned current pixel connectivity assumed conditions check algorithm continues creates region labels key fast algorithm merging algorithm union data structure excellent performance keeping track equivalence relationships union essentially stores labels correspond blob disjoint set data structure easy remember equivalence labels interface method findset findset returns minimum label equivalent function argument initial labeling equivalence recording completed pass replaces pixel label equivalent disjoint set representative element faster scanning algorithm connected region extraction pass pass background classification specific data distinguish salient elements foreground background variable pass algorithm treat background region graphical pass algorithm array connected regions extracted connectivity based assign binary values elements graph values center elements graph elements values values graphs elements labels concepts confused pass labels generated total labels generated conditions highlighted label equivalence relationships generated array generated merging labels carried label region floods connected region distinct labels distinct labels final result color regions array pseudocode union algorithms implemented union sequential algorithm create region counterscan image assumed scanning left steps pass algorithm merged efficiency allowing single sweep image multi pass algorithms exist linear time relative image pixels 1990s considerable parallelizing connected component algorithms image analysis applications bottleneck sequentially processing pixel algorithm arises extensive cuda matlab code component time algorithm algorithm time algorithm depends size image foreground time complexity comparable pass algorithm foreground covers image time complexity memory access structured pass algorithm increase time practice performance evaluation decades approaches connected component labeling proposed compared data yacclabhardware architectures emergence fpgas capacity perform complex image processing tasks led performance architectures connected component labeling architectures utilize single pass variant algorithm limited memory resources fpga types connected component labeling architectures process image pixels parallel enabling throughput processing latency achieved 
7221768	computerscience	gigapan systems global privately held technology company hardware software services create share resolution interactive gigapixel panoramic images company headquartered portland oregon history gigapan systems founded 2008 collaborative project carnegie mellon university nasa’s ames center support google original gigapan robotic hardware software devised nasa mars spirit opportunity rovers capture definition panoramas mars development team led randy sargent senior systems scientist carnegie mellon west nasa ames center moffett field calif illah nourbakhsh associate professor robotics carnegie mellon pittsburgh project grown independent company offering solutions capturing gigapixel images technology gigapan systems combines definition images panoramas sharing tagging zooming capabilities company offers solution shooting viewing exploring resolution gigapixel images single gigapan includes 
7309022	computerscience	nearest neighbor search nns form proximity search optimization finding set closest closeness typically expressed terms dissimilarity function objects larger function values formally nearest neighbor nn search defined set space query  ∈  closest donald knuth art programming 1973 called post office referring application assigning residence nearest post office direct generalization nn search closest commonly metric space dissimilarity expressed distance metric symmetric satisfies triangle inequality common dimensional vector space dissimilarity measured euclidean distance manhattan distance distance metric dissimilarity function arbitrary asymmetric bregman divergences triangle inequality hold applications nearest neighbor search arises numerous fields application including methods solutions nns proposed quality algorithms determined time complexity queries space complexity search data structures maintained informal observation referred curse dimensionality purpose exact solution nns dimensional euclidean space polynomial preprocessing polylogarithmic search time exact methods linear search simplest solution nns compute distance query database keeping track algorithm referred naive approach running time dn cardinality dimensionality search data structures maintain linear search space complexity storage database naive search average outperform space partitioning approaches dimensional spaces space partitioning 1970s branch bound methodology applied euclidean space approach spatial spatial access methods space partitioning methods developed solving nns simplest tree iteratively bisects search space regions parent region queries performed traversal tree root leaf evaluating query split depending distance query neighboring branches hits evaluated constant dimension query time average complexity log  randomly distributed worst complexity alternatively tree data structure designed support nearest neighbor search dynamic context efficient algorithms insertions deletions tree trees yield nearest neighbors euclidean distance distances metric space branch bound approach metric trees examples include vp tree bk tree set dimensional space bsp tree query space solution finding nearest cloud query description algorithm strictly speaking exist unique practice care finding subset cloud exist shortest distance query idea branching tree guess closest cloud resides space query heuristic recursively trouble solving guessed space compare distance returned result shortest distance query partitioning plane distance query closest exist space searched distance returned earlier result search space trouble solving space compare result result return proper result performance algorithm nearer logarithmic time linear time query cloud distance query closest cloud nears algorithm perform query key correct result approximation methods approximate nearest neighbor search algorithm allowed return distance query times distance query nearest appeal approach approximate nearest neighbor exact distance measure accurately captures notion user quality differences distance matter greedy search proximity neighborhood graphs proximity graph methods hnsw considered current art approximate nearest neighbors search methods based greedy traversing proximity neighborhood graphs 2in uniquely vertex search nearest neighbors query set takes form searching vertex graph basic algorithm greedy search search starts enter vertex computing distances query vertex neighborhood vertex minimal distance distance query selected vertex query current element algorithm moves selected vertex enter algorithm stops reaches local minimum vertex neighborhood vertex closer query vertex idea proximity neighborhood graphs exploited multiple publications including seminal paper arya mount voronet plane raynet metrized hnsw algorithms spaces distance function preceded pioneering paper toussaint introduced concept relative neighborhood graph locality sensitive hashing locality sensitive hashing lsh technique space buckets based distance metric operating close chosen metric mapped bucket probability nearest neighbor search spaces intrinsic dimension cover tree theoretical bound based dataset doubling constant bound search time 12 log  expansion constant dataset projected radial search special data dense 3d map geometric projection geometry sensing technique dramatically simplify search approach requires 3d data organized projection dimensional grid assumes data spatially smooth neighboring grid cells exception object boundaries assumptions valid dealing 3d sensor data applications surveying robotics stereo vision hold unorganized data practice technique average search time nearest neighbor applied real stereo vision data vector approximation files dimensional spaces tree indexing structures useless increasing percentage nodes examined speed linear search compressed version feature vectors stored ram prefilter datasets final candidates determined stage uncompressed data disk distance calculation compression clustering based search file approach special compression based search feature component compressed uniformly independently optimal compression technique multidimensional spaces vector quantization vq implemented clustering database clustered promising clusters retrieved huge gains file tree based indexes sequential scan observed note parallels clustering lsh variants numerous variants nns nearest neighbor search ε approximate nearest neighbor search nearest neighbors nearest neighbor search identifies nearest neighbors query technique commonly predictive analytics estimate classify based consensus neighbors nearest neighbor graphs graphs connected nearest neighbors approximate nearest neighbor applications acceptable retrieve guess nearest neighbor algorithm guarantee return actual nearest neighbor return improved speed memory savings algorithm nearest neighbor majority depends dataset queried algorithms support approximate nearest neighbor search include locality sensitive hashing bin balanced box decomposition tree based search nearest neighbor distance ratio nearest neighbor distance ratio apply threshold direct distance original challenger neighbor ratio depending distance previous neighbor cbir retrieve pictures query similarity local features involved matching fixed radius neighbors fixed radius neighbors efficiently euclidean space fixed distance data structure distance fixed query arbitrary nearest neighbors applications entropy estimation data nearest neighbor achieved running nearest neighbor search improved strategy algorithm exploits redundancy queries produce efficient search simple distance tells distance calculation reused queries fixed dimension semi definite positive norm including lp norm space nearest neighbour  log  time nearest neighbours  log  time 
7528959	computerscience	peptide computing form computing peptides molecular biology traditional silicon based technologies basis computational model affinity antibodies peptide sequences dna computing parallel interactions peptide sequences antibodies model solve complete hamiltonian path hpp versions set cover complete solved computational model model computation computationally universal turing complete model computation critical advantages dna computing instance dna building blocks peptides building blocks peptide antibody interactions flexible respect recognition affinity interaction dna strand reverse complement dna computing model practically realized main limitation availability specific monoclonal antibodies required model 
7543392	computerscience	industrial pc intended industrial purposes production services form factor nettop server rack industrial pcs dependability precision standards expensive consumer electronics complex instruction sets x86 reduced instruction sets arm history ibm released 5531 industrial 1984 arguably industrial pc ibm 7531 industrial version ibm pc released 21 1985 industrial source offered 6531 industrial 1985 proprietary 4u rackmount industrial based clone ibm pc motherboard applications industrial pcs process control data acquisition industrial pc simply control distributed processing environment software custom written application shelf package twincat ware labtech notebook labview provide base level programming analog devices exclusive sales oem european industrial market macsym 120 combined ibm 5531 macbasic multitasking basic running cpm digital analog digital cards plugged pc extension rack mac120 powerful easy controller plant applications application simply require serial port offered motherboard expansion cards installed provide analog digital specific machine interface expanded communications ports required application industrial pcs offer features consumer pcs terms reliability compatibility expansion options term supply industrial pcs typically characterized manufactured volumes office pcs common category industrial pc 19 inch rackmount form factor industrial pcs typically cost considerably comparable office style computers performance single board computers backplanes industrial pc systems majority industrial pcs manufactured cots motherboards subset industrial pcs panel pc display typically lcd incorporated enclosure motherboard electronics typically panel mounted incorporate touch screens user interaction offered cost versions environmental sealing heavier duty models sealed ip67 standards waterproof panel including models explosion proof installation hazardous environments construction features virtually industrial pcs share underlying design philosophy providing controlled environment installed electronics survive rigors plant floor electronic components selected ability withstand operating temperatures typical commercial components 
7894099	computerscience	robotics developer studio rds mrds windows based environment robot control simulation aimed academic hobbyist commercial developers handles wide variety robot hardware requires windows operating rds based ccr concurrency coordination runtime based concurrent library implementation managing asynchronous parallel tasks technique involves message passing lightweight services oriented runtime dss decentralized software services orchestration multiple services achieve complex behaviors features include visual programming tool visual programming language creating debugging robot applications based windows based interfaces 3d simulation including hardware acceleration easy access robot sensors actuators primary programming language robotics developer studio includes support packages add services suite include soccer simulation sumo competition community developed maze simulator program create worlds walls explored virtual robot set services opencv additional packages hosted codeplex search robotics studio materials components main components rds ccr dss separately commercial applications require levelof concurrency distributed multiple nodes network package called ccr dss toolkit tools tools develop mrds application graphical environment visual programming language vpl command tools deal visual studio projects express version 3d simulation tools robotics future robotics developer studio updated patched version released march 2012 september 22 2014 restructuring plan robotics division suspended tweet ashley feniello principal developer robotics division msr highly mrds updated forum mvps offer limited support 
8057325	computerscience	tech challenge ftc designed students grades 7–12 compete head head designing building programming robot compete alliance format teams robot kit programmed java mit app inventor android programming systems teams guidance coaches mentors volunteers required develop strategy build robots based innovative sound engineering principles awards competition community outreach design real accomplishments history tech challenge grew existing robotics competition ifi robovation platform radioshack innovation collaborated develop improved version ifi robovation kit kit upgraded called vex robotics design 2008 season pitsco developed platform nxt brick additional hardware structural framework tetrix 2005–06 piloted vex challenge potential program pilot season brought 130 teams compete regional tournaments scale teams participated fvc tournament championship april 2006 april 29 2006 board directors voted extend fvc 2006–2007 season summer 2007 seasons vex challenge announced program renamed tech challenge 2015 2016 ftc season nxt bricks robot controller replaced android phones running android kitkat qualcomm snapdragon 410 chips competition advancement level competition tech challenge achieved winning field 33 winning awards listed judging 66 schedule september announces game challenge ftc teams kickoff frc hip day robot finished teams robots competitions idea akin real scenarios teams afforded opportunity creation field uncover repair competition time competitions teams encouraged constantly robots qualifying tournaments regional championships occur october march teams allowed register qualifying tournaments jersey hold league meets sporting events teams advancing united 2013 14 2017–18 super regional championship tournaments held march april championships occurring late april starting 2018 19 ftc season super regional championships occur teams advance local championships championships houston detroit matches competition days matches varies based teams competing matches completely random alliances matches teams assigned red alliance blue alliance parties involved match choose programs match drivers touch gamepad controllers match autonomous period period driver controlled period match completely driver controlled final 30 match drivers attempt park scoring zone complete tasks game period match winning alliance receives qualifying losing alliance receives gracious professionalism core tech challenge promotes embodied phrase gracious professionalism events official ftc events qualifying championship tournaments unofficial events scrimmage tournaments based performance regional championships teams invited championship based predetermined advancement criteria winners qualifying tournaments invited championship tournaments 2017 18 winners championship tournaments invited super regional tournaments winning alliances championships declared invited participate festival champions manchester hampshire determine ftc champion january 2018 ftc announced super regionals abolished 2017 2018 season ftc teams attend championship increased 128 160 starting 2019 teams advance level competition based advancement criteria laid game manual advancement criteria changed 2015 2016 season add criteria winning alliance 2nd team selected 13 finalist alliance 2nd team selected shifting successive criteria position awards addition winning finalist alliances receiving recognition field performance awards official championship qualifying tournaments based judging criterion including engineering notebook team interview observation field performance competition themes challenges based themes 
8190902	computerscience	data mining anomaly detection outlier detection identification rare items events observations raise suspicions differing majority data typically anomalous items translate bank fraud structural defect medical errors anomalies referred outliers novelties noise deviations exceptions context abuse network intrusion detection objects rare objects unexpected bursts activity pattern adhere common statistical definition outlier rare object outlier detection methods unsupervised methods fail data aggregated appropriately cluster analysis algorithm detect micro clusters formed patterns broad categories anomaly detection techniques exist unsupervised anomaly detection techniques detect anomalies unlabeled data set assumption majority instances data set normal instances fit remainder data set supervised anomaly detection techniques require data set labeled normal abnormal involves training classifier key difference statistical classification inherent unbalanced nature outlier detection semi supervised anomaly detection techniques construct model representing normal behavior normal training data set likelihood instance generated learnt model applications anomaly detection applicable variety domains intrusion detection fraud detection fault detection health monitoring event detection sensor networks detecting ecosystem disturbances preprocessing remove anomalous data dataset supervised learning removing anomalous data dataset statistically increase accuracy popular techniques anomaly detection techniques proposed literature popular techniques performance methods depends lot data set parameters methods systematic advantages compared data sets parameters application data security anomaly detection proposed intrusion detection systems ids dorothy denning 1986 anomaly detection ids accomplished thresholds statistics soft computing inductive learning types statistics proposed 1999 included profiles users workstations networks remote hosts users programs based frequencies variances covariances standard deviations counterpart anomaly detection intrusion detection misuse detection 
8294490	computerscience	memory describes accesses memory cpu term refer memory generated compiler compile time memory generated cpu runtime modern microprocessors memory characterizes cpus ability reorder memory operations type execution memory reordering utilize bus bandwidth types memory caches memory banks modern uniprocessors memory operations executed program code single threaded programs operations executed execution hidden programmer – multi threaded environments interfacing hardware memory buses lead avoid memory barriers compile time memory compiler freedom sort operations compile time lead memory accesses compile time memory barrier implementation barriers prevent compiler reordering instructions compile time – prevent reordering cpu runtime evenforbids gcc compiler reorder read write commands forbids compiler reorder read write commands intrinsics runtime memory symmetric multiprocessing smp microprocessor systems memory consistency models smp systems cpussome x86 amd systems weaker memory orderingsparc memory modes hardware memory barrier implementation architectures smp support special hardware instruction flushing reads writes runtime compiler support hardware memory barriers compilers support builtins emit hardware memory barrier instructions 
8451124	computerscience	secom security company japan company founded 1962 operated nippon keibi hosho 1983 operations japan united kingdom australia zealand south korea taiwan china thailand vietnam malaysia singapore indonesia myanmar 
8471575	computerscience	minimum redundancy feature selection algorithm frequently method accurately identify characteristics genes phenotypes narrow relevance pairing relevant feature selection minimum redundancy maximum relevance mrmr feature selection basic pattern recognition machine learning identifies subsets data relevant parameters called maximum relevance subsets material relevant redundant mrmr attempts address removing redundant subsets mrmr variety applications cancer diagnosis speech recognition features selected scheme select features correlate strongest classification variable called maximum relevance selection heuristic algorithms sequential floating selections hand features selected mutually correlation classification variable scheme termed minimum redundancy maximum relevance mrmr selection powerful maximum relevance selection special correlation replaced statistical dependency variables mutual quantify dependency mrmr approximation maximizing dependency joint distribution selected features classification variable studies measures redundancy relevance measures study compared measures context biomedical images 
8638853	computerscience	design pipelined processors pipeline stall delay execution instruction resolve hazard decoding stage control unit determine decoded instruction reads register instruction execution stage writes condition holds control unit stall instruction clock cycle stalls instruction fetch stage prevent instruction stage overwritten instruction program prevent instructions fetched instruction decoding stage stalled pc register instruction fetch stage preserved prevent values preserved instruction causing conflict passed execution stage event called bubble analogy air bubble fluid pipe architectures execution stage pipeline performing action cycle bubble implemented feeding nop operation instructions execution stage bubble flushed examples timeline executions instructions stage pipeline reason delay fetching purple instruction cycle leads bubble created delaying instructions classic risc pipeline bubble inserted classic risc pipeline stages instruction fetch instruction decode execute mem memory access wb register write data mem stage 4th stage instruction required input stage 3rd stage instruction bubble stage 3rd stage access output previous stage adding bubble resolves time dependence propagate data time impossible 
8969589	computerscience	windows iot windows embedded family operating systems designed embedded systems subfamilies operating systems embedded devices targeting wide market ranging footprint real time devices sale pos devices kiosks windows embedded operating systems original equipment manufacturers oems users preloaded hardware addition volume license customers april 2018 released azure sphere operating designed iot applications running linux kernel history mid 1998 venturcom windows nt embedded product windows nt embedded start 1998 team developers project impala released 1999 windows nt embedded 0—a set tools database 250 components allowed developers windows nt time images embedded devices tools allowed oems embedded developers create components encapsulating binaries add seamlessly windows nt embedded runtimes limited functionality devices minimum time images mb featuring win32 api shortly release 2000 decided architecture product leveraging windows code windows embedded team formed leadership bruce beachman served product unit manager pum windows embedded – started recruiting engineers team set sights version decision development windows 2000 embedded start windows xp embedded product called whistler plans drawn team expanded started whistler embedded codenamed mantis component count risen 250 000—most device driver components feature set embedded tools enriched include basic version control component scripting expandability tools easier start blank slab hardware deploy embedded os easily august 26 2001 beta windows xp embedded released release planned initial team consisted target designer component designer suite version windows embedded suite team manager bombo sofa lead xpe team starting 2000 bruce beachman leadership shipped version windows embedded xpe devcon windows hardware conference 2001 2002 bruce beachman left peter wilson xpe team pum team merged windows deployment team released xpe sp1 devcon las vegas late 2003 iot family rebranded windows embedded windows iot starting release embedded versions windows enterprise windows iot enterprise based windows enterprise ltsc ltsb successor embedded industry embedded standard plain unlabeled retail client tablet tablet versions differing licensing mobile windows iot mobile based windows mobile successor embedded handheld mobile enterprise windows iot mobile enterprise adds arm support multiple user profiles advanced lockdown capabilities identical normal mobile version core windows iot core considered successor windows embedded compact maintains compatibility optimized cost industry devices charge devices raspberry pi hobbyist core pro windows iot core pro ability defer control updates licensed distributors identical normal iot core version embedded family compact windows embedded compact windows embedded ce windows ce version windows embedded computers embedded systems including consumer electronics devices set boxes video game consoles windows embedded compact modular real time operating specialized kernel mb memory platform builder tool add modules installation image create custom installation depending device windows embedded compact arm mips superh x86 processor architectures specialized version windows embedded compact windows mobile mobile phones customized image windows embedded compact specialized modules mobile phones windows mobile variants windows mobile classic pocket pc windows mobile standard smartphones windows mobile professional pda pocket pc phone edition windows mobile automotive communication entertainment systems automobiles modified versions windows mobile portable media centers 2010 windows mobile replaced windows phone based windows embedded compact compatible previous products windows embedded compact 2013 real time operating runs arm x86 derivatives architectures included framework ui framework source drivers services modules standard windows embedded standard brand windows embedded operating systems designed provide enterprises device manufacturers freedom choose capabilities industry devices intelligent solutions intended build atms devices healthcare manufacturing industries creating industry specific devices brand consists windows nt embedded windows xp embedded windows embedded standard 2009 wes09 windows embedded standard windows embedded standard win32 api windows embedded standard 2009 includes silverlight framework internet explorer windows media player 11 rdp network access protection baseline security analyzer support managed windows server update services center configuration manager windows embedded standard based windows codenamed windows embedded quebec windows embedded standard includes windows vista windows features aero superfetch readyboost windows firewall windows defender address space layout randomization windows presentation foundation silverlight windows media center packages ia 32 x64 versions released 2010 larger minimum footprint 300 mb compared 40 mb xpe requires product activation windows embedded standard released april 27 2010 windows embedded standard released march 20 2013 embedded systems fes divided brands fes products binary identical versions oses retail licensed exclusively embedded devices ia 32 x64 processors pro windows embedded pro windows embedded enterprise brand consists server fes products including windows nt workstation windows 2000 professional windows xp professional windows vista business ultimate windows professional ultimate windows pro windows pro renamed windows embedded enterprise windows embedded pro starting windows embedded pro server windows embedded server brand consists fes server products including server server sql server storage server dpm server isa server uag server tmg server unified data storage server including 2000 2003 2003 r2 2004 2005 2006 2007 2008 2008 r2 2012 2012 r2 industry windows embedded industry brand windows embedded operating systems industry devices sale systems brand limited windows embedded service operating released 2006 based windows xp embedded updated version windows embedded service named windows embedded posready 2009 windows embedded posready based windows sp1 released 2011 succeeded posready 2009 changed product windows embedded posready windows embedded industry released windows embedded industry april 2013 industry october 2013 navready windows embedded navready called navigation ready plug component windows ce building portable handheld navigation devices automotive windows embedded automotive auto windows ce automotive windows automotive windows mobile automotive embedded operating based windows ce systems automobiles release windows embedded automotive announced october 19 2010 handheld january 2011 announced windows embedded handheld operating compatibility windows mobile enterprise handheld device targeting retailers delivery companies companies rely handheld computing windows embedded handheld retains compatibility legacy windows mobile applications windows embedded handheld released manufacturing april 23 2014 simply windows embedded handheld we8h prior release designed generation windows embedded handheld business handheld devices built windows phone compatibility windows embedded handheld devices released manufactured bluebird honeywell panasonic listed 
9651443	computerscience	field mathematical modeling radial basis function network artificial neural network radial basis functions activation functions output network linear combination radial basis functions inputs neuron parameters radial basis function networks including function approximation time series prediction classification control formulated 1988 paper broomhead lowe researchers royal signals radar establishment network architecture radial basis function rbf networks typically layers input layer hidden layer linear rbf activation function linear output layer input modeled vector real output network scalar function input vector bywhere neurons hidden layer center vector neuron weight neuron linear output neuron functions depend distance center vector radially symmetric vector radial basis function basic form inputs connected hidden neuron norm typically euclidean distance mahalanobis distance appears perform radial basis function commonly gaussianthe gaussian basis functions local center vector sense thati changing parameters neuron input values center neuron mild conditions shape activation function rbf networks universal approximators compact subset 11 rbf network hidden neurons approximate continuous function closed bounded set arbitrary precision parameters 12 13 14 determined manner optimizes fit 15 data normalized normalized architecture addition unnormalized architecture rbf networks normalized mapping iswhereis normalized radial basis function theoretical motivation normalization theoretical justification architecture stochastic data flow assume stochastic kernel approximation joint probability densitywhere weights 19 20 exemplars data require kernels normalizedandthe probability densities input output spaces areandthe expectation input 24 iswhereis conditional probability 27 conditional probability joint probability bayes theoremwhich yieldsthis becomeswhen integrations performed local linear models convenient expand architecture include local linear models architectures andin unnormalized normalized 33 weights determined linear terms result writtenwhereandin unnormalized andin normalized 38 kronecker delta function defined astraining rbf networks typically trained pairs input target values 40 41 step algorithm step center vectors rbf functions hidden layer chosen step performed centers randomly sampled set examples determined clustering note step unsupervised step simply fits linear model coefficients 43 hidden layer outputs respect objective function common objective function regression function estimation squares function wherewe explicitly included dependence weights minimization squares objective function optimal choice weights optimizes accuracy fit occasions multiple objectives smoothness accuracy optimized optimize regularized objective function aswhereandwhere optimization maximizes smoothness 49 regularization parameter optional backpropagation step performed fine tune rbf parameters interpolation rbf networks interpolate function 50 values function finite 51 52 centers radial basis functions evaluating values basis functions 53 weights solved equationit interpolation matrix equation singular 52 distinct weights 56 solved simple linear algebra 58 function approximation purpose perform strict interpolation function approximation classification optimization complex obvious choice centers training typically phases fixing centers weights justified nature linear hidden neurons linear output neuron training basis function centers basis function centers randomly sampled input instances orthogonal square learning algorithm clustering samples choosing cluster centers rbf widths fixed proportional maximum distance chosen centers pseudoinverse solution linear weights centers 59 fixed weights minimize error output computed linear pseudoinverse solution entries values radial basis functions evaluated 61 62 existence linear solution multi layer perceptron mlp networks rbf networks explicit minimizer centers fixed gradient descent training linear weights training algorithm gradient descent gradient descent training weights adjusted time step moving direction gradient objective function allowing minimum objective function 64 learning parameter training linear weights 65 algorithm becomesin unnormalized andin normalized local linear architectures gradient descent training isprojection operator training linear weights training linear weights 65 70 algorithm becomesin unnormalized andin normalized andin local linear basis function projection operator training reduces newton method examples logistic map basic properties radial basis functions illustrated simple mathematical map logistic map maps unit interval generate convenient prototype data stream logistic map explore function approximation time series prediction control theory map originated field population dynamics prototype chaotic time series map chaotic regime bywhere time time parabolic function time equation represents underlying geometry chaotic time series generated logistic map generation time series equation examples illustrate inverse identification underlying dynamics fundamental equation logistic map exemplars time series goal estimatefor function approximation unnormalized radial basis functions architecture iswheresince input scalar vector input dimension choose basis functions size training set 100 exemplars generated chaotic time series weight 78 constant equal weights 79 exemplars time series weights 12 trained projection operator training learning rate 82 training performed pass 100 training rms error 15 normalized radial basis functions normalized rbf architecture iswhereagain choose basis functions size training set 100 exemplars generated chaotic time series weight 78 constant equal weights 79 exemplars time series weights 12 trained projection operator training learning rate 82 training performed pass 100 training rms error set 100 exemplars 084 unnormalized error normalization yields accuracy improvement typically accuracy normalized basis functions increases unnormalized functions input dimensionality increases time series prediction underlying geometry time series estimated previous examples prediction time series iteration comparison actual estimated time series displayed figure estimated times series starts time exact knowledge estimate dynamics update time series estimate time steps note estimate accurate time steps characteristic chaotic time series property sensitive dependence initial conditions common chaotic time series initial error amplified time measure divergence time series identical initial conditions lyapunov exponent control chaotic time series assume output logistic map manipulated control parameter 94 thatthe goal choose control parameter drive time series desired output 96 choose control paramer bewhereis approximation underlying natural dynamics learning algorithm bywhere 
10155033	computerscience	lee lee chia tung born 1939 shanghai china richard lee received degree department electrical engineering national taiwan university degree department electrical engineering science university california berkeley ncr 1963 1964 degree degree joined national institutes health bethesda maryland 1967 naval laboratory washington 1974 returned taiwan 1975 started teaching career national tsing hua university hsinchu taiwan university chairperson department science department electrical engineering 1984 dean college engineering 1988 appointed provost 1994 acting president national tsing hua university 1994 1999 president providence university shalu taiwan 1999 president national chi nan university puli taiwan professor chi nan university joint appointment departments department science department management department communication department medical science professor lee published roughly 80 papers prestigious academic journals editors journals 1989 ieee fellow received distinguished awards national science council republic china times ministry education engineering academic achievement award 1989 micronix chair professor professor lee chang coauthored book “symbolic logic mechanical theorem proving” published academic press 1973 book translated japanese russian italian 2005 mcgraw hill published “introduction design analysis algorithms strategic approach” coauthored tseng chang tsai addition publishing technical papers professor lee author short stories books “let wall down” “the stranger” “the curtain falls” “the bell rings again” popular taiwan “let wall down” sold 300 000 copies short period published book advising people pay attention basics entitled “let basics” lee professor science engineering department management department national chi nan university professor lee ieee fellow authored symbolic logic mechanical theorem proving translated japanese russian italian employment engineer national cash register company 1962–1963 senior fellow occupational safety health administration department labor october 1967 – june 1974 fellow institute navy aug 1974 – august 1975 chairman institute applied mathematics national tsing hua university august 1975 – july 1977 chairman institute management national tsing hua university august 1977 – july 1983 chairman department electronic engineering national tsing hua university august 1983 – july 1984 dean college engineering national tsing hua university august 1984 – july 1988 provost acting president national tsing hua university august 1988 – january 1994 president providence university february 1994 – june 1999 president national chi nan university july 1999 – november 1999 11 professor department science engineering national chi nan university december 1999 – academic awards 1989 ieee fellow distinguished awards national science council 1989 1993 academic engineering award ministry education 1989 outstanding award hou jin dui foundation 1993 1995 teco technology award teco technology foundation 1995 distinguished fellow national science council 1986 medal honor institute computing machinery 2001 chair professor macronix international 2001 heritage prize phi tau phi scholastic honor society 2004 honorary doctorate degree christian chung yuan university taiwan 2005 11 class economics medal honor ministry economics affairs 2005 
10175073	computerscience	3d graphics dimensional graphics contrast 2d graphics graphics dimensional representation geometric data cartesian stored purposes performing calculations rendering 2d images images stored viewing displayed real time 3d graphics rely algorithms 2d vector graphics wire frame model 2d raster graphics final rendered display graphics software 2d applications 3d techniques achieve effects lighting 3d 2d rendering techniques 3d graphics referred 3d models rendered graphic model contained graphical data file differences 3d model mathematical representation dimensional object model technically graphic displayed model displayed visually dimensional image process called 3d rendering graphical simulations calculations 3d printing 3d models rendered 3d physical representation model limitations accurate rendering match virtual model history william fetter credited coining term graphics 1961 boeing displays animation futureworld 1976 included animation human hand originally appeared 1972 experimental short animated hand created university utah students edwin catmull fred parke 3d graphics software appearing computers late 1970s earliest 3d art graphics set 3d graphics effects written kazumasa mitazawa released june 1978 apple overview 3d graphics creation falls basic phases modeling model describes process forming shape object common sources 3d models artist engineer originates 3d modeling tool models scanned real objects models produced procedurally physical simulation basically 3d model formed called vertices vertexes define shape form polygons polygon formed vertexes triangle polygon gon integrity model suitability animation depend structure polygons materials textures materials textures properties render engine render model unbiased render engine blender cycles model materials engine treat light hits surface textures material color color albedo map surface features bump normal map deform model displacement map layout animation rendering image objects laid scene defines spatial relationships objects including location size animation refers temporal description object moves deforms time popular methods include keyframing inverse kinematics motion capture techniques combination animation physical simulation specifies motion rendering rendering converts model image simulating light transport photo realistic images applying art style photorealistic rendering basic operations realistic rendering transport light scattering surfaces interact light step performed 3d graphics software 3d graphics api altering scene suitable form rendering involves 3d projection displays dimensional image dimensions 3d modeling cad software perform 3d rendering autodesk 3ds max blender exclusive 3d rendering software exists software 3d graphics software produces generated imagery cgi 3d modeling 3d rendering produces 3d models analytic scientific industrial purposes modeling 3d modeling software class 3d graphics software produce 3d models individual programs class called modeling applications modelers 3d modelers users create alter models 3d mesh users add subtract stretch change mesh desire models viewed variety angles simultaneously models rotated view zoomed 3d modelers export models files imported applications metadata compatible modelers importers exporters plugged read write data native formats applications 3d modelers features ray tracers rendering alternatives texture mapping facilities features support animation models generate motion video series rendered scenes animation aided design aided design software employ fundamental 3d modeling techniques 3d modeling software goal differs aided engineering aided manufacturing finite element analysis product lifecycle management 3d printing aided architectural design complementary tools producing video studios edit composite video programs adobe premiere pro final cut pro mid level autodesk combustion digital fusion shake match moving software commonly match live video generated video keeping sync camera moves real time graphics engines create cinematic production called machinima communities multitude websites designed educate support 3d graphic artists managed software developers content providers standalone sites communities seek advice post tutorials provide product reviews post examples differences types graphics distinction photorealistic 2d graphics graphics 3d based wireframe model 2d graphics 3d photorealistic effects achieved wireframe modeling indistinguishable final form graphic art software includes filters applied 2d vector graphics 2d raster graphics transparent layers visual artists visualize 3d effects manually render photorealistic effects filters pseudo 3d true 3d video games restricted projections dimensional environments isometric graphics virtual cameras fixed angles improve performance game engine stylistic gameplay concerns games pseudo 3d graphics contrast games 3d graphics restrictions true 3d 
10403335	computerscience	image warping process digitally manipulating image shapes portrayed image distorted warping correcting image distortion creative purposes morphing techniques equally applicable video overview image transformed pure warping mapped changing colors based mathematically function plane plane function injective original reconstructed function bijection image inversely transformed list meant partitioning methods categories generate image chosen methods distort estimate warping consecutive images optical flow estimation techniques news 2007 suspected pedophile swirl hide pictures raping sexually abusing children ages range teens interpol trivially reversed swirl swirling direction identify eventually locate thailand 
10416897	computerscience	image fusion process defined gathering multiple images inclusion images single single image informative accurate single source image consists purpose image fusion reduce data construct images understandable human machine perception vision multisensor image fusion process combining relevant images single image image informative input images remote sensing applications increasing availability space borne sensors motivation image fusion algorithms situations image processing require spatial spectral resolution single image equipment capable providing data convincingly image fusion techniques integration sources fused image complementary spatial spectral resolution characteristics standard image fusion techniques distort spectral multispectral data merging satellite imaging types images panchromatic image acquired satellites transmitted maximum resolution multispectral data transmitted coarser resolution times receiver station panchromatic image merged multispectral data convey methods exist perform image fusion basic pass filtering technique techniques based discrete wavelet transform uniform rational filter bank laplacian pyramid multi focus image fusion multi focus image fusion collect input images focus depths create output image ideally input images visual sensor network vsn sensors cameras record images video sequences applications vsn camera can’t perfect illustration including details scene limited depth focus exists optical lens cameras object located focal camera focused cleared image blurred vsn ability capture images depth focuses scene cameras data generated camera compared sensors pressure temperature sensors limitation limited band energy consumption processing time essential process local input images decrease transmission data aforementioned reasons emphasize multi focus images fusion multi focus image fusion process combines input multi focus images single image including input images it’s accurate explanation scene single input image image fusion multi sensor data fusion discipline demands formal solutions application situations image processing require spatial spectral single image remote sensing instruments capable providing design observational constraints solution data fusion standard image fusion methods image fusion methods broadly classified spatial domain fusion transform domain fusion fusion methods averaging brovey method principal component analysis pca ihs based methods fall spatial domain approaches spatial domain fusion method pass filtering based technique frequency details injected upsampled version images disadvantage spatial domain approaches produce spatial distortion fused image spectral distortion negative factor processing classification spatial distortion handled frequency domain approaches image fusion multiresolution analysis tool analysing remote sensing images discrete wavelet transform tool fusion fusion methods laplacian pyramid based curvelet transform based methods performance spatial spectral quality fused image compared spatial methods fusion images image fusion registered misregistration major source error image fusion image fusion methods remote sensing image fusion image fusion remote sensing application domains domain multi resolution image fusion commonly referred pan sharpening satellite imagery types imagesthe spot pan satellite resolution 10m pixel panchromatic data landsat satellite resolution 30m pixel multispectral images image fusion attempts merge images produce single resolution multispectral image standard merging methods image fusion based red green blue rgb intensity hue saturation ihs transformation usual steps involved satellite image fusion explanation pan sharpening photoshop applications image remote sensing readers refer pan sharpening pixel level fusion remote sensing applications medical image fusion image fusion common term medical diagnostics treatment term multiple images patient registered overlaid merged provide additional fused images created multiple images imaging modality combining multiple modalities magnetic resonance image mri computed tomography ct positron emission tomography pet single photon emission computed tomography spect radiology radiation oncology images serve purposes ct images ascertain differences tissue density mri images typically diagnose brain tumors accurate diagnosis radiologists integrate multiple image formats fused anatomically consistent images beneficial diagnosing treating cancer advent technologies radiation oncologists advantage intensity modulated radiation therapy imrt overlay diagnostic images radiation planning images accurate imrt target tumor volumes image fusion metrics comparative analysis image fusion methods demonstrates metrics support user sensitive image fusion methods tailored application categories image fusion metrics based theory features structural similarity human perception 
10520679	computerscience	architecture multithreading ability central processing unit cpu single core multi core processor execute multiple processes threads concurrently supported operating approach differs multiprocessing multithreaded application processes threads share resources single multiple cores include computing units cpu caches translation lookaside buffer tlb multiprocessing systems include multiple complete processing units cores multithreading aims increase utilization single core thread level parallelism instruction level parallelism techniques complementary combined systems multiple multithreading cpus cpus multiple multithreading cores overview multithreading paradigm popular efforts exploit instruction level parallelism stalled late 1990s allowed concept throughput computing emerge specialized field transaction processing difficult speed single thread single program systems multitasking multiple threads programs techniques improve throughput tasks result performance gains major techniques throughput computing multithreading multiprocessing advantages thread lot cache misses threads continue advantage unused computing resources lead faster execution resources idle single thread executed thread computing resources cpu instructions depend result running thread prevent resources idle disadvantages multiple threads interfere sharing hardware resources caches translation lookaside buffers tlbs result execution times single thread improved degraded thread executing frequencies additional pipeline stages accommodate thread switching hardware efficiency varies intel claims 30 improvement hyper threading technology synthetic program performing loop optimized dependent floating operations gains 100 speed improvement parallel hand hand tuned assembly language programs mmx altivec extensions performing data prefetches video encoder suffer cache misses idle computing resources programs benefit hardware multithreading degraded performance contention shared resources software standpoint hardware support multithreading visible software requiring application programs operating systems multiprocessing hardware techniques support multithreading parallel software techniques multitasking thread scheduling major multithreading types multithreading interleaved temporal multithreading coarse grained multithreading simplest type multithreading occurs thread runs blocked event create latency stall stall cache access chip memory hundreds cpu cycles data return waiting stall resolve threaded processor switch execution thread ready data previous thread arrived previous thread list ready threads conceptually cooperative multi tasking real time operating systems tasks voluntarily execution time wait type event type multithreading block cooperative coarse grained multithreading goal multithreading hardware support quick switching blocked thread thread ready achieve goal hardware cost replicate program visible registers processor control registers program counter switching thread thread hardware switches register set switch efficiently active threads active thread register set switch threads register hardware instantiated additional hardware support multithreading thread switching cpu cycle bringing performance improvements additional hardware thread behave executing sharing hardware resources threads minimizing software application operating support multithreading families microcontrollers embedded processors multiple register banks quick context switching interrupts schemes considered type block multithreading user program thread interrupt threads interleaved multithreading purpose interleaved multithreading remove data dependency stalls execution pipeline thread independent threads chance instruction pipelining stage output instruction pipeline conceptually preemptive multitasking operating systems analogy time slice active thread cpu cycle type multithreading called barrel processing staves barrel represent pipeline stages executing threads interleaved preemptive fine grained time sliced multithreading modern terminology addition hardware costs discussed block type multithreading interleaved multithreading additional cost pipeline stage tracking thread instruction processing threads executed concurrently pipeline shared resources caches tlbs larger avoid thrashing threads simultaneous multithreading advanced type multithreading applies superscalar processors normal superscalar processor issues multiple instructions single thread cpu cycle simultaneous multithreading smt superscalar processor issue instructions multiple threads cpu cycle recognizing single thread limited instruction level parallelism type multithreading exploit parallelism multiple threads decrease waste unused issue slots distinguish types multithreading smt term temporal multithreading denote instructions thread issued time addition hardware costs discussed interleaved multithreading smt additional cost pipeline stage tracking thread instruction processed shared resources caches tlbs sized active threads processed implementations include dec compaq ev8 completed intel hyper threading technology ibm power5 sun microsystems ultrasparc t2 cray xmt amd bulldozer zen microarchitectures implementation specifics major thread scheduler choose list ready threads execute maintain ready stalled thread lists subtopic thread priority schemes scheduler thread scheduler implemented totally software totally hardware hardware software combination type events thread switch cache misses inter thread communication dma completion multithreading scheme replicates software visible including privileged control registers tlbs enables virtual machines created thread thread operating processor hand user mode saved hardware required threads active time die cost 
10579736	computerscience	rapid prototyping techniques fabricate scale model physical assembly dimensional aided design cad data construction assembly 3d printing additive layer manufacturing technology methods rapid prototyping late 1980s produce models prototype wide range applications manufacture production quality desired typical unfavorable short economics economy encouraged online service bureaus historical surveys rp technology start discussions simulacra production techniques 19th century sculptors modern sculptors progeny technology produce exhibitions ability reproduce designs dataset rise issues rights interpolate volumetric data dimensional images cnc subtractive methods aided design – aided manufacturing cad cam workflow traditional rapid prototyping process starts creation geometric data 3d solid cad workstation 2d slices scanning device rapid prototyping data represent valid geometric model boundary surfaces enclose finite volume holes exposing interior fold object model valid 3d space determine uniquely lies boundary surface model cad post processors approximate application vendors internal cad geometric forms splines simplified mathematical form expressed data format common feature additive manufacturing stl stereolithography facto standard transferring solid geometric models sff machines motion control trajectories drive actual sff rapid prototyping 3d printing additive manufacturing mechanism prepared geometric model typically sliced layers slices scanned lines producing 2d drawing generate trajectory cnc toolpath mimicking reverse layer layer physical building process application 3d production systems electric cars built tested rapid prototyping commonly applied software engineering business models application architectures history 1970s joseph henry condon bell labs developed unix circuit design ucds automating laborious error prone task manually converting drawings fabricate circuit boards purposes development 1980s policy makers industrial managers forced note america dominance field machine tool manufacturing evaporated named machine tool crisis numerous projects sought counter trends traditional cnc cam begun rapid prototyping systems moved labs commercialized recognized developments international rapid prototyping companies luxury letting lead slip national science foundation umbrella national aeronautics space administration nasa department energy department commerce nist department defense defense advanced projects agency darpa office naval coordinated studies inform strategic planners deliberations report 1997 rapid prototyping europe japan panel report joseph beaman founder dtm corporation rapidtool pictured historical perspective technologies referred solid freeform fabrication recognize rapid prototyping 3d printing additive manufacturing swainson 1977 schwerzel 1984 polymerization photosensitive polymer intersection controlled laser beams ciraud 1972 considered magnetostatic electrostatic deposition electron beam laser plasma sintered surface cladding proposed unknown machines built hideo kodama nagoya municipal industrial institute publish account solid model fabricated photopolymer rapid prototyping 1981 technology manufacturing practice resolution strength output design verification mould production jigs outputs steadily advanced specification innovations constantly sought improve speed ability cope mass production applications dramatic development rp shares cnc freeware sourcing level applications constitute entire cad cam toolchain created community res device manufacturers hobbyists forays demanding laser effected device designs 
10711453	computerscience	short term memory lstm units units recurrent neural network rnn rnn composed lstm units called lstm network lstm common lstm unit composed cell input gate output gate forget gate cell remembers values arbitrary time intervals gates regulate flow cell lstm networks suited classifying processing predictions based time series data lags unknown duration events time series lstms developed deal exploding vanishing gradient encountered training traditional rnns relative insensitivity gap advantage lstm rnns hidden markov models sequence learning methods numerous applications history lstm proposed 1997 sepp hochreiter jürgen schmidhuber introducing constant error carousel cec units lstm deals exploding vanishing gradient initial version lstm block included cells input output gates 1999 felix gers introduced forget gate called “keep gate” lstm architecture enabling lstm reset 2000 felix gers jürgen schmidhuber peephole connections connections cell gates architecture additionally output activation function 2014 kyunghyun cho simplified variant called gated recurrent unit gru successes lstm achieved record natural language compression unsegmented connected handwriting recognition icdar handwriting competition 2009 lstm networks major component network achieved record 17 phoneme error rate classic timit natural speech dataset 2013 2016 major technology companies including google apple lstm fundamental components products google lstm speech recognition smartphone smart assistant allo google translate apple lstm quicktype function iphone siri amazon lstm amazon alexa 2017 researchers michigan university ibm cornell university published study knowledge discovery data mining kdd conference study describes neural network performs short term memory neural network 2017 reported reaching 95 recognition accuracy switchboard corpus incorporating vocabulary 165 000 approach dialog session based short term memory idea theory classic vanilla rnns track arbitrary term dependencies input sequences vanilla rnns computational practical nature training vanilla rnn propagation gradients propagated vanish tend explode tend infinity computations involved process finite precision rnns lstm units partially solve vanishing gradient lstm units gradients flow unchanged lstm networks suffer exploding gradient architecture architectures lstm units common architecture composed cell memory lstm unit regulators called gates flow lstm unit input gate output gate forget gate variations lstm unit gates gates gated recurrent units grus output gate intuitively cell responsible keeping track dependencies elements input sequence input gate controls extent flows cell forget gate controls extent remains cell output gate controls extent cell compute output activation lstm unit activation function lstm gates logistic function connections lstm gates recurrent weights connections learned training determine gates operate variants equations lowercase variables represent vectors matrices weights input recurrent connections subscript input gate output gate forget gate memory cell depending activation calculated vector notation cell lstm unit lstm unit cells lstm forget gate compact forms equations pass lstm unit forget gate initial values 11 12 operator 13 denotes hadamard product element wise product subscript 14 indexes time step variables superscripts 24 refer input features hidden units peephole lstm file peephole short term memory svg 300px thumbnail peephole lstm unit input output forget gates gates standard neuron feed multi layer neural network compute activation activation function weighted sum 33 34 represent activations input output forget gates time step 14 exit arrows memory cell gates 37 represent peephole connections peephole connections denote contributions activation memory cell time step 40 contribution 41 42 picture gates 37 calculate activations time step 14 33 34 activation memory cell time step 49 41 single left arrow exiting memory cell peephole connection denotes 42 circles 52 symbol represent element wise multiplication inputs circles curve represent application differentiable function sigmoid function weighted sum kinds lstms figure graphical representation lstm unit peephole connections peephole lstm peephole connections gates access constant error carousel cec activation cell 53 41 peephole convolutional lstm peephole convolutional lstm 56 denotes convolution operator training minimize lstm total error set training sequences optimization algorithm gradient descent combined backpropagation time compute gradients optimization process employed change weight lstm network proportion derivative error output layer lstm network respect weight gradient descent standard rnns error gradients vanish exponentially size time lag events 58 spectral radius 59 lstm units error values propagated output layer error remains lstm unit cell error carousel continuously feeds error lstm unit gates learn cut ctc score function applications stacks lstm rnns train connectionist temporal classification ctc rnn weight matrix maximizes probability label sequences training set input sequences ctc achieves alignment recognition applications applications lstm include 
10757955	computerscience	mobile internet device mid multimedia capable mobile device providing wireless internet access designed provide entertainment location based services personal business communication real time sharing filling niche smartphones tablet computers features mid started smartphones tablets term refer tablets archos internet tablets form factor mobile internet tablets archos lenovo image class included multiple operating systems windows ce windows android android tablet arm cortex cpu touchscreen intel mid platforms intel announced prototype mid intel developer forum spring 2007 beijing mid development kit sophia systems intel centrino atom announced april 2008 intel mid platforms based intel processor chipset consume power x86 derivatives platforms announced listed mccaslin platform 2007 intel generation mid platform codenamed mccaslin 90 nm intel a100 a110 processor codenamed stealey runs 600–800 mhz menlow platform 2008 march 2008 intel introduced intel atom processor brand family power processor platforms components designs enable mobile computing internet experience mobile power devices intel generation mid platform codenamed menlow 45 nm intel atom processor codenamed silverthorne 0 ghz controller hub codenamed poulsbo includes intel hd audio codenamed azalia platform initially branded centrino atom practice discontinued q3 2008 moorestown platform 2010 intel generation mid smartphone platform codenamed moorestown 45 nm intel atom processor codenamed lincroft 65 nm platform controller hub codenamed langwell memory controller graphics controller integrated processor northbridge removed processor communicates southbridge dmi bus interface medfield platform 2012 intel fourth generation mid smartphone platform codenamed medfield 32 nm intel atom soc codenamed penwell clover trail platform 2012 intel mid smartphone platform codenamed clover trail based clover trail tablet platform 32 nm intel atom soc codenamed cloverview merrifield platform 2013 intel generation mid smartphone platform codenamed merrifield 22 nm intel atom soc codenamed tangier moorefield platform 2014 intel sixth generation mid smartphone platform codenamed moorefield 22 nm intel atom soc codenamed anniedale morganfield platform intel seventh generation mid smartphone platform codenamed morganfield 14 nm intel atom soc codenamed broxton operating intel announced collaboration ubuntu create ubuntu mobile internet devices distribution ubuntu mobile ubuntu distribution provide rich internet experience users intel’s 2008 mobile internet device mid platform 
10766937	computerscience	mathematics theoretical science semiautomaton deterministic finite automaton inputs output consists set set Σ called input alphabet function Σ called transition function semiautomaton monoid called characteristic monoid input monoid transition monoid transition semiautomaton acts set viewed action monoid strings input alphabet Σ induced transformation semigroup books clifford preston 1967 acts called operands category theory semiautomata essentially functors transformation semigroups monoid acts transformation semigroup transformation monoid pair consisting set called set semigroup monoid functions transformations mapping functions sense element map functions transformation semigroup semigroup product defined function composition authors regard semigroup monoid synonyms semigroup identity element monoid semigroup identity element called unit notion functions acting set includes notion identity function applied set transformation semigroup monoid adding identity function acts monoid set exists multiplicative operationwhich satisfies propertiesfor unit monoid triple called simply hand 11 multiplication elements elements written 12 left defined withand denoted 15 closely transformation monoid elements functions elements monoid demand action 11 consistent multiplication monoid 17 hold arbitrary 11 function composition demand completely safe drop parenthesis monoid product action monoid set completely associative elements monoid represented strings letters science sense word string abstraction talk string operations eventually leads concept formal languages composed strings letters difference transformation monoid distinct elements monoid determine transformation demand happen essentially transformation monoid homomorphism acts 12 20 sharing monoid 21 homomorphism 22 map 23 thatfor 26 set homomorphisms commonly written 27 28 acts homomorphisms form category called semiautomata semiautomaton triple 29 30 set called input alphabet set called set transition function set finite set—it be— semiautomaton deterministic finite automaton 32 initial 33 set accept alternately finite machine output input semiautomaton induces monoid 34 monoid generated alphabet 30 superscript understood kleene star set finite strings composed letters 30 word 34 38 function defined recursively 49 setthe set 49 closed function composition 52 53 54 identity function function composition associative set 49 monoid called input monoid characteristic monoid characteristic semigroup transition monoid semiautomaton 29 properties set finite transition functions commonly represented transition tables construction transitions driven strings graphical depiction bruijn graphs set finite countable semiautomata underpin concept quantum finite automata set complex projective space 57 individual referred qubits transitions unitary matrices input alphabet 30 remains finite typical concerns automata theory remain play quantum semiautomaton simply defined triple 59 alphabet 30 letters unitary matrix 61 letter 46 stated quantum semiautomaton geometrical generalizations riemannian symmetric space 57 selections isometries transition functions syntactic monoid formal language isomorphic transition monoid minimal automaton accepting language 
11023142	computerscience	generalized hough transform ght introduced dana ballard 1981 modification hough transform principle template matching hough transform initially developed detect analytically defined shapes circle ellipse knowledge shape aim location orientation image modification enables hough transform detect arbitrary object model finding object model image solved finding model position image generalized hough transform finding model position transformed finding transformation parameter maps model image transformation parameter position model image determined original implementation ght edge define mapping orientation edge reference shape binary image pixels black white black pixel image black pixel desired pattern creating locus reference hough space pixel image votes reference maximum hough space reference pattern image maximum scanning hough space solving relaxed set equations black pixel history merlin farber hough algorithm desired curves analytically precursor ballard algorithm restricted translation account rotation scale merlin farber algorithm impractical real image data image edge pixels false positives repetitive pixel arrangements theory generalized hough transform generalize hough algorithm analytic curves ballard defines parameters generalized shape θ reference origin shape θ orientation sx describes orthogonal scale factors algorithm compute set parameters shape edge pixel data parameters equal status reference origin location terms template table called table edge pixel orientations computation additional parameters θ accomplished straightforward transformations table key generalization arbitrary shapes directional shape fixed reference parametric curve boundary pixels stored form table transform stage edge image properties looked table reference retrieved cell matrix called accumulator matrix incremented cell maximum ‘votes’ accumulator matrix existence fixed reference object image building table choose reference shape typically chosen shape boundary compute ɸ gradient direction – image store function ɸ notice ɸ values store ordinate differences fixed reference edge xc – xij yc yij radial distance angle rij αij table represent template object generation phase invertible localise object occurrences image object localization edge pixel image gradient ɸ increment accumulator array initialized maximum size image table entry indexed ɸ ɸ entry position reference bogus calculated object exists image maximum occur reference maxima correspond instances shape generalization scale orientation fixed orientation shape accumulator array dimensional reference ordinates search shapes arbitrary orientation θ scale parameters shape description accumulator array consists dimensions parameters θ table increment larger dimensional space orientations scales correspond easily computed transformations table denote table shape ɸ simple transformations table detect scaled rotated instances shape shape scaled transformation denoted ɸ ɸ vectors scaled object rotated θ transformation denoted tθ tθ rot ɸ θ mod2π θ indices incremented – θ modulo 2π vectors rotated θ property describing composition generalized hough transforms change reference choose reference ỹ ỹ modification table ɸ vector table alternate pairs edges pair edge pixels reduce parameter space table properties edge pixel defines surface dimensional accumulator space θ edge pixels orientations surface rotated respect θ surfaces intersect intersect correspond parameters shape theoretically image space reduce locus parameter space single difficulties finding intersection surfaces parameter space approach unfeasible composite shapes shape composite structure consisting subparts s1 s2 reference shapes s1 s2 y1 y2 yn scaling factor orientation θ generalized hough transform rs ɸ concern transform choice reference greatly affect accuracy overcome ballard suggested smoothing resultant accumulator composite smoothing template composite smoothing template composite convolution individual smoothing templates shapes improved accumulator maxima corresponds instances shape spatial decomposition observing global hough transform summation local hough transforms disjoint region heather yang proposed method involves recursive subdivision image images parameter space organized quadtree structure improved efficiency finding endpoints segments improved robustness reliability extracting lines noisy situations increased cost memory implementation implementation equations 3formula 4formula 5formula 6combining equations 7formula 8constructing tabledetection suppose object undergone rotation ϴ uniform scaling ballard suggested orientation edge decreasing cost computation efficient ght techniques suggested ght slope curvature local properties davis yam suggested extension merlin orientation scale invariant matching complement ballard include ballard utilization edge slope composite structures 
11068325	computerscience	focus stacking focal plane merging stacking focus blending digital image processing technique combines multiple images focus distances image depth field dof individual source images focus stacking situation individual images shallow depth field macro photography optical microscopy typical examples focus stacking landscape photography focus stacking offers flexibility computational technique images depths field generated post processing compared artistic merit scientific clarity focus stacking generation images physically impossible normal imaging equipment images nonplanar focus regions generated alternative techniques generating images increased flexible depth field include wavefront coding light field cameras technique starting focus stacking series images captured focal depths image sample focus images sample focus collectively data required generate image sample focus focus regions image detected automatically edge detection fourier analysis selected manually focus patches blended generate final image processing called stacking focal plane merging zedification french photography sufficient depth field challenging macro photography depth field shallower objects nearer camera object fills frame close entire depth focus depth field increased stopping aperture larger stopping blurring diffraction counteracts benefit focus reduces luminosity image focus stacking depth field images sharpest aperture effectively increased images illustrate increase dof achieved combining multiple exposures mars science laboratory mission device called mars hand lens imager mahli photos focus stacked microscopy microscopy numerical apertures desirable capture light sample numerical aperture equivalent shallow depth field magnification objective lenses shallower depth field 100× objective lens numerical aperture depth field μm observing sample limitations shallow depth field easy circumvent focusing sample effectively microscopy data complex 3d structure 2d focus stacking technique atomic resolution scanning transmission electron microscopy encounters difficulties specimen features larger depth field focal series depth focus reconstructed create single image focus 
11071487	computerscience	babylon dictionary translation program developed israeli company babylon software based city yehuda company established 1997 israeli entrepreneur amnon ovadia ipo considered israel download valley cluster software companies monetizing software downloads adware babylon includes house proprietary dictionaries community created dictionaries glossaries tool translation conversion currencies measurements time obtaining contextual program speech agent users hear proper pronunciation babylon developed 36 english based proprietary dictionaries 21 languages 2008–2009 babylon reported earnings 50 nis collaboration google 2010 2013 babylon infamous demonstrating questionable behavior typical malware babylon toolbar bundled babylon software identified browser hijacker easy install inadvertently unnecessarily difficult remove eventually lead google terminating agreement babylon 2013 history 1995 israeli entrepreneur amnon ovadia project online english–hebrew dictionary interrupt reading process result babylon founded 1997 launched version babylon 25 september 1997 company filed patent recognition translation 1998 launch babylon users germany brazil growing 420 000 users systems headed dan goldstein acquired mashov computers largest shareholder company 2000 product users spring 2000 babylon failed raise 20 private placement lost nis 15 stress collapse dot bubble 2001 babylon continued shedding money company costing parent company vision nis 2007 babylon publicly traded company ipo february 2007 israeli businessman noam lanir purchased controlling company sharing management majority shareholder reed elsevier company founder amnon ovadia globes magazine january 2011 lanir received offer stake foreign private equity fund valued company nis 248 70 dollars 2008–2009 babylon reported earnings nis 50 collaboration google 2010 google ireland signed extended cooperation agreement babylon provide online search pay advertising services 2011 babylon named seventh popular libya eighth algeria eleventh tunisia globes magazine noam lanir acquired control babylon nis 20 paper profit nis 200 investment 2012 alexa babylon ranked 45th popular ranked 494th product features single mouse button combination mouse button keyboard modifier babylon window appears providing translation definition clicked term babylon tool translation conversion currencies measurements time obtaining contextual babylon patented ocr technology single activation windows application word outlook excel internet explorer adobe reader activated babylon popup window displays translation definition solve incompatibility babylon ocr browsers extension users benefit capture2text app version 9v compatible babylon version dragging capture box browsers pop box appears babylon easily grasp babylon translation document translation languages supports integration office babylon enables translation word documents plain files offers database 700 sources 75 languages dictionaries encyclopedias babylon includes house proprietary dictionaries community created dictionaries glossaries ugc include technical dictionaries language monolingual dictionaries thesauri encyclopedias lexicons multitude languages indexed 400 categories covering arts business computers health law entertainment sports program speech agent users hear proper pronunciation babylon developed 36 english based proprietary dictionaries 21 languages english arabic simplified chinese traditional chinese czech danish dutch french german greek hebrew italian japanese korean norwegian polish portuguese russian spanish swedish turkish charge users software dictionaries comprise 60 000 200 000 terms phrases acronyms abbreviations enabled morphological engine facilitates recognition inflected forms single phrases forms terms include prefixes extensions supplies solution formats writing babylon linguistic department responsible extensive content database component babylon product malware issues august 2010 antivirus products identified software application adware identified adware win32 babylon intrusive behavior sixteen days 23 august 2010 announced babylon modified program categorized adware 2011 download started bundling babylon toolbar source packages nmap gordon lyon developer nmap criticized decision vice president download sean murphy released apology bundling software mistake apologize user developer communities unrest caused 2012 babylon search toolbar identified browser hijacker easy install inadvertently unnecessarily difficult remove toolbar listed unwanted application anti spyware software stopzilla spybot – search destroy users uninstall babylon searched support forums toolbar install computers add software users babylon search engine adds search engine sets default browser preferences user search engine difficult reverse 29 october 2013 google notified babylon intend renew cooperation agreement companies terminated 30 november 2013 google complaints received google chrome users claiming babylon toolbar damages browser user experience babylon google reconsidered decision 2014 
11282548	computerscience	mobile virtual private network mobile vpn mvpn vpn capable persisting sessions physical connectivity network attachment ip address mobile refers vpn change network attachment mvpn client mobile phone running wireless network mobile vpns environments workers application sessions times day connect wireless networks encounter gaps coverage suspend resume devices preserve battery life conventional vpn survive events network tunnel disrupted causing applications disconnect time fail computing device crash mobile vpns commonly public safety care hospital settings field service management utilities industries increasingly mobile professionals white collar workers comparison vpn types vpn maintains authenticated encrypted tunnel securely passing data traffic public networks typically internet vpn types ipsec vpns connections network endpoints remain fixed ssl vpns provide access browser commonly remote workers telecommuting workers business travelers makers mobile vpns draw distinction remote access mobile environments remote access user typically establishes connection fixed endpoint launches applications connect corporate resources logs mobile environment endpoint constantly instance users roam cellular networks wi access mobile vpn maintains virtual connection application times endpoint handling network logins manner transparent user functions functions common mobile vpns management mobile vpns offer additional mobile aware management security functions technology departments visibility control devices corporate premises connect networks direct control industries applications mobile vpns variety industries mobile workers access software applications telecommunications telecommunication mobile vpn solution data user mobility ensures secure network access predictable performance data user mobility defined uninterrupted connectivity theability stay connected communicate remote data network changing network access medium attachment 2001 huawei launched product named mvpn mvpn meaning industry sources term huawei product focused delivering seamless corporate phone users desktop phones mobile devices company advertised mvpn advantages standard phone 
11322600	computerscience	acoustic model automatic speech recognition represent relationship audio signal phonemes linguistic units speech model learned set audio recordings transcripts created audio recordings speech transcriptions software create statistical representations sounds word background modern speech recognition systems acoustic model language model represent statistical properties speech acoustic model models relationship audio signal phonetic units language language model responsible modeling word sequences language models combined ranked word sequences audio segment modern speech recognition systems operate audio chunks frames approximate duration 10ms frame raw audio signal frame transformed applying mel frequency cepstrum coefficients transformation commonly mel frequency cepstral coefficients mfcc input acoustic model features convolutional neural networks led improvements acoustic modeling speech audio characteristics audio encoded sampling rates samples – common 16 32 44 48 96 khz bits sample common bits 16 bits 24 bits 32 bits speech recognition engines acoustic model trained speech audio recorded sampling rate bits sample speech recognized telephony based speech recognition limiting factor telephony based speech recognition bandwidth speech transmitted standard land telephone bandwidth 64 kbit sampling rate 8 khz bits sample 8000 samples bits sample 64000 bit telephony based speech recognition acoustic models trained 8 khz bit speech audio files voice ip codec determines sampling rate bits sample speech transmission codecs sampling rate bits sample speech transmission improve sound quality necessitate acoustic models trained audio data matches sampling rate bits sample desktop based speech recognition speech recognition standard desktop pc limiting factor sound card sound cards record sampling rates 16 khz 48 khz audio bit rates 16 bits sample playback 96 khz rule speech recognition engine acoustic models trained speech audio data recorded sampling rates bits sample audio sampling rate bits sample slow recognition engine compromise desktop speech recognition current standard acoustic models trained speech audio data recorded sampling rates 16 khz 16bits sample 
11322771	computerscience	speech corpus spoken corpus database speech audio files transcriptions speech technology speech corpora create acoustic models speech recognition engine linguistics spoken corpora phonetic conversation analysis dialectology fields corpus database corpora plural corpus databases types speech corpora special speech corpora native speech databases speech foreign accent 
12064843	computerscience	memory level parallelism mlp term architecture referring ability pending multiple memory operations cache misses translation lookaside buffer tlb misses time single processor mlp considered form instruction level parallelism ilp ilp conflated superscalar ability execute instruction time processor intel pentium pro superscalar ability start executing microinstructions cycle handle cache misses 20 load microinstructions time machine superscalar mlp arguably machine ilp superscalar executes instruction time pipelined manner performs hardware prefetching software instruction level prefetching exhibits mlp multiple prefetches outstanding ilp multiple memory operations outstanding instructions instructions conflated operations multiprocessor multithreaded systems exhibit mlp ilp parallelism—but intra thread single process ilp mlp restrict terms mlp ilp refer extracting parallelism appears parallel single threaded code 
12087254	computerscience	boston dynamics american engineering robotics design company founded 1992 spin massachusetts institute technology headquartered waltham massachusetts boston dynamics wholly owned subsidiary japanese conglomerate softbank boston dynamics development bigdog quadruped robot designed military funding defense advanced projects agency darpa di guy software realistic human simulation company history american systems corporation contract naval air warfare center training systems division nawctsd replace naval training videos aircraft launch operations interactive 3d simulations featuring di guy characters company pioneer field robotics advanced domain marc raibert company president project manager spun company massachusetts institute technology 1992 13 december 2013 company acquired google subsidiary alphabet unknown price managed andy rubin departure google 2014 acquisition boston dynamics transferred di guy software product vt mÄk simulation software vendor based cambridge massachusetts june 2017 alphabet announced sale company japan softbank undisclosed sum products bigdog bigdog quadrupedal robot created 2005 boston dynamics conjunction foster miller jet propulsion laboratory harvard university concord field station funded darpa hopes serve robotic pack mule accompany soldiers terrain rough vehicles project shelved bigdog deemed loud combat wheels bigdog legs movement allowing surfaces defeat wheels called ambitious legged robot designed carry soldier traversing rough terrain inclines 35 degrees cheetah cheetah footed robot gallops august 2012 land speed record legged robots 2018 robot climb stairs independently developed robot cheetah mit biomimetic robotics lab 2014 jump obstacles running littledog littledog quadruped robot developed darpa boston dynamics bigdog boston dynamics littledog intended testbed institutions boston dynamics maintains robots darpa standard platform littledog legs powered electric motors legs range motion robot strong climbing dynamic locomotion gaits onboard pc level sensing actuator control communications littledog sensors measure joint angles motor currents body orientation foot ground contact control programs access robot boston dynamics robot api onboard lithium polymer batteries 30 minutes continuous operation recharging wireless communications data logging support remote operation data analysis littledog development funded darpa processing technology office petman petman protection ensemble mannequin bipedal device constructed testing chemical protection suits anthropomorphic robot moves dynamically real person ls3 legged squad support ls3 alphadog militarized version bigdog ruggedized military ability operate hot cold wet dirty environments atlas agile anthropomorphic robot atlas foot 183 cm bipedal humanoid robot based boston dynamics earlier petman humanoid robot designed variety search rescue tasks february 2016 boston dynamics published youtube video entitled atlas generation humanoid robot tall 175 cm head shorter original drc atlas video robot performing tasks difficult impossible previous generation humanoid robots video posted boston dynamics channel youtube dated 11 october 2018 titled parkour atlas robot easily running steps platform spotmini june 23 2016 boston dynamics revealed legged canine inspired spotmini weighs 25 kg 55 pounds lighter products february 2018 promotional video spotmini claw door robot reached youtube views video month spotmini persisting attempting door human interference viewers perceived robot creepy reminiscent kinds sci robots missions seek destroy 11 2018 ceo boston dynamics marc raibert techcrunch robotics session 2018 announced spotmini robot pre production preparing commercial availability 2019 boston dynamics highlights spotmini “quietest robot built company plans contract manufacturers build 100 spotminis commercial purposes starting scale production goal selling spotmini 2019 handle handle robot stands 5 ft 198 cm tall travels 9 mph 14 5 km jumps feet 122 cm vertically electric power operate electric hydraulic actuators range 15 miles 24 km battery charge handle dynamics balance mobile manipulation principles quadruped biped robots boston dynamics builds actuated joints complex 
12155912	computerscience	discriminative models referred conditional models class models statistical classification supervised machine learning discriminative classifier model depending observed data learning classification statistics approaches supervised learning categorized discriminative models generative models comparing generative models discriminative model assumptions distributions depends heavily quality data set labeled pictures dog rabbit discriminative models matching unlabeled picture labeled picture label class dog rabbit generative develop model output class label unlabeled picture assumption rabbits red eyes typical discriminative learning approaches include logistic regression support vector machine svm conditional random fields crfs undirected graph typical generative model approaches naive bayes gaussian mixture model definition generative modelling studies joint probability discriminative modeling studies 2or direct maps unobserved variable target class label depended observed variables training samples practical field object recognition 3is vector raw pixels features extracted image probabilistic framework modeling conditional probability distribution predicting note distinction conditional model discriminative model simply categorised discriminative model pure discriminative model conditional model conditional model models conditional probability distribution traditional discriminative model aims optimize mapping input trained samples typical discriminative modelling approaches approach based assumption training data set 10is output input 11 linear classifier intend function 12to simulate behavior observed training data set linear classifier method joint feature vector 13 decision function defined 14according memisevic interpretation 15 16 computes score measures computability input 3with potential output 19determines class score logistic regression loss function commonly decision theory conditional probability distribution 20 21is parameter vector optimizing training data reconsidered logistics regression model 22 withformula 23the equation logistic regression notice major distinction models introducing posterior probability posterior probability inferred parametric model maximize parameter equation 24it replaced log loss equation 25since log loss differentiable gradient based method optimize model global optimum guaranteed objective function convex gradient log likelihood represented 26where 27is expectation 28 method provide efficient computation relative classification support vector machine continuous differentiable alternative loss ’hinge loss’ defined equationformula 29the hinge loss measures difference maximal confidence classifier classes confidence correct class computing maximum wrong classes ’head start’ adding confidence result hinge loss confidence correct class confidence closest follow hinge loss differentiable rise tractable variant loss based learning hinge loss recast equivalent constrained optimization contrast generative model contrast approaches 30 class labels classification 31feature variables 32 training samples generative model takes joint probability input label predicts label 36 unknown variable 37 bayes rules discriminative models opposed generative models generate samples joint distribution observed target variables tasks classification regression require joint distribution discriminative models yield superior performance variables compute hand generative models typically flexible discriminative models expressing dependencies complex learning tasks addition discriminative models inherently supervised easily support unsupervised learning application specific details ultimately dictate suitability selecting discriminative generative model discriminative models generative models introducing posterior possibility maintain expected loss minimization result misclassification acquired discriminative model posterior probabilities 38 inferred parametric model parameters training data estimation parameters maximization likelihood distribution computation parameters hand generative models focus joint probability class posterior possibility considered bayes theorem 40 advantages disadvantages application repeated experiments logistics regression naive bayes applied models binary classification task discriminative learning asymptotic errors generative asymptotic errors faster ulusoy bishop joint comparison generative discriminative techniques object detection classification statement true model data data distribution correctly modeled generative model advantages advantages discriminative modeling compared advantages generative modeling optimizations applications advantages disadvantages modeling combining approaches modeling practice marras article joint discriminative generative model deformable model construction classification coauthors apply combination modelings classification models receive accuracy traditional approach kelm proposed combination modelings pixel classification article combining generative discriminative methods pixel classification multi conditional learning process extracting discriminative features prior clustering principal component analysis pca commonly discriminative approach contrast lda discriminative linear discriminant analysis lda efficient eliminating disadvantage list discriminative model combination multiple subtasks classification lda  provides solution reducing dimension beyerlein paper discriminative model combination discriminative model combination approach auto speech recognition helps optimize integration kinds models log linear posterior probability distribution combination aims minimizing empirical word error rate training samples article unified discriminative model query refinement guo partners unified discriminative model query refinement linear classifier accuracy rate experiment design generative model comparison unified model expected real application generative model perform poorest comparing models including models improvement types examples discriminative models machine learning include 
12555662	computerscience	active contour model called snakes framework vision introduced michael kass andrew witkin demetri terzopoulos delineating object outline noisy 2d image snakes model popular vision snakes applications object tracking shape recognition segmentation edge detection stereo matching snake energy minimizing deformable spline influenced constraint image forces pull object contours internal forces resist deformation snakes understood special technique matching deformable model image energy minimization dimensions active shape model represents discrete version approach advantage distribution model restrict shape range explicit domain learnt training set snakes solve entire finding contours images method requires knowledge desired contour shape depend mechanisms interaction user interaction level image understanding process image data adjacent time space motivation vision contour models boundaries shapes image snakes designed solve approximate shape boundary deformable model snakes adapt differences noise stereo matching motion tracking additionally method illusory contours image ignoring missing boundary compared classical feature extraction techniques snakes multiple advantages key drawbacks traditional snakes areenergy formulation simple elastic snake defined set internal elastic energy term external edge based energy term purpose internal energy term control deformations snake purpose external energy term control fitting contour image external energy combination forces image constraint forces introduced user 6the energy function snake sum external energy internal energy orinternal energy internal energy snake composed continuity contour smoothness contour expanded aswhere 12 13 user defined weights control internal energy function sensitivity stretch snake curvature snake control constraints shape snake practice weight 12 continuity term penalizes distances contour weight 13 smoothness term penalizes oscillations contour contour plate image energy energy image function features image common modification derivative methods features images images processed image 16 lines edges terminations image formulation energy image iswhere 18 19 20 weights salient features weights salient feature larger contribution image force functional functional intensity image represented asthe sign 18 determine attracted dark lines light lines smoothing noise reduction image functional appears asedge functional edge functional based image gradient implementation isa snake originating desired object contour erroneously converge local minimum scale space continuation avoid local minima achieved blur filter image reducing blur calculation progresses refine fit snake energy functional scale space continuation iswhere 26 gaussian standard deviation 27 minima function fall crossings offormula 28 define edges marr–hildreth theory termination functional curvature level lines smoothed image detect corners terminations image method 29 image smoothed bywith gradient angleunit vectors gradient directionand unit vectors perpendicular gradient directionthe termination functional energy represented asconstraint energy systems including original snakes implementation allowed user interaction guide snakes initial placement energy terms constraint energy 35 interactively guide snakes features optimization gradient descent initial guess snake energy function snake iteratively minimized gradient descent minimization simplest optimizations minimize snake energy iteration takes step negative gradient controlled step size 36 local minima gradient descent minimization implemented aswhere 38 force snake defined negative gradient energy field assuming weights 40 41 constant respect 42 iterative method simplified todiscrete approximation practice images finite resolution integrated finite time steps 44 discrete approximations practical implementation snakes energy function snake approximated discrete snake consequentially forces snake approximated asgradient approximation finite approximation method respect finite difference numerical instability discrete time introduction discrete time algorithm introduce updates snake moved minima attracted oscillations minima lead minima avoided tuning time step step size pixel image forces regions energy internal energies dominate update alternatively image forces normalized step image forces update snake pixel formulated aswhere 48 pixel size avoids dominating internal energies tuning time step numerical instability discrete space energies continuous image crossing exist pixel image snake oscillate pixels neighbor crossing oscillation avoided interpolation pixels nearest neighbor implementation pseudocode implements snakes method form syntaxhighlight lang matlab function snakes syntaxhighlight generateimageenergy written syntaxhighlight lang matlab function image generateimageenergy syntaxhighlight variants snakes default method snakes limitation corner convergence performs alternatives exist addresses issues default method trade offs listed gvf snake model gradient vector flow gvf snake model addresses issues snakes 2d gvf vector field 49 minimizes energy functionalwhere 51 controllable smoothing term solved solving euler equationsthis solved iteration steady result replaces default external force primary issue gvf smoothing term 51 rounding edges contour reducing 51 reduces rounding weakens smoothing balloon model balloon model addresses default active contour model balloon model introduces inflation term forces acting snakewhere 60 normal unitary vector curve 61 62 magnitude force 62 magnitude image normalization factor 64 64 forces image edges overcome inflation force issues balloon model diffusion snakes model diffusion snake model addresses sensitivity snakes noise clutter occlusion implements modification mumford–shah functional cartoon limit incorporates statistical shape knowledge default image energy functional replaced withwhere 68 based modified mumford–shah functionalwhere 70 piecewise smooth model image 71 domain 72 boundaries 73 defined aswhere 75 quadratic spline basis functions 76 control splines modified cartoon limit 77 valid configuration 68 functional 79 based training binary images contours controlled strength parameter 80 gaussian distribution control vectors 81 control vector 82 covariance matrix 83 quadratic energy corresponds gaussian probability isthe strength method relies strength training data tuning modified mumford–shah functional snakes require training data sets tunings geometric active contours geometric active contour geodesic active contour gac conformal active contours employs ideas euclidean curve shortening evolution contours split merge depending detection objects image models inspired level sets extensively employed medical image computing gradient descent curve evolution equation gac 86 halting function lagrange multiplier 87 curvature 88 unit normal form curve evolution equation dependent velocity normal direction rewritten equivalently eulerian form inserting level set function 89 followsthis simple powerful level set reformation enables active contours handle topology gradient descent curve evolution inspired tremendous progress fields numerical methods solve level set reformulation commonly level set method level set method popular tool implementing active contours wang chan argued curve evolution equations solved developments active contours address modeling regional properties incorporation flexible shape priors automatic segmentation statistical models combining local global features formulated lankton allen tannenbaum relations graph cuts graph cuts max flow min cut generic method minimizing form energy called markov random field mrf energy graph cuts method applied image segmentation outperforms level set method model mrf approximated mrf 
12637991	computerscience	sloan fellowships awarded annually alfred sloan foundation 1955 provide support recognition career scientists scholars fellowships initially awarded physics chemistry mathematics awards neuroscience 1972 economics 1980 science 1993 computational evolutionary molecular biology 2002 fellowships awarded 126 researchers yearly eligibility requirements foundation supportive scientists parents allowing extra time doctorate remain eligible award candidates sloan fellowships required hold equivalent chemistry physics mathematics science economics neuroscience computational evolutionary molecular biology interdisciplinary field regular faculty tenure track college university united canada completion equivalent nomination special circumstances military service change field child rearing involved held faculty appointment circumstances apply letter nomination provide explanation fellows expected stage careers strong evidence independent accomplishments candidates fields rank associate professor hold tenure strict requirements alfred sloan foundation welcomes nominations candidates meet traditional standards program encourages participation women underrepresented minority award recipients program 1955 43 fellows nobel prize 16 fields medal mathematics 
12733485	computerscience	inpainting process reconstructing lost deteriorated images videos museum valuable painting task carried skilled art conservator art restorer digital inpainting image interpolation video interpolation refers application sophisticated algorithms replace lost corrupted image data regions remove defects applications objectives applications technique photography cinema film restoration reverse deterioration cracks photographs scratches dust spots film infrared cleaning removing red eye stamped photographs removing objects creative technique replace lost blocks coding transmission images streaming video remove logos videos deep learning neural network based inpainting decensoring images methods painting inpainting rooted restoration images traditionally inpainting professional restorers underlying methodology computerized wide applications digital camera digitalization photos inpainting automatic process performed digital images scratch removing inpainting techniques applied object removal removal automatic modifications images videos observed applications image compression super resolution main 2d image inpainting algorithms literature structural inpainting texture inpainting combination techniques inpainting methods common undestroyed image gap structural inpainting structural inpainting geometric approaches filling missing region inpainted algorithms focus consistency geometric structure textural inpainting structural inpainting methods advantages disadvantages main structural inpainting methods restore texture texture repetitive pattern missing portion restored continuing level lines gap combined structural textural inpainting combined structural textural inpainting approaches simultaneously perform texture structure filling regions missing image image consist texture structure boundaries image regions accumulate structural complex phenomenon result blending textures art inpainting method attempts combine structural textural inpainting traditional method differential equations laplace equation dirichlet boundary conditions continuity seamless fit missing lies homogeneous portion object methods follow isophote directions image contour equal luminance inpainting investigations included exploration wavelet transform properties perform inpainting space frequency domain obtaining performance compared frequency based inpainting techniques model based inpainting bayesian approach missing fitted estimated combination models underlying images image data observed deterministic language led variational inpainting models manual methods include clone tool healing tool existing image restore damaged texture texture synthesis exemplar based image inpainting attempts automate clone tool process fills holes image searching patches nearby source region image copying pixels patch hole performing patch level opposed pixel level algorithm reduces blurring artifacts caused prior techniques 
12796439	computerscience	windows speech recognition wsr speech recognition component developed windows vista operating enables voice commands control desktop user interface dictate electronic documents email navigate websites perform keyboard shortcuts operate mouse cursor supports creation custom macros perform additional tasks wsr locally processed speech recognition platform rely cloud computing accuracy dictation recognition adapts based user context grammar input speech samples training sessions vocabulary dictation personal dictionary users include exclude expressions optionally record pronunciations increase recognition accuracy windows search wsr optionally analyze collect documents email handwritten input tablet pc contextualize disambiguate terms adapt personalize recognizer custom language models adapt recognizer specific context phonetics terminology users occupational fields legal medical supported wsr developed integrated component windows vista windows supported speech recognition limited individual applications windows media player office xp introduced speech recognition support limited internet explorer office windows vista majority integrated applications controlled speech office 2007 versions office rely wsr replacing separate office speech recognition windows windows windows windows rt windows history precursors involved speech recognition speech synthesis 1993 hired xuedong huang carnegie mellon university lead speech development efforts company eventually led development speech api introduced 1994 speech recognition products prior wsr versions office including office xp office 2003 speech recognition capabilities internet explorer office applications installation office enabled limited speech functionality windows 98 windows windows nt windows 2000 2002 tablet pc edition windows xp included speech recognition tablet pc input panel windows xp expansion package enabled voice commands windows media player support limited individual applications windows vista windows include integrated speech recognition capabilities development windows vista 2002 windows hardware engineering conference winhec 2002 announced windows vista codename longhorn include advances speech recognition features microphone array support features company goal provide consistent quality audio infrastructure natural continuous speech recognition discrete command control gates stated 2003 professional developers conference pdc 2003 build speech capabilities advance longhorn recognition synthesis real time pre release builds development windows vista included speech engine training features pdc 2003 developer presentation dedicated user input stated windows vista include user interface microphone feedback control separate user configuration training features clarified extent speech recognition integrated stated pre release software development kit common speech scenarios speech enabling menus buttons enabled wide winhec 2004 listed wsr longhorn mobile pc strategy improve productivity winhec 2005 emphasized accessibility mobility scenarios improvements speech user experience speech support included windows xp integrated tablet pc input panel required switching separate commanding dictation modes windows vista introduce dedicated interface speech input desktop unify separate speech modes users speak command dictating vice versa switching modes stated windows vista improve dictation accuracy support additional languages microphone arrays demonstration winhec 2005 focused email dictation correction editing commands presentation microphone arrays windows vista beta included integrated speech recognition application incentivize company employees analyze wsr software glitches provide feedback development offered opportunity testers win premium model xbox 360 video game console july 27 2006 operating release manufacturing rtm notable incident involving wsr occurred demonstration unintended output aunt set double killer delete select attempts dictate led consecutive output errors incident subject derision analysts journalists audience revealed issues audio gain glitch caused speech recognizer distort dictated glitch fixed windows vista release security report 2007 reports surfaced wsr vulnerable attack attackers play audio speakers capabilities perform undesired user operations target vulnerability discovered windows vista availability stated attack theoretically meet prerequisites successful target speech recognition feature properly configured activated speakers microphone connected targeted exploit require software interpret commands user noticing—an scenario perform visible interface operations produce audible feedback mitigating factors include dictation clarity microphone feedback placement user account control exploit nature perform privileged operations users protected administrators explicit consent windows windows introduced improve user experience recognizer updated ui automation—substantially enhancing performance—and recognition engine wasapi audio stack enables support echo cancellation document harvester optionally analyzes collects email documents contextualize disambiguate user terms improved performance updated periodically background recognizer startup sleep mode performance improvements address security issues windows introduces voice activation option—enabled default—that recognizer users speak listening putting recognizer sleep windows introduces option submit speech training data improve future recognizer versions windows introduced optional dictation scratchpad interface functions temporary document users dictate type insertion applications compatible services framework wsr enable dictation option windows vista windows windows rt wsr control metro user interface windows windows windows rt commands charms bar press windows display commands metro style apps press windows perform tasks change celsius msn weather display installed apps listed start screen apps windows wsr featured settings application starting windows april 2018 update version 1803 change appeared insider preview build 17083 april 2018 update introduces keyboard shortcut activate wsr overview features wsr user control including operating desktop user interface voice commands applications including bundled windows controlled voice commands speech recognition users dictate documents email forms control operating user interface perform keyboard shortcuts mouse cursor wsr local speech profile store user voice accuracy speech recognition increases helps feature adapt user grammar speech patterns vocabulary word usage speech recognition includes tutorial improve accuracy optionally review user personal documents—including email—to improve command dictation accuracy individual speech profiles created user basis backups profiles performed windows easy transfer wsr supports languages chinese traditional chinese simplified english english french german japanese spanish wsr relies speech api developed party applications support services framework interface wsr interface consists status displays instructions commands command heard recognizer status recognizer voice meter displays visual feedback volume levels status represents current wsr total modes listed respective meanings colors recognizer listening mode button denote modes operation blue listening blue gray sleeping gray yellow user switches context desktop taskbar voice command misinterpreted status display custom user windows speech recognition macros alternates panel alternates panel disambiguation interface displays list items interpreted relevant user spoken word word phrase user desired insert application listed user speak word phrase confirm choice speaking insert application alternates panel launching applications speaking commands refer item speaking start internet explorer list browser version browser add ons disabled exactmatchoverpartialmatch windows registry entry limit commands items exact names instance included common commands listed common wsr commands italics word substituted desired item word direction scroll direction command substituted word start typing command enables wsr interpret dictation commands keyboard shortcuts mousegrid mousegrid command enables users control mouse cursor overlaying regions screen regions gradually narrow user speaks region focus desired interface element reached regions user interact based commands including region moves mouse cursor desired region clicks mark region item icon region selected clicked previous command user simultaneously interact multiple regions mousegrid applications interface elements identifiable commands controlled overlay command active speaking overlaid selects item user perform operations designed users interact items identifiable dictation wsr enables dictation operating applications dictation mistake occurs corrected speaking correct word correct alternates panel provide suggestions correction suggestions selected speaking suggestion list speaking desired item listed suggestions user speak alternatively users speak spell spell speak desired item letter basis users personal alphabet nato phonetic alphabet spelling multiple sentence corrected simultaneously user speaks dictating recognizer interprets word user correct correct english language 100 000 recognized default speech dictionary wsr includes personal dictionary users include exclude expressions dictation user adds word capital letter dictionary user capitalized capitalization depends context word spoken users record pronunciations dictionary increase recognition accuracy written stylus tablet pc windows handwriting recognition feature stored stored dictionary included user speech profile macros wsr supports custom macros supplementary application enables additional natural language commands functionality email macro released enables natural language command user send email contact subject outlook compose message designated contact subject automatically inserted released sample macros speech dictionary windows media player powerpoint speech synthesis switch multiple microphones customize aspects audio device configuration volume levels natural language queries weather forecast time answers queries spoken speech synthesizer users developers create macros based transcription substitution application execution support command arguments keyboard shortcuts emulation existing voice commands combination items xml jscript vbscript supported macros limited individual applications desired rules macros defined programmatically macro load stored speech macros folder current user documents directory macros digitally signed default user certificate ensure commands corrupted loaded parties administrator create certificate macros utility includes security levels prohibit unsigned macros loaded prompt users sign macros load unsigned macros 
12953311	computerscience	ieee john von neumann medal established ieee board directors 1990 annually outstanding achievements science technology achievements theoretical technological entrepreneurial prior award medal named john von neumann recipients people received ieee john von neumann medal 
12953313	computerscience	ieee software bimonthly peer reviewed magazine scientific journal published ieee society covering aspects software engineering processes practices mission source reliable peer reviewed leading software practitioners—the developers managers rapid technology change established 1983 published ieee society journal citation reports journal 2016 impact factor 190 editors chief individuals editor chief journal 
13004078	computerscience	randolph frederick pausch october 23 1960 – july 25 2008 american professor science human–computer interaction design carnegie mellon university cmu pittsburgh pennsylvania pausch learned pancreatic cancer september 2006 august 2007 terminal diagnosis months health left upbeat lecture titled lecture achieving childhood dreams september 18 2007 carnegie mellon popular youtube video led media appearances authored book called lecture theme york times seller pausch died complications pancreatic cancer july 25 2008 life pausch born baltimore maryland grew columbia maryland graduating oakland mills school columbia pausch received bachelor degree science brown university 1982 science carnegie mellon university august 1988 completing doctoral studies pausch employed xerox palo alto center adobe systems science career pausch assistant associate professor department science university virginia school engineering applied science 1988 1997 completed sabbaticals walt disney imagineering electronic arts ea 1997 pausch associate professor science human interaction design carnegie mellon university 1998 founder marinelli cmu entertainment technology center started building virtual worlds cmu taught consulted google user interface design consulted parc imagineering media metrix pausch founder alice software project received national science foundation presidential investigator award lilly foundation teaching fellow pausch author author books 70 articles pausch received awards acm 2007 achievements computing education karl karlstrom outstanding educator award acm special science education award outstanding contributions science education inducted fellow acm 2007 cancer death pausch diagnosed pancreatic cancer underwent whipple procedure pancreaticoduodenectomy september 19 2006 unsuccessful attempt halt disease told august 2007 expect remaining months health moved family chesapeake virginia close wife family march 13 2008 pausch advocated federal funding pancreatic cancer united senate appropriations subcommittee labor health human services education agencies week prior hospitalized needle aspiration pleural effusion lung 2008 positron emission tomography pet scan tiny metastases lungs lymph nodes chest metastases peritoneal retroperitoneal cavities june 26 2008 pausch stopping chemotherapy potential adverse effects immuno therapy based approaches july 24 behalf pausch friend anonymously posted message pausch stating biopsy cancer progressed pet scans pausch step sicker friend stated pausch enrolled hospice program designed provide palliative care life pausch died pancreatic cancer family chesapeake virginia july 25 2008 age 47 survived wife jai children dylan logan chloe achieving childhood dreams pausch delivered lecture titled achieving childhood dreams cmu september 18 2007 abridged version speech oprah winfrey october 2007 talk modeled ongoing series lectures academics deeply matters hypothetical final talk topic wisdom impart chance speaking pausch received standing ovation crowd 400 colleagues students motioned sit earn audience shouted lecture pausch offered inspirational life lessons performed push stage commented irony lecture series renamed journeys damn finally nailed venue renamed pausch finished lecture steve seabolt behalf electronic arts—which collaborating cmu development alice 0—pledged honor pausch creating memorial scholarship women science recognition pausch support mentoring women engineering cmu president jared cohon spoke emotionally pausch humanity called contributions university education remarkable stunning announced cmu celebrate pausch impact building naming pausch raised pedestrian bridge connect cmu science building center arts symbolizing pausch linked disciplines brown university professor andries van dam pausch lecture tearful impassioned speech praising courage leadership calling role model randy pausch memorial footbridge dedicated october 30 2009 jai dylan logan chloe pausch cutting ribbon lecture disney owned publisher hyperion paid 7 million rights publish book pausch called lecture authored pausch wall street journal reporter jeffrey zaslow book york times seller april 28 2008 lecture expands pausch speech book printing 400 000 copies translated 46 languages spent 85 weeks york times bestseller list copies print speculation book movie pausch denied rumors stating reason book telling story lecture medium film media coverage pausch named person week abc news charles gibson september 21 2007 lecture attracted wide attention international media internet hit viewed times month delivery october 22 2007 pausch appeared oprah winfrey discussed situation summarized lecture october 2007 pausch joined pittsburgh steelers day regular practice organization learned childhood dreams mentioned lecture play nfl april 2008 abc network aired hour diane sawyer feature pausch titled lecture love story life july 29 2008 abc aired follow lecture special remembering pausch famous lecture lectures appearances pausch lecture time management november 27 2007 university virginia audience 850 people march 2008 pausch appeared public service announcement video testified congress support cancer 18 2008 pausch surprise return appearance carnegie mellon speech commencement ceremony attending school science diploma ceremony 19 pausch appeared morning america lecture achieving childhood dreams nominated 2007 youtube video awards devoted star trek fan pausch invited film director abrams film role star trek abrams heard pausch condition personal mail inviting pausch set pausch accepted traveled los angeles california shoot scene addition appearing film dialogue film captain visual donated 217 06 paycheck charity 
13111724	computerscience	speech generating devices sgds voice output communication aids electronic augmentative alternative communication aac systems supplement replace speech writing individuals severe speech impairments enabling verbally communicate sgds people limited interacting verbally individuals active participants communication interactions helpful patients suffering amyotrophic lateral sclerosis als children predicted speech deficiencies input display methods users varying abilities sgds sgds multiple symbols accommodate utterances portion symbols visible time communicator navigating speech generating devices produce electronic voice output digitized recordings natural speech speech synthesis—which carry emotional permit user speak messages content organization updating vocabulary sgd influenced factors user contexts device development techniques improve vocabulary rate speech production active vocabulary items user frequently applicable range meanings pragmatic functionality multiple methods accessing messages devices indirectly specialized access devices—although specific access method depend skills abilities user sgd output typically slower speech rate enhancement strategies increase user rate output enhanced efficiency communication sgd prototyped mid 1970s rapid progress hardware software development meant sgd capabilities integrated devices smartphones notable users sgds include stephen hawking roger ebert tony proudfoot pete frates founder als ice bucket challenge speech generating systems dedicated devices developed solely aac dedicated devices computers running additional software function aac devices history sgds roots electronic communication aids aid sip puff typewriter controller named patient operated selector mechanism possum prototyped reg maling united kingdom 1960 possum scanned set symbols illuminated display researchers delft university netherlands created lightspot operated typewriter lot 1970 movements head spot light matrix characters equipped photoelectric cell commercially unsuccessful lot received users 1966 barry romich freshman engineering student western reserve university prentke engineer highland view hospital cleveland ohio formed partnership creating prentke romich company 1969 company produced communication device typing based discarded teletype machine 1970s 1980s companies emerge prominent manufacturers sgds toby churchill founded toby churchill 1973 losing speech encephalitis dynavox sentient systems technology grew student project carnegie mellon university created 1982 woman cerebral palsy communicate 1980s improvements technology led greatly increased variety performance commercially communication devices reduction size price alternative methods access target scanning eye calibrate movement user eyes direct sgd produce desired speech phase scanning alternatives user sequentially communication devices speech output possibilities included digitized synthesized speech rapid progress hardware software development continued including projects funded european community commercially dynamic screen speech generating devices developed 1990s software programs developed allowed based production communication boards tech devices continued lighter increasing accessibility capability communication devices accessed eye tracking systems perform word processing internet environmental control device independent access equipment radio telephones stephen hawking unique voice synthesis equipment hawking unable speak combination severe disabilities caused als emergency tracheotomy 20 sgd gained popularity children speech deficiencies autism syndrome predicted brain damage surgery starting 2000s specialists benefit sgds adults children neuro linguists sgds effective helping children risk temporary language deficits undergoing brain surgery patients als digitized sgds communication aids pediatric patients recovery process access methods methods accessing messages devices indirectly specialized access devices direct access methods involve physical contact keyboard touch screen users accessing sgds indirectly specialized devices manipulate object access maneuvering joystick head mouse optical head pointer light pointer infrared pointer switch access scanner specific access method depend skills abilities user direct selection body pointer adapted mouse joystick eye tracking switch access scanning indirect selection direct selection typing keyboard touching screen users target scanning selections scanning indicator cursor electronic device desired choice unable typically calibrate eyes eye gaze blocking select desired phrases speed pattern scanning items selected individualized physical visual cognitive capabilities user message construction augmentative alternative communication typically slower speech users producing 8–10 minute rate enhancement strategies increase user rate output 12–15 minute result enhance efficiency communication sgd vocal expressions facilitate efficient effective communication including expressing desires questions sgds multiple symbols accommodate vocal expressions portion symbols visible time communicator navigating speech generating devices display set selections dynamically changing screen fixed display main options increasing rate communication sgd encoding prediction encoding permits user produce word sentence phrase activations sgd iconic encoding strategies semantic compaction combine sequences icons picture symbols produce phrases numeric alpha numeric letter encoding abbreviation expansion sentences coded sequences letters typing hh g1 greeting retrieve prediction rate enhancement strategy sgd attempts reduce keystrokes predicting word phrase written user user select correct prediction write entire word word prediction software determine choices offered based frequency language association choices user grammatical suitability users produce minute scanning interface static keyboard layout predictive grid layout suggesting cognitive overhead reviewing arrangement cancels benefits predictive layout scanning interface systems auditory sciences interact voice device combine encoding prediction typing hmf encoded shortcut prediction capabilities user complete sentence glasses car approach rate enhancement dasher language models arithmetic coding alternative letter targets screen size relative likelihood history rate produced depend greatly conceptual level talk users choose sentence level utterances demonstrated output rates excess 60 wpm fixed dynamic display devices fixed display devices fixed display devices refer symbols items fixed format sources refer static displays display devices simpler learning curve devices fixed display devices replicate typical arrangement tech aac devices tech defined devices batteries electricity electronics communication boards share disadvantages typically restricted limited symbols messages note technological advances century fixed display sgds commonly dynamic display devices dynamic displays devices touchscreen devices typically generate electronically produced visual symbols pressed change set selections displayed user change symbols links navigate vocabulary messages dynamic display device symbols contexts conversational topics pressing symbols screen messages topic watching volleyball game user press sport symbol messages relating sport press symbol scoreboard utter phrase score advantages dynamic display devices include availability larger vocabulary ability sentence construction advantage dynamic display devices underlying operating capable providing options multiple communication channels including cell phone messaging mail linköping university email writing practices allowed children sgd users develop social skills increase social participation output output sgd digitized synthesized digitized systems play recorded phrases synthesized speech speech software carry emotional permits user speak messages typing individuals combination recorded messages speech techniques sgds devices limited type output digitized speech phrases entire messages digitised stored device playback activated user process formally voice banking advantages recorded speech include natural prosody speech naturalness listener person age gender aac user selected record messages additional sounds user laughing whistling digitized sgds provide degree normalcy patient families lose ability speak major disadvantage recorded speech users unable produce messages limited messages pre recorded device depending device limit recordings synthesized speech sgds synthesized speech apply phonetic rules language translate user’s message voice output speech synthesis users freedom create messages limited pre recorded device smartphones computers increased synthesized speech devices creation apps user select list phrases messages spoken voice language user chosen apps speakit assistive express iphone provide cheap speech generating device visit doctor office learn specialized machinery synthesized sgds multiple methods message creation individually combination messages created letters phrases sentences pictures symbols synthesized speech virtually unlimited storage capacity messages demands memory space synthesized speech engines languages engine parameters speech rate pitch range gender stress patterns pauses pronunciation exceptions manipulated user selection set vocabulary selection set sgd set messages symbols codes person device content organisation updating selection set active influenced factors including user ability age selection set aac include user – included user grow content installed sgd include preset manufacturer additional produced user user care team depending user contexts device initial content selection researchers beukelman mirenda list sources family friends teachers care staff selection initial content sgd range sources required individual knowledge experience generate vocal expressions environment parents therapists add slang terms innit previous analyzed vocabulary typically developing speakers word aac users generate content aac devices processes generating core set utterances vocal expressions effective situations vocabulary terms user horse riding term fringe vocabulary refers vocabulary specific unique individual personal typical technique develop fringe vocabulary device conduct interviews multiple informants siblings parents teachers workers involved persons researchers musselwhite louis initial vocabulary items user frequently applicable range meanings pragmatic functionality criteria aac field ecological check sgd content automatic content maintenance beukelman mirenda emphasize vocabulary selection involves ongoing vocabulary maintenance difficulty aac users carers program utterances manually names friends personal stories existing commercial solutions automatically adding content approaches attempted overcome difficulty range inferred input generating content based log conversation user friends family data mined internet language materials webcrawler project lifelogging based approaches device content changed based events occur user day accessing user data quality messages generated risk exposing sensitive user data global positioning systems device content changed based geographical location ethical concerns developed sgds include performance measurement analysis tools monitor content individual raises concerns privacy argue device user involved decision monitor concerns raised proposals devices automatic content generation privacy increasingly factor design sgds aac devices designed user’s life sensitive legal social technical issues centred wide family personal data management contexts aac sgds designed support user delete logs conversations content automatically challenges programming dynamic speech generating devices augmentative communication specialists specialists required cater patients patients choose kinds phrases patients phrases based age disability content organization extremely time consuming additionally sgds rarely covered health insurance companies result resources limited funding staffing dr john costello boston children’s hospital driving force soliciting donations program running staffed hospital hospitals country 
13201074	computerscience	seam carving liquid rescaling algorithm content aware image resizing developed shai avidan mitsubishi electric laboratories merl ariel shamir interdisciplinary center merl functions establishing seams paths image automatically removes seams reduce image size inserts seams extend seam carving manually defining pixels modified features ability remove objects photographs purpose algorithm image retargeting displaying images distortion media sizes cell phones projection screens document standards support dynamic layout images image retargeting invented vidya setlur saeko takage ramesh raskar michael gleicher bruce gooch 2005 setlur impact award 2015 seams seams vertical horizontal vertical seam path pixels connected image pixel row horizontal seam exception connection left energy function values pixel measuring contrast neighbor pixels computing seams computing seam consists finding path minimum energy cost image dijkstra algorithm dynamic programming greedy algorithm graph cuts dynamic programming dynamic programming programming method stores calculations simplify calculating complex result dynamic programming seam carving computing seams attempting compute vertical seam path lowest energy pixel row compute energy current pixel energy pixels image row rows sum black energy current pixel red row pixel energy red choice black minimum values ignore set sum pixel energy red black operation carried pixel row row repeat process row row final cumulative sums seams paths lowest values seams lowest energy seams row trace seam path row follow green arrows pixel row minimum cumulative energy starting pixel pixels choose minimum cumulative energy algorithm starting image weight density energy pixel calculated algorithms gradient magnitude entropy visual saliency eye gaze movement gradient magnitude atisfactory energy image list seams generated seams ranked energy energy seams content image seams calculated dynamic programming approach seams energy function seams original image seams removed image reducing size image result recalculated energy function image implementations adobe systems acquired exclusive license seam carving technology merl implemented feature photoshop cs4 called content aware scaling license exclusive popular graphics applications gimp digikam imagemagick stand programs iresizer implementations technique released source software improvements extensions 2010 review image retargeting methods seam carving produced output ranked worst tested algorithms ranking algorithms multi operator extension mentioned combined cropping scaling 
13225486	computerscience	private vlan port isolation technique networking vlan switch ports restricted communicate uplink restricted ports called private ports private vlan typically private ports single uplink uplink typically port link aggregation connected router firewall server provider network central resource switch forwards frames received private port uplink port vlan destination mac address frames received uplink port forwarded normal port hosting destination mac address ports vlan broadcast frames unknown destination mac addresses result direct peer peer traffic peers switch blocked communication uplink private vlans provide isolation peers data link layer communication layers depending network configuration typical application private vlan hotel ethernet network apartment port internet access port isolation ethernet based adsl dslams allowing direct data link layer communication customer nodes expose local network security attacks arp spoofing increasing potential damage misconfiguration application private vlans simplify ip address assignment ports isolated data link layer security performance reasons belonging ip subnet direct communication ip hosts protected ports uplink connection mac forced forwarding proxy arp based solution overview private vlan divides vlan primary vlans secondary keeping existing ip subnet layer configuration regular vlan single broadcast domain private vlan partitions broadcast domain multiple broadcast subdomains types ports private vlan promiscuous port port host port host port divides types isolated port port community port port scenario switch vlan 100 converted private vlan port ports isolated vlan 101 secondary community vlans 102 103 secondary ports switch uplink port trunk connected switch diagram configuration graphically table traffic flow ports traffic uplink port isolated port denied isolated vlan traffic uplink port isolated port permitted primary vlan network segregation private vlans network segregation secure hosting private vlans hosting operation segregation customers benefits secure vdi isolated vlan segregate vdi desktops allowing filtering inspection desktop desktop communication isolated vlans require vlan subnet vdi desktop backup network backup network hosts reach hosts reach backup destination backup clients isolated vlan backup servers promiscuous primary vlan hosts communicate backup servers 
13251031	computerscience	google lunar xprize glxp referred moon 2007–2018 inducement prize space competition organized prize foundation sponsored google challenge called privately funded teams land robotic spacecraft moon travel 500 meters transmit earth definition video images 2015 xprize announced competition deadline extended december 2017 team secure verified launch contract 31 december 2015 teams secured launch contract deadline extended august 2017 deadline extended 31 march 2018 entering 2018 teams remained competition spaceil moon express synergy moon team indus team hakuto secured verified launch contracts spaceflight industries rocket lab interorbital systems isro jointly teams 23 january 2018 prize foundation announced team launch attempt reach moon march 2018 deadline 30 google lunar xprize unclaimed april 2018 prize foundation announced lunar xprize continue cash competition competition summary google lunar xprize announced wired nextfest 13 september 2007 competition offered total 30 million prizes privately funded teams land robot moon travels 500 meters 640 ft transmits definition images video team claimed 20 million grand prize team accomplish tasks awarded 5 million prize teams earned additional money completing additional tasks baseline requirements required win grand prize traveling times baseline requirements 000 meters 3 mi capturing images remains apollo program hardware objects moon verifying lunar surface detection water ice moon surviving lunar night additionally 1 million diversity award teams strides promoting ethnic diversity stem fields provide incentive teams complete missions announced prize decrease 20 million 15 million government led mission lands explores lunar surface november 2013 organizers teams agreed drop rule launch chinese chang probe—which landed moon december 2013—approached 2015 xprize announced competition deadline extended december 2017 team secure verified launch contract 31 december 2015 teams secured launch contract deadline extended xprize announced finalists 24 january 2017 spaceil moon express synergy moon team indus hakuto secured verified launch contracts 2017 spacex rocket lab interorbital systems isro teams 2016 secure verified launch contract failed meet deadline google lunar xprize expired 31 march 2018 final teams launch vehicles deadline extension deadline ruled google prize unclaimed overview peter diamandis project founder wrote official 2007 goal google lunar prize ansari prize inspire generation private investment hopes developing cost effective technologies materials overcome limitations space exploration granted history google lunar xprize announced 2007 origin prize ansari xprize formed google lunar xprize created venture peter diamandis achieve goal dr diamandis served ceo blastoff corporation commercial initiative land robotic spacecraft moon mix entertainment internet space ultimately unsuccessful blastoff initiative paved google lunar prize initially nasa planned sponsor prize purse 20 million nasa federal agency united government funded tax money prize teams united original intention propose idea national space agencies including european space agency japanese space agency hope offer prize purses budget setbacks stopped nasa sponsoring prize peter diamandis idea larry sergey brin founders google xprize fundraiser agreed sponsor increase prize purse 30 million allowing prize bonus prizes extensions deadline prize originally announced 2007 contest robotic rover moon 2012 20 million prize winner landing achieved 2012 prize decreased 15m 2014 contest conclude deadline optimistic schedule jeff foust commented space review 2012 approached team appeared close mounting reasonable bid win 2010 deadline extended prize expire december 2015 reduction grand prize 20 million 15 million changed originally 2012 government mission lands lunar surface 16 december 2014 xprize announced extension prize deadline 31 december 2015 31 december 2016 2015 foundation announced extension deadline deadline winning prize december 2017 contingent team 31 december 2015 secured contract launch october 2015 team spaceil announced officially verified launch contract spacex extending competition 2017 16 august 2017 deadline extended 31 march 2018 objections heritage bonus prizes observers raised objections inclusion heritage bonus prizes apollo heritage bonus prize award additional estimated 1 million delivers images videos landing apollo program landing sites tranquility base landing lunar surface sites regarded archaeologically culturally expressed concern team attempting win heritage bonus inadvertently damage destroy landing phase mission piloting rover result archaeologists record calling foundation cancel heritage bonus ban targeting landing zones previous sites foundation competition educational goals bonuses fostered debate respectfully visit previous lunar landing sites adjudicator internationally relevant interdisciplinary issue response left detractors unsatisfied foundation historical precedent set apollo 12 mission landed nearby previous surveyor robotic probe pete conrad alan bean approached inspected surveyor removed returned earth study scientific heritage visit exposure manmade objects conditions outer space published leading papers decades surveyor apollo 12 nasa missions controversy time january 2011 nasa manager lunar commercial space twitter underway provide insight guidelines lunar heritage sites protected allowing visitations yield critical science july 2011 nasa issued recommendations space faring entities protect preserve historic scientific government lunar artifacts guidelines developed assistance beth leary anthropology professor mexico university las cruces recognized leader emerging field space archaeology guidelines recommendations enforceable possibility moral sanctions organization called moonkind develop international treaty include enforceable provisions designed manage access apollo sites protect preserve sites moon common heritage humankind apollo astronauts expressed support bonus apollo 11 moonwalker buzz aldrin appearing google lunar xprize initial announcement reading plaque signed majority fellow surviving apollo astronauts prize 23 january 2018 prize foundation announced team launch attempt reach moon march 2018 deadline google lunar xprize unclaimed competitors registration google lunar prize closed 31 december 2010 complete roster 32 teams announced february 2011 january 2017 officially registered google lunar prize teams continuing pursue prize objectives teams left competition failed achieve competition interim milestone merged teams initially 32 teams registered 16 teams actively participated activities teams satisfying rule requiring verified launch contract 31 december 2016 shortly announcement complete roster teams prize foundation official total teams entered partial registration program filing letter intent compete register registered teams ultimately register terrestrial milestone prizes overview november 2013 prize organization announced milestone prizes awarded teams demonstrating key technologies prior actual mission total awarded 2014 achieving milestones selected teams february 2014 judging panel selected teams compete interim prizes based proposals achieve goals teams ultimate awards selected teams required accomplish milestones outlined submissions testing mission simulations awarded interim prizes teams october 2014 complete prize requirements winners officially awarded 26 january 2015 san francisco teams confirmed launch contracts 2016 teams required verified launch contracts 2016 remain competition contest winner teams expressed intention launch future teams competitors unable verified launch contract 31 december 2016 disqualifying competition planning launch crafts independently 
13336054	computerscience	powerset american company based san francisco california 2006 developing natural language search engine internet july 2008 powerset acquired estimated 100 powerset building natural language search engine targeted answers user questions opposed keyword based search confronted question income tax conventional search engines ignore question phrasing search keywords income tax powerset hand attempts natural language processing understand nature question return answer company process building natural language search engine reads understands sentence company licensed natural language technology parc xerox palo alto center 11 2008 company unveiled tool searching fixed subset english wikipedia conversational phrases keywords powerlabs form beta testing powerset online community called powerlabs september 17 2007 business week company hopes marshal thousands people build improve search engine public york times labs alpha beta testing involved software projects users product rigorous testing flaws powerset doesn’t product collection promising natural language technologies fruit xerox parc powerlabs initial search wikipedia people barney pell born march 18 1968 hollywood california founder cto powerset pell received bachelor science degree symbolic systems stanford university 1989 graduated phi beta kappa national merit scholar pell received phd science cambridge university 1993 marshall scholar nasa chief strategist vice president business development stockmaster acquired red herring march 2000 whizbang labs prior joining powerset pell entrepreneur residence mayfield fund venture capital firm silicon valley pell founder moon express company awarded 10m commercial lunar contract nasa competitor google lunar prize steve newcomb coo founder powerset prior joining powerset founder loudfire manager promptu board directors jaxtr left powerset october 2007 form virgance social startup incubator lorenzo thione born como italy product architect founder powerset prior joining powerset fxpal natural language processing fields thione earned master degree software engineering university texas austin ronald kaplan manager natural language theory technology parc served company cto cso ryan ferrier founding team powerset managed personnel internal operations 2008 business facebook applications bought zynga powerset alumnus alex le cto business executive producer zynga bought company siqi chen founded stealth startup mobile computing leaving powerset investors powerset attracted wide range investors considerable experience venture capital field company received 12 series funding november 2007 led venture capital firms foundation capital founders fund investors 
13343428	computerscience	ieee internet computing bimonthly peer reviewed scientific journal published ieee society covers aspects emerging maturing internet technologies editor chief brian blake university miami journal citation reports journal 2013 impact factor 000 
13343779	computerscience	ieee transactions mobile computing bimonthly peer reviewed scientific journal covering technology mobility users systems data computing established 2002 published ieee society editor chief marwan krunz university arizona journal citation reports journal 2016 impact factor 822 ieee transactions mobile computing journals journal impact factor communications 
13869068	computerscience	abu asia pacific robot contest abu robocon asian oceanian college robot competition founded 2002 asia pacific broadcasting union competition robots compete complete task set period time contest aims create friendship people lead countries 21st century advance engineering broadcasting technologies region event broadcast countries abu broadcasters history format abu robocon extended concept nhk robocon started 1991 restricted teams japan competition topics speaking robots complete tasks robots manual control automatic robots weight 10 kg span square meter build robots contestants restricted undergraduate students possess rich knowledge programming mechanical design electronic circuit design game teams named red blue playing field symmetrical robots teams start condition robocon 2015 employed based game based badminton typical game robocon 2015 lasts minutes sooner team achieve victory finishes game teams achieve condition team score minutes declared winner earlier editions robocon tend emphasize competitiveness game winners achieve win employing strategic approaches deploy robots preventing opponent reaching goal strategy notable vietnam win robocon 2004 2006 china win robocon 2008 mitigate editions reduce combat nature emphasis technology designing robot perform complicated maneuvers require teams creative designing robots competitions abu robocon 2019 abu robocon 2019 held ulaanbaatar mongolia theme sharing knowledge urtuu mongolian tradition abu robocon 2018 competition held ninh binh vietnam august 2018 theme traditional game ethnic region vietnam ném còn throwing shuttlecock goal game throw shuttlecocks height vietnamese culture game celebration friendship game team shuttlecocks design robots manual automatic robot manual robot hand shuttlecocks automatic robot attempts throw shuttlecocks rings traditional game rings heights game winner achieved ko robots throw shuttlecocks rings shuttlecock lands golden disk winner abu robocon 2018 lac hong university coming vietnam abu robocon 2017 abu robocon 2017 held tokyo japan month august theme asobi landing disc theme revolves word “asobi” play fundamental philosophy robocon “asobi playful unique original skills winning losing – friend foe alike – applaud enjoy “asobi” spirit encourage playful unique original robot designs strategies reference https roboconindia php theme story match team set discs supposed land poles height distances team land disc pole declared winner game team land disc pole winner declared rulebook winner abu robocon 2017 lac hong university coming vietnam abu robocon 2016 2016 abu robocon held bangkok thailand theme clean energy recharging concept theme utilization renewable energy sources theme match teams red blue team consisting robots controversial final match required replay university technology utm malaysia international robocon 2016 abu robocon 2015 abu robocon 2015 held august yogyakarta indonesia contest theme robominton badminton robogame venue contest sportorium universitas muhammadiyah yogyakarta umy contest teams red blue play game badminton team robots play normal doubles badminton game hung yen university technology education vietnam international robocon 2015 held yogyakarta indonesia abu robocon 2014 abu robocon 2014 conducted 24 august 2014 pune india theme robocon 2014 declared india salute parenthood winner abu robocon 2014 lh nvn coming lac hong university vietnam abu robocon 2013 abu robocon 2013 held vietnam 18 august 2013 19 engineering teams 18 countries participated theme robocon 2013 declared vtv green planet winner abu robocon 2013 kanazawa institute technology coming japan abu robocon 2012 abu robocon 2012 held hong kong 19 august 2012 17 engineering teams 16 countries regions participated theme robocon 2012 declared hong kong pursuit peace prosperity winner robocon 2012 university electronic science technology china abu robocon 2011 abu robocon 2011 held bangkok thailand 28 august 2011 19 engineering colleges 18 countries participated theme robocon2011 declared thailand krathong lighting happiness friendship winner dhurakij pundit university coming thailand abu robocon 2010 abu robocon2010 held cairo egypt 22 september 2010 18 engineering colleges 17 countries participated theme robocon 2010 declared egypt robo pharaohs build pyramids university electronic science technology china china 4th overwhelming win abu robocon 2009 abu robocon 2009 held tokyo japan 22 august 2009 theme kago traditional japanese palanquin carried human replaced robots winners team china completed task consistently 18 harbin institute technology china successive win abu robocon 2008 abu robocon 2008 held maharashtra institute technology mit pune india 31 august 2008 17 engineering colleges 16 countries participated theme robocon 2008 declared india govinda traditional indian deity play earthly games capturing butter cheese heads gopis 
13891512	computerscience	dynamic frequency scaling cpu throttling technique architecture frequency microprocessor automatically adjusted fly depending actual conserve power reduce heat generated chip dynamic frequency scaling helps preserve battery mobile devices decrease cooling cost noise quiet computing settings security measure overheated systems poor overclocking dynamic frequency scaling ranges computing systems ranging mobile systems data centers reduce power times workload functioning dynamic power switching power dissipated unit time chip c·v2·a·f capacitance switched clock cycle voltage activity factor indicating average switching events undergone transistors chip unitless quantity switching frequency voltage main determinant power usage heating voltage required stable operation determined frequency circuit clocked reduced frequency reduced dynamic power account total power chip static power leakage currents static power consumption asymptotic execution time energy consumption piece software convex energy behavior exists optimal cpu frequency energy consumption minimal leakage current transistor sizes threshold voltage levels decade dynamic power accounted thirds total chip power power loss leakage currents contemporary cpus socs tend dominate total power consumption attempt control leakage power metal gates power gating common methods dynamic voltage scaling power conservation technique conjunction frequency scaling frequency chip operating voltage efficiency electrical components voltage regulators decreases increasing temperature power usage increase temperature increasing power increase temperature increases voltage frequency increase power demands cmos vice versa performance impact dynamic frequency scaling reduces instructions processor issue time reducing performance workload cpu bound dynamic frequency scaling rarely worthwhile conserve switching power saving power requires dynamic voltage scaling v2 component modern cpus optimized power idle constant voltage efficient peak speed stay deep idle time called race idle computational sprinting reduced clock rate time stay light idle reducing voltage clock rate change tradeoffs technique overclocking processor performance increased ramping processor dynamic frequency manufacturer design specifications major difference modern pc systems overclocking bus multiplier locked dynamic frequency scaling multiplier overclocking static dynamic frequency scaling dynamic software incorporate overclocked frequencies frequency scaling algorithm chip degradation risks allowable implementations intel cpu throttling technology speedstep mobile desktop cpu lines amd employs cpu throttling technologies amd cool quiet technology desktop server processor lines aim cool quiet save battery life amd mobile processor purpose producing heat fan spin slower speeds cooler quieter operation technology amd powernow cpu throttling technology mobile processor supporting cpus amd k6 desktops technologies processors technology named longhaul powersaver transmeta version called longrun 36 processor asap chip multi core processor chips support completely unconstrained clock operation requiring frequencies maximum allowed including arbitrary frequency starts stops 167 processor asap chip multi core processor chip enables individual processors unconstrained clock frequencies acpi specs c0 modern day cpu divided called performance clock rate reduction throttling throttle cpu actual clock rate inserting stpclk clock signals omitting duty cycles amd powertune amd zerocore power dynamic frequency scaling technologies gpus power saving technologies performance boosting technologies 
14003441	computerscience	bag model simplifying representation natural language processing retrieval model sentence document represented bag multiset disregarding grammar word keeping multiplicity bag model vision bag model commonly methods document classification frequency occurrence word feature training classifier reference bag linguistic context zellig harris 1954 article distributional structure implementation models document bag simple documents syntaxhighlight lang john likes watch movies mary likes movies syntaxhighlight syntaxhighlight lang john likes watch football games syntaxhighlight based documents list constructed document syntaxhighlight lang javascript john likes watch movies mary likes movies john likes watch football games syntaxhighlight representing bag json object attributing respective javascript variable syntaxhighlight lang javascript bow1 john likes watch movies mary bow2 john likes watch football games syntaxhighlight key word occurrences word document elements codice bow1 expect strict json object representation note document union syntaxhighlight lang john likes watch movies mary likes movies john likes watch football games syntaxhighlight javascript representation syntaxhighlight lang javascript bow3 john likes watch movies mary football games syntaxhighlight bag algebra union documents bags representation formally disjoint union summing multiplicities element application practice bag model tool feature generation transforming bag calculate measures characterize common type characteristics features calculated bag model term frequency times term appears construct lists record term frequencies distinct bow1 bow2 bow3 syntaxhighlight lang javascript syntaxhighlight entry lists refers count entry list histogram representation list represents document entries list vector representation preserve original sentences main feature bag model representation successful applications email filtering term frequencies representation common terms frequency raw count word address popular normalize term frequencies weight term inverse document frequency tf–idf additionally specific purpose classification supervised alternatives developed account class label document lastly binary presence absence weighting frequencies option implemented weka machine learning software gram model bag word model orderless document representation—only counts mattered instance john likes watch movies mary likes movies bag representation reveal verb likes person alternative gram model store spatial applying bigram model parse units store term frequency unit syntaxhighlight lang javascript syntaxhighlight conceptually view bag word model special gram model model named shingling equivalent denoting language model detailed discussion hashing trick common alternative dictionaries hashing trick mapped indices hashing function memory required store dictionary hash collisions typically dealt freed memory increase hash buckets practice hashing simplifies implementation bag models improves scalability usage spam filtering bayesian spam filtering mail message modeled unordered collection selected probability distributions representing spam representing legitimate mail ham imagine literal bags bag filled spam messages legitimate mail word bags spam bag spam stock viagra frequently ham bag user friends workplace classify mail message bayesian spam filter assumes message pile poured randomly bags bayesian probability determine bag 
14179835	computerscience	artificial neural networks activation function node defines output node neuron input set inputs output input node desired solution original maps values desired range depending choice activation function logistic activation function map inputs real domain range standard chip circuit digital network activation functions depending input behavior linear perceptron neural networks nonlinear activation functions networks compute nontrivial nodes artificial neural networks function called transfer function functions biologically inspired neural networks activation function abstraction representing rate action potential firing cell simplest form function binary—that neuron firing function heaviside step function neurons computation linear separation categories positive slope reflect increase firing rate occurs input current increases function form slope activation function linear binary function addition networks constructed model unstable convergence neuron inputs favored paths tend increase bound function normalizable mentioned handled normalizable sigmoid activation function realistic model stays input current received firing frequency increases gradually approaches asymptote 100 firing rate mathematically hyperbolic tangent function replaced sigmoid function behavior realistically reflected neuron neurons physically faster rate model runs computational networks differentiable requirement calculate backpropagation final model multilayer perceptrons sigmoidal activation function form hyperbolic tangent forms function commonly range normalized vertically translated normalize model considered biologically realistic runs theoretical experimental difficulties types computational alternative structures special class activation functions radial basis functions rbfs rbf networks extremely efficient universal function approximators activation functions forms functions 11 vector representing function center 12 13 parameters spread radius support vector machines svms effectively utilize class activation functions includes sigmoids rbfs input transformed reflect decision boundary hyperplane based training inputs called support vectors 14 activation function hidden layer machines referred product kernel 15 support vectors represented centers rbfs kernel equal activation function unique form perceptron 17 18 satisfy conditions convergence machines accept arbitrary polynomial activation functions whereactivation function types comparison activation functions desirable properties activation function include table compares properties activation functions functions fold previous layer layers math 63 64the table lists activation functions functions single fold previous layer layers 
14271782	computerscience	machine learning semantic analysis corpus task building structures approximate concepts set documents involve prior semantic understanding documents latent semantic analysis latent semantic indexing class techniques documents represented vectors term space prominent plsi latent dirichlet allocation involves attributing document terms topics grams hidden markov models representing term stream markov chain term derived terms 
14415710	computerscience	chibios rt compact fast real time operating supporting multiple architectures released gpl3 license developed giovanni di sirio metrics chibios rt designed embedded applications 16 32 bit microcontrollers size execution efficiency main project goals reference kernel size range minimum 2 kib maximum 5 kib subsystems activated stm32 cortex m3 processor kernel capable 220 000 created terminated threads perform context switch microseconds stm32 72 mhz metrics supported platforms included source distribution reports features chibios rt microkernel supports objects threads semaphores timers created deleted runtime upper limit memory increase reliability kernel architecture static memory allocator required option data structures upper size limits tables arrays apis designed error conditions error codes exceptions rtos designed applications embedded devices includes demo applications microcontrollers contributed ports coldfire h8s families chibios rt ported raspberry pi device drivers implemented port gpio serial gpt purpose timer i2c spi pwm kernel win32 process software emulation mode allowing easy application development physical hardware included mingw compiler chibios rt supported popular embedded tls ssl libraries wolfssl ugfx chibios rt supported gui toolkit µgfx µgfx chibios gfx 
14568896	computerscience	hardware scout technique idle processor execution resources perform prefetching cache misses thread stalled cache processor pipeline checkpoints register file switches runahead mode continues issue instructions thread waiting memory thread execution mode scout thread data returns memory processor restores register file contents checkpoint switches normal execution mode computation mode discarded processor scouting speedup memory level parallelism mlp increased cache lines brought cache hierarchy processor switches normal mode rock processor scout sun rock processor canceled form hardware scout computations mode depend cache retired prefetching traditional instruction level parallelism scouting smt scouting simultaneous multithreading smt hardware threads fight memory wall scouting scout thread runs instructions instruction stream instruction pipeline stall smt smt thread executes instruction context smt increases throughput processor scouting increases performance lowering cache misses 
14669989	computerscience	viola–jones object detection framework object detection framework provide competitive object detection rates real time proposed 2001 paul viola michael jones trained detect variety object classes motivated detection description solved detection image human easily precise instructions constraints task manageable viola–jones requires view frontal upright detected entire camera tilted constraints diminish algorithm utility detection step recognition step practice limits pose acceptable components framework feature types evaluation characteristics viola–jones algorithm detection algorithm algorithm stages features sought detection framework universally involve sums image pixels rectangular bear resemblance haar basis functions realm image based object detection features viola jones rely rectangular complex figure illustrates types features framework feature sum pixels rectangles subtracted sum pixels shaded rectangles rectangular features sort primitive compared alternatives steerable filters sensitive vertical horizontal features feedback considerably coarser haar features human share properties regularities matched haar features properties common human composition properties forming matchable facial features features matched algorithm sought image rectangle features summed table image representation called integral image evaluates rectangular features constant time considerable speed advantage sophisticated alternative features feature rectangular adjacent rectangle rectangle feature computed array references rectangle feature rectangle feature learning algorithm speed features evaluated adequately compensate standard 24x24 pixel window total features prohibitively expensive evaluate testing image object detection framework employs variant learning algorithm adaboost select features train classifiers algorithm constructs “strong” classifier linear combination weighted simple “weak” classifiers weak classifier threshold function based feature threshold polarity determined training coefficients simplified version learning algorithm reported input set positive negative training images labels image cascade architecture cascading stage consists strong classifier features stages stage features job stage determine window window discarded fails stages simple framework cascade training cascade architecture implications performance individual classifiers activation classifier depends behavior predecessor false positive rate entire cascade detection rate match false positive rates typically achieved detectors classifier surprisingly poor performance 32 stage cascade achieve false positive rate classifier achieve false positive rate 65 time classifier exceptionally capable achieve adequate detection rates achieve detection rate 90 classifier aforementioned cascade achieve detection rate 99 viola jones object tracking videos moving objects apply object detection frame tracking algorithms klt algorithm detect salient features detection bounding boxes track movement frames improve tracking speed removing detect objects frame improves robustness salient features resilient viola jones detection framework rotation photometric 
14831122	computerscience	acm software award annual award honors people organization developing software lasting influence reflected contributions concepts commercial acceptance awarded association computing machinery acm 1983 cash prize sponsored ibm 35 000 recipients list recipients acm software award 
14907562	computerscience	language resource management lexical markup framework lmf iso 24613 2008 iso international organization standardization iso tc37 standard natural language processing nlp machine readable dictionary mrd lexicons scope standardization principles methods relating language resources contexts multilingual communication cultural diversity objectives goals lmf provide common model creation lexical resources manage exchange data resources enable merging individual electronic resources form extensive global electronic resources types individual instantiations lmf include monolingual bilingual multilingual lexical resources specifications lexicons simple complex lexicons written spoken lexical representations descriptions range morphology syntax computational semantics assisted translation covered languages restricted european languages cover natural languages range targeted nlp applications restricted lmf represent lexicons including wordnet edr parole lexicons history lexicon standardization studied developed series projects genelex edr eagles multext parole simple isle iso tc37 national delegations decided address standards dedicated nlp lexicon representation lmf started summer 2003 item proposal issued delegation fall 2003 french delegation issued technical proposition data model dedicated nlp lexicons 2004 iso tc37 committee decided form common iso project nicoletta calzolari cnr ilc italy convenor gil francopoulo tagmatica france monte george ansi usa editors step developing lmf design framework based features existing lexicons develop consistent terminology components lexicons step actual design comprehensive model represented lexicons panel 60 experts contributed wide range requirements lmf covered types nlp lexicons editors lmf closely panel experts identify solutions reach consensus design lmf special attention paid morphology provide powerful mechanisms handling languages difficult handle 13 versions written dispatched national nominated experts commented discussed iso technical meetings including numerous meetings mail exchanges editors arrived coherent uml model conclusion lmf considered synthesis art nlp lexicon field current stage iso 24613 lmf specification published officially international standard 17 november 2008 iso tc37 family standards iso tc37 standards elaborated level specifications deal word segmentation iso 24614 annotations iso 24611 maf iso 24612 laf iso 24615 synaf iso 24617 semaf time feature structures iso 24610 multimedia containers iso 24616 mlif lexicons iso 24613 standards based level specifications dedicated constants data categories revision iso 12620 language codes iso 639 scripts codes iso 15924 country codes iso 3166 unicode iso 10646 level organization forms coherent family standards common simple rules key standards linguistics constants feminine transitive defined lmf recorded data category registry dcr maintained global resource iso tc37 compliance iso iec 11179 2003 constants adorn level structural elements lmf specification complies modeling principles unified modeling language uml defined object management omg structure uml class diagrams examples uml instance object diagrams xml dtd annex lmf document model structure lmf composed components extensions dedicated morphology mrd nlp syntax nlp semantics nlp multilingual notations nlp morphological patterns multiword expression patterns constraint expression patterns lexical entry lemma clergyman inflected forms clergyman clergymen language coding set lexical resource language set lexicon uml instance diagram elements lexical resource global lexicon lexical entry lemma word form define structure lexicon lmf document contrary languagecoding language partofspeech commonnoun writtenform grammaticalnumber singular plural data categories data category registry marks adorn structure values iso 639 clergyman clergymen plain character strings eng list languages defined iso 639 additional dtdversion feat data expressed xml fragment simple lmf represent complex linguistic descriptions xml tagging correspondingly complex selected publications lmf publication lmf specification ratified iso paper 2015 9th cited paper language resources evaluation conferences lrec papers semantic representation african languages asian languages european languages semitic languages dedicated book book published 2013 lmf lexical markup framework dedicated lmf chapter deals history lexicon models chapter formal presentation data model deals relation data categories iso dcr 14 chapters deal lexicon civil military domain scientific labs industrial applications wordnet lmf prolmf duelme uby lmf lg lmf relish globalatlas global atlas wordscape 
14927404	computerscience	cyark 501 nonprofit organization located oakland california united organization refers digital archive heritage sites preservation education official mission statement digitally preserving cultural heritage sites collecting archiving providing access data created laser scanning digital modeling art technologies cyark founder ben kacyra stated speech 2011 ted conference organization created response increasing human natural threats heritage sites ensure collective human memory lost modern dissemination tools internet mobile platforms organization partners producing quality digital scanning heritage sites angkor wat pompeii chichen itza eastern qing tombs nineveh antonine wall mount rushmore organization seeks preserve 500 heritage sites history cyark founded 2003 iraqi expatriate civil engineer ben kacyra 1990s kacyra instrumental marketing portable laser scanner scanner called cyrax designed surveying purposes produced cyra technologies 2001 cyra technologies rights sold swiss firm leica geosystems sale company ben kacyra dedicated energy technology document archaeological cultural heritage resources cyark organization cyark primary focus documentation digital preservation threatened ancient historical architecture architecture includes sites colorado mesa verde italy pompeii wyoming fort laramie kacyra native mosul iraq – biblical assyrian city nineveh cyark generated publicity inception initially relevance kacyra life story ongoing iraq war country cultural patrimony destroyed spasm looting heavy military damage historical sites babylon samarra public cyark organization ben kacyra popular speaker conferences google’s zeitgeist 2008 tedglobal 2011 describing life story potential digital preservation save collective treasure global heritage advisory role independent profit organization cyark gathered considerable momentum october 2013 cyark launched cyark 500 challenge organization announced seeks digitally preserve 500 heritage sites 2014 cyark major entity historic preservationist cultural resource heritage management communities 2014 cyark 500 annual summit held national archives building washington theme democratising cultural heritage enabling access technology support project focus cyark mission statement organization cyark digital data professionals monitoring managing gradual architectural deterioration cultural sites data generate blueprints reconstruction catastrophic events afghan taliban notorious demolition bamiyan buddhas 2001 2010 destruction suspected arson royal tombs kasubi uganda kasubi tombs digitally preserved cyark demise providing lasting digital record potential blueprint reconstruction cyark offers publicly accessible archive archaeological sites studied archive includes short film introduction slideshow history digital preservation process plan displays geo located multimedia accessible image gallery dimensional images details profiles generated reconstructions dimensional images cloud image raw scan data cyark granted permission reuse images creative commons attribution share alike license cyark online mission statement dissemination digital content heritage sites encourage additional visits tourists invigorate communities revenue cultural tourism youth educators benefit publicly accessible historical including creative commons licensed content finally creation digital records ensures sites lost digital resource facilitate continued mining time technologies methods extraction evolve selected list projects cyark offers map hazards global heritage sites earthquakes sea level rise global warming funding partnerships initially cyark supported kacyra family kacyra family foundation cyark funded individual project funding corporate support foundation grants donations corporate funders 2014 include ibm iron mountain autodesk trimble navigation cyark established relationships project partners engineering media academia including christofori und partner pbs uc berkeley organization coordinated internship program department anthropology 2006 2007 cyark approved study employer cal students october 2011 existing partnerships united national park service nps united kingdom historic scotland hs monuments fund mexico instituto nacional antropología historia inah greatly expanded upcoming projects include mexico teotihuacan scotland rosslyn chapel iraq babylon mount rushmore national memorial 
15376280	computerscience	regard mobile network operator mno operator term dumb pipe dumb network refers simple network bandwidth transfer bytes customer device internet prioritize content afford completely neutral regard services applications customer accesses term dumb refers network operator affect customer accessibility internet limiting services applications proprietary portal walled garden offer additional capabilities services simple connectivity smart pipe term contrasts dumb pipe simple bandwidth network speeds maximum network loads expected avoiding discriminate data types commonly understood operational models mno dumb pipe smart pipe walled garden description dumb network marked intelligent devices pcs periphery network interfere manage application operation communication dumb network concept natural outcome principle internet originally designed operate dumb network circles dumb network regarded natural culmination technological progress network technology justification dumb network uniquely satisfies requirements principle application creation supporters dumb network uniquely qualified purpose – design – sensitive applications dumb network model flexibility ease innovation development applications matched models examples regarded operator dumb pipe scenario apple iphone iphone enables users surf internet mobile safari browser connects apple itunes store purchasing ringtones music operator portal operators mobility offer traditional services downloads wallpapers ringtones games applications apple controls total iphone user experience operators content provide network connectivity bandwidth iphone tripled cities addition losing valuable revenue opportunities customer operators rumored pay apple percentage customer monthly iphone dumb pipe believes ultimately bad operators operator dumb pipe smart pipe dilemma upcoming deployment wimax technology companies sprint nextel clearwire deploy wimax additional services dumb pipes opinions criticism critics dumb network architecture posit arguments favor intelligent networks users transmission applications granted network priority quality service real time video applications time sensitive applications video transmissions receive network priority prevent picture skips transmissions delayed application performance networks defend attacks malware bad actors dumb network principle conceived antithesis idea centralized intelligent network applications central network control synthesis context aware networks networks intelligent devices set applications dumb network aware application social enterprise context applications network decisions resource allocation conflicts light collective users purposes social enterprise guide support advocates dumb networks counter argument prioritizing network traffic expensive monetary technology network performance dumb networks advocates real purpose prioritizing network traffic overcome insufficient bandwidth handle traffic network protocol issue security argument malware dealt endpoints attempting adapt network counterattacks cumbersome inefficient 
15677992	computerscience	project euler named leonhard euler dedicated series computational intended solved programs project attracts adults students mathematics programming creation 2001 colin hughes project euler gained notability popularity worldwide includes 600 weeks varying difficulty solvable minute cpu time efficient algorithm modestly powered project euler 900 000 users solved features forum specific question viewed user correctly answered question sorted solved difficulty participants track progress achievement levels based solved level reached 25 solved special awards exist solving special combinations instance award solving prime numbered special eulerians level exists track achievement based fastest solvers compete solving solutions project euler isif list natural multiples sum multiples 23 sum multiples 1000 simpler typical serves illustrate potential difference efficient algorithm brute force algorithm examines natural 1000 running sum meeting criteria method simple implement pseudocode harder increasingly efficient algorithm reduce 1000 operations inclusion–exclusion principle closed form summation denotes sum multiples notation brute force algorithm efficient algorithm assuming constant time arithmetic operations 
16189721	computerscience	blackberry os proprietary mobile operating developed canadian company blackberry limited blackberry smartphone handheld devices operating multitasking supports specialized input devices blackberry handhelds trackwheel trackball trackpad touchscreen blackberry platform native support corporate email java micro edition midp subset midp complete wireless activation synchronization exchange lotus domino novell groupwise email calendar tasks notes contacts blackberry enterprise server operating supports wap updates operating automatically wireless carriers support blackberry air software loading otasl service party developers write software blackberry api classes applications functionality digitally signed june 2011 45 mobile developers platform time publication blackberry os discontinued release blackberry january 2013 support os continued 2013 release history blackberry 9720 blackberry 9720 runs version blackberry os updates user interface lock screen swipe unlock phone access camera redesigned application switcher music pictures videos phone apps availability blackberry develops releases updated versions operating support device individual carriers decide version released users blackberry fonts list fonts included versions blackberry note included versions bbalphasans bbalphaserif based software dejavu fonts blackberry tablet os september 27 2010 blackberry announced unrelated qnx based platform blackberry tablet os released blackberry playbook tablet 
16460664	computerscience	nedo japan largest public management organization promoting development deployment industrial energy environmental technologies 2003 nedo reorganized independent administrative institution nedo 000 personnel domestic offices hokkaido kansai kyushu international offices washington silicon valley california paris beijing bangkok jakarta delhi budget fiscal 2009 234 700 000 000 yen vast majority japan ministry economy trade industry meti head office located tokyo kawasaki city kanagawa prefecture nedo projects united notably smart grid alternative energy project laboratories mexico sandia national laboratories los alamos national laboratory lanl march 2010 nedo laboratories signed agreements nedo fund smart grid facility lanl smart house demonstration projects los alamos albuquerque mexico nedo investing 30 projects period 
16738378	computerscience	robotis bioloid hobbyist educational robot kit produced korean robot manufacturer robotis bioloid platform consists components modular servomechanisms called ax 12a dynamixels daisy chained fashion construct robots configurations wheeled legged humanoid robots robot programmed roboplus language based software solution bioloid comparable lego mindstorms vexplorer kits types robotis bioloid kits multiple variations bioloid kit turtlebot platforms turtlebot announced 2016 developed collaboration robotis source robotics foundation cheapest turtlebots robotis platforms include robotis op robotis manipulator thormang3 tb3 plugins gazebo robotis turtlebot3 plugins gazebo robotics simulator simulate tb3 burger waffle waffle pi applications platform naval academy mechanical engineering courses popular robocup international robotics competition fira competition 
16806651	computerscience	ip exchange ipx telecommunications interconnection model exchange ip based traffic customers separate mobile fixed operators types service provider isp ip based network network interface ipx developed gsm association ipx intended replace compete internet offer alternative option service providers intent ipx provide interoperability ip based services service provider types commercial framework enables parties chain receive commercial return commercial relationships underpinned service level agreements guarantee performance quality security evident users service provider utilises ipx model ability service providers differentiate services flexibility ipx model ultimately user choice background traditionally voice traffic interconnection operators utilized international ss7 tdm networks ip paradigm voip rapidly introduced operators forms ims minimize conversions packet switched voice circuit switched voice deploy ip based nni network network interface ip based interconnection network evident ip based services presence simply interconnected ss7 tdm network increasing evolution ip based interconnection network 2000 gsm operators grx gprs roaming exchange network routing ip based commercial roaming traffic visited operators 5g 3g data roaming grx grx private ip network separated internet consisting multiple grx carriers connected peering grx limited gsm operator community grx capable meeting demands real time services grx environment suitable common ip network interconnection roaming offers starting development ipx ipx development gsm association projects 2004 private backbone ip based interconnection handled internet internet natively supports ip protocol offers required global connectivity issues internet purpose alex sinclair gsma internet wonderful providing guaranteed quality service time critical services naturally operators service providers choose interconnection option multiple options time lead increased complexity architecture ipx architecture consists ipx providers connecting ipx peering traffic exchange signaling sip media rtp transported ipx specifications typical path traffic fixed mobile interconnection scenario illustrated peering ipx provider ipx provider exchange trafficipx offers bilateral multilateral interconnection bilateral traditional model operators bilaterally writing interconnection contract prior setting connection multilateral hand ipx provider extent takes care handling contract connectivity set behalf operators setting bilateral interconnection contracts connections tens hundreds operators major burden multilateral option operator multiple connections single contract single technical connection ipx provider interconnection deployment easier faster status principles ipx successively tested validated gsma 2004 onwards gsma sip trials tested ip based nni numerous ims based services ipx pre commercial implementation trials ongoing april 2007 focusing packet switched voice service gsma press release february 2008 explains ipx trials completed international carriers preparing roll ipx services ipx voice belgacom international carrier services citic 1616 deutsche telekom icss ibasis reach sap mobile services syniverse tata communications telecom italia sparkle telecom zealand international telefónica international wholesale services telekom austria telenor global services teliasonera international carrier comfone switzerland companies function ipx providers fixed mobile operators service provider types gsma support trials demand 
17178107	computerscience	sarcos american developer robotics microelectromechanical systems technologies founded 1980s spun university utah company specializes creating robotic devices military public safety applications sarcos wide variety applications ranging robotic pirates dinosaurs theme parks robotic fountains bellagio hotel las vegas nasa space suit testing equipment prosthetic limbs mems sensors time magazine named sarcos’ iron exoskeleton robot “the 50 inventions 2010” company developing robots improve safety efficiency variety industries including defense public safety manufacturing oil gas construction transportation mining infrastructure inspection health care history sarcos founded 1983 stephen jacobsen operated principally bioengineering institution 1992 jacobsen increased attention commercial animated film props prostheses human interfaces 2000 sarcos accepted grant darpa arm united department defense develop design powered exoskeleton suitable military applications darpa accepted sarcos design 2006 firm developing prototypes november 2007 raytheon purchased sarcos undisclosed sum seeking expand robotics production 2006 sarcos attracted media attention developing exoskeleton designed worn human time slated production 2008 united army 2007 2014 sarcos operated robotics division american defense contractor raytheon raytheon sarcos period raytheon sarcos focused exclusively developing technologies governmental agencies company division raytheon 2015 raytheon sarcos president mission center executive dr fraser smith technology entrepreneur ben wolff led consortium acquired business raytheon september 2016 cottonwood technology fund caterpillar ventures led financing provide sarcos growth capital commercialize products sarcos developed technologies partnership government agencies darpa nasa department homeland security fortune 100 companies boeing ford merck xerox parc universities mit carnegie mellon 260 invested development technologies 350 revenues 300 patents sarcos’ products represent decades advancements complex electro mechanical biologically inspired engineered systems sarcos recipients darpa funding decades products sarcos robotics focused commercializing family dexterous robots enable human operators perform tasks physical environments inaccessible dangerous humans task dangerous time consuming humans perform safely efficiently guardian snake scorpion robots sarcos guardian robot represents surveillance inspection robot capable cost effective portable weighing pounds snake robot tele operated miles reliably traverse challenging terrains including stairs culverts pipes tanks vertical surfaces facilitate real time video voice communication sarcos scorpion robot advanced version snake robot equipped precision force sensing effectors enable highly dexterous tasks tele operation control remote inspection monitoring tool optional interventional capabilities snake scorpion robots wide applicability industries ranging public safety security destructive testing defense disaster recovery infrastructure inspection maintenance aerospace maritime oil gas mining presently sarcos demonstrating guardian robot public safety personnel robot solve existing unmet public safety “man portable” superior surveillance capabilities possessing ability climb stairs vehicles optional effectors future dexterously manipulate defuse explosive devices guardian arm robots sarcos guardian combination dexterity strength operator mounted agile vehicle base sarcos gt’s dual armed lift payloads 000 pounds dexterously minimal human effort utilizing sarcos’s proprietary fidelity force reflection technology operator feels scaled forces experienced arms tele operated miles result sarcos gt’s intuitive robust safe operate dangerous hazardous environments requires minimal training enables handling difficult manipulate objects degree control current demonstrated improve shipbuilding efficiency safely completing minutes tasks typically workers hours perform minimizing opportunity human injury sarcos intends initially market product manufacturing construction logistics transportation markets guardian xo – exoskeleton robot building sarcos’ award winning xos exoskeleton robot sarcos guardian xo robot represents stages evolution performance highly dexterous untethered robots guardian xo commercial version xos augments human strength endurance enabling operator perform hours physical activity impossible single human perform guardian xo relevant multitude global markets including manufacturing construction health care logistics oil gas public safety defense industries guardian xo development powered exoskeleton history 2000 darpa requested design proposals powered military exoskeleton 14 designs submitted darpa chose submitted sarcos sarcos design involves suit powered single engine including tank holding 30 hours fuel sits wearer buttocks suit wearer increased strength endurance servo motors powered engine finished suit named xos exoskeleton weighs 195 pounds popular science reported xos wearers ability lift repeatedly minimal strain darpa specifications suit lifting xos meets criterion time magazine named sarcos’ iron exoskeleton robot “the 50 inventions 2010” army initial production models xos logistics supply tasks repetitive lifting heavy objects future models combat customizations firing heavy weapons transporting wounded soldiers iteration raytheon sarcos xos released 2010 product development history inception 1983 sarcos produced wide variety robotic devices applications built undersea salvage robots united navy units law enforcement organizations sarcos builds robotic props films amusement park attractions sarcos built animated pirates pirates caribbean attraction appearing disney theme parks wicked witch west audio animatronic disney hollywood studios movie ride robotic dinosaurs jurassic park ride universal studios hollywood robotic fountains bellagio casino las vegas 
17447039	computerscience	automata theory branch science dfa minimization task transforming deterministic finite automaton dfa equivalent dfa minimum dfas called equivalent recognize regular language algorithms accomplishing task standard textbooks automata theory minimum dfa regular language exists minimal automaton accepts dfa minimum dfa unique names minimal dfa ensures minimal computational cost tasks pattern matching classes removed merged original dfa language accepts minimize dfa minimization steps removal merger relevant elimination nondistinguishable computationally expensive step unreachable dfa Σ δ unreachable string Σ exists δ reachable algorithm unreachable removed dfa language accepts nondistinguishable hopcroft algorithm algorithm merging nondistinguishable dfa based partition refinement partitioning dfa behavior represent equivalence classes myhill–nerode equivalence relation partition equivalent behavior input sequences belong equivalence class partition input word transitions determined equal accept reject accepting rejecting vice versa pseudocode describes algorithm algorithm starts partition coarse pair equivalent myhill–nerode relation belong set partition pairs inequivalent belong set gradually refines partition larger sets step splitting sets pairs subsets inequivalent initial partition separation subsets behavior accepting rejecting algorithm repeatedly chooses set current partition input symbol splits sets partition subsets subset lead input symbol subset lead behavior sets partition subsets lead behavior subsets lead splits type algorithm terminates lemma fixed character equivalence class splits equivalence classes refine partition suppose equivalence class splits equivalence classes suppose classes transitions character transitions character lemma choose distinguisher split transitions simply split current iteration algorithm refined distinguisher observation split referring classes correctly subsets wo purpose outermost statement patch set distinguishers previous statement algorithm split obsolete split classes future iterations replaced splits observation splits lemma choosing splits guarantees addition size core hopcroft algorithm speed explained paragraph worst running time algorithm size alphabet bound transitions automaton sets drawn target transition sizes decrease relative factor transition participates splitting steps algorithm partition refinement data structure splitting step performed time proportional transitions participate remains efficient algorithm solving distributions inputs average complexity hopcroft algorithm input dfa equivalence classes minimum dfa constructed forming equivalence class set input character transition minimum dfa input set input automaton input initial minimum dfa initial input dfa accepting minimum dfa accepting input dfa moore algorithm moore algorithm dfa minimization hopcroft algorithm maintains partition starts separating accepting rejecting repeatedly refines partition refinements step replaces current partition coarsest common refinement partitions current preimages current partition transition functions input symbols algorithm terminates replacement change current partition worst time complexity step algorithm performed time variant radix sort reorder set partition consecutive steps increases sets partition instances dfa minimization worst behavior hopcroft algorithm steps algorithm performs average constant performance depending random distribution automata chosen model algorithm average behavior brzozowski algorithm observed reversing edges dfa produces deterministic finite automaton nfa reversal original language converting nfa dfa standard powerset construction constructing reachable converted dfa leads minimal dfa reversed language repeating reversal operation time produces minimal dfa original language worst complexity brzozowski algorithm exponential regular languages minimal dfa reversal exponentially larger minimal dfa language frequently performs worst nfa minimization procedures dfas method partitioning deterministic finite automata nfas exhaustive search minimize nfa polynomial time algorithm minimize nfas pspace unsolved conjecture computational complexity theory believed false methods nfa minimization efficient brute force search 
17540116	computerscience	soundhound founded 2005 audio speech recognition company develops voice recognition natural language understanding sound recognition search technologies feature products houndify voice developer platform hound voice enabled digital assistant soundhound music recognition mobile app company’s headquarters santa clara california history company founded 2005 keyvan mohajer candidate stanford studying speech recognition 2009 company midomi app rebranded soundhound 2012 soundhound announced 100 users globally 2014 soundhound music search product wearable soundhound music recognition service shipping autos partnership hyundai 2015 genesis 2016 soundhound 300 users globally funding article june 2015 soundhound raised total 40 funding global catalyst partners translink capital walden venture capital investors included series funding company secured october 2008 bringing total funds raised 12 time led translink capital participation jaic america series investor global catalyst partners 2009 attracted additional funding larry marcus walden venture capital invested music startups pandora snocap funding led walden venture capital vii participation unnamed device manufacturer january 2017 company raised 75 investment included nvidia samsung kleiner perkins caulfield byers announced 2018 soundhound raised 100 funding led tencent joined daimler hyundai motors midea orange funding valuation company reached 
17548151	computerscience	list real time operating systems rtos operating time process input stimulus time lapsed input stimulus type 
17906130	computerscience	postmodernism generator program automatically produces close imitations postmodernist writing written 1996 andrew bulhak monash university dada engine generating random recursive grammars version hosted online essays produced formal grammar defined recursive transition network nassim nicholas taleb writes monte carlo generators 2001 book fooled randomness real instance reverse turing human declared unintelligent writing told generated mentioned biologist richard dawkins conclusion article postmodernism disrobed 1998 scientific journal nature reprinted book devil chaplain 2004 
18015568	computerscience	gnome chess glchess graphical featuring 2d 3d chessboard interface gnome chess comprise chess engine play party chess engine linux distributions package gnu chess default chess engine additionally gnome chess supports party chess engines automatically detected gnome chess written vala 2d rendering gtk cairo librsvg 3d support optionally opengl gnome desktop environment gnome games gnome chess source software subject terms gnu public license gpl version party chess engines gnome chess supports plethora chess engines glchess predecessor gnome chess cecp universal chess interface compatible software history glchess written robert ancell 2000 personal project source development version written opengl graphics glut user interface released playable version capable draw board pieces days 31 version finally included sourceforge playable basic april 2001 version changed glut gtk focusing improvement visual aspects chess artificial intelligence version june 27 play artificial intelligence engines crafty gnu chess chess engine communication protocol cecp implementation ported irix platform december version project entered stand time december 2004 advance version accelerate achievement version network support updated gtk version december 2005 version intended release replaced python improve platform portability maintenance approach codebase testing december 16 2006 glchess finally reached version apple chess fork gnome chess version 14 3d mode removed 
18105369	computerscience	symbian foundation profit organisation stewarded symbian operating mobile phones owned licensed symbian symbian foundation developed platform evangelised ordinated ensured compatibility key services community collecting building distributing symbian source code time competed handset alliance limo foundation toc operational phase 2009 2010 foundation founded nokia sony ericsson ntt docomo motorola texas instruments vodafone lg electronics samsung electronics stmicroelectronics change device strategy lg motorola left foundation board creation replaced fujitsu qualcomm innovation center operational phase 2009 2010 symbian foundation invited companies attracted 200 categories closure symbian foundation change focus funding board symbian foundation announced november 2010 transition legal entity responsible licensing software intellectual property operational responsibilities staff transition result global economic market conditions attributed stiff competition os ios android announcement nokia announced governance symbian platform nokia major contributor code maintaining code repository platform development purchase symbian regularly releasing development public repository 17 december 2010 symbian foundation public sites wiki code repositories shut nokia launched symbian samsung sony ericsson left foundation favor google handset alliance android operating leaving japan ntt docomo major nokia partner announcement nokia partnership february 2011 transition windows phone os primary platform development symbian stopped outsourced accenture nokia closed service 2012 transition completed april 2011 symbian foundation remain trademark holder licensing entity executive directors involved 
18457137	computerscience	personal pc multi purpose size capabilities price feasible individual pcs intended operated user expert technician time sharing models typically larger expensive minicomputer mainframe systems enable people time pcs owners 1960s invariably institutional corporate write programs machines 2010s personal users access wide range commercial software charge software freeware source software ready form software personal computers typically developed distributed independently hardware os manufacturers personal users write programs personal user programming feasible contrasts mobile systems software manufacturer supported channel user program development discouraged lack support manufacturer 1990s operating systems intel hardware dominated personal market dos windows alternatives windows operating systems occupy minority share industry include apple macos source unix operating systems linux advanced micro devices amd main alternative intel processors terminology pc initialism personal ibm personal incorporated designation model ibm brand marketing context distinguish personal computers ibm personal family personal computers manufacturers pc contrast mac apple macintosh sense word mac advertisement campaign 2006 2009 rival pc campaign appeared 2008 apple products mainframes time sharing systems personal computers pc brand computershistory history computing examples computers designed person opposed terminals connected mainframe computers computers developed meet modern definition personal computers designed person easy cheap individual narrow definition operated person personal eniac operational 1946 meet definitions affordable easy bendix g15 1956 intended operating staff costly personally owned single user lgp 30 created 1956 stan frankel science engineering basic data processing retail price 46 000equivalent 000 introduced 1965 york worlds fair programma 101 printing programmable calculator advertisements desktop manufactured italian company olivetti invented italian engineer pier giorgio perotto inventor magnetic card program storage soviet mir series computers developed 1965 1969 headed victor glushkov designed scale engineering scientific applications contained hardware implementation level programming language innovative feature time user interface combining keyboard monitor light pen correcting texts drawing screen called mother demos sri researcher douglas engelbart 1968 preview staples daily life 21st century mail hypertext word processing video conferencing mouse demonstration required technical support staff mainframe time sharing costly individual business time 1970s people academic institutions opportunity single person interactive mode extended durations systems expensive owned single person personal computersgenerally called microcomputerswere sold kit form limited volumes hobbyists technicians minimal programming toggle switches enter instructions output panel lamps practical required adding peripherals keyboards displays disk drives printers micral earliest commercial kit microcomputer based microprocessor intel 8008 built starting 1972 units sold preceded datapoint 2200 1970 intel 8008 commissioned accepted cpu design implemented datapoint 2200 basis x86 architecture original ibm pc descendants 1973 ibm los gatos scientific center developed portable prototype called scamp special apl machine portable based ibm palm processor philips compact cassette drive crt function keyboard scamp emulated ibm 1130 minicomputer apl 1130 1973 apl mainframe computers desktop sized microcomputers wang 2200 hp 9800 offered basic scamp emulate apl 1130 performance portable single user pc magazine 1983 designated scamp revolutionary concept personal seminal single user portable resides smithsonian institution washington successful demonstrations 1973 scamp prototype led ibm 5100 portable microcomputer launched 1975 ability programmed apl basic engineers analysts statisticians business solvers late 1960s machine desks weighed ton desktop portable apl machine mcm 70 demonstrated 1973 shipped 1974 intel 8008 processor seminal step personal computing 1973 xerox alto developed xerox palo alto center parc graphical user interface gui served inspiration apple macintosh windows operating alto demonstration project commercialized expensive affordable 1973 hewlett packard introduced basic programmable microcomputers fit desk including keyboard display printer wang 2200 microcomputer 1973 size cathode ray tube crt cassette tape storage expensive specialized computers sold business scientific introduction microprocessor single chip circuitry occupied cabinets led proliferation personal computers 1975 1974 introduction considered true personal altair 8800 created micro instrumentation telemetry systems mits based bit intel 8080 microprocessor altair recognized spark ignited microcomputer revolution commercially successful personal bus designed altair facto standard form 100 bus programming language machine founding product altair basic 1976 steve jobs steve wozniak sold apple circuit board prepared contained 30 chips apple differed kit style hobby computers era request paul terrell owner byte shop jobs wozniak purchase 50 apple computers computers assembled tested kit terrell computers sell wide range users experienced electronics hobbyists soldering skills assemble kit apple delivered technically kit power supply keyboard delivered byte shop mass marketed personal announced commodore pet revealed january 1977 months april apple referred apple announced units shipped june 1977 trs 80 tandy corporation tandy radio shack august 1977 sold 100 000 units lifetime machines referred 1977 trinity mass market ready assembled computers arrived allowed wider range people computers focusing software applications development processor hardware 1980s computers developed household software personal productivity programming games typically television display blocky graphics limited color range 40 characters wide 25 characters tall sinclair company produced zx seriesthe zx80 1980 zx81 1981 zx spectrum introduced 1982 totaled unit sold commodore 64 totaled 17 units sold nec pc 98 introduced popular personal sold 18 units famous personal revolutionary amiga 1000 unveiled commodore july 23 1985 amiga 1000 featured multitasking windowing operating color graphics 4096 color palette stereo sound motorola 68000 cpu 256 kb ram 880 kb inch disk drive 295 larger expensive systems running cp additional interfaces devices cost compared minicomputers mainframes aimed office business typically resolution monitors capable 80 column display graphical color drawing capability workstations characterized performance processors graphics displays capacity local disk storage networking capability running multitasking operating eventually influence ibm pc personal market personal computers computers lost technical distinction business computers acquired color graphics capability sound computers game systems users processors operating systems office workers mass market computers graphics capabilities memory comparable dedicated workstations local networking originally business computers share expensive mass storage peripherals standard feature personal computers 1982 named machine time magazine 2010s companies hewlett packard sony sold pc laptop divisions result personal declared dead times period types stationary workstation workstation personal designed technical mathematical scientific applications intended person time commonly connected local network multi user operating systems workstations tasks aided design drafting modeling computation intensive scientific engineering calculations image processing architectural modeling graphics animation motion picture visual effects desktop widespread pcs fit desk remarkably leading desktop nomenclature phrase style desktop computers variety styles ranging vertical tower models tucked lcd monitor term desktop typically refers vertically aligned holds systems hardware components motherboard processor chip internal operating desktop computers external monitor display screen external keyboard plugged usb ports desktop computers popular business computing applications leave space desk multiple monitors gaming gaming standard desktop typically performance hardware powerful video card processor memory handle requirements demanding video games simply called pc games companies alienware manufacture prebuilt gaming computers companies razer logitech market mice keyboards headsets geared gamers pcs single unit pcs subtype desktop combines monitor processor single unit separate keyboard mouse standard input devices monitors including touchscreen capability processor components typically reduced size relative standard desktops located monitor configured laptops nettop subtype desktops called nettops introduced intel february 2008 characterized cost lean functionality subtype laptops notebooks netbook product features intel atom processor enables nettops consume power fit enclosures theater pc theater pc htpc convergence device combines functions personal digital video recorder connected set appropriately sized display digital photo viewer music video player receiver digital video recorder htpcs referred media center systems media servers goal htpc combine components theater setup box htpcs gained ability connect services providing demand movies htpcs purchased pre configured required hardware software add television programming pc cobbled discrete components commonly software support mythtv windows media center pvr sagetv famulent linuxmce portable laptop laptop called notebook desktop designed portability hardware interfaces operate laptop graphics card audio devices usb ports parallel serial ports built single unit laptops clamshell design keyboard components panel flat display screen panel hinged panel laptop closed transport closing laptop protects screen keyboard transportation laptops power cable plugged capacity batteries power device enhancing portability battery charge depleted recharged power outlet saving power weight space laptop graphics cards integrated cpu chipset ram reduced graphics performance compared equivalent desktop machine reason desktop computers preferred laptops gaming purposes drawbacks laptops size configuration components upgrade original design add components internal upgrades manufacturer recommended damage laptop poor care knowledge impossible desktop pc modular upgradable desktop pcs typically extra space users install components internal upgrades laptops memory hard disk drive upgrades easily performed display keyboard upgrade difficult impossible desktops laptops input output ports connecting wide variety devices including external displays mice cameras storage devices keyboards attached externally usb ports common ports external video laptops expensive compared desktops miniaturized components laptops expensive subtype notebooks called subnotebook features standard laptop physical dimensions subnotebooks larger hand held computers versions desktop laptop operating systems ultra mobile pcs umpc considered subnotebooks subnotebook tablet pcs netbooks considered belong category separated category desktop replacement desktop replacement dtr personal capabilities desktop remaining mobile computers larger bulkier laptops increased size class computers includes powerful components larger display portable computers limited battery capacity limited range desktop components provide performance expense battery life desktop replacement computers called desknotes portmanteau desktop notebook term applied desktop replacement computers netbook netbooks called mini notebooks subnotebooks subgroup laptops acting category lightweight inexpensive laptop computers suited computing tasks accessing based applications marketed companion devices intention augment user access resources walt mossberg called category light minimalist cheap laptops august 2009 cnet called netbooks cheaper notebooks initially primary defining characteristic netbooks lack optical disc drive requiring separate external device flash memory devices gradually increased capacity replacing writable optical disc dvd transportable storage medium inception late 2007as notebooks optimized weight costnetbooks key features optical drive featured screens keyboards offered reduced specifications computing power evolution netbooks ranged screen sizes inches 13 inches weights expensive laptops mid 2009 netbooks offered users charge extended service contract purchase cellular data plan short period appearance netbooks grown size features converging lighter notebooks mid 2009 cnet specs average shopper confused noting conclusion distinction devices tablet tablet type portable pc emphasizes traditional input devices mouse keyboard touchscreen display controlled stylus pen finger tablets hybrid convertible design offering keyboard removed attachment screen rotated folded keyboard tablets traditional pc operating windows linux attempted enter tablet market 2002 tablet pc specifications tablets convertible laptops running windows xp attempts overshadowed release apple ipad footsteps tablets mobile operating systems android ios response built windows operating accommodate touch oriented devices tablet computers usb ports keyboard mouse connected smartphone smartphones practically devices tablet computers differences smartphones tablets cellular integration modern smartphones slate form factor ultra mobile pc ultra mobile pc ump specification configuration tablet pcs developed joint development exercise intel samsung current umpcs typically feature windows xp windows vista windows 7 linux operating voltage intel atom c7 processors pocket pc pocket pc hardware specification handheld sized personal digital assistant pda runs windows mobile operating capability alternative operating netbsd linux pocket pcs capabilities desktop pcs numerous applications handhelds adhering pocket pc specification freeware compliant pocket pcs add ons gps receivers barcode readers rfid readers cameras 2007 release windows mobile dropped pocket pc favor naming scheme devices integrated phone called windows mobile classic pocket pc devices integrated phone touch screen called windows mobile professional hardware file personal exploded svg thumb upright 35 exploded view personal peripherals optional hardware comprehensive term physical distinguished data operates software instructions hardware accomplish tasks boundary hardware software blurred existence firmware software built hardware 2010 era lcd display screen mass market consumer computers highly standardized components simple user assemble 2010s era computers require users plug power supply monitor cables typical desktop consists tower metal chassis holds power supply motherboard hard disk drive optical disc drive towers space users add additional components external devices monitor visual display unit keyboard device mouse personal motherboard connects processor memory peripheral devices ram graphics card processor mounted motherboard central processing unit microprocessor chip plugs cpu socket memory modules plug memory sockets motherboards video display adapter sound peripherals integrated motherboard expansion slots graphics cards network cards devices graphics card sound card employ break box analog electromagnetic radiation disk drives provide mass storage connected motherboard cable power supply cable disk drives mounted motherboard expansion chassis additional disk storage amounts data tape drive extra hard disks external keyboard mouse external devices plugged connectors panel monitor connected input output panel onboard port motherboard port graphics card capabilities personal computers hardware extended addition expansion cards connected expansion bus standard peripheral buses adding expansion cards personal computers include pci pci express pcie agp speed pci bus dedicated graphics adapters computers modern personal computers multiple physical pci express expansion slots pci slots enclosure main components constructed steel aluminum combined plastic materials wood tempered glass specialized units sizes shapes size shape determined configuration motherboard designed accommodate largest central component computers popular style desktop computers atx microatx layouts popular variety companies shuttle aopen popularized flexatx common motherboard size 1990s desktop larger taller 2010 era power supply unit power supply unit psu converts purpose mains ac electricity direct current dc components rated output capacity psu 40 calculated power consumption adding components protects overloading supply guards performance degradation power supply capacities range 250 2000 watts desktop computers processor central processing unit cpu executes instructions software program pcs cpu transistors integrated circuit chip called microprocessor processor plugs motherboard processor chip heat sink fan attached cooling computers suited x86 compatible microprocessor manufactured intel amd technologies motherboard motherboard referred board main board primary circuit board personal major components plug cable motherboard microprocessor cpu supporting circuitry integrated circuits provide interface memory input output peripheral circuits main memory facilities initial setup power called boot firmware ibm pc compatible computers bios uefi portable embedded personal computers motherboard houses pc core components motherboard peripheral buses physical connectors expansion purposes secondary daughter board connected motherboard provide expandability satisfy space constraints main memory pc main memory fast primary storage device accessible cpu store executing program data pcs semiconductor random access memory ram kinds dram sdram sram primary storage exact depends cost performance issues time main memory faster mass storage devices hard disk drives optical discs volatile meaning retain contents instructions data absence power expensive capacity mass storage result main memory suitable term archival data storage storage drive mass storage devices store programs data power require power perform read write functions usage flash memory dropped cost prevailing form mass storage personal computers hard disk drive mass storage controller additional ports expandability pc upgraded addition extra hard disk optical disc drives roms dvd rws optical disc recorders user pcs standard internal storage device connection interfaces pata sata scsi solid drives ssds faster replacement traditional mechanical hard disk drives expensive terms cost gigabyte solid drives connect connectors including sata models nvme protocol vastly improved performance standard hard disk drives ssds ahci protocol visual display unit visual display unit monitor display piece electrical equipment separate displays visual images producing permanent record display device crt 1980s 2000s flat panel displays tft lcd replaced bulkier heavier crt screens multi monitor setups common 2010s enable user display multiple programs time email inbox word processing program display unit houses electronic circuitry generates picture signals received integral motherboard plugged expansion card pre processing circuitry convert microprocessor output data format compatible display unit circuitry images monitors originally contained graphical user interfaces emerged common display images multimedia content term monitor technicians broadcasting television picture broadcast data displayed highly standardized reference monitor confidence checking purposes video card video cardotherwise called graphics card graphics adapter video adapterprocesses graphics output motherboard transmits display essential modern multimedia enriched computing graphics circuitry integrated motherboard cards istalled pci agp pci express slots ibm pc introduced existing business oriented personal computers display adapters graphics capability computers time graphics compatible television signals resolution limited memory bit processors time keyboard keyboard arrangement buttons correspond function letter primary devices inputting array organized letters functions printed engraved button designed operators language versions languages exist english common layout qwerty layout originally typewriters evolved time modified computers addition function arrow specific operating specific functions achieved pressing multiple succession inputting characters accents task manager programs keyboard shortcuts keyboard shortcuts program specific operations refreshing browser selecting word processor addition alphabetic typewriter keyboards typically numeric keyboard row function special ctrl alt del escmany keyboards include led lights increase visibility letters symbols dark environments mouse mouse handheld device users hold slide flat surface elements graphical user interface screen cursor selecting moving objects mouse buttons mice plugged dedicated mouse socket usb port connected wirelessly mice include buttons user signal carry operation selecting item menu choices screen mouse scroll wheel users displayed image scroll wheel pressed button mouse wheels tilted sideways scrolling programs functions scroll horizontally default scroll wheel menus buttons functions user defined software utilities mechanical mice ball drove pulse generators detect movement north south east west axies optical mice special mouse pad printed grid detection motion imaging chip detection motion opaque surface components computers require fixed removable storage operating programs user generated material computers compact audio cassettes file storage time cost storage solution displaced floppy disk drives manufacturing costs dropped mid 1980s initially 25 inch inch floppy drives principal forms removable storage backup user files distribution software memory sizes increased capacity floppy pace zip drive capacity removable media introduced prevalent floppy drive late 1990s optical drive dvd blu ray disc forms main method software distribution writeable media data backup file interchange result floppy drives uncommon desktop personal computers 2000 dropped laptop systems earlier generation tape recorders videocassette recorders pressed service backup media larger disk drives systems reliable slower purpose built magnetic tape drives tape drives uncommon consumer type personal computers necessity business industrial interchange data photographs digital cameras greatly expedited installation card reader compatible forms flash memory devices faster convenient amounts data removing card mobile device communicating mobile device usb interface usb flash drive performs data transfer backup functions floppy drives zip disks devices mainstream operating systems personal computers provide built support usb flash drives allowing interchange computers processors operating systems compact size lack moving dirt sensitive media combined cost capacity usb flash drives popular accessory personal user operating located storage typically installed hard disk solid drive live represents concept running operating slow compared storing operating hard disk drive typically installation operating systems demonstrations recovery special purposes flash memory expensive hard disk drives size mid 2014 starting laptop computers weight size power requirements communications involve internal modem cards modems network adapter cards routers common peripherals adapter cards include headsets joysticks microphones printers scanners sound adapter cards separate card located motherboard speakers webcams software software program procedure documentation performs task term includes application software word processors perform productive tasks users software operating systems interface hardware provide services application software middleware controls ordinates distributed systems software applications common word processing internet browsing internet faxing mail digital messaging multimedia playback playing game programming user knowledge operating environment application programs programming write programs software written personal computers designed simplicity user friendliness mind software industry continuously provide wide range products personal computers targeted expert expert user operating operating os manages resources programmers interface access resources operating processes data user input responds allocating managing tasks internal resources service users programs operating performs basic tasks controlling allocating memory prioritizing requests controlling input output devices facilitating networking managing files common contemporary desktop operating systems windows macos linux solaris freebsd windows macos linux server personal variants exception windows designs inspired inherited unix operating developed bell labs late 1960s spawned development numerous proprietary operating systems windows windows collective brand operating systems 2015 installed pcs built hp dell lenovo remaining volume manufacturers introduced operating environment named windows november 1985 add dos response growing graphical user interfaces guis generated apple 1984 introduction macintosh client server versions windows windows windows server 2016 macos macos os x operating systems developed marketed sold apple macos successor original mac os apple primary operating 1984 macos unix based graphical operating snow leopard leopard lion mountain lion mavericks yosemite el capitan sierra version codenames version macos codenamed macos mojave macos based mach kernel freebsd netbsd implementation unix incorporated nextstep core mac os libraries utilities freebsd derived netbsd future development os freebsd reference code base bsd technology ongoing closely synchronize bsd tools libraries freebsd stable branch freebsd freebsd operating variety platforms focuses features speed stability derived 4bsd version unix developed university california berkeley developed maintained community freebsd popular server performance stability suited day day desktop 30 000 applications freebsd packages ports easy build customized desktop runs wide variety desktop applications specific projects category include improved fuse support linuxulator improvements intel graphics support wifi improvements 802 11ac support driver updates finish integrate packaged base effort people servers thinking freebsd freebsd continues client devices laptops desktops developers ongoing basis variety usage conditions addition technologies transition perceived relevant client devices critical requirement servers – power management openzfs integration source file logical volume manager originally designed sun microsystems downstream projects trueos bit cutting edge freebsd project trident desktop focused operating based trueos linux gnu linux family unix operating systems linux prominent examples software source development typically underlying source code freely modified redistributed linux refers linux kernel started 1991 linus torvalds utilities libraries gnu operating announced 1983 richard stallman gnu contribution basis alternative gnu linux user land busybox distros alpine linux servers lamp application stack prominent examples linux supported corporations dell hewlett packard ibm novell oracle corporation red hat canonical sun microsystems operating wide variety hardware including desktop computers netbooks supercomputers video game systems steam machine playstation 3 option removed remotely sony 2010 arcade games embedded devices mobile phones portable media players routers stage lighting systems applications user application software carry specific task software supports applications common services memory management network connectivity device drivers applications user simplified analogy hardware relationship electric light bulb application electric power generation plant power plant generates electricity real harnessed application electric light performs service benefits user typical examples software applications word processors spreadsheets media players multiple applications bundled package referred application suite office libreoffice bundle word processor spreadsheet discrete applications typical examples separate applications suite user interface commonality easier user learn application capability interact beneficial user spreadsheet embedded word processor document created separate spreadsheet application user development tailors systems meet user specific user written software include spreadsheet templates word processor macros scientific simulations graphics animation scripts email filters user software users create software overlook gaming pc gaming popular pc market april 2014 market analysis gaming platforms steam software uplay origin gog competitive sports titles league legends responsible pc systems overtaking console revenue 2013 sales market share 2001 125 personal computers shipped comparison 48 000 1977 500 personal computers 2002 personal computers sold worldwide mid 1970s time figure 75 professional rest sold personal 81 personal computers shipped desktop computers 16 laptops servers united received 38 394 computers shipped europe 25 11 asia pacific region fastest growing market 2002 expected sold 2008 households western europe personal 40 homes united kingdom compared 13 1985 global personal shipments 350 units 2010 308 units 2009and 302 units 2008 shipments 264 units 2007 isuppli 11 239 2006 2004 global shipments 183 units 11 increase 2003 2003 152 computers shipped estimated 175 2002 136 pcs shipped estimated 175 2000 140 personal computers shipped estimated 226 worldwide shipments personal computers surpassed 100 mark 1999 growing 113 units 93 units 1998 1999 asia 14 units shipped june 2008 personal computers worldwide hit expected reached 2014 mature markets united western europe japan accounted 58 worldwide installed pcs emerging markets expected double installed pcs 2012 70 pcs 180 computers 16 existing installed base expected replaced 35 dumped landfill 2008 installed base grew 12 annually based international data corporation idc data q2 2011 time china surpassed pc shipments 18 17 trend reflects rising emerging markets relative stagnation mature regions developed vendor tradition adding functions maintain prices personal computers introduction laptop child foundation cost xo laptop computing industry started pursue price introduced earlier 14 netbooks sold 2008 regular manufacturers companies rugged versions computers sprung offering alternatives people operating machines extreme weather environments 2011 deloitte consulting firm predicted smartphones tablet computers computing devices surpass pcs sales happened 2012 2013 worldwide sales pcs begun fall consumers moved tablets smartphones gifts personal sales 90 units 4th quarter 2012 represented decline sales 4th quarter 2011 global pc sales fell sharply quarter 2013 idc data 14 decline largest record firm tracking 1994 double analysts expecting decline q2 2013 pc shipments marked straight quarter falling sales horrific news pcs remarked analyst mobile computing reached tipping data gartner decline time period china lenovo bucked trend strong sales time buyers developing allowed company sales stay flat windows designed tablet smartphone software cited contributing factor decline pc sales windows launch didn’t provide positive boost pc market appears slowed market idc vice president bob o’donnell august 2013 credit suisse published findings attributed 75 operating profit share pc industry operating intel semiconductors idc 2013 pc shipments dropped drop consumers trends mobile devices quarter 2018 pc sales grew time quarter 2012 firm gartner growth business market consumer market experienced decline average selling price selling prices personal computers steadily declined costs production manufacture capabilities computers increased 1975 altair kit sold 400 required customers solder components circuit boards peripherals required interact alphanumeric form blinking lights add 000 resultant hobbyists introduction 1981 795 price osborne competitor kaypro considered attractive price systems displays floppy disks storage 1982 michael dell observed personal selling retail 000 components cost dealer 600 typical gross margin unit 000 total personal purchases 1983 comparable total sales pet food late 1998 average selling price personal systems united dropped 000 windows systems average selling price asp decline 2008 2009 cost netbooks drawing 569 desktop computers 689 laptops retail august 2008 2009 asp fallen 533 desktops 602 notebooks january 540 560 february firm npd average selling price windows portable pcs fallen 659 october 2008 519 october 2009 environmental impact external costs environmental impact included selling price personal computers impact differs desktop computers laptops personal computers contributor 50 tons discarded electronic waste generated annually united nations environment programme address electronic waste issue developing countries environment extended producer responsibility epr acts implemented countries organizations silicon valley toxics coalition basel action network toxics link india scope greenpeace contributed efforts absence comprehensive national legislation regulation export import electronic waste silicon valley toxics coalition ban basel action network teamed 32 electronic recyclers canada create steward program orderly disposal manufacturers customers electronic waste silicon valley toxics coalition founded electronics takeback coalition coalition advocates production environmentally friendly products takeback coalition policy makers recyclers smart businesses manufacturers responsibility products organizations opposing epr regulation reason foundation flaws principal tenets epr epr relies idea manufacturers pay environmental harm adapt practices epr assumes current design practices environmentally inefficient reason foundation claims manufacturers naturally reduced material energy 
18662920	computerscience	integrated circuits stepping level revision level version refers introduction revision photolithographic photomasks set photomasks pattern integrated circuit term originated equipment steppers exposes photoresist light integrated circuits primary classes mask sets base layers build structures logic transistors metal layers connect logic typically integrated circuit manufacturer intel amd invests money stepping revision masks bugs logic improvements design faster processing increase yield improve bin splits create faster transistors faster cpus improve maneuverability easily identify marginal circuits reduce time reduce cost testing integrated circuits interrogating discover stepping level x86 cpus executing cpuid eax register set values registers cpu stepping level stepping identifiers commonly alphabetic letter numeric b2 letter revision level chip base layers revision level metal layers change letter change base layer mask revision metal layers change metal layer–only mask revision analogy major minor revision software versioning base layer revision time consuming expensive manufacturer fixes difficult impossible accomplish metal integrated circuit intel core microarchitecture steppings previous microarchitectures represent incremental improvements sets features cache size power modes steppings brands typically disabling features limiting clock frequencies chips steppings reduced cache size separate naming scheme releases alphabetic 
18801266	computerscience	battery management bms electronic manages rechargeable battery cell battery pack protecting battery operating safe operating monitoring calculating secondary data reporting data controlling environment authenticating balancing battery pack built battery management external communication data bus smart battery pack smart battery pack charged smart battery charger functions monitor bms monitor battery represented items computation additionally bms calculate values based items communication central controller bms communicates internally cell level hardware externally level hardware laptops hmi level external communication simple methods voltage centralized bmss internal communications measure cell voltage resistance divide distributed modular bmss level internal cell controller modular architecture controller controller distributed architecture communication types communications difficult voltage systems voltage shift cells cell ground signal hundreds volts cell ground signal software protocols hardware communication voltage shifting systems optical isolator wireless communication restriction internal communications maximum cells modular architecture hardware limited maximum 255 nodes voltage systems seeking time cells restriction limiting minimum bus speeds losing hardware options cost modular systems comparable cell price combination hardware software restrictions options internal communication protection bms protect battery preventing operating safe operating bms prevent operation battery safe operating battery connection load circuit bms feature precharge allowing safe connect battery loads eliminating excessive inrush currents load capacitors connection loads controlled electromagnetic relays called contactors precharge circuit power resistors connected series loads capacitors charged alternatively switched mode power supply connected parallel loads charge voltage load circuit level close battery voltage closing contactors battery load circuit bms circuit check relay closed precharging welding prevent inrush currents occur topologies bms technology varies complexity performance bms topologies fall categories centralized bmss economical expandable plagued multitude wires distributed bmss expensive simplest install offer cleanest assembly modular bmss offer compromise features topologies requirements bms mobile applications electric vehicles stationary applications stand upss server space weight constraint requirements hardware software implementations tailored specific electric hybrid vehicles bms subsystem standalone device communicate charger charging infrastructure load thermal management emergency shutdown subsystems vehicle design bms tightly integrated subsystems mobile applications medical equipment carts motorized wheelchairs scooters fork lifts external charging hardware board bms tight design integration external charger battery balancing methods based charge theory 
18949896	computerscience	cluster set loosely tightly connected computers respects viewed single grid computers clusters node set perform task controlled scheduled software components cluster connected fast local networks node server running instance operating circumstances nodes hardware operating setups source cluster application resources oscar operating systems hardware clusters deployed improve performance availability single typically cost effective single computers comparable speed availability clusters emerged result convergence computing trends including availability cost microprocessors speed networks software performance distributed computing wide range applicability deployment ranging business clusters handful nodes fastest supercomputers ibm sequoia prior advent clusters single unit fault tolerant mainframes modular redundancy employed upfront cost clusters increased speed network fabric favoured adoption clusters contrast reliability mainframes clusters cheaper scale increased complexity error handling clusters error modes opaque running programs basic concepts desire computing power reliability orchestrating cost commercial shelf computers rise variety architectures configurations clustering approach connects computing nodes personal computers servers fast local network activities computing nodes orchestrated clustering middleware software layer sits atop nodes users treat cluster cohesive computing unit single image concept clustering relies centralized management approach nodes orchestrated shared servers distinct approaches peer peer grid computing nodes distributed nature cluster simple node connects personal computers fast supercomputer basic approach building cluster beowulf cluster built personal computers produce cost effective alternative traditional performance computing project viability concept 133 node stone soupercomputer developers linux parallel virtual machine toolkit message passing interface library achieve performance cost cluster consist personal computers connected simple network cluster architecture achieve levels performance top500 organization semiannual list 500 fastest supercomputers includes clusters fastest machine 2011 distributed memory cluster architecture history greg pfister stated clusters invented specific vendor customers fit backup pfister estimates time 1960s formal engineering basis cluster computing parallel sort arguably invented gene amdahl ibm 1967 published regarded seminal paper parallel processing amdahl law history clusters tied history networks primary motivations development network link computing resources creating facto cluster production designed cluster burroughs b5700 mid 1960s allowed computers processors tightly coupled common disk storage subsystem distribute workload standard multiprocessor systems restarted disrupting operation commercial loosely coupled clustering product datapoint corporation attached resource arc developed 1977 arcnet cluster interface clustering digital equipment corporation released vaxcluster product 1984 vax vms operating named openvms arc vaxcluster products supported parallel computing shared file systems peripheral devices idea provide advantages parallel processing maintaining data reliability uniqueness noteworthy commercial clusters tandem himalayan circa 1994 availability product ibm 390 parallel sysplex circa 1994 business time frame clusters parallelism commodity network supercomputers success cdc 6600 1964 cray delivered 1976 introduced internal parallelism vector processing supercomputers excluded clusters relied shared memory time fastest supercomputers relied cluster architectures attributes clusters clusters configured purposes ranging purpose business service support computation intensive scientific calculations cluster availability approach note attributes exclusive cluster availability approach load balancing clusters configurations cluster nodes share computational workload provide performance server cluster assign queries nodes response time optimized approaches load balancing applications performance cluster scientific computations balance load algorithms server cluster simple robin method assigning request node clusters computation intensive purposes handling oriented operations service databases instance cluster support computational simulations vehicle crashes weather tightly coupled clusters designed approach supercomputing availability clusters failover clusters ha clusters improve availability cluster approach operate redundant nodes provide service components fail ha cluster implementations attempt redundancy cluster components eliminate single failure commercial implementations availability clusters operating systems linux ha project commonly software ha package linux operating benefits clusters designed performance mind installations based factors fault tolerance ability continue malfunctioning node scalability performance situations frequency maintenance routines resource consolidation raid centralized management advantages include enabling data recovery event disaster providing parallel data processing processing capacity terms scalability clusters provide ability add nodes horizontally computers cluster improve performance redundancy fault tolerance inexpensive solution performing cluster compared scaling single node cluster property clusters larger computational loads executed larger performing computers adding node cluster reliability increases entire cluster single node maintenance rest cluster takes load individual node computers clustered lends distributed file systems raid increase reliability speed cluster design configuration issues designing cluster tightly coupled individual nodes instance single job require frequent communication nodes implies cluster shares dedicated network densely located homogeneous nodes extreme job nodes inter node communication approaching grid computing beowulf cluster application programs computational nodes called slave computers interact master specific handling scheduling management slaves typical implementation master network interfaces communicates private beowulf network slaves purpose network organization slave computers typically version operating local memory disk space private slave network shared file server stores global persistent data accessed slaves special purpose 144 node degima cluster tuned running astrophysical body simulations multiple walk parallel treecode purpose scientific computations increasing computing power generation game consoles emerged repurposed performance computing hpc clusters examples game console clusters sony playstation clusters xbox clusters consumer game product nvidia tesla personal supercomputer workstation multiple graphics accelerator processor chips game consoles graphics cards graphics cards gpu calculations grid computing vastly economical cpu precise double precision values precise cpu costly purchase cost clusters historically separate physical computers operating advent virtualization cluster nodes separate physical computers operating systems painted virtual layer cluster virtualized configurations maintenance takes implementation xen virtualization manager linux ha data sharing communication data sharing clusters appearing 1980s supercomputers elements distinguished classes time supercomputers relied shared memory clusters typically physically shared memory supercomputer architectures abandoned clustered file essential modern clusters examples include ibm parallel file cluster shared volumes oracle cluster file message passing communication approaches communication cluster nodes mpi message passing interface pvm parallel virtual machine pvm developed oak ridge national laboratory 1989 mpi pvm installed cluster node set software libraries paint node parallel virtual machine pvm time environment message passing task resource management fault notification pvm user programs written fortran mpi emerged 1990s discussions 40 organizations initial effort supported national science foundation starting anew design mpi drew features commercial systems time mpi specifications rise specific implementations mpi implementations typically tcp ip socket connections mpi communications model enables parallel programs written languages fortran python pvm concrete implementation mpi specification implemented systems mpich mpi cluster management challenges cluster cost administrating times cost administrating independent machines cluster nodes advantage shared memory architectures administration costs virtual machines popular ease administration task scheduling multi user cluster access amounts data task scheduling challenge heterogeneous cpu gpu cluster complex application environment performance job depends characteristics underlying cluster mapping tasks cpu cores gpu devices challenges ongoing algorithms combine extend mapreduce hadoop proposed studied node failure management node cluster fails strategies fencing employed rest operational fencing process isolating node protecting shared resources node appears malfunctioning classes fencing methods disables node disallows access resources shared disks stonith method stands shoot node head meaning suspected node disabled powered instance power fencing power controller inoperable node resources fencing approach disallows access resources powering node include persistent reservation fencing scsi3 fibre channel fencing disable fibre channel port global network block device gnbd fencing disable access gnbd server software development administration parallel programming load balancing clusters servers cluster architectures support users typically user request routed specific node achieving task parallelism multi node cooperation main goal providing rapid user access shared data clusters perform complex computations users advantage parallel processing capabilities cluster partition computation nodes automatic parallelization programs continues remain technical challenge parallel programming models effectuate degree parallelism simultaneous execution separate portions program processors debugging monitoring development debugging parallel programs cluster requires parallel language primitives suitable tools discussed performance debugging forum hpdf hpd specifications tools totalview developed debug parallel implementations clusters mpi pvm message passing berkeley network workstations gathers cluster data stores database parmon developed india visual observation management clusters application checkpointing restore node fails multi node computation essential clusters nodes increases likelihood node failure heavy computational loads checkpointing restore stable processing resume recompute implementations gnu linux supports cluster software application clustering distcc mpich linux virtual server linux ha director based clusters incoming requests services distributed multiple cluster nodes mosix linuxpmi kerrighed openssi blown clusters integrated kernel provide automatic process migration homogeneous nodes openssi openmosix kerrighed single image implementations windows cluster server 2003 based windows server platform pieces performance computing job scheduler msmpi library management tools glite set middleware technologies created enabling grids science egee project slurm schedule manage largest supercomputer clusters top500 list approaches clusters permanent fixtures attempts flash mob computing build short lived clusters specific computations larger scale volunteer computing systems boinc based systems followers 
19260930	computerscience	fault tolerant systems systems designed concepts fault tolerance essence continue level satisfaction presence errors breakdowns fault tolerance property individual machines characterise rules interact transmission control protocol tcp designed reliable communication packet switched network presence communications links imperfect overloaded requiring endpoints communication expect packet loss duplication reordering corruption conditions damage data integrity reduce throughput proportional recovery errors fault tolerant systems characterised roll roll detects error roll recovery takes time corrects roll recovery reverts earlier correct version checkpointing moves roll recovery requires operations checkpoint detected erroneous idempotent systems roll roll recovery errors error types fault tolerance fault tolerant systems designed handle failures including hardware faults hard disk failures input output device failures temporary permanent failures software bugs errors interface errors hardware software including driver failures operator errors erroneous keystrokes bad command sequences installing unexpected software physical damage flaws introduced source hardware fault tolerance common application systems designed prevent failures hardware components basically redundancy dual modular redundancy typically components multiple backups separated segments fault extra redundancy built physical connectors power supplies fans special software instrumentation packages designed detect failures fault masking ignore faults seamlessly preparing backup component execute instruction sort voting protocol main backups flawed output software fault tolerance based nullifying programming errors real time redundancy static emergency subprograms programs crash conduct fault regulation depending application hardware history fault tolerant sapo built 1951 czechoslovakia antonín svoboda basic design magnetic drums connected relays voting method memory error detection triple modular redundancy machines developed military eventually separated distinct categories machines time maintenance nasa space probes satellites computers dependable required constant monitoring monitor control nuclear power plants supercollider experiments finally computers runtime heavy supercomputers insurance companies probability monitoring development called llnm life maintenance computing nasa 1960s preparation project apollo aspects nasa machine space observatory attempt jstar voyager backup memory arrays memory recovery methods called jpl testing repairing detect errors bring redundant modules hyper dependable computers pioneered aircraft manufacturers nuclear power companies railroad industry usa computers massive amounts uptime fail gracefully fault continued operation relying output constantly monitored humans detect faults ibm developed nasa guidance saturn rockets bnsf unisys electric built 1970 f14 cadc built redundancy efforts fault tolerant designs focused internal diagnosis fault failing worker replace sapo instance method faulty memory drums emit noise failure efforts effective repairing diagnosing – isolating fault implementing redundant backup alerting repair model redundancy faults automatic fail safes warning operator common form level fault tolerant design voting initial method discussed multiple redundant backups operating constantly checking outcome components reported answer component reported answer vote component faulty service called majority voting historically motion model complexity systems difficulty ensuring transitive fault negative fault positive disrupt operations tandem stratus companies specializing design fault tolerant systems online transaction processing fault tolerance verification validation requirement design fault tolerant meets requirements reliability failure models simulate failures analyzing reacts statistical models complex involving probability curves specific fault rates latency curves error rates commonly models harp save sharpe usa surf lass europe fault tolerance kinds tolerances critical systems involves interdisciplinary complex carefully interactions considered prepared systems transport public utilities military field topics touch wide include obvious subjects software modeling reliability hardware design arcane elements stochastic models graph theory formal exclusionary logic parallel processing remote data transmission failure oblivious computing failure oblivious computing technique enables programs continue executing memory errors technique handles attempts read invalid memory returning manufactured program manufactured ignores memory access contrast typical memory checkers inform program error abort program failure oblivious computing attempt inform program error occurred execution modified times row prevent cascading failures approach performance costs technique rewrites code insert dynamic checks address validity execution time increase 80 500 recovery shepherding recovery shepherding lightweight technique enable software programs recover fatal errors pointer dereference divide comparing failure oblivious computing technique recovery shepherding compiled program binary recompile program time binary instrumentation framework pin attaches application process error occurs repairs execution tracks repair effects execution continues repair effects application process detaches process repair effects flushed process interfere normal execution program incurs negligible overhead 17 18 systematically collected real dereference divide errors prototype implementation enables application continue execute provide acceptable output service users error triggering inputs 
19394514	computerscience	shanghai supercomputer center ssc founded december 2000 invested shanghai municipal government shanghai supercomputer center offers performance computing technical support technical consulting services customers scientific public utilities services industrial engineering ssc 350 users 27 provinces china covers 20 fields industries includes weather forecast drug design life science auto design material civil engineering physics chemistry aerospace decade ssc introduced hpc systems ranked top500 list 2004 2009 separately dawning 4000a 10tflops dawning 5000a magic cube 230tflops operated ssc 
19404012	computerscience	founded 1979 industrial automation gmbh production headquarters eggelsberg austria braunau upper austria manufacturer automation technology company specializes machine factory control systems hmi motion control addition scalable complete solutions offers individual components product range oriented machinery equipment manufacturing company active field factory process automation july 2017 company acquired swiss abb performance concluded 2015 revenue €585 increase previous 2014 company posted growth 13 535 euros subsidiaries japan singapore company 2013 revenue 475 euros represented growth 11 previous 2013 founding subsidiaries turkey taiwan locations company headquarters located eggelsberg upper austria 1987 headquarters eggelsberg austria grew 000 m² building addition 2000 adding additional 000 m² production plant march 2008 company expansion project €50 invested add 50 000 m² headquarters 68 countries worldwide employees provide support ranging conceptual design application development comprehensive training programs local warehouses global coordination ensure streamlined logistics customers access product spectrum allowing maintain lean inventory represented subsidiaries countries belgium brazil canada china czech republic denmark estonia finland france germany britain india italy korea latvia netherlands poland russian federation sweden switzerland singapore slovakia spain taiwan turkey ukraine usa vietnam cooperative partnerships expand presence 75 countries worldwide products product portfolio includes 
19768790	computerscience	robot operating ros robotics middleware collection software frameworks robot software development ros operating services designed heterogeneous cluster hardware abstraction level device control implementation commonly functionality message passing processes package management running sets ros based processes represented graph architecture processing takes nodes receive post multiplex sensor control planning actuator messages reactivity latency robot control ros real time os rtos integrate ros real time code lack support real time systems addressed creation ros software ros ecosystem separated language independent tools main client libraries python lisp released terms bsd license source software commercial majority packages licensed variety source licenses packages implement commonly functionality applications hardware drivers robot models datatypes planning perception simultaneous localization mapping simulation tools algorithms main ros client libraries python lisp geared unix dependence collections source software dependencies client libraries ubuntu linux listed supported variants fedora linux macos windows designated experimental supported community native java ros client library rosjava share limitations enabled ros based software written android os rosjava enabled ros integrated officially supported matlab toolbox linux macos windows javascript client library roslibjs developed enables integration software ros standards compliant browser september 2018 ported core ros windows applications ros include ros package application include ros industrial ros industrial source project bsd legacy apache preferred license extends advanced capabilities ros manufacturing automation robotics ros industrial repository includes interfaces common industrial manipulators grippers sensors device networks software libraries automatic 2d 3d sensor calibration process path motion planning applications scan plan developer tools qt creator ros plugin training curriculum specific manufacturers ros supported international consortium industry project collaborative endeavor yaskawa motoman robotics southwest institute willow garage support ros manufacturing automation github repository founded january 2012 shaun edwards swri consortium divided ros industrial consortium americas led swri located san antonio texas ros industrial consortium europe led fraunhofer ipa located stuttgart germany ros industrial consortium asia pacific led advanced remanufacturing technology centre artc nanyang technological university ntu located singapore consortia supports global ros industrial community conducting ros training providing technical support setting future roadmap ros conducting pre competitive joint industry projects develop ros capabilities version history ros releases incompatible releases referred code version major releases ros packages ros source implementations common robotics functionality algorithms source implementations organized packages packages included ros distributions developed individuals distributed code sharing sites github 
20570497	computerscience	network abstraction layer nal 264 avc hevc video coding standards main goal nal provision network friendly video representation addressing conversational video telephony conversational storage broadcast streaming applications nal achieved improvement application flexibility relative prior video coding standards introduction increasing services growing popularity definition creating coding efficiency transmission media cable modem xdsl umts offer data rates broadcast channels enhanced coding efficiency enable transmission video channels quality video representations existing digital transmission capacities video coding telecommunication applications diversified isdn t1 e1 service embrace pstn mobile wireless networks lan internet network delivery evolution continued efforts maximize coding efficiency dealing diversification network types characteristic formatting loss error robustness requirements 264 avc hevc standards designed technical solutions including broadcasting cable satellite cable modem dsl terrestrial interactive serial storage optical magnetic devices conversational services video demand multimedia streaming multimedia messaging services applications deployed existing future networks raises question handle variety applications networks address flexibility customizability design covers nal formats video coding layer vcl representation video header manner conveyance variety transport layers storage media nal designed provide network friendliness enable simple effective customization vcl broad variety systems nal facilitates ability map vcl data transport layers degree customization video content fit application scope video coding standardization effort design nal anticipates variety mappings key concepts nal nal units byte stream packet formats nal units parameter sets access units short description concepts nal units coded video data organized nal units effectively packet integer bytes byte 264 avc nal unit header byte indication type data nal unit hevc header extended bytes remaining bytes payload data type header nal unit structure definition specifies generic format packet oriented bitstream oriented transport systems series nal units generated encoder referred nal unit stream nal units byte stream format systems require delivery entire partial nal unit stream stream bytes bits locations nal unit boundaries identifiable patterns coded data systems 264 avc hevc specifications define byte stream format byte stream format nal unit prefixed specific pattern bytes called start code prefix boundaries nal unit identified searching coded data unique start code prefix pattern emulation prevention bytes guarantees start code prefixes unique identifiers start nal unit additional data byte video picture decoders operate systems provide streams bits alignment byte boundaries recover alignment data stream additional data inserted byte stream format expansion data aid achieving rapid byte alignment recovery desired nal units packet transport systems ip rtp systems coded data carried packets framed transport protocol identification boundaries nal units packets established start code prefix patterns systems inclusion start code prefixes data waste data carrying capacity nal units carried data packets start code prefixes vcl vcl nal units nal units classified vcl vcl nal units vcl nal units data represents values samples video pictures vcl nal units additional parameter sets header data apply vcl nal units supplemental enhancement timing supplemental data enhance usability decoded video signal decoding values samples video pictures parameter sets parameter set supposed expected rarely change offers decoding vcl nal units types parameter sets sequence picture parameter set mechanism decouples transmission infrequently changing transmission coded representations values samples video pictures vcl nal unit identifier refers content relevant picture parameter set picture parameter set identifier refers content relevant sequence parameter set manner data identifier refer larger parameter set repeating vcl nal unit sequence picture parameter sets vcl nal units apply repeated provide robustness data loss applications parameter sets channel carries vcl nal units termed band transmission applications advantageous convey parameter sets band reliable transport mechanism video channel access units set nal units form referred access unit decoding access unit decoded picture access unit set vcl nal units compose primary coded picture prefixed access unit delimiter aid locating start access unit supplemental enhancement data picture timing precede primary coded picture primary coded picture consists set vcl nal units consisting slices slice data partitions represent samples video picture primary coded picture additional vcl nal units redundant representations video picture referred redundant coded pictures decoder recovering loss corruption data primary coded pictures decoders required decode redundant coded pictures finally coded picture picture coded video sequence sequence pictures independently decodable sequence parameter set sequence nal unit sequence coded picture coded picture entire nal unit stream stream nal unit stream coded video sequences coded video sequence consists series access units sequential nal unit stream sequence parameter set coded video sequence decoded independently coded video sequence parameter set conveyed band band coded video sequence instantaneous decoding refresh idr access unit idr access unit intra picture coded picture decoded decoding previous pictures nal unit stream presence idr access unit subsequent picture stream require reference pictures prior intra picture decoded nal unit stream coded video sequence 
20588127	computerscience	ibm spss modeler data mining analytics software application ibm build predictive models conduct analytic tasks visual interface users leverage statistical data mining algorithms programming main aims outset rid unnecessary complexity data transformations complex predictive models easy version incorporated decision trees id3 neural networks backprop trained underlying knowledge techniques ibm spss modeler originally named clementine creators integral solutions limited continued spss acquisition product spss changed spss clementine pasw modeler ibm 2009 acquisition spss product renamed ibm spss modeler current applications spss modeler industries editions ibm sells current version spss modeler version 17 separate bundles features bundles called editions ibm editions desktop server configurations product history versions software called clementine unix based version released jun 9th 1994 beta testing customer sites clementine originally developed company named integral solutions limited isl collaboration artificial intelligence researchers sussex university original clementine implemented poplog isl marketed sussex university clementine poplog languages pop11 written speed neural network engine additional tools solaris vms versions unix tool garnered attention data mining community time infancy reach larger market isl ported poplog windows nutcracker package named mks toolkit provide unix graphical facilities original respects clementine data mining tool icon based graphical user interface requiring users write programming language option remained expert users 1998 isl acquired spss potential extended development commercial data mining tool 2000 software developed client server architecture shortly afterward client interface component completely written replaced superior java allowed deeper integration tools spss spss clementine version client runs windows server unix variants sun hp ux aix linux windows graphical user interface written java ibm spss modeler 14 release modeler ibm ibm spss modeler 15 released june 2012 introduced functionality social network analysis entity analytics 
20756967	computerscience	cyborg short cybernetic organism organic biomechatronic body term coined 1960 manfred clynes nathan kline term cyborg bionic biorobot android applies organism restored function enhanced abilities integration artificial component technology relies sort feedback cyborgs commonly mammals including humans conceivably organism halacy cyborg evolution superman 1965 featured introduction spoke frontier space profoundly relationship space outer space – bridge mind matter popular culture cyborgs represented visibly mechanical cyborg dc comics cybermen doctor franchise borg star trek darth vader star wars indistinguishable humans human cylons imagining battlestar galactica cyborgs fiction play human contempt dependence technology war threaten cyborgs portrayed physical mental abilities exceeding human counterpart military forms inbuilt weapons robocop overview definitions term physical attachments humanity basic technologies cyborgs typical human artificial cardiac pacemaker implantable cardioverter defibrillator considered cyborg devices measure voltage potentials body perform signal processing deliver electrical stimuli synthetic feedback mechanism person alive implants cochlear implants combine mechanical modification feedback response cyborg enhancements theorists cite modifications contact lenses hearing aids intraocular lenses examples fitting humans technology enhance biological capabilities cyborgs rise theorists argue develop definitions aging instance bio techno social definition aging suggested term address human technology mixtures abstract includes commonly pieces technology phones computers internet artifacts popularly considered technology pen paper speech language augmented technologies connected communication people times person capable gains power internet protocols connect computers relevant bot assisted human human assisted bot target social media likes shares cybernetic technologies include highways pipes electrical wiring buildings electrical plants libraries infrastructure notice critical cybernetics bruce sterling universe shaper mechanist suggested idea alternative cyborg called lobster internal implants external powered exoskeleton human cyborgs human externally synthetic internally bishop type alien franchise lobster inhuman externally human internally elysium robocop game prominently featured cyborgs called omar omar russian translation word lobster omar russian origin game origins concept machine mixture widespread science fiction war 1843 edgar allan poe extensive prostheses short story 1911 jean hire introduced nyctalope science fiction hero literary cyborg le mystère des xv translated nyctalope mars edmond hamilton space explorers mixture organic machine comet doom 1928 featured talking living brain scientist simon wright floating transparent adventures famous hero captain future term explicitly 1962 short story judgment day mechanical analogs called charlies explaining yborgs called 1960s cybernetic organisms short story woman born 1944 moore wrote deirdre dancer body burned completely brain faceless beautiful supple mechanical body term coined manfred clynes nathan kline 1960 refer conception enhanced human survive extraterrestrial environments concept outcome thinking intimate relationship human machine frontier space exploration designer physiological instrumentation electronic data processing systems clynes chief scientist dynamic simulation laboratory rockland hospital york term appears print months earlier york times reported psychophysiological aspects space flight symposium clynes kline paper book titled cyborg digital destiny human possibility age wearable published doubleday 2001 ideas book incorporated 35 mm motion picture film cyberman cyborg tissues engineering cyborg tissues structured carbon nanotubes plant fungal cells artificial tissue engineering produce materials mechanical electrical di giacomo maresca 2013 spring conference apr 3rd talk ss4 04 cyborg inexpensive light unique mechanical properties shaped desired forms cells combined mwcnts precipitated specific aggregate cells nanotubes formed viscous material dried cells acted stable matrix mwcnt network observed optical microscopy material resembled artificial tissue composed highly packed cells cell drying manifested ghost cell appearance specific physical interaction mwcnts cells observed electron microscopy suggesting cell wall outer fungal plant cells play major active role establishing cnts network stabilization material wide range electronic applications heating sensing potential avenues exploited electromagnetic shielding radio frequency electronics aerospace technology candida albicans cells cyborg tissue materials temperature sensing properties reported actual cyborgization attempts current prosthetic applications leg developed otto bock healthcare replace human leg amputated injury illness sensors artificial leg aids walking attempting replicate user natural gait prior amputation prostheses leg advanced ilimb considered real steps generation real cyborg applications additionally cochlear implants magnetic implants provide people sense additionally creating cyborgs vision science direct brain implants treat congenital acquired blindness scientists brain interface restore sight private researcher william dobelle dobelle prototype implanted jerry blinded adulthood 1978 single array bci 68 electrodes implanted jerry visual cortex succeeded producing phosphenes sensation light included cameras mounted glasses send signals implant initially implant allowed jerry shades grey limited field vision frame rate required hooked ton mainframe shrinking electronics faster computers artificial eye portable enable perform simple tasks unassisted 1997 philip kennedy scientist physician created human cyborg johnny ray vietnam veteran suffered stroke ray body doctors called locked ray life agreed kennedy experiment kennedy embedded implant designed named neurotrophic electrode ray brain ray movement body surgery 2002 johnny ray died 2002 canadian jens naumann blinded adulthood series 16 paying patients receive dobelle generation implant marking earliest commercial bcis generation device sophisticated implant enabling mapping phosphenes coherent vision phosphenes spread visual field researchers starry night implant naumann imperfectly restored vision drive slowly parking institute contrast replacement technologies 2002 heading project cyborg british scientist kevin warwick array 100 electrodes fired nervous link nervous internet investigate enhancement possibilities warwick carried series experiments including extending nervous internet control robotic hand receiving feedback fingertips control hand grip form extended sensory input subsequently investigated ultrasonic input remotely detect distance objects finally electrodes implanted wife nervous conducted direct electronic communication experiment nervous systems humans 2004 british artist neil harbisson cyborg antenna implanted head extend perception colors human visual spectrum vibrations skull antenna included 2004 passport photograph claimed confirm cyborg status 2012 tedglobal harbisson explained started feel cyborg noticed software brain united extra sense neil harbisson founder cyborg foundation 2004 rob spence toronto based film maker titles real life eyeborg severally damaged eye shooting accident grandfather farm child 2005 decided deteriorating technically blind eye surgically removed wore eye patch time played time idea installing camera contacted professor steve mann massachusetts institute technology expert wearable computing cyborg technology mann guidance spence age 36 created prototype form miniature camera fitted prostethic eye named time magazine inventions 2009 bionic eye records square resolution video camera printed circuit board wireless video transmitter transmit real time voltage rechargeable varta microbattery eye connected brain restored actual vision additionally spence installed laser led light version prototype cyborgs multifunctional microchips injected hand exist chips swipe cards unlock doors operate devices printers cryptocurrency products drinks wave hand bodynet bodynet application human electronic interaction development researchers stanford university technology based stretchable semiconductor materials elastronic article nature journal technology composed smart devices screens network sensors implanted body woven skin worn clothes suggested platform replace smartphone future animal cyborgs based company backyard brains released refer commercially cyborg called roboroach project started university michigan biomedical engineering student senior design project 2010 launched beta product 25 february 2011 roboroach officially released production ted talk ted global conference crowdsourcing kickstarter 2013 kit students microstimulation momentarily control movements walking cockroach left bluetooth enabled smartphone controller developed cyborg insects including researchers north carolina university uc berkeley nanyang technological university singapore roboroach kit public funded national institute mental health device serve teaching aid promote neuroscience animal welfare organizations including rspca peta expressed concerns ethics welfare animals project cyborg proliferation society medicine medicine types cyborgs restorative enhanced restorative technologies restore lost function organs limbs key aspect restorative cyborgization repair broken missing processes revert healthy average level function enhancement original faculties processes lost contrary enhanced cyborg principle principle optimal performance maximising output modifications minimising input energy expended process enhanced cyborg intends exceed normal processes gain functions originally prostheses supplement lost damaged body integration mechanical artifice bionic implants medicine model organs body mimic original function closely michael chorost wrote memoir experience cochlear implants bionic ear titled rebuilt human jesse sullivan people operate robotic limb nerve muscle graft enabling complex range motions previous prosthetics 2004 functioning artificial heart developed continued technological development bionic nanotechnologies raise question enhancement future possibilities cyborgs surpass original functionality biological model ethics desirability enhancement prosthetics debated proponents include transhumanist movement belief technologies assist human race developing normative limitations aging disease incapacities limitations speed strength endurance intelligence opponents concept biases propel development acceptance technologies bias functionality efficiency compel assent view human people emphasizes defining characteristics actual manifestations humanity personhood favor definition terms upgrades versions utility brain interface bci direct path communication brain external device effectively creating cyborg invasive bcis utilize electrodes implanted grey matter brain focused restoring damaged eyesight blind providing functionality paralyzed people notably severe locked syndrome technology enable people missing limb wheelchair power control devices aide neural signals brain implants computers devices technology eventually healthy people deep brain stimulation neurological surgical procedure therapeutic purposes process aided treating patients diagnosed parkinson disease alzheimer disease tourette syndrome epilepsy chronic headaches mental disorders patient unconscious anesthesia brain pacemakers electrodes implanted region brain disease region brain stimulated bursts electric current disrupt oncoming surge seizures invasive procedures deep brain stimulation patient risk improvements deep brain stimulation drug treatment retinal implants form cyborgization medicine theory retinal stimulation restore vision people suffering retinitis pigmentosa vision loss aging conditions people abnormally ganglion cells retinal implant electrical stimulation substitute missing ganglion cells cells connect eye brain perfect technology major advances electronic stimulation retina eye sense patterns light specialized camera worn subject frames glasses converts image pattern electrical stimulation chip located user eye electrically stimulate retina pattern exciting nerve endings transmit image optic centers brain image user technological advances proceed planned technology thousands blind people restore vision process created aide people lost vocal cords experimental device robotic sounding voice simulators transmission sound start surgery redirect nerve controls voice sound production muscle neck nearby sensor pick electrical signals signals processor control timing pitch voice simulator simulator vibrate producing multitonal sound shaped mouth article published nature materials 2012 reported cyborg tissues engineered human tissues embedded dimensional mesh nanoscale wires medical implications 2014 researchers university illinois urbana–champaign washington university louis developed device heart beating endlessly 3d printing modeling scientist developed electronic membrane replace pacemakers device utilizes spider network sensors electrodes monitor maintain normal heart rate electrical stimuli traditional pacemakers patient patient elastic heart glove custom resolution imaging technology prototype created fit rabbit heart operating organ oxygen nutrient rich solution stretchable material circuits apparatus constructed professor john rogers electrodes arranged shape design expand bend breaking device tool study heart rate future membrane serve safeguard heart attacks military military organizations focused utilization cyborg animals purposes supposed tactical advantage darpa announced developing cyborg insects transmit data sensors implanted insect pupa stage insect motion controlled micro electro mechanical mems conceivably survey environment detect explosives gas darpa developing neural implant remotely control movement sharks shark unique senses exploited provide data feedback relation enemy ship movement underwater explosives 2006 researchers cornell university invented surgical procedure implant artificial structures insects metamorphic development insect cyborgs moths integrated electronics thorax demonstrated researchers initial success techniques increased creation program called hybrid insect mems mems goal darpa microsystems technology office develop tightly coupled machine insect interfaces placing micro mechanical systems insects stages metamorphosis neural implants attempted success cockroaches surgically applied electrodes insect remotely controlled human basically cockroach controlled impulses received electrodes darpa funding obvious beneficial applications military areasin 2009 institute electrical electronics engineers ieee micro electronic mechanical systems mems conference italy researchers demonstrated wireless flying beetle cyborg engineers university california berkeley pioneered design remote controlled beetle funded darpa mems program filmed evidence viewed demonstration wireless control lift assisted moth cyborg eventually researchers plan develop mems dragonflies bees rats pigeons mems cybernetic bug considered success fly starting guided controlled landing specific landed cybernetic bug remain sports 2016 cyborg olympics celebrated zurich switzerland cybathlon 2016 olympics cyborgs worldwide official celebration cyborg sports event 16 teams people disabilities technological developments cyborg athletes events competitors controlled advanced technologies powered prosthetic legs arms robotic exoskeletons bikes motorized wheelchairs hand remarkable improvement allowed disabled people compete technological enhancements difference hand instance exoskeleton race required participants stand chair sit navigate slalom simple activities walk stepping stones climb stairs simplicity activities 16 teams participated event drop start main goals event simple activities technological enhancements advanced prosthetic difference peoples lives cybathlon expected occur 2020in art concept cyborg science fiction artists create public awareness cybernetic organisms range paintings installations artists create neil harbisson moon ribas patricia piccinini steve mann orlan giger lee bul wafaa bilal tim hawkinson stelarc stelarc performance artist visually probed acoustically amplified body medical instruments prosthetics robotics virtual reality systems internet biotechnology explore alternate intimate involuntary interfaces body films body performed hand virtual arm 1976–1988 completed 25 body suspension performances hooks skin ear surgically constructed extra ear arm internet enabled publicly accessible acoustical organ people presently performing avatar life tim hawkinson promotes idea bodies machines coming human features combined technology create cyborg hawkinson piece emoter society dependent technology wafaa bilal iraqi american performance artist megapixel digital camera surgically implanted head project entitled 3rd 15 december 2010 image captured minute 24 hours day streamed live mathaf arab museum modern art displays bilal location gps bilal reason camera head allegorical statement leave professor nyu project raised privacy issues bilal ensure camera photographs nyu buildings machines ubiquitous artistic process computerized drawing pads replacing pen paper drum machines popular human drummers notable generative art music composers brian eno developed utilized software build entire musical scores basic mathematical parameters scott draves generative artist explicitly cyborg mind electric sheep project generates abstract art combining computers people internet artists cyborgs artists explored term cyborg perspective involving imagination abstract idea technological human bodily union apparent reality art form utilizing varying mediums sculptures drawings digital renderings artists seek cyborg based fantasies reality cyborg artists artwork cyborg artist considered cyborg vary depending interpreter flexibility term scholars rely strict technical description cyborg norbert wiener cybernetic theory manfred clynes nathan kline term argue cyborg artists qualify considered cyborgs scholars flexible description cyborgs argue incorporates cybernetics speak defining subcategories specialized cyborg types qualify levels cyborg technology influences individual range technological instruments external temporary removable integrated permanent cyborg artists artists expected incorporate cyborg idea strict technical representation term revolve purposes cyborgism body modification medical technology advanced techniques innovations body modification community cyborgs strict definition manfred clynes nathan kline technological developments implantable silicon silk electronics augmented reality qr codes bridging disconnect technology body hypothetical technologies digital tattoo interfaces blend body modification aesthetics interactivity functionality bringing transhumanist life day reality addition plausible anxiety expression manifest individuals experience pre implantation feelings fear nervousness individuals embody feelings uneasiness socialized setting post operative technologically augmented bodies mutual unfamiliarity mechanical insertion anxieties linked notions otherness cyborged identity popular culture cyborgs science fiction literature media characters technically androids referred cyborgs examples film television include robocop terminator evangelion united air force colonel steve austin cyborg acted lee majors dollar replicants blade runner daleks cybermen doctor borg star trek darth vader grievous star wars inspector gadget cylons 2004 battlestar galactica series comics manga anime characters inspiration robocop kamen rider ghost motoko kusanagi characters western comic books tony stark extremis bleeding edge armor victor cyborg stone deus videogame series deals extensively future rise cyborgs corporate ownership syndicate series william gibson neuromancer features female cyborgs razorgirl named molly millions extensive cybernetic modifications prolific cyberpunk characters science fiction canon cyborg central singer janelle monáe 48 minute video release 2018 album dirty emotion picture intertwined relationship human technology highlighting power digital futuristic dystopian society monáe referred android depicting mechanical organism conforming idealistic standards cyborg detach oppressive structures space sending humans space dangerous task implementation cyborg technologies future risk mitigation stephen hawking renowned physicist stated life earth increasing risk wiped disaster sudden global warming nuclear war human race future space difficulties space travel centuries humans multi planet species spaceflight human body major issue space exploration biological oxygen necessity equation space exploration revolutionized theory proposed manfred clynes nathan kline aimed tackling scientists theorized inverse fuel cell capable reducing co2 components removal carbon circulation oxygen breathing unnecessary prominent issue radiation exposure yearly average human earth exposed 30 rem radiation astronaut aboard international space station 90 days exposed rem tackle issue clynes kline theorized cyborg sensor detect radiation levels rose osmotic pump automatically inject protective pharmaceuticals doses experiments injecting protective pharmaceuticals monkeys positive increasing radiation resistance effects spaceflight body issue advancement propulsion technology current technology 260 days mars study nasa proposes tackle issue deep sleep torpor technique reduce astronauts metabolic functions existing medical procedures experiments patients torpor week advancements deep sleep cost trip mars result reduced astronaut resource consumption cognitive science theorists andy clark interactions humans technology result creation cyborg model cyborg defined biological mechanical augmentation biological component creation complex clark argues broadened definition understanding human cognition suggests tool offload cognitive process considered mechanical component cyborg examples human technology cyborg tech simplistic calculator perform basic mathematical operations pen paper notes tech personal phone clark interactions person form technology integrate technology cognitive process analogous technology fit traditional concept cyborg augmentation integrated biological host humans technology augment cognitive processes clark conclusion natural born cyborgs cyborg foundation 2010 cyborg foundation international organization dedicated humans cyborgs foundation created cyborg neil harbisson moon ribas response growing letters emails received people cyborg foundation main aims extend human senses abilities creating applying cybernetic extensions body promote cybernetics cultural events defend cyborg rights 2010 foundation based mataró barcelona winner cre tic awards organized tecnocampus mataró 2012 spanish film director rafel duran torrent created short film cyborg foundation 2013 film grand jury prize sundance film festival focus filmmakers competition awarded 100 000 usd future scope regulation implantable technologies technical scope current future implantable sensory telemetric devices devices greatly proliferated connections commercial medical governmental networks medical sector patients login visit virtual doctor’s offices medical databases receive medical prognoses comfort data collected implanted telemetric devices online network huge security concerns proven universities hackers networks shut peoples’ electronic prosthetics sorts technologies workforce firm river falls wisconsin called square market partnered swedish firm called biohacks technology implant rfid microchips hands employees size grain rice employees access offices computers vending machines 50 firms 85 employees chipped confirmed food drug administration approved implantations devices proliferated society question begs answered regulatory agency oversee operations monitoring security devices study square market fda assuming role regulating monitoring devices 
20859249	computerscience	stellar wind stellarwind code warrantless surveillance program begun george bush administration president surveillance program psp national security agency nsa program approved president bush shortly september 11 2001 attacks revealed thomas tamm york times 2008 stellar wind prelude legal structures allowed president bush president barack obama reproduce programs expand reach program scope program activities involved data mining database communications american citizens including mail communications telephone conversations financial transactions internet activity william binney retired technical leader nsa discussed architectural operational elements program 2012 chaos communication congress intelligence community treasury department suspicious activity reports sars reports activities cash transactions submitted financial institutions anti money laundering rules internal disputes justice department legality program data collected people subjects foreign intelligence surveillance fisa warrants bush administration stellar wind referred fbi agents pizza seemingly suspicious food takeout fbi director robert mueller 99 led concerned 2004 conflict report inspectors intelligence agencies declassified september 2015 president bush originally authorized collection telephone mail metadata communications foreign link terrorism 2004 justice department nsa collecting metadata purely domestic communications president bush declared nsa allowed analysts allowed metadata terrorism revised formulation bush reauthorized program march 11 2004 2004 head office legal counsel olc jack landman goldsmith wrote legal memos authorizing program conclude nation thrust armed conflict foreign attack united president determines role commander chief essential defense foreign attack capabilities national security agency united inherent constitutional authority warrantless wiretapping— authority congress curtail goldsmith wrote 108 memo dated 2004 march 2004 olc concluded mail program legal acting attorney james comey refused reauthorize revelations march 2012 wired magazine published nsa building country biggest spy center watch talking vast nsa facility utah time nsa official record program codenamed stellarwind naming official william binney nsa code breaker binney nsa highly secured tap major switches satellite communications verizon article suggested supposedly terminated stellar wind continues active program conclusion supported exposure 641a operations center san francisco 2006 june 2013 washington post guardian published office inspector oig draft report dated march 2009 leaked edward snowden detailing stellar wind program doubt remained continuing nature surveillance program september 2014 york times asserted questions persist release newly declassified version legal memo approving national security agency stellarwind program set warrantless surveillance data collection activities secretly authorized terrorist attacks sept 11 2001 introductory headline summary link accompanying article addressed release newly declassified version 2004 memo note bulk program—the telephone internet mail surveillance american citizens—remained secret revelations edward snowden portions memo remain redacted newly released version doubts questions legality persist 
20903754	computerscience	robotics interdisciplinary branch engineering science includes mechanical engineering electronic engineering engineering science robotics deals design construction operation robots systems control sensory feedback processing technologies develop machines substitute humans replicate human actions robots situations lots purposes dangerous environments including bomb detection deactivation manufacturing processes humans survive space robots form resemble humans appearance acceptance robot replicative behaviors performed people robots attempt replicate walking lifting speech cognition basically human robots inspired nature contributing field bio inspired robotics concept creating machines operate autonomously dates classical times functionality potential robots grow 20th century history frequently assumed scholars inventors engineers technicians robots day mimic human behavior manage tasks human fashion robotics rapidly growing field technological advances continue researching designing building robots serve practical purposes domestically commercially militarily robots built jobs hazardous people defusing bombs finding survivors unstable ruins exploring mines shipwrecks robotics stem science technology engineering mathematics teaching aid robotics branch engineering involves conception design manufacture operation robots field overlaps electronics science artificial intelligence mechatronics nanotechnology bioengineering etymology word robotics derived word robot introduced public czech writer karel Čapek play rossum universal robots published 1920 word robot slavic word robota labour play factory artificial people called robots creatures mistaken humans – modern ideas androids karel Čapek coin word wrote short letter reference etymology oxford english dictionary named brother josef Čapek actual originator oxford english dictionary word robotics print isaac asimov science fiction short story liar published 1941 astounding science fiction asimov unaware coining term science technology electrical devices electronics assumed robotics referred science technology robots asimov word robotics short story runaround astounding science fiction march 1942 introduced concept laws robotics original publication liar predates runaround months cited word origin history 1948 norbert wiener formulated principles cybernetics basis practical robotics autonomous appeared 20th century digitally operated programmable robot unimate installed 1961 lift hot pieces metal die casting machine stack commercial industrial robots widespread perform jobs cheaply accurately reliably humans employed jobs dirty dangerous dull suitable humans robots manufacturing assembly packing packaging mining transport earth space exploration surgery weaponry laboratory safety mass production consumer industrial robotic aspects types robots environments diverse application form share basic similarities construction applications robots designed specific tasks method classification relevant robots designed assembly adaptable applications termed assembly robots seam welding suppliers provide complete welding systems robot welding equipment material handling facilities turntables integrated unit integrated robotic called welding robot discrete manipulator unit adapted variety tasks robots designed heavy load manipulation labelled heavy duty robots current potential applications include components power source lead–acid batteries power source types batteries power source robots range lead–acid batteries safe shelf lives heavy compared silver–cadmium batteries volume expensive designing battery powered robot account factors safety cycle lifetime weight generators type internal combustion engine designs mechanically complex fuel require heat dissipation heavy tether connecting robot power supply remove power supply robot advantage saving weight space moving power generation storage components design drawback constantly cable connected robot difficult manage potential power sources actuation actuators muscles robot convert stored energy movement popular actuators electric motors rotate wheel gear linear actuators control industrial robots factories advances alternative types actuators powered electricity chemicals compressed air electric motors vast majority robots electric motors brushed brushless dc motors portable robots ac motors industrial robots cnc machines motors preferred systems lighter loads predominant form motion rotational linear actuators types linear actuators spinning quicker direction forces industrial robotics typically powered compressed oxidized air pneumatic actuator oil hydraulic actuator series elastic actuators flexure designed motor actuator improve safety provide robust force control energy efficiency shock absorption mechanical filtering reducing excessive wear transmission mechanical components resultant reflected inertia improve safety robot interacting humans collisions robots advanced manufacturing robots walking humanoid robots air muscles pneumatic artificial muscles air muscles special tubes expand typically 40 air forced robot applications muscle wire muscle wire shape memory alloy nitinol® flexinol® wire material contracts electricity applied robot applications electroactive polymers eaps epams plastic material contract 380 activation strain electricity facial muscles arms humanoid robots enable robots float fly swim walk piezo motors alternatives dc motors piezo motors ultrasonic motors fundamentally principle tiny piezoceramic elements vibrating thousands times linear rotary motion mechanisms operation type vibration piezo elements step motor circle straight type piezo elements nut vibrate drive screw advantages motors nanometer resolution speed force size motors commercially robots elastic nanotubes elastic nanotubes promising artificial muscle technology stage experimental development absence defects carbon nanotubes enables filaments deform elastically percent energy storage levels 10 j cm3 metal nanotubes human biceps replaced 8 mm diameter wire material compact muscle future robots outrun outjump humans sensing sensors robots receive measurement environment internal components essential robots perform tasks environment calculate response forms measurements robots warnings safety malfunctions provide real time task performing touch current robotic prosthetic hands receive tactile human hand developed tactile sensor array mimics mechanical properties touch receptors human fingertips sensor array constructed rigid core surrounded conductive fluid contained elastomeric skin electrodes mounted surface rigid core connected impedance measuring device core artificial skin touches object fluid path electrodes deformed producing impedance map forces received object researchers expect function artificial fingertips adjusting robotic grip held objects scientists european countries israel developed prosthetic hand 2009 called smarthand functions real one—allowing patients write type keyboard play piano perform fine movements prosthesis sensors enable patient sense real feeling fingertips vision vision science technology machines scientific discipline vision concerned theory artificial systems extract images image data forms video sequences views cameras practical vision applications computers pre programmed solve task methods based learning increasingly common vision systems rely image sensors detect electromagnetic radiation typically form visible light infra red light sensors designed solid physics process light propagates reflects surfaces explained optics sophisticated image sensors require quantum mechanics provide complete understanding image formation process robots equipped multiple vision sensors compute sense depth environment human eyes robots eyes focus adjust variations light intensities subfield vision artificial systems designed mimic processing behavior biological levels complexity learning based methods developed vision background biology common forms sensing robotics lidar radar sonar manipulation robots manipulate objects pick modify destroy hands robot referred effectors arm referred manipulator robot arms replaceable effectors allowing perform range tasks fixed manipulator replaced purpose manipulator humanoid hand learning manipulate robot requires close feedback human robot methods remote manipulation robots mechanical grippers common effectors gripper simplest manifestation consists fingers close pick range objects fingers chain metal wire hands resemble human hand include shadow hand robonaut hand hands mid level complexity include delft hand mechanical grippers types including friction encompassing jaws friction jaws force gripper hold object friction encompassing jaws cradle object friction vacuum grippers vacuum grippers simple astrictive devices hold loads prehension surface smooth ensure suction pick robots electronic components objects car windscreens simple vacuum grippers purpose effectors advanced robots humanoid hands shadow hand manus schunk hand highly dexterous manipulators 20 degrees freedom hundreds tactile sensors locomotion rolling robots simplicity mobile robots wheels continuous tracks researchers create complex wheeled robots wheels advantages efficiency reduced allowing robot navigate confined wheeled robot wheeled balancing robots balancing robots gyroscope detect robot falling drive wheels proportionally direction counterbalance fall hundreds times based dynamics inverted pendulum balancing robots designed segway commonly robot component robot segway refer rmp robotic mobility platform nasa robonaut mounted segway wheeled balancing robots wheeled balancing robot extension wheeled balancing robot 2d direction ball wheel wheeled balancing robots designed carnegie mellon university ballbot approximate height person tohoku gakuin university ballip shape ability maneuver tight spaces potential function robots environments people spherical orb robots attempts robots completely spherical ball spinning weight ball rotating outer shells sphere referred orb bot ball bot wheeled robots wheels wheels traction grip outdoor terrain rocky dirt grass tracked robots tank tracks provide traction wheeled robot tracked wheels behave hundreds wheels common outdoor military robots robot drive rough terrain difficult indoors carpets smooth floors examples include nasa urban robot urbie walking applied robots walking difficult dynamic solve robots walk reliably legs robust human study human inspired walking amber lab established 2008 mechanical engineering department texas university robots built walk legs robots easier construct walking robots uneven terrains provide mobility energy efficiency locomotion methods hybrids proposed movies robot walk legs switch arms legs sprint typically robots legs walk flat floors occasionally walk stairs walk rocky uneven terrain methods zmp technique moment zmp algorithm robots honda asimo robot onboard total inertial forces combination earth gravity acceleration deceleration walking opposed floor reaction force force floor pushing robot foot forces cancel leaving moment force causing robot rotate fall human walks difference obvious human observers asimo walks lavatory asimo walking algorithm static dynamic balancing requires smooth surface walk hopping robots built 1980s marc raibert mit leg laboratory demonstrated dynamic walking initially robot leg foot stay upright simply hopping movement person pogo stick robot falls jump direction catch algorithm generalised legs bipedal robot demonstrated running performing somersaults quadruped demonstrated trot pace bound list robots mit leg lab robots dynamic balancing controlled falling advanced robot walk dynamic balancing algorithm robust moment technique constantly monitors robot motion feet maintain stability technique demonstrated anybots dexter robot stable jump tu delft flame passive dynamics promising approach utilizes passive dynamics momentum swinging limbs efficiency totally unpowered humanoid mechanisms walk gentle slope gravity propel technique robot supply motor power walk flat surface walk hill technique promises walking robots times efficient zmp walkers asimo methods locomotion flying modern passenger airliner essentially flying robot humans manage autopilot control plane stage journey including takeoff normal flight landing flying robots uninhabited unmanned aerial vehicles uavs lighter human pilot board fly dangerous territory military surveillance missions targets command uavs developed targets automatically command human flying robots include cruise missiles entomopter epson micro helicopter robot robots air penguin air ray air jelly lighter air bodies propelled paddles guided sonar snaking snake robots developed mimicking real snakes robots navigate confined spaces meaning day search people trapped collapsed buildings japanese acm r5 snake robot navigate land water skating skating robots developed multi mode walking skating device legs unpowered wheels step roll robot plen miniature skateboard roller skates skate desktop climbing approaches develop robots ability climb vertical surfaces approach mimics movements human climber wall protrusions adjusting center mass moving limb gain leverage capuchin built dr ruixiang zhang stanford university california approach specialized toe pad method wall climbing geckoes smooth surfaces vertical glass examples approach include wallbot stickybot china technology daily reported november 15 2008 dr hiu yeung concept aircraft zhuhai developed bionic gecko robot named speedy freelander dr gecko robot rapidly climb variety building walls navigate ground wall fissures walk upside ceiling adapt surfaces smooth glass rough sticky dusty walls types metallic materials identify circumvent obstacles automatically flexibility speed comparable natural gecko approach mimic motion snake climbing pole swimming piscine calculated swimming fish achieve propulsive efficiency 90 accelerate maneuver boat submarine produce noise water disturbance researchers studying underwater robots type locomotion notable examples essex university science robotic fish g9 robot tuna built institute field robotics analyze mathematically model thunniform motion aqua penguin designed built festo germany copies streamlined shape propulsion flippers penguins festo built aqua ray aqua jelly emulate locomotion manta ray jellyfish 2014 isplash developed phd student richard james clapham prof huosheng essex university robotic fish capable outperforming real carangiform fish terms average maximum velocity measured body lengths endurance duration speed maintained build attained swimming speeds 11 6bl 7 m build isplash 2014 robotic platform apply body carangiform swimming motion increase swimming speed 27 traditional approach posterior confined waveform sailing sailboat robots developed measurements surface ocean typical sailboat robot vaimos built ifremer ensta bretagne propulsion sailboat robots wind energy batteries communication actuators tune rudder sail robot equipped solar panels robot theoretically navigate main competitions sailboat robots wrsc takes europe sailbot environmental interaction navigation percentage robots commission human controlled operate static environment increasing robots operate autonomously dynamic environment robots require combination navigation hardware software traverse environment unforeseen events people obstacles stationary collisions highly advanced robots asimo meinü robot robot navigation hardware software controlled cars ernst dickmanns driverless car entries darpa grand challenge capable sensing environment subsequently navigational decisions based robots employ gps navigation device waypoints radar combined sensory data lidar video cameras inertial guidance systems navigation waypoints human robot interaction art sensory intelligence robots progress magnitude robots homes vacuum cleaning floors robots effectively homes industrial environments instructed perform jobs told critical people interact training robotics interface extremely intuitive science fiction authors typically assume robots eventually capable communicating humans speech gestures facial expressions command interface speech natural human communicate unnatural robot time robots interact naturally fictional 3po data star trek generation speech recognition interpreting continuous flow sounds coming human real time difficult task variability speech word spoken person sound depending local acoustics volume previous word speaker cold harder speaker accent strides field davis biddulph balashek designed voice input recognized digits spoken single user 100 accuracy 1952 systems recognize continuous natural speech 160 minute accuracy 95 robotic voice hurdles exist allowing robot voice interacting humans social reasons synthetic voice proves suboptimal communication medium develop emotional component robotic voice techniques gestures imagine future explaining robot chef pastry directions robot police officer hand gestures aid verbal descriptions robot recognizing gestures human repeating confirmation robot police officer gesture road gestures interaction humans robots systems developed recognize human hand gestures facial expression facial expressions provide rapid feedback progress dialog humans humans robots robotic constructed hanson robotics elastic polymer called frubber allowing facial expressions elasticity rubber facial coating embedded subsurface motors servos coating servos built metal skull robot approach human judging facial expression body language person happy frightened crazy type interaction expected robot robots kismet addition nexi produce range facial expressions allowing meaningful social exchanges humans artificial emotions artificial emotions generated composed sequence facial expressions gestures movie programming artificial emotions complex requires human observation simplify programming movie presets created special software program decreased time film presets transferred real life robots personality robots science fiction personality desirable commercial robots future researchers create robots personality sounds facial expressions body language convey internal joy sadness fear commercial pleo toy robot dinosaur exhibit apparent emotions social intelligence socially intelligent machines lab georgia institute technology researches concepts guided teaching interaction robots aim projects social robot learns task goals human demonstrations prior knowledge level concepts concepts grounded level continuous sensor data unsupervised learning task goals subsequently learned bayesian approach concepts transfer knowledge future tasks faster learning tasks demonstrated robot curi scoop pasta pot plate serve sauce control mechanical structure robot controlled perform tasks control robot involves distinct phases – perception processing action robotic paradigms sensors environment robot position joints effector processed stored transmitted calculate signals actuators motors mechanical processing phase range complexity reactive level translate raw sensor actuator commands sensor fusion estimate parameters position robot gripper noisy sensor data task moving gripper direction inferred estimates techniques control theory convert task commands drive actuators time scales sophisticated tasks robot build reason cognitive model cognitive models represent robot interact pattern recognition vision track objects mapping techniques build maps finally motion planning artificial intelligence techniques figure planner figure achieve task hitting obstacles falling autonomy levels control systems varying levels autonomy classification takes account interaction human control machine motions robotics focuses specific industrial tasks investigations types robots alternative design robots manufacture investigations mit cyberflora project wholly academic innovation robot design sourcing robot projects level advancement robot term generation robots term coined professor hans moravec principal scientist carnegie mellon university robotics institute describing future evolution robot technology generation robots moravec predicted 1997 intellectual capacity comparable lizard 2010 generation robot incapable learning moravec predicts generation robot improvement 2020 intelligence comparable mouse generation robot intelligence comparable monkey fourth generation robots robots human intelligence professor moravec predicts predict happening 2040 2050 evolutionary robots methodology evolutionary computation design robots body form motion behavior controllers natural evolution population robots allowed compete ability perform task measured fitness function perform worst removed population replaced set behaviors based winners time population improves eventually satisfactory robot direct programming robots researchers researchers method create robots explore nature evolution process requires generations robots simulated technique simulation robot simulator software package tested real robots evolved algorithms industrial robots toiling japan country density utilizing robots manufacturing industry dynamics kinematics study motion divided kinematics dynamics direct kinematics refers calculation effector position orientation velocity acceleration joint values inverse kinematics refers required joint values calculated effector values path planning special aspects kinematics include handling redundancy possibilities performing movement collision avoidance singularity avoidance relevant positions velocities accelerations calculated kinematics methods field dynamics study forces movements direct dynamics refers calculation accelerations robot applied forces direct dynamics simulations robot inverse dynamics refers calculation actuator forces create prescribed effector acceleration improve control algorithms robot mentioned researchers strive develop concepts strategies improve existing improve interaction criteria optimal performance optimize design structure control robots developed implemented bionics biomimetics bionics biomimetics apply physiology methods locomotion animals design robots design bionickangaroo based kangaroos jump quantum computing robotics algorithms quantum computers digital computers referred quantum robotics education training robotics engineers design robots maintain develop applications conduct expand potential robotics robots popular educational tool middle schools usa numerous youth summer camps raising programming artificial intelligence robotics students science courses universities include programming robot addition traditional software engineering based coursework career training universities offer bachelors masters doctoral degrees field robotics vocational schools offer robotics training aimed careers robotics certification robotics certification standards alliance rcsa international robotics certification authority confers industry educational robotics certifications summer robotics camp national summer camp programs include robotics core curriculum addition youth summer robotics programs frequently offered celebrated museums institutions robotics competitions lots competitions globe seaperch curriculum aimed students ages short list competition examples complete list robot competition competitions children organization offers lego league jr competitions children competition goal offer children opportunity start learning science technology children competition build lego models option lego wedo robotics kit competitions children ages 14 competitions fll lego league idea specific competition kids start developing knowledge robotics playing legos competition national instruments children lego mindstorms solve autonomous robotics challenges competition competitions teenagers tech challenge designed intermediate students transitioning lego league robotics competition robotics competition focuses mechanical design robot autonomously 30 competition teleoperated rest time competitions students robocup competitions include teams teenagers university students competitions focus soccer competitions types robots dance competitions urban search rescue competitions robots competitions autonomous competitions focus simulated robots auvsi runs competitions flying robots robot boats underwater robots student auv competition europe sauc attracts undergraduate graduate student teams auvsi competitions robots autonomous participating competition microtransat challenge competition sail boat atlantic ocean competitions robogames wishing compete 50 categories robot competitions federation international robot soccer association holds fira cup competitions flying robot competitions robot soccer competitions challenges including weightlifting barbells dowels cds robotics afterschool programs schools country add robotics programs school curriculum major programs afterschool robotics include robotics competition botball robotics robotics competitions include aspects business marketing engineering design lego company program children learn excited robotics age employment robotics essential component modern manufacturing environments factories increase robots robotics–related jobs grow observed steadily rising employment robots industries increased productivity efficiency savings typically term investment benefactors paper michael osborne and carl benedikt frey found 47 cent jobs risk automation unspecified claims criticized ground social policy unemployment occupational safety health implications discussion paper drawn eu osha highlights spread robotics opportunities challenges occupational safety health osh osh benefits stemming wider robotics substitution people unhealthy dangerous environments space defence security nuclear industry logistics maintenance inspection autonomous robots replacing human workers performing dirty dull unsafe tasks avoiding workers exposures hazardous agents conditions reducing physical ergonomic psychosocial risks robots perform repetitive monotonous tasks handle radioactive material explosive atmospheres future highly repetitive risky unpleasant tasks performed robots variety sectors agriculture construction transport healthcare firefighting cleaning services advances skills humans suited machines time question achieve combination human robot skills advantages robotics include heavy duty jobs precision repeatability advantages humans include creativity decision flexibility adaptability combine optimal skills collaborative robots humans sharing common workspace closely led development approaches standards guarantee safety robot merger european countries including robotics national programmes promote safe flexible operation robots operators achieve productivity german federal institute occupational safety health baua organises annual workshops topic human robot collaboration future operation robots humans diversified robots increasing autonomy human robot collaboration reaching completely forms current approaches technical standards aiming protect employees risk collaborative robots revised 
21301483	computerscience	grouplens human–computer interaction lab department science engineering university minnesota twin cities specializing recommender systems online communities grouplens mobile ubiquitous technologies digital libraries local geographic systems grouplens lab study automated recommender systems construction grouplens recommender usenet article recommendation engine movielens popular movie recommendation study recommendation engines tagging systems user interfaces lab gained notability studying content communities cyclopath computational geo wiki twin cities plan regional cycling history formation 1992 john riedl paul resnick attended thecscw conferencetogether heard keynote speaker shumpei kumon talkabout vision economy collaborative filteringsystem usenet news collected ratings usenet readers ratings predict readers article read recommendation engine automated collaborative filtering systems algorithms automatically form predictions based historical patterns ratings called grouplens recommender servers collected ratings performed computation called bit bureau dropped request business bureau grouplens recommender lab university minnesota feasibility mit andthe university minnesota paper published includingthe algorithm design feasibilitystudy cscw conference 1994 1993 riedl resnick invited joseph konstan theteam decided create performanceimplementation algorithms support larger scale deployments summer 1995 team gatheredbradley miller david maltz jon herlocker mark claypool hack week createthe implementation plan experiments spring 1996 workshop oncollaborative filtering resnick andhal varian university california berkeley researchers projects usthat studying systems share ideas andexperience perceptions summer 1996 david gardiner aformer student riedl introduced john riedl steven snyder snyder employee leftmicrosoft minnesota psychology herealized commercial potential collaborative filtering andencouraged team company april 1996 june gardiner snyder miller riedl konstan hadincorporated company julythey funding hummer winbladventure capital company perceptions leading companies inpersonalization internet boom late 1990s stayedin business 2004 based experience riedl konstan wrote book lessons learned deploying recommenders practice recommender systems ubiquitous online leading vendors amazon netflix deploying highly sophisticated recommender systems netflix offered 000 000 prize improvements recommender technology continued university minnesota whenthe eachmovie closed 1997 researchers releasedthe anonymous rating data collected researchersto grouplens team led brent dahlen jonherlocker data set jumpstart movie recommendationsite called movielens visible platform including detailed discussion yorker article bymalcolm gladwell report episode abc nightline 1997 2002 continued oncollaborative filtering community themore term recommender systems joe konstan expertise user interfaces team exploring interface issues recommenders explanations meta recommendation systems studying online communities 2002 grouplens expanded social computing online communities addition loren terveen social recommender systems phoaks broaden set ideas tools riedl konstan terveen invited colleagues social psychology robert kraut sara kiesler thecarnegie mellon human interaction institute andeconomic social analysis paul resnick andyan chen theuniversity michigan school collaborate thenew larger team communitylab lookedgenerally effects technological interventions theperformance online communities instance theirresearch explored technology enriching conversation systems explored personal social economicmotivations user ratings 2008 grouplens launched cyclopath computational geo wiki bicyclists city 2010 grouplens annual acm software award brent hecht joined grouplens faculty 2013 focusing geographic human interaction lana yarosh joined grouplens faculty 2014 social computing child interaction professor haiyi zhu joined 2015 haiyi published facebook social networks 
21306150	computerscience	random access memory ram form data storage stores data machine code random access memory device data items read written time irrespective physical location data memory contrast direct access data storage media hard disks rws dvd rws magnetic tapes drum memory time required read write data items varies depending physical locations recording medium mechanical limitations media rotation speeds arm movement ram multiplexing demultiplexing circuitry connect data lines addressed storage reading writing entry bit storage accessed address ram devices multiple data lines bit 16 bit devices technology random access memory takes form integrated circuits ram volatile types memory dram modules stored lost power removed volatile ram developed types volatile memories exist random access read operations write operations kinds limitations include types rom type flash memory called flash integrated circuit ram chips market 1970s commercially dram chip intel 1103 introduced october 1970 history computers relays mechanical counters delay lines main memory functions ultrasonic delay lines reproduce data written drum memory expanded cost efficient retrieval memory items required knowledge physical layout drum optimize speed latches built vacuum tube triodes discrete transistors faster memories registers registers costly amounts data dozen bits memory practical form random access memory williams tube starting 1947 stored data electrically charged spots cathode ray tube electron beam crt read write spots tube memory random access capacity williams tube bits faster power efficient individual vacuum tube latches developed university manchester england williams tube medium electronically stored program implemented manchester baby program 21 june 1948 williams tube memory designed baby baby testbed demonstrate reliability memory magnetic core memory invented 1947 developed mid 1970s widespread form random access memory relying array magnetized rings changing sense magnetization data stored bit stored combination address wires select read write access memory location sequence magnetic core memory standard form memory displaced solid memory integrated circuits starting 1970s dynamic random access memory dram allowed replacement transistor latch circuit single transistor memory bit greatly increasing memory density cost volatility data stored tiny capacitance transistor periodically refreshed milliseconds charge leak toshiba toscal bc 1411 electronic calculator introduced 1965 form dram built discrete components dram developed robert dennard 1968 prior development integrated read memory rom circuits permanent read random access memory constructed diode matrices driven address decoders specially wound core rope memory planes types forms modern ram static ram sram dynamic ram dram sram bit data stored transistor memory cell form ram expensive produce faster requires dynamic power dram modern computers sram cache memory cpu dram stores bit data transistor capacitor pair comprise dram cell capacitor holds charge transistor acts switch control circuitry chip read capacitor charge change form memory expensive produce static ram predominant form memory modern computers static dynamic ram considered volatile lost reset power removed contrast read memory rom stores data permanently enabling disabling selected transistors memory altered writeable variants rom eeprom flash memory share properties rom ram enabling data persist power updated requiring special equipment persistent forms semiconductor rom include usb flash drives memory cards cameras portable devices solid drives ecc memory sram dram includes special circuitry detect correct random faults memory errors stored data parity bits error correction codes term ram refers solely solid memory devices dram sram main memory computers optical storage term dvd ram misnomer dvd erased reuse dvd ram behaves hard disc drive slower memory cell memory cell fundamental building block memory memory cell electronic circuit stores bit binary set store logic voltage level reset store logic voltage level maintained stored changed set reset process memory cell accessed reading sram memory cell type flip flop circuit implemented fets sram requires power accessed expensive storage density type dram based capacitor charging discharging capacitor store cell charge capacitor slowly leaks refreshed periodically refresh process dram power achieve storage densities unit costs compared sram addressing memory cells readable writeable ram device multiplexing demultiplexing circuitry select memory cells typically ram device set address lines a0 combination bits applied lines set memory cells activated addressing ram devices virtually memory capacity power memory cells share address bit wide ram chip memory cells address memory microprocessor 32 bit microprocessor bit ram chips addresses device external multiplexors device activate correct device accessed memory hierarchy read write data ram systems memory hierarchy consisting processor registers die sram caches external caches dram paging systems virtual memory swap space hard drive entire pool memory referred ram developers subsystems access times violating original concept random access term ram hierarchy level dram specific row column bank rank channel interleave organization components access time variable extent access time rotating storage media tape variable goal memory hierarchy average access performance minimizing total cost entire memory memory hierarchy access time fast cpu registers slow hard drive modern personal computers ram easily upgraded form modules called memory modules dram modules size sticks chewing gum replaced damaged changing demand storage capacity suggested amounts ram sram integrated cpu ics motherboard hard drives roms ram addition serving temporary storage space operating applications ram numerous virtual memory modern operating systems employ method extending ram capacity virtual memory portion hard drive set paging file scratch partition combination physical ram paging file form total memory ram file operating total memory runs physical memory swap portions ram paging file data read swapped ram excessive mechanism thrashing hampers performance hard drives slower ram ram disk software partition portion ram allowing faster hard drive called ram disk ram disk loses stored data shut memory arranged standby battery source shadow ram contents slow rom chip copied read write memory shorter access times rom chip disabled initialized memory locations switched block addresses write protected process called shadowing common computers embedded systems common bios typical personal computers option called “use shadow bios” enabled functions rely data bios’s rom dram locations toggle shadowing video card rom rom sections depending result increased performance incompatibilities hardware inaccessible operating shadow ram systems benefit hypothetical bios booting favor direct hardware access memory reduced size shadowed roms developments types volatile ram preserve data powered development technologies include carbon nanotubes approaches utilizing tunnel magnetoresistance 1st generation mram 128 kib bytes chip manufactured 18 µm technology summer 2003 june 2004 infineon technologies unveiled 16 mib 16 × 220 bytes prototype based 18 µm technology 2nd generation techniques development thermal assisted switching tas developed crocus technology spin transfer torque stt crocus hynix ibm companies nantero built functioning carbon nanotube memory prototype 10 gib 10 × 230 bytes array 2004 technologies eventually market share dram sram flash memory technology remains 2006 solid drives based flash memory capacities exceeding 256 gigabytes performance exceeding traditional disks development started blur definition traditional random access memory disks dramatically reducing difference performance kinds random access memory ecoram designed server farms power consumption speed memory wall memory wall growing disparity speed cpu memory cpu chip reason disparity limited communication bandwidth chip boundaries referred bandwidth wall 1986 2000 cpu speed improved annual rate 55 memory speed improved trends expected memory latency overwhelming bottleneck performance cpu speed improvements slowed partly major physical barriers partly current cpu designs hit memory wall sense intel summarized 2005 document chip geometries shrink clock frequencies rise transistor leakage current increases leading excess power consumption heat advantages clock speeds negated memory latency memory access times pace increasing clock frequencies applications traditional serial architectures efficient processors faster called von neumann bottleneck undercutting gains frequency increases addition partly limitations producing inductance solid devices resistance capacitance rc delays signal transmission growing feature sizes shrink imposing additional bottleneck frequency increases address rc delays signal transmission clock rate ipc road conventional microarchitectures projected maximum 12 average annual cpu performance improvement 2000 2014 concept processor memory performance gap addressed 3d integrated circuits reduce distance logic memory aspects 2d chip memory subsystem design requires focus gap widening time main method bridging gap caches amounts speed memory houses operations instructions nearby processor speeding execution operations instructions called frequently multiple levels caching developed deal widening gap performance speed modern computers relies evolving caching techniques prevent loss processor performance takes time perform computation initiated complete 53 difference growth speed processor speeds lagging speed main memory access contrast ram fast 5766 mb 477 mb ssd 
21488059	computerscience	sex robots sexbots hypothetical anthropomorphic robot sex dolls elaborately instrumented sex dolls created inventors functioning sex robots exist controversy developing morally justifiable lexicology people sexually attracted sexbots referred digisexuals robosexuals sexbots male design referred malebots manbots gender neutral terms sex robots include pleasure bot sex droid love bot love droid eroto bot sexbots female design referred chick bots fembots history development sex robot evolved sex doll precursors stem 17th century dutch sailors created hand sewn masturbation puppets cloth leather clothes scholars creation direct predecessor modern sex dolls inspiration creating modern sex doll mannequin based art created ray salvador dali ray claimed surrealists including dali infused eroticism personally violated mannequins dali’s rainy taxi centered female mannequin undressed body crawling live snails 1968 sex dolls advertised pornographic magazines purchase mail sex dolls inflatable air consisting penetration mouth vagina anus inflatable nature dolls subject deterioration sustainable constant 1970s materials latex silicone manufacturing sex dolls facilitate enhanced durability resemblance human realism sex robots greatly accelerated late 1990s 1997 matt mcmullen constructing lifelike tin cure silicon mannequins called realdolls ‘realistic posable life sized’ mcmullen received criticism anatomical correctness mannequins motivation create enhanced version 2009 mcmullen switched platinum material tin cure silicon enhance durability lifelike nature doll sex doll manufacturers suit manufacturers including mcmullen believed companionship critical sex bot dynamic incorporating step 2018 models constructed hold conversations remember express emotions model harmony created matt mcmullen customizable mobile app users choose thousands combinations clothes personalities voices perfect companion predictions 2014 david levy chess champion author love sex robots interview newsweek loving sex robots boon society millions people reason establish relationships estimates mid 21st century prototypes created imitate human warmth 2017 mit press published book topic robot sex preliminary approach challenges field represent human societies short review book spanish realization ongoing attempts sex dolls socially interactive 2010 sex doll called roxxxy capacity play pre recorded speech cues demonstrated trade 2015 matt mcmullen creator realdoll stated intended create sex dolls capacity hold conversations barcelona based dr sergi santos developed sex robot samantha robot switch sex setting include samantha simulating orgasm family mode jokes discuss philosophy 2017 matt mcmullen created sex doll called harmony capability learning preferences desires owner harmony smile blink frown humanlike fashion hold conversation jokes remember food preferences names siblings cost harmony roughly 15 000 onstage interview engadget 2018 matt mcmullen demonstrated skin harmony’s peeled replaced skin subsequently colored wig changed personality app handheld device controls robot named sex doll ‘solana’ considers sister harmony opposition september 2015 kathleen richardson montfort university erik billing university skövde created calling ban creation anthropomorphic sex robots richardson critical levy argues introduction devices socially harmful demeaning women children september 2015 japanese company softbank makers pepper robot included ban robot sex robot user agreement policy owner perform sexual indecent behaviour noel sharkey aimee van wynsberghe eleanor hancock foundation responsible robotics released consultation report summary issues opinions society intimate association robots report includes examination robots employed sexual therapy tool rapists paedophiles sharkey warns problematic terms sex dolls resembling children considerable speculation technology coming experts fields philosophy sociology natural sciences scholars chandrshekhar shrivastava sex robots facilitate social isolation sexual relations robots desensitize humans intimacy empathy chauntelle tibbals replace joy sorrow passion pain actual unpredictable human interaction kathleen richardson director campaign sex robots firmly believes start cultivating relations leave sex robots dustbin bad ideas argues interacting human experience humanity identity opposed interacting robot sex robots created 2018 resemble women exaggerated characteristics kathleen richardson argues sex robots facilitate powerful attitude women bodies commodities promote empathetic interaction experts argue improving gender diversity involved developing sex technology reduce harm objectification women barcelona sex doll brothel fantasies choose selection flexible silicone dolls request dressed outfit prefers scholars including kathleen richardson argue reinforces idea women property human scholars robert sparrow argue creation realistic female sex robots ability refuse consent facilitates rape culture believes sex robots represents rape woman increase rate rape society facilitating disrespect women society sex robot called frigid farah personality shy caught attention scholars manufacturer claimed touched private appreciative advance scholars view indulging rape fantasies facilitating rape culture legislation curbing realistic exploitative electronic pedophilic robots creeper sponsored daniel donovan jr passed house representatives 13 june 2018 amend federal obscenity statute criminalize importation transportation interstate commerce anatomically correct doll mannequin robot features features resemble minor intended sexual acts bob goodlatte stated dolls create real risk reinforcing pedophilic behavior desensitize user causing engage sicker sicker behavior australia united kingdom bans potential benefits proponents sex robots sex robots potential provide valuable service people elderly disabled provide emotional support spouse elderly person dies scholars hojjat abdollahi argue robots robot companions aid elderly people dementia depression conducting study elderly patients elderly individuals robot companion decay time explains patients established meaningful rapport robot companion greatly valued presence robot robot companion ‘paro’ created takanori shibata 2009 therapeutic machine elderly suffering dementia suffering depression anxiety paro designed respond touch remember learn actions promote favorable reaction patient paro designed sex robot paro intelligent machines suitable therapeutic option york times columnist ross douthat suggested sex robots solve inceldom society philosophical discussion international congress love sex robots held funchal madeira november 2014 conference coordinated professor adrian cheok dr david levy main discussion revolved debate draw regard cyber love relationships future love sex robots store additional topics discussion conference included humanoid robots robot emotions roboethics philosophical approaches october 2015 conference scheduled november 2015 malaysia declared illegal malaysian inspector police conference eventually held december 2016 chaired dr kate devlin goldsmiths university london united kingdom devlin founded sex tech hackathon held 2016 goldsmiths 2016 discussion issues held 12th ifip tc9 human choice computers conference entitled technology intimacy choice coercion conference coordinated dr david kreps salford university aim conference crutinize journey impersonal monolithic technology intimate intertwining devices prospective outlook technologies evolve closely examined main themes discussed conference intimacy personalization material culture sexual relationships robots september 2018 13th ifip tc9 human choice computers conference held poznan poland conference led directed david kreps kai kimppa louise leenen charles ess discussion focused societal ethical implications posed artificial intelligence privacy concerns technologies shifted computational strategies altered live popular culture intimacy robots artificial intelligence human constructed items saturated media landscape provoke questions love people crave affection challenge pre existing beliefs human originally published 1886 tomorrow eve centers fictionalized edison creates female robot lonely patron robot beauty apparent robot lacks emotional capabilities fulfill hole heart film machina questions common notions consciousness sentient robot created violent outcome rebelling creators story machina appeals empathize robot victim god complex responding protagonist uncertainty fate live creator standards robot ava responds lives questions audience underlying belief robot entitled life conscious film lars real girl explores idea romantic attachment artificial human items ultimately film concludes protagonist murdering sex doll lover river emphasizing projection idealized lover inanimate object 
21525096	computerscience	ppopp acm sigplan symposium principles practice parallel programming academic conference field parallel programming ppopp sponsored association computing machinery special sigplan history conference organised 1988 connecticut united conference called acm sigplan conference parallel programming experience applications languages systems ppeals changed conference organised time 1990 conference organised biennially 1991–2005 annually 2006–2009 ppopp federated computing conference fcrc 1993 1999 2003 artifact evaluation 2015 ppopp features artifact evaluation validate experiments accepted papers improve reproducibility systems 
21578485	computerscience	color space specific organization colors combination physical device profiling reproducible representations color analog digital representations color space arbitrary colors assigned set physical color swatches assigned color names pantone collection structured mathematically ncs adobe rgb srgb color model abstract mathematical model describing colors represented tuples triples rgb quadruples cmyk color model mapping function absolute color space arbitrary color connection globally understood color interpretation adding specific mapping function color model reference color space establishes reference color space definite footprint gamut color model defines color space adobe rgb srgb absolute color spaces based rgb color model defining color space usual reference standard cielab ciexyz color spaces designed encompass colors average human color space identifies combination color model mapping function word informally identify color model identifying color space automatically identifies color model usage incorrect strict sense specific color spaces based rgb color model singular rgb color space history color space concept hermann grassmann developed stages developed idea vector space allowed algebraic representation geometric concepts dimensional space fearnley sander 1979 describes grassmann foundation linear algebra conceptual background 1853 grassmann published theory colors mix color laws taught grassmann law examples colors created printing color spaces based cmyk color model subtractive primary colors pigment cyan magenta yellow black create dimensional representation color space assign magenta color representation axis cyan axis yellow axis space unique position color created combining pigments colors created monitors color spaces based rgb color model additive primary colors red green blue dimensional representation assign colors axes note colors generated monitor limited reproduction medium phosphor crt monitor filters backlight lcd monitor creating colors monitor hsl hsv color space based hue saturation brightness brightness space variables assigned cylindrical coordinates color spaces represented dimensional values manner dimensions pantone represented conversion color space conversion translation representation color basis typically occurs context converting image represented color space color space goal translated image original rgb density rgb color model implemented depending capabilities common incarnation 24 bit implementation bits 256 discrete levels color channel color space based 24 bit rgb model limited range 256×256×256 16 colors implementations 16 bits component 48 bits total gamut larger distinct colors wide gamut color spaces common colors located close digital filtering algorithms consecutively principle applies color space based color model implemented bit depths lists cie 1931 xyz color space attempts produce color space based measurements human color perception earlier efforts james clerk maxwell könig dieterici abney imperial college basis color spaces ciergb color space linearly companion cie xyz additional derivatives cie xyz include cieluv cieuvw cielab generic rgb additive color mixing describes light emitted produce color rgb stores individual values red green blue rgba rgb additional channel alpha transparency common color spaces based rgb model include srgb adobe rgb prophoto rgb scrgb cie rgb cmyk subtractive color mixing printing process describes inks applied light reflected substrate inks produces color starts white substrate canvas ink subtract color white create image cmyk stores ink values cyan magenta yellow black cmyk color spaces sets inks substrates press characteristics change dot gain transfer function ink change appearance yiq ntsc north america japan television broadcasts historical reasons stores luma roughly analogous incorrectly identified luminance chroma values approximate representations relative amounts blue red color yuv scheme video capture systems pal australia europe france secam television yiq color space rotated 33° respect yuv color space color axes swapped ydbdr scheme secam television rotated ypbpr scaled version yuv commonly digital form ycbcr video image compression schemes mpeg jpeg xvycc international digital video color space standard published iec iec 61966 based itu 601 709 standards extends gamut primaries standards hsv hue saturation hsb hue saturation brightness artists natural color terms hue saturation terms additive subtractive color components hsv transformation rgb color space components colorimetry relative rgb color space derived hsl hue saturation lightness luminance hls hsi hue saturation intensity hsv lightness replacing brightness difference brightness pure color equal brightness white lightness pure color equal lightness medium gray obsolete color spaces components blue light complexity component process marginal increase fidelity compared jump monochrome component color absolute color space color science meanings term absolute color space article concentrate definition ciexyz srgb ictcp examples absolute color spaces opposed generic rgb color space absolute color space absolute defining relationship absolute colorimetric quantities instance red green blue colors monitor measured properties monitor rgb values monitor considered absolute referred absolute white specification popular color space rgb absolute color define icc profile attributes rgb express absolute color standard industries rgb colors defined accepted profiles include srgb adobe rgb process adding icc profile graphic document called tagging embedding tagging marks absolute meaning colors graphic document conversion color absolute color space converted absolute color space color spaces gamut limitations converting colors lie gamut produce correct rounding errors popular range 256 distinct values component bit color definition absolute color space viewing conditions color viewed natural artificial lighting conditions involved professionally color matching viewing lit standardized lighting occasionally precise rules converting absolute color spaces hsl hsv spaces defined mappings rgb absolute conversion maintain color converting absolute color spaces rgb cmyk absolute absolute color spaces rgb meaningless concept arbitrary spaces method defining absolute color spaces familiar consumers swatch card select paint fabrics agreeing color parties standardized method defining absolute colors pantone matching proprietary includes swatch cards recipes commercial printers inks color references iscc aic2001 abstracts poster zoch doc 
21610688	computerscience	joint compatibility branch bound jcbb algorithm vision robotics commonly data association simultaneous localization mapping jcbb measures joint compatibility set pairings rejects spurious matchings robust complex environments 
21718385	computerscience	communication networks cognitive network type data network cutting edge technology machine learning knowledge representation network network management solve current networks faced cognitive network cognitive radio covers layers osi model layers history definition cognitive network theo kantor doctoral kth royal institute technology stockholm including presentation june 1998 cognitive network network memory theo student chip maguire advising joe mitola originator cognitive radio mitola focused cognition nodes kantor focused cognition network mitola licentiate thesis published august 1999 includes quote time knowledge representation language rkrl empowered network learn distinguish feature natural environment match models declare errors cognitive network earliest publication concept cognitive network kantor published bit ibm autonomic networks challenge 2001 instigated introduction cognition cycle networks cognitive radio kantor cognitive networks ibm autonomic networks foundation parallel evolution cognitive wireless networks cognitive networks 2004 petri mahonen rwth aachen mitola doctoral committee organized international workshop cognitive wireless networks dagstuhl germany addition eu e2r e3 programs developed cognitive network theory rubric organizing networks aware networks attempts define concept cognitive network 2005 thomas based idea knowledge plane clark 2003 manoj proposed cognitive complete knowledge network 2008 activities emerged survey edited book reveal efforts knowledge plane pervasive network builds maintains level models network supposed provide services advice elements network concept scale cognitive network 2008 song knowledge plan defined scale wireless networks knowledge availability radio spectrum wireless stations definition thomas define network cognitive process perceive current network conditions plan decide conditions learn consequences actions goals loop cognition loop senses environment plans actions input sensors network policies decides scenario fits purpose reasoning engine finally acts chosen scenario discussed previous learns situations plans decisions actions knowledge improve decisions future definition explicitly mention knowledge network describes cognitive loop adds goals distinguish called cognitive layers definition incomplete lacks knowledge component cognitive discussed balamuralidhar prasad view role ontological knowledge representation “the persistent nature ontology enables proactiveness robustness ‘ignorable events’ unitary nature enables adaptations ”in communication network augmented knowledge plane span vertically layers cross layer design horizontally technologies nodes covering heterogeneous environment knowledge plane elements representation relevant knowledge scope device homogeneous network heterogeneous network cognition loop artificial intelligence techniques learning techniques decision techniques detailed cross layer network architecture proposed cns interpreted network utilize radio spectrum wireless station resources opportunistically based knowledge resource availability developed radio transceiver utilize spectrum channels opportunistically dynamic spectrum access network opportunistically organize crs network architecture cross layer network architecture named embedded wireless interconnection ewi opposed interconnection osi protocol stack architecture based definition wireless linkage abstract wireless links redefined arbitrary mutual operations set neighboring proximity wireless nodes comparison traditional wireless networking relies virtual wired links predetermined pair wireless nodes allotted spectrum network architecture primary principles wireless link modules provide designers reusable network abstractions modules individually updated modules wireless link layer modularity flexibility essential middleware application developments ewi organizing style architecture layer organizes wireless link modules wireless link layer peer wireless link modules exchange module management padding packet headers layer units types wireless link modules proposed including broadcast peer peer unicast multicast sink unicast data aggregation arbitrary types modules establishing types abstract wireless links limitation broadcast module simply disseminates data packets surrounding nodes peer peer unicast module deliver data packets source destination multiple wireless hops multicast module sends data packets multiple destinations compared peer peer unicast sink unicast module wireless sensor networks utilizes capabilities data collectors sinks achieve data delivery data aggregation module opportunistically collects aggregates context data set proximity wireless nodes service access sap defined interface layer wireless link layer wl sap wireless link sap wlme sap wireless link management entity sap wl sap data plane wlme sap management plane saps utilized layer controlling qos wireless link modules 
21903944	computerscience	wolfram alpha styled wolframalpha wolfram alpha computational knowledge engine answer engine developed wolfram alpha llc subsidiary wolfram online service answers factual queries computing answer externally sourced curated data providing list documents answer search engine wolfram alpha released 18 2009 based wolfram earlier flagship product wolfram mathematica computational platform toolkit encompasses algebra symbolic numerical computation visualization statistics capabilities additional data gathered academic commercial websites cia factbook united geological survey cornell university library publication called birds chambers biographical dictionary dow jones catalogue life crunchbase faa optionally user facebook account overview users submit queries computation requests field wolfram alpha computes answers relevant visualizations knowledge base curated structured data sites books portfolio automated manual methods including statistics visualization source cross checking expert review curated data alpha semantic search engines answers match question wolfram alpha provide robust query based computational queries social sciences cultural studies questions history responses require subtlety complexity respond phrased natural language based questions mary robinson born complex questions queen elizabeth 1974 displays input interpretation question standardized phrases age queen elizabeth royalty 1974 answer age start 1974 47 biography link wolfram alpha answer queries require narrative response difference julian gregorian calendars answer factual computational questions june julian calendar mathematical symbolism parsed engine typically responds numerical lim sin yields correct limiting plot 235 terms taylor series registered users derivation hôpital rule perform calculations data source country gdp capita yields nicaragua 1160 technology wolfram alpha written 15 lines wolfram language code runs 000 cpus database includes hundreds datasets current historical weather datasets accumulated curated distinct auto generated datasets checked quality scientist expert relevant field acting clerical capacity simply verifies datasets acceptable live dataset wolfram alpha profile facebook user inputting facebook report query user authorizes facebook share account details wolfram alpha generate personal analytics report age distribution friends frequency status updates detailed weeks launching facebook analytics service 400 000 users downloadable query pay wall summaries accessible accounts licensing partners wolfram alpha power searches bing duckduckgo search engines release july 21 2017 brave browser features wolfram alpha default search engines factual question answering queried apple siri amazon alexa samsung voice dexetra speech recognition software android platform iris voice control software blackberry history launch preparations 15 2009 7 pm cdt broadcast live justin plan publicly launch service hours expected issues extreme load service officially launched 18 2009 wolfram alpha received mixed reviews wolfram alpha advocates potential stating determines current december 2009 iphone app introduced users considered initial 50 price ios app unnecessarily features freely accessed browser complained simultaneous removal mobile formatting option wolfram responded lowering price offering refund existing customers instating mobile october 2010 android version app released kindle nook nook version 71 apps wolfram alpha engine specialized tasks june 18 2018 japanese version wolfram alpha released wolfram alpha pro february 2012 wolfram alpha pro released offering users additional features monthly subscription fee key feature ability upload common file types data—including raw tabular data images audio xml dozens specialized scientific medical mathematical formats—for automatic analysis features include extended keyboard interactivity cdf data downloads depth step step solution ability customize save graphical tabular extra computation time premium features wolfram alpha pro led version copyright claims infoworld published article warning readers potential implications automated proprietary rights data generates software advocate richard stallman opposes idea recognizing copyright holder suspects wolfram existing copyright law 
22155779	computerscience	lingoes single multi lingual translation software program released freeware translation utility lingoes compared babylon dictionary similarities gui functionalities importantly charge lingoes installed windows 32 64 portable application features expandability lingoes ability add dictionaries encyclopedias widen usability online encyclopedias wikipedia encyclopedia baidu baike leading dictionaries longman dictionary contemporary english merriam webster collegiate dictionary wordnet macmillan english dictionary collins cobuild advanced learner english dictionary cross english dictionaries arabic armenian dutch french german greek hebrew hungarian indonesian italian japanese korean latin norwegian persian polish portuguese russian spanish swedish 80 languages stated lingoes official additional tools termed appendices program include currency converter weights measure units converter international time zones converter periodic table elements scientific calculator traditional chinese simplified chinese conversion utility base64 encode decode utility md4 md5 sha algorithms tools program ability pronounce install additional speech engines download lingoes lingoes offers translation ability online translation service providers google translate yahoo babel fish translation systran cross language click2translate lingoes offers translate examples mouse bouble clicking selected options babylon pro 
22350703	computerscience	image processing vision anisotropic diffusion called perona–malik diffusion technique aiming reducing image noise removing image content typically edges lines details interpretation image anisotropic diffusion resembles process creates scale space image generates parameterized family successively blurred images based diffusion process images family convolution image 2d isotropic gaussian filter filter increases parameter diffusion process linear space invariant transformation original image anisotropic diffusion generalization diffusion process produces family parameterized images image combination original image filter depends local content original image consequence anisotropic diffusion linear space variant transformation original image original formulation perona malik 1987 space variant filter isotropic depends image content approximates impulse function close edges structures preserved image levels scale space formulation referred anisotropic diffusion perona malik locally adapted filter isotropic referred inhomogeneous nonlinear diffusion perona malik diffusion authors formulation locally adapted filter anisotropic close linear structures edges lines orientation structure elongated structure narrow methods referred shape adapted smoothing coherence enhancing diffusion consequence images preserve linear structures time smoothing structures generalization usual diffusion equation diffusion coefficient constant scalar function image position assumes matrix tensor structure tensor family images combination original image space variant filters locally adapted filter combination image realized practice anisotropic diffusion implemented approximation generalized diffusion equation image family computed applying equation previous image anisotropic diffusion iterative process simple set computation compute successive image family process continued sufficient degree smoothing formal definition formally denote subset plane family gray scale images anisotropic diffusion defined aswhere denotes laplacian denotes gradient divergence operator diffusion coefficient controls rate diffusion chosen function image gradient preserve edges image pietro perona jitendra malik pioneered idea anisotropic diffusion 1990 proposed functions diffusion coefficient andthe constant controls sensitivity edges chosen experimentally function noise image motivation 11 denote manifold smooth images diffusion equations interpreted gradient descent equations minimization energy functional 12 defined bywhere 14 real valued function intimately diffusion coefficient compactly supported infinitely differentiable function 15 havewhere multidimensional integration letting 17 denote gradient respect 18 product evaluated givestherefore gradient descent equations functional bythus letting 21 anisotropic diffusion equations posedness diffusion coefficient proposed perona malik negative 23 restriced dimension simplicity define flux function 24 25and 26 perona malik equation rewritten based flux function byformula 27 28are denoted derivative time position derivative position 29 plays role diffusion coefficient linear heat equation calculating 29 31 32 diffusion coefficient negative leads diffusion enhances contrasts image intensity smoothes image processing terms theoretical perspective diffusion physically unnatural numeracally unstable solutions sensitive parameter 33 addition diffusion numerous solutions called posedness avoid regularization people spatial regularizations lead converged constant steady solution regularization modified perona malik model regularization equation discussed approach unknown convolved gaussian linearity modified perona malik equationwhere 35 posedness equation achieved regularization introduces blurring main drawback regularization prior knowledge noise level required choice regularization parameter depends applications anisotropic diffusion remove noise digital images blurring edges constant diffusion coefficient anisotropic diffusion equations reduce heat equation equivalent gaussian blurring ideal removing noise indiscriminately blurs edges diffusion coefficient chosen edge seeking function perona malik equations encourage diffusion smoothing regions prohibit strong edges edges preserved removing noise image lines noise removal anisotropic diffusion edge detection algorithms running diffusion edge seeking diffusion coefficient iterations image evolved piecewise constant image boundaries constant components detected edges 
22453058	computerscience	sun law sun law memory bounded speedup memory bounded speedup model computing power increases increase size constrained system’s memory capacity grows computational power increase size analogous amdahl law size remains constant sizes grow gustafson law proposes size scale bound fixed time sun law size scale bound memory capacity sun law initially proposed xian sun lionel proceedings ieee supercomputing conference 1990 increasing disparity cpu speed memory data access latency application execution time depends memory speed predicted sun data access premier performance bottleneck computing intuition sun law resources increase applications bottlenecked memory speed bandwidth application achieve larger speedup utilizing memory capacity sun law applied layers memory hierarchy l1 cache main memory memory bounded function reveals trade computing memory algorithm architecture design speedup models sun gustafson amdahl provide metric analyze speedup parallel computing amdahl’s law focuses time reduction fixed size amdahl’s law sequential portion algorithm limits total speedup achieved resources increase gustafson’s law suggests beneficial build scale parallel speedup grow linearly size size scaled maintain fixed execution time memory access latency dominant factor application’s execution time applications scale meet time bound constraint sun law constraining size time constrains memory capacity bounds based memory sun law generalization amdahl law gustafson law memory bounded function resolves amdahl law memory bounded function processors resolves gustafson law derivation sun law scaled workload memory space constraint memory bounded speedup defined suppose portion workload parallelized sequential portion workload function reflects parallel workload increase factor memory capacity increases times memory capacity node 8the memory bounded speedup 9for power function rational 11where 12 power function coefficient degree term determine complexity algorithm rewrite memory bounded speedup 13in equation 14 represents influence memory change change size suppose 15 memory bounded speedup model reduces amdahl law size fixed independent resource increase suppose 16 memory bounded speedup model reduces gustafson law memory capacity increases times workload increases times data local node simplicity matching notation amdahl law gustafson law letter represent memory bound function 14 replaces notation 18examples suppose determine memory bounded speedup matrix multiplication memory requirement matrix multiplication roughly 19 dimension source matrices computation requirement 20thus 21 22thus memory bounded speedup matrix multiplication 23the matrix multiplication illustrates rapid increase parallel execution time execution time matrix uniprocessor 24 memory usage 25suppose 10000 10000 matrix takes 800 mb memory factorized hour uniprocessor scaled workload suppose factorize 320 000 320 000 matrix 32 hours time increase increase size valuable someones premier goal accuracy astrophysicist simulating body particles computation intensive applications memory capacity proportionally scale computing power applications effects sun law memory bounded speedup model reveal memory performance constraint computing quantitative mathematical formulation trade memory computing based memory bounded function computation applications memory requirement terms capacity reuse rate simple effective description relation computation memory requirement architecture viewpoint memory bounded model suggests size speed cache match cpu performance modern microprocessors pentium pro alpha 21164 strong arm sa110 longson 3a 80 transistors chip cache computing components algorithm design viewpoint reduce memory accesses reuse data function reuse rate term memory bound functions term refers functions involve extensive memory access memory complexity analysis discipline algorithm analysis 
22584291	computerscience	watson question answering capable answering questions posed natural language developed ibm deepqa project team led principal investigator david ferrucci watson named ibm ceo industrialist thomas watson initially developed answer questions quiz jeopardy 2011 watson competed jeopardy legendary champions brad rutter ken jennings winning prize february 2013 ibm announced watson software commercial application utilization management decisions lung cancer treatment memorial sloan kettering cancer center york city conjunction health insurance company wellpoint ibm watson business chief manoj saxena 90 nurses field watson follow guidance description watson created question answering computing ibm built apply advanced natural language processing retrieval knowledge representation automated reasoning machine learning technologies field domain question answering key difference technology document search document search takes keyword query returns list documents ranked relevance query based popularity ranking technology takes question expressed natural language seeks understand returns precise answer question created ibm stated 100 techniques analyze natural language identify sources generate hypotheses score evidence merge rank hypotheses watson capabilities extended watson changed advantage deployment models watson ibm cloud evolved machine learning capabilities optimised hardware developers researchers purely question answering computing designed pairs hear talk taste interpret learn commend software watson ibm deepqa software apache uima unstructured management architecture framework implementation written languages including java prolog runs suse linux enterprise server 11 operating apache hadoop framework provide distributed computing hardware workload optimized integrating massively parallel power7 processors built ibm deepqa technology generate hypotheses gather massive evidence analyze data watson employs cluster ibm power 750 servers 5 ghz power7 core processor threads core total 880 power7 processor threads 16 terabytes ram john rennie watson process 500 gigabytes equivalent books ibm master inventor senior consultant tony pearson estimated watson hardware cost dollars linpack performance stands 80 teraflops fast cut 500 supercomputers list rennie content stored watson ram jeopardy game data stored hard drives slow competitive human jeopardy champions data sources watson include encyclopedias dictionaries thesauri newswire articles literary watson databases taxonomies ontologies dbpedia wordnet yago ibm team watson millions documents including dictionaries encyclopedias reference material build knowledge operation watson parses questions keywords sentence fragments statistically phrases watson main innovation creation algorithm operation ability execute hundreds proven language analysis algorithms simultaneously algorithms answer independently watson correct watson potential solutions check database ascertain solution sense comparison human players watson basic principle parse keywords clue searching terms responses watson advantages disadvantages compared human jeopardy players watson deficiencies understanding contexts clues result human players generate responses faster watson short clues watson programming prevents popular tactic buzzing response watson consistently reaction time buzzer generated response immune human players psychological tactics jumping categories clue sequence 20 mock games jeopardy human participants average watson hear clue decide signal responding time watson evaluate response determine confident result signal win jeopardy contest electronic circuitry receives ready signal examined watson confidence level activate buzzer speed circuitry compared speed human reaction times watson reaction time faster human contestants human anticipated reacted ready signal signaling watson speaks electronic voice responses jeopardy question format watson voice synthesized recordings actor jeff woodman ibm speech program 2004 jeopardy staff notify watson human players buzz critical rounds humans notified light tenths perceive watson notified electronic signal activate buzzer milliseconds humans compensate perception delay anticipating light variation anticipation time fall watson response time watson attempt anticipate notification signal history development deep blue victory garry kasparov chess 1997 ibm hunt challenge 2004 ibm manager charles lickel dinner coworkers noticed restaurant fallen silent discovered evening hiatus ken jennings middle successful 74 game jeopardy entire restaurant piled televisions mid meal watch phenomenon intrigued quiz challenge ibm lickel passed idea 2005 ibm executive paul horn lickel pushing department challenge playing jeopardy ibm initially trouble finding staff looked complex challenge wordless game chess eventually david ferrucci offer competitions managed united government watson predecessor named piquant respond correctly 35 clues required minutes respond compete jeopardy watson respond time posed game deemed impossible solve initial tests 2006 david ferrucci senior manager ibm semantic analysis integration department watson 500 clues jeopardy programs real life competitors buzzed time responded correctly 95 clues watson pass 15 correct 2007 ibm team staff 15 people solve 2008 developers advanced watson compete jeopardy champions february 2010 watson beat human jeopardy contestants regular basis game watson access 200 structured unstructured content consuming terabytes disk storage including 2011 edition wikipedia connected internet clue watson probable responses displayed television screen watson consistently outperformed human opponents game signaling device trouble categories notably short clues ibm effort watson development involved faculty graduate students rensselaer polytechnic institute carnegie mellon university university massachusetts amherst university southern california sciences institute university texas austin massachusetts institute technology university trento students york medical college jeopardy preparation 2008 ibm representatives communicated jeopardy executive producer harry friedman possibility watson compete ken jennings brad rutter successful contestants program producers agreed watson differences human players generated conflicts ibm jeopardy staff planning competition ibm repeatedly expressed concerns writers exploit watson cognitive deficiencies writing clues game turing alleviate claim party randomly picked clues written broadcast jeopardy staff concerns watson reaction time buzzer originally watson signalled electronically staff requested press button physically human contestants robotic finger pressing buzzer watson remained faster human competitors ken jennings win buzzer watson knock microsecond precise buzz single time variation human reflexes compete circuits regard stephen baker journalist recorded watson development book final jeopardy reported conflict ibm jeopardy 2010 competition canceled preparation ibm constructed mock set conference technology sites model jeopardy human players including jeopardy contestants participated mock games watson todd alan crain onion playing host 100 matches conducted watson winning 65 games provide physical presence televised games watson represented avatar globe inspired ibm smarter planet symbol jennings avatar glowing blue ball criss crossed threads thought—42 threads precise stated threads avatar joke referencing significance 42 douglas adams hitchhiker guide galaxy joshua davis artist designed avatar project explained stephen baker 36 triggerable watson game confidence responding clue correctly hoped add level hitchhiker guide reference unable pinpoint game practice match recorded january 13 2011 official matches recorded january 14 2011 participants maintained secrecy outcome match broadcast february practice match practice match press january 13 2011 watson 15 question ken jennings brad rutter score 400 jennings 400 rutter 200 jennings watson tied final 000 question players responded incorrectly clue match broadcast february 14 2011 february 15 2011 choose category determined draw rutter watson represented monitor display artificial voice responded correctly clue selected fourth clue category deliberate strategy daily double watson guess daily double location correct watson tied rutter 000 jennings 000 watson performance characterized quirks instance watson repeated reworded version incorrect response offered jennings jennings 20s reference 1920s watson 1920s watson recognize contestants responses jennings response instance watson initially credit response leg jennings incorrectly responded hand clue george eyser correct response missing leg watson human responding jennings mistake decided response incorrect broadcast version episode edited omit trebek original acceptance watson response watson demonstrated complex wagering strategies daily doubles bet 435 246 gerald tesauro ibm researchers watson explained watson wagers based confidence level category complex regression model called game evaluator watson commanding lead double jeopardy correctly responding daily doubles watson responded daily double correctly 32 confidence score wagered 947 clue watson contestant final jeopardy response category cities largest airport named war hero largest war battle rutter jennings correct response chicago watson response toronto ferrucci offered reasons watson guessed canadian city categories weakly type response desired phrase city question cities named toronto toronto ontario american league baseball team dr chris welty watson suggested correctly parse clue largest war battle standalone clause semicolon required context understand referring largest airport eric nyberg professor carnegie mellon university development team stated error occurred watson possess comparative knowledge discard potential response viable displayed audience final jeopardy questions watson choice chicago toronto chicago watson confidence threshold 14 11 lack confidence reason multiple question marks watson response game jennings 800 rutter 400 watson 35 734 match introduction trebek canadian native joked learned toronto city watson error match prompted ibm engineer wear toronto blue jays jacket recording match jennings finally choose daily double clue watson responded daily double clue incorrectly time double jeopardy watson time competition rutter jennings successful increasing dollar values watson respond final result victory watson score 77 147 besting jennings scored 24 000 rutter scored 21 600 final outcome prizes competition watson 300 000 jennings 200 000 rutter promised ibm donated 100 watson winnings charity 50 winnings vision 50 community grid jennings rutter donated 50 winnings respective charities acknowledgment ibm watson achievements jennings additional remark final jeopardy response overlords echoing memetic reference episode deep space homer simpsons news presenter kent brockman speaks welcoming insect overlords jennings wrote article slate stated ibm bragged media watson question answering skills annoying alex trebek company future fields medical diagnosis business analytics tech support automated question answering software watson factory jobs eliminated 20th century assembly robots brad knowledge industry workers generation thinking machines quiz contestant job redundant watson wo philosophy philosopher john searle argues watson—despite impressive capabilities—can drawing chinese experiment searle claims watson computational machines capable manipulating symbols ability understand meaning symbols searle experiment detractors match united congress february 28 2011 watson played untelevised exhibition match jeopardy united house representatives rush holt jr nj jeopardy contestant challenging cassidy senator louisiana led watson combining scores matches final score 40 300 watson 30 000 congressional players combined ibm christopher padilla match technology watson represents major advancement computing data intensive environment government type technology organizations decisions improve government helps citizens current future applications ibm goal computers start interact natural human terms range applications processes understanding questions humans providing answers humans understand justify suggested robert weber ibm counsel watson legal company intends watson intensive fields telecommunications financial services government watson based commercially ibm power 750 servers marketed february 2010 ibm intends market deepqa software corporations price millions dollars reflecting acquire server meets minimum requirement operate watson ibm expects price decrease decade technology improves commentator rick merritt reason strategic ibm broadly american public company tackle tough slice profit selling government biggest expensive systems 2013 reported companies ibm create apps embedded watson technology fluid developing app retailers called north designed provide advice online shoppers welltok developing app designed people advice engage activities improve health buyline developing app purpose advising medical institutions equipment procurement decisions november 2013 ibm announced watson api software application providers enabling build apps services embedded watson capabilities build base partners create applications watson platform ibm consults network venture capital firms advise ibm portfolio companies logical fit ibm calls watson ecosystem roughly 800 organizations individuals signed ibm creating applications watson platform january 30 2013 announced rensselaer polytechnic institute receive successor version watson housed institute technology park researchers students summer 2013 rensselaer university receive watson february 2014 reported ibm plans invest 100 initiative watson ibm technologies countries africa address development healthcare education june 2014 watson ecosystem partners chosen 400 business concepts submitted teams spanning 18 industries 43 countries bright enterprising organizations discovered innovative apply watson deliver demonstrable business benefits steve gold vice president ibm watson winners majestyk apps adaptive educational platform fang friendly anthropomorphic networked genome red ant retail sales trainer geniemd medical recommendation service july 2014 genesys telecommunications laboratories announced plans integrate watson improve customer experience platform citing sheer volume customer data analyze staggering watson integrated databases including bon appétit magazine perform recipe generating platform watson decibel music discovery startup app musicgeek supercomputer provide music recommendations users artificial intelligence watson hospitality industry gomoment watson rev1 app hotel staff respond questions guests arria nlg built app helps energy companies stay regulatory guidelines easier managers sense thousands legal technical jargon omniearth watson vision services analyze satellite aerial imagery municipal data infer water usage property property basis helping water districts drought stricken california improve water conservation efforts september 2016 condé nast started ibm watson build strategize social influencer campaigns brands software built ibm influential condé nast clients influencer demographics personality traits align marketer audience targeting february 2017 rare carat york city based startup commerce platform buying diamonds diamond rings introduced ibm watson powered artificial intelligence chatbot called rocky assist novice diamond buyers daunting process purchasing diamond ibm global entrepreneur program rare carat received assistance ibm development rocky chat bot 2017 ibm partnered pebble beach company watson concierge watson artificial intelligence app developed pebble beach guide visitors resort mobile app designed ibm ix hosted ibm cloud watson conversation applications programming interface november 2017 mexico city experience voices time national museum anthropology ibm watson alternative visiting museum healthcare healthcare watson natural language hypothesis generation evidence based learning capabilities investigated watson contribute clinical decision support systems increase artificial intelligence healthcare medical professionals aid physicians treatment patients physician posed query describing symptoms factors watson parses input identify pieces mines patient data relevant patient medical hereditary history examines data sources form hypotheses finally list individualized confidence scored recommendations sources data watson analysis include treatment guidelines electronic medical record data notes healthcare providers materials clinical studies journal articles patient developed marketed diagnosis treatment advisor watson involved medical diagnosis process assisting identifying treatment options patients diagnosed february 2011 announced ibm partnering nuance communications project develop commercial product 18 24 months designed exploit watson clinical decision support capabilities physicians columbia university identify critical issues practice medicine technology contribute physicians university maryland identify technology watson interact medical practitioners provide maximum assistance september 2011 ibm wellpoint announced partnership utilize watson data crunching capability treatment options physicians february 2013 ibm wellpoint watson commercial application utilization management decisions lung cancer treatment memorial sloan–kettering cancer center ibm announced partnership cleveland clinic october 2012 company watson cleveland clinic lerner college medicine western reserve university increase health expertise assist medical professionals treating patients medical facility utilize watson ability store process quantities speed increase accuracy treatment process cleveland clinic collaboration ibm exciting offers opportunity teach watson potential powerful tool medicine martin harris chief officer cleveland clinic 2013 ibm anderson cancer center pilot program center mission eradicate cancer spending 62 project meet goals stopped february 2013 ibm announced oncologists maine center cancer medicine westmed medical york started watson supercomputer effort recommend treatment lung cancer july 29 2016 ibm manipal hospitals leading hospital chain india announced launch ibm watson oncology cancer patients product insights physicians cancer patients identify personalized evidence based cancer care options manipal hospitals hospital adopt technology offer patients online expert opinion january 2017 ibm fukoku mutual life insurance entered contract ibm deliver analysis compensation payouts ibm watson explorer loss 34 jobs company speed compensation payout analysis analysing claims medical record increase productivity 30 company save ¥140m running costs ibm watson carrying knowledge base 1000 cancer specialists bring revolution field healthcare ibm regarded disruptive innovation stream oncology nascent stage startups healthcare space effectively business model archetypes solutions based ibm watson marketplace archetypes depends generate target user patient focus healthcare provider payer focus capturing mechanisms providing connecting stakeholders ibm watson january 2014 ibm announced creating business unit watson led senior vice president michael rhodin ibm watson headquarters york silicon alley employ 000 people ibm invested division watson develop cloud delivered services watson discovery advisor watson engagement advisor watson explorer watson discovery advisor focus development projects pharmaceutical industry publishing biotechnology watson engagement advisor focus service applications insights basis natural language questions posed business users watson explorer focus helping enterprise users uncover share data driven insights based federated search easily company launching 100 venture fund spur application development cognitive applications ibm cloud delivered enterprise ready watson speed increase 24 times over—a 300 percent improvement performance physical size shrank 90 percent—from size master bedroom stacked pizza boxes ibm ceo virginia rometty watson generate annual revenue 20 september 2017 anantha chandrakasan dean mit school engineering announced antonio torralba mit director mit ibm watson lab march 2018 ibm ceo ginni rometty proposed watson law application business smart cities consumer applications life chatterbot watson ibm partner program chatterbot provide conversation children toys building codes 2015 engineering firm engeo created online service ibm partner program named gofetchcode gofetchcode applies watson natural language processing question answering capabilities international code council model building codes teaching assistant ibm watson projects relating education entered partnerships pearson education blackboard sesame workshop apple partnership pearson watson electronic books provide natural language tutoring students reading material individual watson apis public ashok goel professor georgia tech watson create virtual teaching assistant assist students class initially goel reveal nature jill created students ibm jill answered questions 97 certainty accurate answer remainder answered human assistants sabri pllana developed assistant learning parallel programming ibm watson survey novice parallel programmers linnaeus university assistant students learn parallel programming weather forecasting august 2016 ibm announced watson weather forecasting company announced watson analyze data 200 000 weather underground personal weather stations data sources project deep thunder fashion ibm watson marchesa designed dress changed colour fabric depending mood audience dress lit colours based sentiment tweets dress tweets passed watson tone analyzer waist dress social media integral business marchesa team loved watson incorporate glamour gown tax preparation february 5–6 2017 tax preparation company block nationwide watson based program 
22792600	computerscience	energid technologies engineering firm providing robotics machine vision remote controlsoftware core product referred actin headquarters cambridge massachusetts regional presence bedford massachusetts york york pittsburgh pennsylvania tucson arizona austin texas chicago illinois energid international presence bangalore india energid technologies develops tools robotic applications industrial agriculture transportation defense medical industries energid actin selectin products provide advanced robotics technology form extendable software toolkits actin release control tasking complex multi robot systems energid applied software control robots seafloor oil exploration nuclear reactor inspection citrus harvesting history energid technologies founded 2001 florida corporation headquartered cambridge massachusetts 
23048428	computerscience	kinect codenamed project natal development motion sensing input devices produced xbox 360 xbox video game consoles windows pcs based webcam style add peripheral enables users control interact console game controller natural user interface gestures spoken commands generation kinect xbox 360 introduced november 2010 attempt broaden console audience typical gamer base released beta version kinect software development kit windows applications june 16 2011 initially supporting kinect xbox 360 hardware connected pc commercial applications sdk meant developers write kinect apps cli visual basic hardware version kinect windows released february 2012 version windows sdk allowing commercial applications released required kinect windows hardware kinect xbox version expanded hardware capabilities released xbox platform starting 2013 kinect windows v2 hardware released 2014 supporting sdk version windows sdk supported kinect windows v2 kinect xbox hardware announced discontinuation kinect windows device 2015 kinect xbox 360 discontinued console april 2016 kinect windows v2 discontinued 2015 customers encouraged functionally identical kinect xbox hardware adapter windows machines kinect xbox discontinued october 2017 representing kinect product history kinect announced june 2009 e3 2009 code project natal demos showcase kinect revealed e3 2009 media briefing ricochet paint party milo kate demo based burnout paradise media briefing skeletal mapping technology e3 2009 capable simultaneously tracking people feature extraction 48 skeletal human body 30 hz rumored launch project natal accompanied release xbox 360 console retail configuration design revision modest hardware upgrade dismissed reports public repeatedly emphasized project natal compatible xbox 360 consoles company considers initiative fundamental xbox brand xbox live launch akin xbox console platform kinect referred xbox ceo steve ballmer speech executives club chicago introduction extend time generation console platform launched historically platforms corporate vice president shane kim reaffirmed company believes life cycle xbox 360 2015 kinect development project team experimentally adapted numerous games kinect based control schemes evaluate usability games beautiful katamari space invaders extreme demonstrated tokyo game september 2009 creative director kudo tsunoda adding kinect based control pre existing games involve code alterations kinect features software updates sensor unit originally planned microprocessor perform operations skeletal mapping revealed january 2010 sensor feature dedicated processor processing handled processor cores xbox 360 xenon cpu alex kipman kinect consumes 15 xbox 360 computing resources november alex kipman statement motion control tech single digit percentage xbox 360 processing power stated 15 percent observers commented computational load required kinect addition kinect functionality pre existing games software updates concepts specific kinect focus developers platform march 25 2010 save flier event called premiere project natal xbox 360 experience e3 2010 event evening sunday june 13 2010 galen center featured performance cirque du soleil announced officially called kinect portmanteau kinetic connect key aspects initiative announced north american launch kinect november 2010 previous statements dismissing speculation xbox 360 accompany launch control announced e3 2010 introducing redesigned xbox 360 complete connector port ready kinect addition july 20 2010 announced kinect bundle redesigned xbox 360 kinect launch june 16 2011 announced beta release sdk allowing development commercial applications running windows kinect xbox 360 hardware july 21 2011 announced white kinect sensor xbox 360 limited edition kinect star wars bundle includes custom star wars themed console controller copies kinect adventures kinect star wars kinect sensors glossy black october 31 2011 announced launching kinect windows program release sdk commercial companies david dennis product manager hundreds organizations determine tech february 2012 released kinect windows version hardware device final version sdk required hardware allowing commercial applications 300 companies 25 countries kinect ready apps launch tabloid york post claimed 500 budget advertising launch kinect claim reported examination reveals 20 increase 85 sales marketing quarter kinect launched entertainment devices division total sales marketing spend 425 entire division marketing campaign controller aiming reach audiences included advertisements kellogg cereal boxes pepsi bottles commercials dancing stars glee print ads magazines people instyle october 19 advertised kinect oprah winfrey xbox 360 consoles kinect sensors people audience weeks kinect bundles xbox 360 consoles audience late night jimmy fallon october 23 held pre launch party kinect beverly hills party hosted ashley tisdale attended soccer star david beckham sons cruz brooklyn romeo guests treated sessions dance central kinect adventures tisdale kinect voice chat nick cannon november 28 burger king kinect bundle 15 minutes major event organized november times square singer yo performed hundreds dancers anticipation kinect midnight launch kinect launched north america november 2010 europe november 2010 australia zealand singapore november 18 2010 japan november 20 2010 purchase options sensor peripheral include bundle game kinect adventures console bundles 4 gb 250 gb xbox 360 console kinect adventures technology kinect xbox 360 2010 kinect xbox 360 combination built software hardware hardware included range chipset technology israeli developer primesense developed consisting infrared projector camera special microchip generates grid location nearby object dimensions ascertained 3d scanner called light coding employs variant image based 3d reconstruction kinect sensor horizontal bar connected base motorized pivot designed positioned lengthwise video display device features rgb camera depth sensor multi array microphone running proprietary software provide body 3d motion capture facial recognition voice recognition capabilities launch voice recognition japan united kingdom canada united mainland europe received feature spring 2011 voice recognition supported australia canada france germany ireland italy japan mexico zealand united kingdom united kinect sensor microphone array enables xbox 360 conduct acoustic source localization ambient noise suppression allowing headset party chat xbox live depth sensor consists infrared laser projector combined monochrome cmos sensor captures video data 3d ambient light conditions sensing range depth sensor adjustable kinect software capable automatically calibrating sensor based gameplay player physical environment accommodating presence furniture obstacles personnel primary innovation kinect software technology enables advanced gesture recognition facial recognition voice recognition supplied retailers kinect capable simultaneously tracking people including active players motion analysis feature extraction 20 joints player primesense stated people device process players limited fit field view camera reverse engineering determined kinect sensors output video frame rate ≈9 hz 30 hz depending resolution default rgb video stream bit vga resolution 640 × 480 pixels bayer color filter hardware capable resolutions 1280x1024 frame rate colour formats uyvy monochrome depth sensing video stream vga resolution 640 × 480 pixels 11 bit depth 048 levels sensitivity kinect stream view camera converted depth map 640x480 video 1280x1024 frame rate kinect sensor practical ranging limit distance xbox software required play kinect roughly 6 m2 sensor maintain tracking extended range sensor angular field view 57° horizontally 43° vertically motorized pivot capable tilting sensor 27° horizontal field kinect sensor minimum viewing distance vertical field resolution pixel microphone array features microphone capsules operates channel processing 16 bit audio sampling rate 16 khz kinect sensor motorized tilt mechanism requires power xbox 360 usb ports supply device proprietary connector combining usb communication additional power redesigned xbox 360 models include special aux port accommodating connector models require special power supply cable included sensor splits connection separate usb power connections power supplied mains ac adapter kinect windows 2012 february 21 2011 announced spring 2011 release preliminary software development kit sdk enabling researchers enthusiasts develop applications running windows pcs beta version initially supported kinect xbox 360 hardware connected pc commercial applications allowed beta released windows june 16 2011 beta released anniversary kinect xbox 360 november 2011 february 2012 hardware version device called kinect windows released suggested price 249 existing xbox 360 device tested supported warranty commercial windows applications time version sdk released allowing commercial licence terms requiring kinect windows hardware commercial sdk included windows compatible pc drivers kinect device kinect capabilities developers build applications visual basic visual studio 2010 included features march 2012 craig eisler manager kinect windows 350 companies custom kinect applications windows march 2012 announced version kinect windows sdk 2012 kinect windows released 21 2012 adds features support languages debut 19 countries kinect windows sdk generation sensor updated times version released october 2012 version released march 18 2013 version released september 17 2013 kinect xbox 2013 upgraded iteration kinect released november 22 2013 xbox wide angle time flight camera processes gigabits data read environment kinect accuracy times fidelity predecessor track visible light active sensor 60 wider field vision detect user feet sensor compared feet original kinect track skeletons detect player heart rate facial expression position orientation 25 individual joints including thumbs weight limb speed player movements track gestures performed standard controller color camera captures 1080p video displayed resolution viewing screen allowing broad range scenarios addition improving video communications video analytics applications stable input build interactive applications kinect microphone provide voice commands actions navigation starting games waking console sleep mode recommended player height 40 inches roughly corresponds children xbox consoles initially shipped kinect included—a holdover announced retracted mandate requiring kinect plugged console times function june 2014 bundles kinect updated xbox sdk allowing game developers explicitly disable kinect skeletal tracking freeing resources kinect disabled unplugged standalone kinect xbox bundled digital dance central spotlight released october 2014 xbox kinect repackaged kinect windows v2 identical removal xbox branding inclusion usb ac adapter released version windows sdk platform april 2015 edition discontinued instructing developers xbox branded kinect usb adapter kinect xbox considered market failure critics crediting privacy concerns held controversies xbox launch inclusion console launch price sales comparison playstation kinect specific titles developed xbox mid 2015 begun heavily downplay kinect strategy platform release refreshed xbox sku 2016 proprietary port attach kinect removed future revisions console necessitating usb ac adapter cord offered xbox owners kinect march 2017 october 25 2017 officially announced discontinuation kinect xbox production production adapter cord january 2018 project kinect azure 2018 announced iteration kinect technology designed enterprise software artificial intelligence usage designed azure cloud platform meant leverage richness azure dramatically improve insights operations software requiring 190 mb storage space kinect software users operate xbox 360 dashboard console user interface voice commands hand gestures techniques voice recognition facial recognition employed automatically identify users applications kinect video kinect enables voice chat video chat xbox 360 users users windows live messenger application kinect tracking functionality kinect sensor motorized pivot users frame applications kinect support include espn zune marketplace netflix hulu confirmed forthcoming applications required kinect functionality certification xbox 360 games require kinect packaged special purple opposed green xbox 360 games prominent requires kinect sensor logo cover games include features utilizing kinect require standard gameplay kinect sensor branding covers kinect launched november 2010 17 titles party publishers announced kinect games include ubisoft electronic arts lucasarts thq activision konami sega capcom namco bandai mtv games retail games select xbox live arcade titles require peripheral kinect fun labs e3 2011 announced kinect fun labs collection gadgets minigames accessible xbox 360 dashboard gadgets includes build buddy air band kinect googly eyes kinect bobblehead kinect sparkler junk fu avatar kinect source drivers november 2010 adafruit industries offered bounty source driver kinect initially voiced disapproval bounty stating condone modification products built numerous hardware software safeguards designed reduce chances product tampering reaction caused misunderstanding company clarified position claiming condone hacking physical device console usb connection left design november adafruit announced héctor martín winner produced linux driver rgb camera depth sensitivity functions device revealed johnny lee core kinect development team secretly approached adafruit idea driver development contest personally financed december 2010 primesense depth sensing chips kinect xbox 360 hardware released source drivers motion tracking middleware called nite primesense announced teamed asus develop pc compatible device kinect chinese markets called wavi xtion product released october 2011 openni source software framework read sensor data kinect natural user interface sensors party development numerous developers researching applications kinect intended purpose playing games philipp robbel mit combined kinect irobot create map 3d robot respond human gestures mit media lab team javascript extension google chrome called depthjs users control browser hand gestures programmers including robot locomotion mit drivers develop motion controller user interface envisioned minority report developers mrpt integrated source drivers libraries examples live 3d rendering basic 3d visual slam team application kinect users play virtual piano tapping fingers desk oliver kreylos researcher university california davis technology improve live dimensional videoconferencing nasa alexandre alahi epfl video surveillance combines multiple kinect devices track people complete darkness companies touch evoluce developed presentation software kinect controlled hand gestures features multi touch zoom mode december 2010 public beta htpc software kinemote launched navigation boxee xbmc menus kinect sensor soroush falahati wrote application create stereoscopic 3d images kinect sensor limited time 2011 topshop store moscow set kinect kiosk overlay collection dresses live video feed customers automatic tracking position rotation virtual dress updated customers outfit kinect compelling potential medicine researchers university minnesota kinect measure range disorder symptoms children creating objective evaluation detect conditions autism attention deficit disorder obsessive compulsive disorder reported kinect intraoperative review medical imaging allowing surgeon access contamination technique sunnybrook health sciences centre toronto doctors guide imaging cancer surgery company gestsure technologies pursuing commercialization nasa jet propulsion laboratory jpl signed kinect windows developer program november 2013 kinect manipulate robotic arm combination oculus rift virtual reality headset creating immersive interface unit built reception kinect xbox 360 release kinect garnered positive opinions reviewers critics ign device kinect tremendous fun casual players creative controller concept undeniably appealing adding 149 99 motion tracking camera add xbox 360 tough sell entry level variation xbox 360 199 99 game informer rated kinect praising technology noting experience takes spatial requirement pose barrier video games called device technological gem applauded gesture voice controls criticizing launch lineup kinect hub cnet review kinect players active body motion sensing criticized learning curve additional power supply xbox 360 consoles space requirements engadget listed space requirements negative kinect launch lineup slowness hand gesture ui review praised powerful technology potential yoga dance games kotaku considered device revolutionary games unable recognize gestures slow responses concluding kinect eventually techradar praised voice control deal potential device lag space requirements identified issues gizmodo kinect potential expressed curiosity mainstream titles utilize technology ars technica review expressed concern core feature kinect lack controller hamper development games stationary players control player movement automatically mainstream press reviewed kinect usa compared futuristic control scheme minority report stating playing games feels device stars david pogue york times predicted players feel crazy magical omigosh rush time kinect calling motion tracking precise wii implementation pogue concluded kinect’s astonishing technology creates completely activity that’s social age spanning athletic globe mail titled kinect setting standard motion control slight input lag physical movement kinect registering considered major issue games review called kinect innovative product rating stars kinect xbox featuring improved performance original kinect successor subject mixed responses xbox review engadget praised xbox kinect functionality recognition login improved motion tracking magical false positive unrecognized command reaching controller kinect inability understand accents english criticized writing time matt peckham device chunky appearance facial recognition login feature creepy equally sci future cool voice recognition powerful addictive navigate console save exceptions smoothing accuracy background noise peckham launching games voice recognition required title game abbreviated console semantically understand forza motorsport forza prior xbox launch privacy concerns raised kinect critics concerns device surveillance stemming originally announced requirements xbox kinect plugged times initial drm required console connected internet ensure continued functionality privacy advocates contended increased data collected kinect person eye movements heart rate mood targeted advertising reports surfaced patents involving kinect drm based detecting viewers tracking viewing habits awarding achievements watching television programs advertising stated privacy policy prohibit collection storage kinect data purpose advertising critics rule possibility policies changed prior release console concerns raised device record conversations microphone remains active times response criticism spokesperson stated users control kinect sensing paused key privacy settings console initial setup user generated content photos videos leave xbox explicit permission ultimately decided reverse decision require kinect usage xbox console shipped device launch november 2013 sales announcing kinect discontinuation interview fast design october 25 2017 stated 35 units sold release 24 units kinect shipped february 2013 sold units 60 days market kinect claimed guinness record fastest selling consumer electronics device wedbush analyst michael pachter kinect bundles accounted xbox 360 console sales december 2010 thirds february 2011 750 000 kinect units sold week black friday 2011 motion controllers kinect competes motion controllers consoles wii remote wii wii playstation playstation eye playstation playstation camera playstation 
23060403	computerscience	motor theory speech perception hypothesis people perceive spoken identifying vocal tract gestures pronounced identifying sound patterns speech generates originally claimed speech perception specialized module innate human specific idea module qualified versions theory idea remains role speech motor produce speech articulations detect hypothesis gained field speech perception increased discovery mirror neurons link production perception motor movements including vocal tract theory initially proposed haskins laboratories 1950s alvin liberman franklin cooper developed donald shankweiler michael studdert kennedy ignatius mattingly carol fowler douglas whalen origins development hypothesis origins pattern playback create reading machines blind substitute sounds orthographic letters led close examination spoken sounds correspond acoustic spectrogram sequence auditory sounds successive consonants vowels overlap time phenomenon coarticulation suggested speech heard acoustic alphabet cipher code overlapping speech gestures associationist approach initially theory associationist infants mimic speech hear leads behavioristic associations articulation sensory consequences overt mimicry short circuited speech perception aspect theory dropped discovery prelinguistic infants detect phonetic contrasts separate speech sounds cognitivist approach behavioristic approach replaced cognitivist speech module module detected speech terms hidden distal objects proximal level input evidence finding speech processing special duplex perception changing distal objects initially speech perception assumed link speech objects boththis revised include phonetic gestures motor commands gestures intended speaker prevocal linguistic level actual movements modern revision speech special claim dropped speech perception occur nonspeech sounds slamming doors duplex perception mirror neurons discovery mirror neurons led renewed motor theory speech perception theory advocates critics support nonauditory gesture speech identified terms physically nonauditory incorporated speech percepts subjectively heard sounds categorical perception speech synthesizer speech sounds varied articulation continuum voice onset time continuum listeners discriminate sounds perceive sounds belonging discrete categories sounds vary continuously sounds sound extreme sound extreme middle varying scale acoustically listener hear english consonant vary acoustic details phonetic contexts technically sound perceived listener fall category voiced alveolar plosive linguistic representations abstract canonical phonetic segments gestures underlie segments suggests humans identify speech categorical perception specialized module proposed motor theory speech perception track speech imitation people hear gestures speech imitation speech fast repeated heard headphones speech shadowing people repeat heard syllables produce perception action meshing evidence exists perception production coupled motor supported existence mirror neurons activated hearing action action carried source evidence common coding theory representations perception action criticisms motor theory speech perception held field speech perception popular fields theoretical linguistics advocates proponents field speech perception authors cite offer critical commentary  361 critiques exist multiple sources speech perception nonproduction sources context individual hard understand isolation easy heard sentence context speech perception multiple sources integrated optimal production motor theory speech perception predict speech motor abilities infants predict speech perception abilities actuality predict defects speech production impair speech perception superseded behaviorist version theory infants supposed learn production perception patterns imitation childhood mainstream view motor speech theorists speech module sources evidence specialized speech module failed supported result theory dropped researchers sublexical tasks evidence motor theory speech perception limited tasks syllable discrimination speech units spoken spoken sentences result speech perception interpreted referring perception speech sublexical level ultimate goal studies understand neural processes supporting ability process speech sounds ecologically valid conditions situations successful speech sound processing ultimately leads contact mental lexicon auditory comprehension creates tenuous connection implicit target investigation speech recognition imitation motor theory speech perception linking speech perception speech production consistent brain processing speech imitate spoken brain language exist child vocabulary expansion requires learn spoken adult picking names imitation initiated vocalizations word novelty heard identify articulation gestures motor goals result vocal imitation initiated default short term memory heard spoken vocalizations speech perception multiple sources default imitation processing provide secondary extra source word perception imitation vocalizations proper explain sublexical tasks proper link processing motor gestures birds suggested birds hear bird song terms vocal gestures 
23064447	computerscience	smartbook class mobile device combined features smartphone netbook produced 2009 2010 smartbooks advertised features day battery life 3g wi connectivity gps typically smartphones laptop tablet style body screen size 10 inches physical soft touchscreen keyboard german company sold laptops brand smartbook held trademark word countries including markets united china japan india acted preempt term smartbook products smartbooks tended designed entertainment purposes productivity typically targeted online applications projected sold subsidized mobile network operators mobile phones wireless data plan advent popular tablets android tablets ipad coupled prevailing popularity conventional desktop computers laptops displaced smartbook history smartbook concept mentioned qualcomm 2009 marketing snapdragon technology products expected difficulties adapting key software adobe proprietary flash player arm architecture delayed releases quarter 2010 smartbooks powered processors energy efficient traditional typically desktop laptop computers smartbooks expected variants linux operating google android chrome os arm processor allowed achieve battery life larger devices x86 processors february 2010 abi projected 163 smartbooks ship 2015 countries word smartbook trademark registered smartbook august 2009 german court ruled qualcomm block access germany webpages word smartbook smartbook mentioned smartbook defended trademark february 2010 ruling prevented lenovo term 2010 qualcomm ceo paul jacobs admitted tablet computers ipad occupied niche smartbook dropped february 2011 qualcomm legal battle german patent office ruled smart book trademarks registered designs innovating touch book march 2009 innovating company announced touch book based texas instruments omap 3530 implemented arm cortex a8 architecture originally developed texas instruments beagle board touchscreen detachable keyboard contained battery device linux operating company offered license hardware designs sharp netwalker sharp electronics introduced pc z1 netwalker device august 2009 promised ship october 2009 featured touchscreen runs ubuntu arm cortex a8 based freescale mx515 packaged clamshell design sharp reported device weighs 500 grams hours battery charge device 720p video 2d 3d graphics acceleration adobe flash lite installed pegatron prototype pegatron asus company prototype smartbook august 2009 consisted arm cortex a8 based freescale mx515 supports 2d 3d graphics 720p hd video 512 mb ddr2 ram 1024x600 lcd screen bluetooth 802 11g card featured usb micro usb port vga port card reader smartbook ubuntu netbook 04 contained version adobe flash player materials pegatron smartbook prototype 120 november 2009 pegatron received smartbooks launch 2010 devices rumored sell 200 subsidized asus announced plans release smartbook quarter 2010 asus postponed smartbook launch quarter 2010 lenovo skylight qualcomm expected smartbook november 12 2009 analyst meeting lenovo device concept announced january 2010 2010 skylight cancelled compaq airlife 100 late january 2010 federal communications commission fcc listing featured device hp referred smartbook prototype device earlier february mobile congress barcelona hp announced bring device market specifications march 2010 smartbook appearance fcc time listing 3g capabilities fcc device support gsm 850 1900 wcdma bands wcdma bands usage network united details product hp toshiba ac100 june 2010 smartbook device toshiba announced features nvidia tegra processor remain stand mode days device officially toshiba united kingdom originally delivered android v2 upgradable v2 2011 modified customized linux distribution japan sold dynabook genesi efika genesi company announced smartbook efika august 2010 originally priced 349 reviewers questioned fit definition ostensibly derivative mentioned pegatron design september 2009 foxconn announced smartbook development november 2009 quanta pre production snapdragon powered sample smartbook device android unveiled companies acer planned release smartbook popularity tablets macbook air ultrabooks plans scrapped 
23094504	computerscience	shortest path bridging spb ieee 802 1aq standard networking technology intended simplify creation configuration networks enabling multipath routing replacement spanning tree protocols ieee 802 1d ieee 802 1w ieee 802 1s blocked redundant paths result layer 2 loop spb paths active multiple equal cost paths larger layer 2 topologies supports faster convergence times improves efficiency allowing traffic load share paths mesh network designed virtually eliminate human error configuration preserves plug play nature established ethernet facto protocol layer 2 technology logical ethernet networks native ethernet infrastructures link protocol advertise topology logical network membership packets encapsulated edge media access control media access control mac mac 802 1ah tagged 802 1q 802 1ad frames transported logical network unicast multicast broadcast supported routing symmetric shortest paths control plane based intermediate intermediate leveraging extensions defined rfc 6329 history march 2006 posted 802 1aq draft december 2011 shortest path bridging spb evaluated jitc approved deployment department defense dod ease integrated oa interoperability current protocols march 2012 ieee approved 802 1aq standard 2012 stated david allan nigel bragg 802 1aq shortest path bridging design evolution architect perspective shortest path bridging enhancements ethernet history 2013 public multi vendor interoperability demonstrated spb served backbone interop 2013 las vegas 2014 winter olympics fabric enabled games shortest path bridging spb ieee 802 1aq technology games fabric network capable handling 54 000 gbit 54 tbit traffic 2013 2014 spb build interopnet backbone resources prior interop 2014 spb backbone protocol enable software defined networking sdn functionalities benefits shortest path bridging vid spbv shortest path bridging mac spbm operating modes 802 1aq inherit key benefits link routing virtualisation increasingly aspect key applications carrier enterprise space spbm mac mac datapath providing complete separation client server layers uniquely suitable data centre virtualisation articulates desire flexibly efficiently harness compute resources rapidly modified respond varying application demands dedicate physical resources specific application aspect server virtualisation connectivity virtualisation physically distributed set server resources attached single ip subnet modifiable operationally simple robust spbm delivers client server model offers perfect emulation transparent ethernet lan segment ip subnet layer 3 key component implementing vlans scoped multicast trees egress discard broadcast unknown traffic feature common approaches shared trees network simply degrade size percentage frames discarded supports single touch provisioning configuration simple robust port virtual server simply bound locally spbm sid identifying lan segment spb floods binding nodes install forwarding implement lan segment automatically carrier space equivalent application delivery ethernet vpn services enterprises common carrier infrastructure required attributes fundamentally complete transparency customer ethernet services lan complete isolation customer traffic customers multiple virtual lan segment model single touch provisioning model eases carrier operations mac mac datapath carrier deploy class ethernet oam suit ieee 802 1ag transparently independently oam customer choose consequence spbm transparency dataplane control plane perfect compromise delivery complete mef service set includes lan constructs tree hub spoke connectivity relevant enterprise customers carrier vpn mpls services network structure internally carrier toolkit support geo redundant broadband backhaul applications dslams access equipments backhauled multiple broadband remote access server bras sites application determined binding sessions bras dslams allowed communicate carriers lose ability control peer peer connectivity mef tree efficient multicast fabric distribution ip tv spbm offers ideal multicast replication model packets replicated fork shortest path tree connects intensive head replication model essence serial unicast packets shortest path tree models selected properties service edge affect transit node decisions multicast installation trade optimum transit replication larger costs reduced core traffic head replication model selections individual service sid allowing trade offs figure quick understand spbm scale entire network figure lan created edge membership deterministic distributed calculation source service trees transit replication head replication trivial simply existing unicast fibs copies serially receivers operations management 802 1aq builds existing ethernet operations administration management oa 802 1aq ensures unicast multicast packets virtual lan vlan follow reverse path completely standard 802 encapsulations methods 802 1ag 1731 operate unchanged 802 1aq network ieee 802 1ag itu recommendation 1731 level 802 1aq institute electrical electronics engineers ieee sanctioned link ethernet control plane ieee vlans covered ieee 802 1q shortest path bridging virtual local network identifier vlan shortest path bridging vid spbv capability compatible spanning tree technologies shortest path bridging media access control mac spbm provider backbone bridge pbb additional values capitalize provider backbone bridge pbb capabilities spb generic term combines ethernet data path ieee 802 1q spbv provider backbone bridges pbbs ieee 802 1ah spbm link control protocol running shortest path bridges network network interface nni links link protocol discover advertise network topology compute shortest path trees spt bridges spt region spbm backbone mac mac addresses participating nodes service membership interfaces participating devices user network interface uni ports distributed topology data input calculation engine computes symmetric shortest path trees based minimum cost participating node participating nodes spbv trees provide shortest path tree individual mac address learned address membership distributed spbm shortest path trees populate forwarding tables participating node individual mac addresses addresses multicast trees trees default shortest path tree formed source pairing depending topology equal cost multi path trees spb supports multiple algorithms instance spb link based protocols computations distributed fashion node computes ethernet compliant forwarding behavior independently based synchronized common view network scales 1000 nodes service attachment user network interface uni ports ethernet filtering database forwarding tables populated locally independently deterministically implement portion network forwarding behavior flavors data path rise versions protocol spbm intended complete isolation separate instances client lans device mac addresses desired encapsulation mac mac ieee 802 1ah spbv intended isolation client device mac addresses reuses existing vlan tag ieee 802 1q participating network network interface nni links chronologically spbv project originally conceived address scalability convergence mstp time specification provider backbone bridging progressing apparent leveraging pbb data plane link control plane extend ethernet capabilities applications provider link bridging plsb strawman proposal brought ieee 802 1aq shortest path bridging provide concrete ieee 802 1aq standardization progressed detailed mechanisms proposed plsb replaced functional equivalents key concepts embodied plsb carried standard flavors spbv spbm separately differences data plane shortest path bridging vid shortest path bridging enables shortest path trees vlan bridges ieee 802 data planes spb term lot focus spbm explained ability control pbb data plane leverage capabilities removing mac learning automatically creating individual unicast multicast trees spbv original project endeavored enable ethernet vlans utilize mesh networks primary feature shortest path bridging ability link learn network topology spbv mechanism identify tree shortest path vlan vid source bridge topology leveraged allocate unique spvids enable shortest path forwarding individual addresses originally targeted configuration networks spb grew larger project encompassing provider control plane spbv harmonizing concepts ethernet data plane proponents spb ethernet leverage link maintain attributes ethernet encompassing data plane transport technologies refer ethernet layer 2 frame format defined ieee 802 ieee 802 ethernet vlan bridging ieee 802 1q frame forwarding paradigm supports level protocols ip spb defines shortest path region boundary shortest path topology rest vlan topology legacy bridges spb operates learning spb capable bridges growing region include spb capable bridges base vid mstid configuration digest allocation vids spb purposes spbv builds shortest path trees support loop prevention optionally support loop mitigation spvid spbv learning ethernet mac addresses distribute multicast address prune shortest path trees multicast membership multiple mac registration protocol mmrp distribution multicast membership spbv builds shortest path trees interworks legacy bridges running rapid spanning tree protocol multiple spanning tree protocol spbv techniques mstp regions interwork spt regions behaving logically distributed bridge viewed region spbv supports shortest path trees spbv builds spanning tree computed link database base vid spbv traditional spanning tree computation common internal spanning tree cist cist default tree interwork legacy bridges serves fall spanning tree configuration spbv spbv designed manage moderate bridges spbv differs spbm mac addresses learned bridges lie shortest path shared vlan learning destination macs multiple spvids spbv learns macs forwards spbv region shortest path bridging mac spbm reuses pbb data plane require backbone core bridges bcb learn encapsulated client addresses edge network mac client addresses learned spbm plsb provider link bridging data control planes format contents control messages plsb compatible individual mac frames unicast traffic ethernet attached device received spbm edge encapsulated pbb mac mac ieee 802 1ah header traverse ieee 802 1aq network unchanged stripped encapsulation egress participating attached network participating network ethernet destination addresses uni port attached devices perform learning logical lan forwarded participating mac address reach ethernet destination manner ethernet mac addresses looked core ieee 802 1aq network comparing spbm pbb behavior identical pbb ieee 802 1ah network pbb mac addresses learned pbb spanning tree control vlan spbm main difference mac address distributed computed control plane eliminating mac learning pbb spbm ensures route shortest path tree reverse paths unicast multicast traffic ieee 802 1aq network symmetric symmetry permits normal ethernet continuity fault messages cfm ieee 802 1ag operate unchanged spbv spbm desirable properties respect time distribution protocols precision time protocol ptp version existing ethernet loop prevention augmented loop mitigation provide fast data plane convergence address unknown destination individual frames optimally transmitted ethernet service ieee 802 1aq supports creation thousands logical ethernet services form lan tree constructs formed participating logical ports ieee 802 1aq network address packets encapsulated pbb header source participating address da locally address frame forwarded source bridge originated frame ieee 802 1aq multicast forwarding tables created based computations bridge shortest path pair bridges service create proper forwarding database fdb replicate frames receives service address computation produce shortest path trees multicast packet link bridges shortest path participating logical ports create forwarding database fdb multicast efficient network resources actual address forwarding operation operates identically classical ethernet backbone destination address da backbone vlan identifier vid combination looked egress set hops difference compared classical ethernet reverse learning disabled participating bridge backbone media access control mac addresses replaced ingress check discard frame arrives incoming interface unexpected source learning implemented edges spbm multicast tree learn mac mac address relationship correct individual frame encapsulation reverse direction packets arrive interface properly implemented ieee 802 1aq network support 1000 participating bridges provide tens thousands layer 2 lan services ethernet devices simply configuring ports facing ethernet devices service protocol advertise sid membership computations grow shrink trees participating node network maintain efficient multicast property service ieee 802 1aq property attachment service configuration attachment trees produced computations automatically extended pruned maintain connectivity existing implementations property automatically opposed configuration add remove attachment dual homed technologies rings maintain optimum packet flow nonparticipating protocol ieee 802 1aq network activating secondary attachment deactivating primary attachment failure recovery failure recovery normal link failure advertised computations performed fdb tables ethernet addresses advertised protocol learning required spbm core learned encapsulations unaffected transit node link failure fast link failure detection performed ieee 802 1ag continuity check messages ccms link status report failure protocol faster failure detection message loss mechanisms spbv spbm inherit rapid convergence link control plane special attribute spbm ability rebuild multicast trees time unicast convergence substitutes computation signaling spbm bridge performed computations topology database shortest path root leaves spt install convergence gated incremental discovery bridge’s multicast tree separate signaling transactions spbm node operate completely independently peers enforces agreement current network topology peers efficient mechanism exchange single digest link covering entire network view agreement path root individually result volume messaging exchanged converge network proportion incremental change topology multicast trees network simple link event change trees communicated signaling link event consequent tree construction performed local computation node addition single service access service instance involves announcement sid trees removal bridge involve rebuilding hundreds thousands trees signaled link updates commercial offerings offer spb multi chassis lag environment multiple switch chassis single switch spb control plane multiple links pairs chassis aggregate link context single link node failure control plane handled locally 50ms recovery times animations animated gifs behavior 802 1aq gifs figure demonstrates routing 66 node network created lan isid 100 ect tree created reach cycle set trees created service pause symmetry routing nodes emphasize red source tree highlighted purple animated gifs figure demonstrates ect paths 66 node network figure subsequent animated frame source purple destination yellow frame shortest paths superimposed source destination shortest paths traverse hop thickness lines drawn increased addition 66 node network multi level data center style network sources destinations servers servers router layer animation helps diversity ect produced animated gifs figure demonstrates source destination ect paths 16 standard algorithms defined details equal cost multi tree sixteen equal cost multi tree ecmt paths initially defined ecmt ieee 802 1aq network predictable internet protocol ip multiprotocol label switching mpls symmetry reverse paths choice ecmt path operator assigned head decision local hashing decision ip mpls ieee 802 1aq faced choice equal link cost paths logic ecmt tie breaking algorithm path shorter terms hops shorter path chosen path minimum bridge identifier bridgepriority concatenated sysid chosen ecmt algorithms created simply permutations bridgepriority sysids defined ecmt algorithm path minimum inverse bridgeidentifier path maximum node identifier spbm permutation instantiated distinct vid upper limit multipath permutations gated vids delegated 802 1aq operation maximum 4094 path permutations require fraction vid space fourteen additional ecmt algorithms defined bit masks applied bridgeidentifiers bridgeidentfier includes priority field adjust ecmt behavior changing bridgepriority service assigned ecmt vid edge network configuration result participating packets service encapsulated vid desired ecmt path individual address traffic service proper ecmt vid carried symmetrically proper equal cost multi path essentially operator decides services ecmt paths hashing solution systems ip mpls trees support link aggregation lag tree branch segment form hashing occurs symmetric ecmt behavior ieee 802 1aq highly predictable behavior engineering tools accurately model exact data flows behavior advantageous networks delay measurements delay accurately computed trip delay computations time distribution protocols ieee 1588 frequency time day synchronization required precision clock sources wireless base stations figures 16 equal cost tree ect behavior network topologies composites screen captures 802 1aq network emulator source purple destination yellow computed shortest paths pink thicker shortest paths link animations networks variety source destination pairs continually change visualize happening equal cost tree ect algorithms extended opaque data extensions base 16 algorithms infinitely expected standards vendors produce variations defined algorithms behaviors suited networks styles expected numerous shared tree models defined hop hop hash based equal cost multi path ecmp style behaviors defined vid algorithm node agrees traffic placement engineering 802 1aq spread traffic hop hop basis 802 1aq assignment service isid vlan vid edge network vid correspond sets shortest paths network stray routing shortest paths nodes assign services paths traffic service follow path manner traffic easily assigned desired shortest path event paths overloaded services shortest paths reassigning services isid loaded vid edges network deterministic nature routing offline prediction computation experimentation network loading simpler actual routes dependent contents packet headers exception vlan identifier figure equal cost paths nodes operator achieve balance traffic cut nodes assigning services nodes desired vids equal cost tree ect paths network paths balance achieved nodes manner event operator manually assign services shortest paths simple matter switch vendor simple hash isid vids degree engineered spreading isid modulo ect vids decide actual relative vid event ect paths diverse operator option adjusting inputs distributed ect algorithms apply attraction repulsion node adjusting node bridge priority experimented offline tools desired routes achieved bias applied real network isids moved routes animations figure diversity traffic engineering 66 node network animation ect paths highlighted source destination services assigned pools based vid initial assignment figure isid modulo subsequent fine tuning required spbm behavior emphasis shortest path trees unicast multicast network figure consists participating nodes numbered switches routers running ieee 802 1aq protocol participating nodes adjacencies numbered correspond interface indexes port 802 1aq support parallel interfaces interface corresponds adjacency port interface local output computations produce interface unicast set interface indexes multicast forwarding base fib destination mac address backbone vid network meshed core nodes outer nodes dual homed pair core nodes nodes factory mac address assigned node identifier purpose assume nodes mac addresses form 00 00 00 00 00 node figure node mac address 00 00 00 00 02 00 node connected node 00 00 00 00 07 00 node interface protocol runs links participating nodes protocol additions 802 1aq including backbone vids protocol assume operator chosen backbone vids 101 102 instance 802 1aq network node mac addresses sysid single level exchange link packets lsps terminology lsps node link node learn topology network link weights protocol pick default link metric links routing minimum hop count topology discovery step distributed calculation unicast routes ecmp vids population unicast forwarding tables fibs route node node equal cost paths 802 1aq specifies choose referred path path path minimum node path path path red figure node path create forwarding entry mac address node ecmp vid 101 conversely 802 1aq specifies ecmp tie breaking algorithm called path path maximum node identifier path blue figure node fib node inverse fib intermediate nodes produce consistent node entries node entries attached participating device node talking participating device node device talks device figure communicate shortest paths mac mac encapsulated frame mac header nni links outer source address 00 00 00 70 00 outer destination address 00 00 00 50 00 bvid 101 102 depending chosen set participating ports vids header inserted node received node change links egressed participating device node participating devices simple da vid lookup determine outgoing interface check incoming interface proper hop packet vid addresses participating nodes 00 00 00 00 00 00 00 00 00 07 00 learned advertised node sysid unicast forwarding participating client figure address hop participating node hop participating node attached desired participating node advertised ieee 802 1aq learned mechanism learning identical ieee 802 1ah short outer mac unicast da replaced multicast da response received response tells da reach participating node sourced response node learns reached node scope sets participating ports services prevent multicasting ieee 802 1aq mechanism source service multicast forwarding defines special multicast destination address format provide multicast address uniquely identify tree tree source unique service multicast address components service component 24 bits network wide unique identifier upper 22 bits multicast address multicast bit set standard oui space manufactured addresses local bit set disambiguate addresses figure represented da represents packets originating node colored represents lan service scoped prior creating multicast forwarding service nodes ports service told nodes told service service 200 bvid 101 advertised isis nodes spbm computation determine participating head tail tandem head tail service node tandem nodes creates forwarding entry packets node service node tandem nodes creates forwarding node packets service node true multicast entry da vid outputs interfaces node hand shortest path service creates single forwarding entry node node packets service figure single lan service tree lan services membership node network supported advertising membership computing tandem behaviors manufacturing multicast addresses populating fibs real limiting factors fib table sizes computational power individual devices growing yearly leaps bounds implementation notes 802 1aq takes topology augmented service attachment sid series computations produces forwarding table filtering table unicast multicast entries extensions carry required 802 1aq isis layer2 ietf document listed implementation 802 1aq modify hellos include nlpid network layer protocol identifier 0xc01 protocols supported type tlv type 129 802 1aq hellos include mstid purpose vid finally ecmt behavior assigned vid exchanged hellos hellos untagged note nlpid ip required form adjacency 802 1aq prevent adjacency links assigned 802 1aq specific metrics travel tlv type identical ip link metrics calculations maximum unidirectional link metrics enforce symmetric route weights node assigned mac address identify globally form sysid box mac serve purpose 802 1aq nodes 802 1aq network multiple levels supported node assigned spsourceid 20 bit network wide unique identifier 20 bits sysid unique dynamically negotiated manually configured spsourceid ecmt assignments vids advertised network 802 1aq tlv 802 1aq computations restricted links nodes 802 1aq link weight support nlpid 0xc01 discussed link weights forced symmetric purpose computation min dissimilar values service configured form sid assignment ecmt behavior sid advertised desired ecmt behavior indication transmit receive properties type purpose 802 1aq node receives update compute unique shortest path nodes support 802 1aq unique symmetric shortest path ecmt behavior tie breaking enforce uniqueness ecmt unicast fdb fib populated based shortest path computation entry ecmt behavior vid produced transit multicast computation applies transit replication desired applicable services chosen head replication implemented care efficient series shortest path computations basic requirement decide shortest path nodes transmits sid receives sid poor performing pseudo code computation pseudo code computes spf strictly algorithms decide node shortest path nodes reference paper ieee faster algorithm drastically reduces outer iterations required exhaustive algorithm handle node networks milliseconds 1 ghz common cpus carefully crafted isids chosen head replication computation trivial involves simply finding attachment receive isid creating serial unicast table replicate tie breaking 802 1aq produce deterministic symmetric downstream congruent shortest paths node compute path reverse nodes downstream upstream path produce result downstream congruence consequence hop hop forwarding nature ethernet destination address vid decide hop mind design ecmt algorithms 802 1aq easy trap fall unidirectional link metrics advertised isis 802 1aq ensuring symmetric simply min values prior computations guarantee symmetry 802 1aq standard describes mechanism called pathid network wide unique identifier path logical understand deterministically break ties implement tie breaker practice pathid defined sequence sysids path including sorted path network unique pathid independent network path discovered 802 1aq simply picks lowest pathid path choice shortest path computations ensures node decision figure equal cost paths node node colors blue green pink brown pathid paths lowest pathid brown path pathid algorithm desirable properties progressively simply lowest sysid path efficient implementation operates stepwise simply tracking competing paths minimum paths minimum sysids pathid algorithm basis 802 1aq tie breaking ecmt based pathid algorithm simply feeding sysid permutations – ecmt algorithm obvious permutation pass complete inversion sysid xor ing 0xfff prior min minimums algorithm referred pathid logically chooses largest pathid path equal cost choices figure path pathid blue path pathid simply inverting sysids running pathid algorithm yield result 14 defined ecmt algorithms permutations sysid xor ing bit masks designed create distribution bits permutations result purple green paths lowest 17 individual 64 bit masks ect algorithm byte repeated times 64 bit mask 17 byte values ect maskis common spanning tree algorithm ect mask creates pathid set shortest path trees ect mask creates pathid set shortest path trees indexes create diverse permutations shortest path trees addition ecmt tie breaking algorithms permit degree human override tweaking accomplished including bridgepriority field sysid combination called bridgeidentfier input ect algorithm adjusting bridgepriority path pathid raised lowered relative substantial degree tunability afforded description easy understand view tie breaking actual implementation simply backtracks fork competing equal cost paths dijkstra shortest path computation picks path traversing lowest masking bridgepriority sysid interoperability public interoperability tests ieee 802 1aq held ottawa october 2010 vendors spbm implementations total physical switches 32 emulated switches tested control data oa events held ottawa january 2011 vendors implementations 2013 interop event las vegas spbm network backbone competitors lag vxlan qfabric proposed ietf trill standard transparent interconnect lots links considered major competitor ieee 802 1aq evaluation relative merits difference standards proposals hotly debated topic networking industry deployments deployment considerations interoperability practices documented ietf document titled spb deployment considerations extreme networks virtue acquisition avaya networking business assets leading exponent spb based deployments enhanced extended implementation spb including integrated layer ip routing ip multicast functionality marketed banner fabric connect technology additionally extreme networks supporting ietf internet draft draft defines automatically extended spbm based services devices conventional ethernet switches leveraging 802 1ab lldp based communications protocol capability marketing fabric attach technology automatic attachment devices includes dynamic configuration vlan sid vsn mappings avaya deployed spb fabric connect solutions businesses operating industry verticals 
23223231	computerscience	series 30 shortened s30 software platform application user interface created nokia entry level mobile phones series 40 s30 phones capable running java apps 2014 acquired nokia mobile phones business discontinued s30 favor series 30 series 30 device nokia 1100 2003 originally s30 supposed menu key release nokia 1110 s30 devices pad pad nokia 1100 pad list devices list series 30 devices released nokia 
23321246	computerscience	robot olympiad wro global robotics competition people robot olympiad competition lego mindstorms manufactured lego education held 2004 singapore attracts 20 000 teams 60 countries competition consists categories regular college soccer regular categories consists age elementary junior senior participants age 13 considered elementary participants ages 13 16 considered junior participants 17–19 considered senior participants compete age age range partner age range 12 participant junior category teamed 14 16 history wro formally established 2003 international wro final organized 2004 organizations china japan singapore korea considered founding countries 2004 teams china chinese taipei hong kong india indonesia japan korea malaysia philippines russia singapore thailand international final held singapore 2003 founding countries established international wro committee wro advisory council decided establish permanent robotics organisation based idea students opportunity meet students fulfil mission statement bring people develop creativity design solving skills challenging educational robot competitions activities wro committee decided robot olympiad wro logos developed finally wro statutes set rules ensure sound safe future wro major decisions appears statutes international wro event hosted country wro committee elect chairman 2017 host country wro costa rica time competition held asia region time americas wro categories wro challenging competitions offered age – 25 wro competition categories characteristics challenges season challenges theme regular category developed country hosts international final wro football rules advanced robotics challenge game designed experts robotic sciences community regular category teams create robot complete mission determined organiser based category theme competition robot dismantled batteries brick tyres wheels built time 150 minutes qualification team finishes building robot 150 minutes finish team practice competition fields robot restricted consist lego certified motors sensors depending competition finish mission autonomously maximum time minutes teams judged scores teams scores equal judged time nearest millisecond category category project based competition students create intelligent robotics solution relating current theme season teams project robot model judges competition day wro football wro football introduced fun exciting game teams autonomous robots playing football soccer introduced game motivate students developing robots advanced robot challenge university college advanced robotics challenge arc category games designed experienced student engineering programming skills limit teams compete set challenge robots pre built tetrix matrix elements teams myrio knr controller ev3 nxt controllers restrictions choice sensors motors servos size robot maximum time differs depending competition 2015 2016 bowling game 2017 season introduced tetrastack challenge gameplay missions regular wro football college category tougher teams category creative robots organisers list eligible sensors motors bricks competition initially rcx bricks motors sensors allowed 2007 competition nxt bricks motors sensors allowed 2011 nxt colour sensor 2012 hitechnic colour sensor 2013 ev3 robot exhibited motors 2014 ev3 bricks motors sensors allowed motor ports limited ev3 gyro sensor allowed 2015 competition allowed motor ports gyro sensor rcx bricks motors sensors categories earlier versions competition 2006 consists regular divides age primary school age definitions compete peers wro ambition relevant students ages offer competitions platforms provide fun challenging experiences decided categories age regular category age mission category challenge participants judged age note mentioned ages reflect age participant competition competition day participation international wro final strictly enforced students time competition age definitions participant 12 time international wro final november 13 december participate elementary category table eligibility toe qualification international final teams participated national competition countries qualify international final wro table eligibility toe defines teams wro national organizer register international final countries participating previous host countries italicised future host countries bolded countries previous future hosts asterisks 
23534873	computerscience	yann lecun born 1960 french scientist fields machine learning vision mobile robotics computational neuroscience chief artificial intelligence scientist facebook optical character recognition vision convolutional neural networks cnn founding father convolutional nets main creators djvu image compression technology léon bottou patrick haffner developed lush programming language léon bottou life yann lecun born paris france 1960 received diplôme ingénieur ecole superieure ingénieur en electrotechnique electronique esiee paris 1983 phd science université pierre marie curie 1987 proposed form propagation learning algorithm neural networks postdoctoral associate geoffrey hinton lab university toronto 1987 1988 1988 joined adaptive systems department bell laboratories holmdel jersey united headed lawrence jackel developed machine learning methods biologically inspired model image recognition called convolutional neural networks optimal brain damage regularization methods graph transformer networks method conditional random field applied handwriting recognition ocr bank check recognition helped develop deployed ncr companies reading checks late 1990s 2000s 1996 joined labs head image processing department lawrence rabiner speech image processing lab djvu image compression technology websites notably internet archive distribute scanned documents collaborators include léon bottou vladimir vapnik tenure fellow nec institute nec labs america princeton nj joined york university nyu 2003 silver professor science neural science courant institute mathematical science center neural science professor tandon school engineering nyu energy based models supervised unsupervised learning feature learning object recognition vision mobile robotics 2012 founding director nyu center data science december 2013 lecun director facebook york city stepped nyu cds directorship 2014 lecun national academy engineering recipient 2014 ieee neural network pioneer award 2015 pami distinguished researcher award 2013 yoshua bengio founded international conference learning representations post publication review process advocated chair organizer learning workshop held 1986 2012 snowbird utah science advisory board institute pure applied mathematics ucla director learning machines brain program neural computation adaptive perception cifarin 2016 visiting professor science chaire annuelle informatique sciences numériques collège france paris leçon inaugurale inaugural lecture event 2016 paris intellectual life october 11 awarded doctor honoris causa ipn mexico city 2017 lecun declined invitation lecture king abdullah university science technology saudi arabia believed considered terrorist country view atheism september 2018 received harold pender award university pennsylvania october 2018 received doctor honoris causa degree epfl 
23864530	computerscience	learning errors lwe machine learning conjectured hard solve introduced oded regev 2005 2018 gödel prize generalization parity learning regev lwe hard solve worst lattice lwe hardness assumption create public key cryptosystems learning errors key exchange peikert algorithm solve lwe access samples vector integers modulo assurance fixed linear function probability deviates noise model algorithm recreate close approximation probability definition denote additive reals modulo denote distribution 11 choosing vector 12 uniformly random choosing 13 probability distribution 14 15 outputting 16 fixed vector 17 18 standard product 19 division field reals formally division notation homomorphism 21 mapping 22 23 final addition 15 learning errors 25 17 access polynomially samples choice 28 denote 29 dimensional gaussian density function 30 31 32 distribution 15 29 modulo version lwe considered 35decision version lwe search version decision version dlwe goal distinguish noisy products uniformly random samples 11 practically discretized version regev decision search versions equivalent prime bounded polynomial solving decision assuming search intuitively procedure search decision version solved easily feed input samples decision solver search denote samples solver returns candidate 40 41 calculate 42 samples lwe distribution calculation distributed 43 samples uniformly random quantities distributed uniformly solving search assuming decision direction solver decision search version solved recover 40 coordinate time coordinate 45 guess 46 choose 47 uniformly random transform samples calculate 49 send transformed samples decision solver guess 50 correct transformation takes distribution 51 prime takes uniform distribution polynomial time solver decision errs probability bounded polynomial takes polynomial time guess 50 solver correct obtaining 45 follow analogous procedure coordinate 57 transform 58 samples transform 59 samples calculating 60 61 62 coordinate peikert reduction modification product distinct polynomial primes main idea 65 66 guess check 57 congruent 68 chinese remainder theorem recover 57 average hardness regev random reducibility lwe dlwe arbitrary 43 samples 72 51 easy 74 samples 75 suppose set 76 77 distributions 78 79 dlwe easy distinguisher 80 samples 81 uniformly random 78 distinguish uniformly random samples 51 40 chosen uniformly random 85 simply values 86 sampled uniformly random 85 calculate 74 feed samples 80 90 comprises fraction 85 probability choose polynomial values 92 93 80 distinguish samples 90 exist meaning lwe dlwe polynomial factor hard average worst hardness regev result dimensional lattice 96 smoothing parameter 97 denote 98 99 100 dual 96 31 extended sets summing function values element set 103 denote discrete gaussian distribution 96 61 lattice 96 real 107 probability 108 proportional 109 discrete gaussian sampling dgs defined instance 110 dimensional lattice 96 113 goal output sample 103 regev reduction 115 116 function 117 regev exists efficient quantum algorithm 118 access oracle 35 integer 121 122 implies hardness lwe proof assertion creating cryptosystem polynomial peikert result peikert proves probabilistic polynomial time reduction 126 worst solving 35 128 samples parameters 121 130 131 132 cryptography lwe serves versatile construction cryptosystems 2005 regev decision version lwe hard assuming quantum hardness lattice 133 134 135 136 2009 peikert proved result assuming classical hardness 137 disadvantage peikert result bases standard version easier compared sivp gapsvp public key cryptosystem regev proposed public key cryptosystem based hardness lwe cryptosystem proof security correctness completely classical characterized 138 probability distribution 43 15 setting parameters proofs correctness security isthe cryptosystem defined proof correctness choice parameters probability analysis proof security reduction decision version lwe algorithm distinguishing encryptions parameters 160 164 distinguish 167 uniform distribution 168cca secure cryptosystem peikert proposed secure chosen ciphertext attack key exchange idea lwe lwe key exchange proposed filed university cincinnati 2011 jintai ding idea associativity matrix multiplications errors provide security paper appeared 2012 provisional patent application filed 2012 security protocol proven based hardness solving lwe 2014 peikert key transport scheme basic idea ding idea sending additional bit signal rounding ding construction hope implementation selected google post quantum experiment peikert scheme variation error distribution 
24076904	computerscience	ieee acm transactions networking bimonthly peer reviewed scientific journal covering communication networks published ieee communications society ieee society acm special data communications editor chief eytan modiano massachusetts institute technology journal citation reports journal 2016 impact factor 376 
24377715	computerscience	headless device configured operate monitor missing head keyboard mouse headless typically controlled network connection headless devices require serial connection rs 232 administration device headless operation server typically employed reduce operating costs pc bios limitations bootup pc bios versions wait indefinitely user press key proceeding basic device video card keyboard installed connected effectively halt unattended modern systems bios factory setting typically configured behave setting changed bios setup utility proceed user intervention set managed remotely local keyboard video card time time diagnose boot occur remote access application initialized hardware remote control servers provide remote control internal network card hardware mirrors console screen hp offers called integrated lights ilo function remote access gained secure connection ip address assigned ilo adapter monitoring start operating loaded hardware solution kvm ip switch switch traditional keyboard video mouse device ability provide remote control sessions ip connection kvm device gained browser remote monitoring connected console port software remote control administration headless typically takes based interface command unix gnu linux interfaces called virtual terminals terminal emulators attempt simulate behavior real interface terminals digital equipment corporation vt100 networks protocols secure systems window vnc combined virtual display drivers setup remote connections headless machines ordinary graphical user interfaces running network protocols tcp ip 
24559562	computerscience	acm computing surveys csur peer reviewed scientific journal published association computing machinery journal publishes survey articles tutorials science computing founded 1969 editor chief william dorn isi journal citation reports acm computing surveys impact factor science journals 2008 ranking science journals acm computing surveys received rank “a 
24882775	computerscience	image restoration operation corrupt noisy image estimating clean original image corruption forms motion blur noise camera mis focus image restoration performed reversing process blurred image performed imaging source source image called spread function psf restore image lost blurring process image restoration image enhancement designed emphasize features image image pleasing observer produce realistic data scientific view image enhancement techniques contrast stretching blurring nearest neighbor procedure imaging packages priori model process created image image enhancement noise effectively removed sacrificing resolution acceptable applications fluorescence microscope resolution direction bad advanced image processing techniques applied recover object objective image restoration techniques reduce noise recover resolution loss image processing techniques performed image domain frequency domain straightforward conventional technique image restoration deconvolution performed frequency domain computing fourier transform image psf undo resolution loss caused blurring factors deconvolution technique direct inversion psf typically poor matrix condition amplifies noise creates imperfect deblurred image conventionally blurring process assumed shift invariant sophisticated techniques regularized deblurring developed offer robust recovery types noises blurring functions types geometric correction2 radiometric correction noise removal 
25221078	computerscience	goldendict source dictionary program translations phrases languages popular dictionary file formats simultaneously conversion project aims create feature rich dictionary search program advantages shortcomings compared software goldendict 
25277512	computerscience	andrew yan tak born 1976 chinese english scientist executive investor entrepreneur founded led google brain vp chief scientist baidu building company artificial intelligence people adjunct professor associate professor director lab stanford university pioneer online learning led founding coursera deeplearning launched heads fund 175 investment fund artificial intelligence startups biography born london 1976 parents hong kong spent time hong kong singapore graduated raffles institution singapore 1992 1997 received undergraduate degree triple major science statistics economics class carnegie mellon university pittsburgh pennsylvania earned master degree massachusetts institute technology cambridge massachusetts 1998 received phd university california berkeley 2002 started stanford university 2002 lives los altos hills california married carol reiley 2014 mit tech review named power couple career professor stanford university department science department electrical engineering director stanford artificial intelligence lab taught students undertook data mining machine learning deep learning stanford popular offered campus 1000 students enrolled 2011 2012 google founded director google brain deep learning project 2012 founded ceo coursera offers online courses 100 000 students registered popular people online 2014 joined baidu chief scientist carried data march 2017 announced resignation baidu launched deeplearning online curriculum classes launched landing bringing manufacturing factories landing public partnership foxconn november 2017 keynote speaker frontiers conference january 2018 unveiled fund raising 175 invest startups chairman woebot board drive wrote book machine learning yearning practical guide machine learning distributed december 2018 transformation playbook researches machine learning deep learning famous scientists includes stanford autonomous helicopter project developed capable autonomous helicopters stair stanford artificial intelligence robot project ros source robotics software platform 2011 founded google brain project google developed scale artificial neural networks google distributed infrastructure notable neural network trained deep learning algorithms 16 000 cpu cores learned recognize cats watching youtube videos told cat project technology android operating speech recognition david blei michael jordan coauthored influential paper introduced latent dirichlet allocation online education started stanford engineering program 2008 stanford courses online taught courses machine learning consisted video lectures student materials stanford cs229 class applied version stanford class cs229a hosted class started october 2011 100 000 students registered iteration featured quizzes graded programming assignments successful moocs stanford professors subsequently led founding coursera 2012 courses hold popular courses platform machine learning neural networks deep learning announced coursera 2019 people understand impact society companies navigate technological change technical deeplearning exploring benefits limitations company societal impacts publications awards author author 300 published papers machine learning robotics fields vision deep learning frequently featured press releases reviews 
25359380	computerscience	google goggles image recognition mobile app developed google searches based pictures handheld devices picture famous landmark searches picture product barcode search product history google goggles developed google android operating mobile devices initially beta version android phones google announced plans enable software platforms notably iphone blackberry devices google discuss handheld format google product manager shailesh nalawadi google goggles application platform google maps single product october 2010 google announced availability google goggles devices running ios 2014 update google mobile ios google goggles feature removed google 2017 app google lens announced functions goggles google assistant app officially discontinued august 20 2018 update directing users download google lens google photos launching app features identify labels landmarks allowing users learn items based search identify products barcodes labels users search products prices save codes future reference cuecat late 1990s recognized printed optical character recognition ocr produce snippet translate snippet language metropolitan museum art metropolitan museum art announced december 2011 collaboration google google goggles providing artworks museum direct links metropolitan museum art 
25652303	computerscience	engineering architecture set rules methods functionality organization implementation systems definitions architecture define describing capabilities programming model implementation definitions architecture involves instruction set architecture design microarchitecture design logic design implementation history documented architecture correspondence charles babbage ada lovelace describing analytical engine building z1 1936 konrad zuse patent applications future projects machine instructions stored storage data stored program concept examples term “architecture” literature traced lyle johnson frederick brooks jr machine organization department ibm’s main center 1959 johnson opportunity write proprietary communication stretch ibm developed supercomputer los alamos national laboratory time los alamos scientific laboratory level discussing luxuriously embellished description formats instruction types hardware parameters speed enhancements level “system architecture” – term “machine organization ”subsequently brooks stretch designer started chapter book planning project stretch buchholz 1962 writing brooks develop ibm 360 called ibm zseries computers “architecture” noun defining “what user know” users term explicit earliest architectures designed paper built final hardware form architecture prototypes physically built form transistor–transistor logic ttl computer—such prototypes 6800 risc—tested tweaked committing final hardware form 1990s architectures typically built tested tweaked—inside architecture architecture simulator fpga soft microprocessor both—before committing final hardware form subcategories discipline architecture main subcategories types architecture types bigger companies intel count architectureroles definition purpose design maximizes performance keeping power consumption check costs relative expected performance reliable aspects considered includes instruction set design functional organization logic design implementation implementation involves integrated circuit design packaging power cooling optimization design requires familiarity compilers operating systems logic design packaging instruction set architecture instruction set architecture isa interface software hardware viewed programmer view machine computers understand level programming languages java programming languages processor understands instructions encoded numerical fashion binary software tools compilers translate level languages instructions processor understand instructions isa defines items program—e data types registers addressing modes memory instructions locate items register indexes names memory addressing modes isa instruction manual describes instructions encoded define short vaguely mnemonic names instructions names recognized software development tool called assembler assembler program translates human readable form isa readable form disassemblers debuggers software programs isolate correct malfunctions binary programs isas vary quality completeness isa compromises programmer convenience easy code understand size code code required specific action cost interpret instructions complexity hardware decode execute instructions speed complex decoding hardware decode time memory organization defines instructions interact memory memory interacts design emulation software emulators programs written proposed instruction set modern emulators measure size cost speed determine isa meeting goals organization organization helps optimize performance based products software engineers processing power processors optimize software gain performance lowest price require detailed analysis organization card designers arrange card data processed fastest organization helps plan selection processor project multimedia projects rapid data access virtual machines fast interrupts tasks additional components capable running virtual machine virtual memory hardware memory virtual computers separated organization features affect power consumption processor cost implementation instruction set micro architecture designed practical machine developed design process called implementation implementation considered architectural design hardware design engineering implementation broken steps cpus entire implementation process organized referred cpu design design goals exact form depends constraints goals architectures trade standards power performance cost memory capacity latency latency time takes node travel source throughput considerations features size weight reliability expandability factors common scheme depth power analysis figures power consumption maintaining adequate performance performance modern performance ipc instructions cycle measures efficiency architecture clock frequency faster rate faster measurement computers ipc counts instructions cycle simple modern processors easily reach superscalar processors reach ipc executing instructions clock cycle counting machine language instructions misleading varying amounts isas instruction standard measurements count isa actual machine language instructions unit measurement based speed vax architecture people measure speed clock rate mhz ghz refers cycles main clock cpu metric misleading machine clock rate performance result manufacturers moved clock speed measure performance factors influence speed mix functional units bus speeds memory type instructions programs main types speed latency throughput latency time start process completion throughput unit time interrupt latency guaranteed maximum response time electronic event disk drive finishes moving data performance wide range design choices pipelining processor latency worse throughput computers control machinery interrupt latencies computers operate real time environment fail operation completed time controlled anti lock brakes braking predictable short time brake pedal sensed failure brake occur benchmarking takes factors account measuring time takes series programs benchmarking strengths choose measured machines split measures handle scientific applications render video games smoothly designers target add special features products hardware software permit specific benchmark execute offer advantages tasks power efficiency power efficiency measurement modern computers power efficiency traded speed cost typical measurement referring power consumption architecture mips millions instructions watt modern circuits power required transistor transistors chip grows transistor chip requires power supply requires pathways built power transistors chip starting increase slower rate power efficiency starting fitting transistors single chip processor designs emphasis focus power efficiency cramming transistors single chip embedded computers power efficiency goal throughput latency shifts market demand increases clock frequency grown slowly compared power reduction improvements driven moore law demand battery life reductions size mobile technology change focus clock rates power consumption miniaturization reductions power consumption 50 reported intel release haswell microarchitecture dropped power consumption benchmark 30 40 watts 20 watts comparing processing speed increase 3 ghz 4 ghz 2002 2006 focus development shifting clock frequency moving consuming power space 
25686223	computerscience	symbian discontinued mobile operating os computing platform designed smartphones symbian originally developed closed source os pdas 1998 symbian consortium symbian os descendant psion epoc exclusively arm processors unreleased x86 port existed symbian major mobile phone brands samsung motorola sony ericsson nokia prevalent japan brands including fujitsu sharp mitsubishi pioneer established smartphone industry popular smartphone os worldwide average 2010 time smartphones limited overtaken android google partners achieved wide adoption notably popular north america symbian os platform formed components microkernel based operating libraries user interface middleware graphical atop os prominent user interface s60 series 60 platform built nokia released 2002 powering nokia symbian devices uiq competing user interface motorola sony ericsson focused pen based devices traditional keyboard interface s60 interface moap platform carrier ntt docomo japanese market applications interfaces compatible built atop symbian os nokia largest shareholder symbian 2004 purchased entire company 2008 profit symbian foundation created royalty successor symbian os – seeking unify platform s60 foundation favoured interface uiq stopped development touchscreen focused symbian s60 5th edition created result 2009 symbian based moap ntt docomo foundation japanese market symbian released 2010 successor s60 5th edition time source symbian received anna belle updates 2011 symbian foundation disintegrated late 2010 nokia control os development february 2011 nokia remaining company supporting symbian japan announced windows phone primary smartphone platform symbian gradually wound months nokia moved os closed licensing collaborating japanese oems outsourced symbian development accenture support promised 2016 including major planned updates 2012 nokia abandoned development symbian developers left accenture january 2014 nokia stopped accepting changed symbian software developers nokia 808 pureview 2012 officially symbian smartphone nokia ntt docomo continued releasing opp operator pack symbian successor moap devices japan middleware symbian phones running include fujitsu sharp 2014 history symbian originated epoc32 operating created psion 1990s june 1998 psion software symbian major joint venture psion phone manufacturers ericsson motorola nokia software platforms created symbian mobile phone manufacturers include s60 nokia samsung lg uiq sony ericsson motorola moap japanese fujitsu sharp major competition smartphone os palm os windows mobile comparatively players symbian reached 67 global smartphone market share 2006 sizable market share symbian stages difficult develop mid 2000 complexity native programming languages opl symbian os obstinate developer bureaucracy prices ides sdks prohibitive independent developers subsequent fragmentation caused infighting manufacturers ides sdks discouraged party developers served native app ecosystem symbian evolve scale reached apple app store android google play contrast iphone os renamed ios 2010 android comparatively simpler design easier centralized infrastructure create party apps offered developer tools programming languages manageable level complexity capabilities multitasking graphics meet future consumer demands symbian difficult program issue creating java mobile edition apps ostensibly write slogan fragmentation device screen sizes differences levels java support devices june 2008 nokia announced acquisition symbian independent profit organization called symbian foundation established symbian os user interfaces s60 uiq moap contributed owners nokia ntt docomo sony ericsson symbian foundation objective creating symbian platform royalty source software osi fsf approved eclipse public license epl platform designated successor symbian os official launch symbian foundation april 2009 symbian platform officially source code february 2010 nokia major contributor symbian code possessed development resources symbian os core user interface nokia maintained code repository platform development regularly releasing development public repository symbian intended developed community led symbian foundation announced june 2008 officially launched april 2009 objective publish source code entire symbian platform osi fsf approved eclipse public license epl code published epl february 2010 symbian foundation reported event largest codebase moved source history components symbian os licensed parties prevented foundation publishing source epl source published restrictive symbian foundation license sfl access source code limited companies membership organisation source qt framework introduced symbian 2010 primary upgrade path meego mobile operating replace supplant symbian devices qt nature convenient develop frameworks deployed platform standard python ruby flash lite ides sdks developed released app development symbian picked november 2010 symbian foundation announced global economic market conditions lack support samsung sony ericsson transition licensing organisation nokia announced stewardship symbian platform symbian foundation remain trademark holder licensing entity executive directors involved market share sliding q32010 31 q42010 symbian losing ground ios android eventually falling android q42010 stephen elop appointed ceo nokia september 2010 11 february 2011 announced partnership nokia adopt windows phone primary smartphone platform symbian gradually phased meego consequence symbian market share fell application developers symbian dropped rapidly june 2011 mobile developers symbian time publication planning abandon platform april 2011 nokia ceased openly source portion symbian software reduced collaboration pre selected partners japan source code released epl remains party repositories 22 june 2011 nokia agreement accenture outsourcing program accenture provide symbian based software development support services nokia 2016 800 nokia employees accenture employees october 2011 transfer completed 30 september 2011 nokia terminated support software development maintenance symbian january 2014 refusing publish changed symbian applications content nokia store terminating symbian signed program software certification features user interface symbian native graphics toolkit inception avkon series 60 s60 designed manipulated keyboard interface metaphor 15 key augmented telephone keypad mini qwerty keyboards avkon based software binary compatible symbian versions including symbian symbian includes qt framework recommended user interface toolkit applications qt installed symbian devices symbian planned introduce gui library framework designed touch based interface ui extensions mobile uiemo internal project orbit built qt widget preview released january 2010 october 2010 nokia announced orbit uiemo cancelled nokia recommends developers qt quick qml level declarative ui scripting framework creating visually rich touchscreen interfaces development symbian meego delivered existing symbian devices qt update applications gradually feature user interface reworked qt legacy s60 framework avkon deprecated included devices breaking binary compatibility s60 applications browser symbian earlier built webkit based browser symbian mobile platform webkit june 2005 symbian models opera mobile default browser nokia released browser release symbian anna improved speed improved user interface multiple language support symbian strong localization support enabling manufacturers 3rd party application developers localize symbian based products support global distribution current symbian release symbian belle support 48 languages nokia device language packs set languages cover languages commonly spoken device variant intended sold language packs common english locally relevant dialect supported languages dialects scripts symbian belle symbian belle marks introduction kazakh korean supported application development 2010 symbian switched standard qt main sdk qt creator carbide qt supports symbian s60 3rd starting feature pack s60 symbian s60 5th edition s60 01b releases symbian platform supports maemo meego windows linux mac os alternative application development python python s60 adobe flash lite java symbian os symbian specific version codewarrior carbide integrated development environment ide native application development environment time wrt portable application framework creating widgets s60 platform extension s60 webkit based browser launching multiple browser instances separate javascript applications application development qt 2010 sdk symbian standard qt qt creator carbide ide symbian development phone simulator testing qt apps apps compiled simulator compiled native code development platform emulated application development qml symbian symbian os written symbian software coding standards develop symbian standard implementation release qt sdk standard development environment multiple platforms based symbian os software development kits sdks application developers wishing target symbian os devices main uiq s60 individual phone products families sdks sdk extensions downloadable maker sdks documentation header files library files build symbian os software windows based emulator wins symbian os version sdks included version gnu compiler collection gcc compiler cross compiler build software device symbian os symbian platform application binary interface abi compiler choice compilers including version gcc external links symbian programming steep learning curve symbian requires special techniques descriptors active objects cleanup stack simple programs initially harder implement environments techniques developed restricted mobile hardware compilers 1990s caused extra complexity source code programmers required concentrate level details application specific features 2010 issues standard qt sdk symbian programming commonly integrated development environment ide earlier versions symbian os commercial ide codewarrior symbian os favoured codewarrior tools replaced 2006 carbide eclipse based ide developed nokia carbide offered versions express developer professional oem increasing levels capability featured software created released express edition features ui design crash debugging charged editions visual studio 2003 2005 supported carbide plugin languages symbian devices programmed python java flash lite ruby runtime wrt widgets standard visual basic programmers ns basic develop apps s60 3rd edition uiq devices visual basic visual basic development symbian appforge crossfire plugin visual studio 13 march 2007 appforge ceased operations oracle purchased intellectual property announced plan sell provide support appforge products net60 compact framework symbian developed redfivelabs sold commercial product net60 vb source code compiled intermediate language executed symbian os time compiler jan 18th 2010 redfivelabs ceased development net60 announcement landing stage pursuing options sell ip net60 continue future version borland ide symbian os symbian os development linux mac os tools methods developed community partly enabled symbian releasing source code key tools plugin development symbian os applications apple xcode ide mac os java applications symbian os developed standard techniques tools sun java wireless toolkit j2me wireless toolkit packaged jar jad files cldc cdc applications created netbeans tools include superwaba build symbian 0s programs java nokia s60 phones python scripts interpreter python s60 installed custom api bluetooth support interactive console user write python scripts phone deployment developed symbian applications route customers mobile phones packaged sis files installed air pc connect bluetooth memory card alternative partner phone manufacturer software included phone applications symbian signed symbian os capabilities capabilities restricted capabilities device manufacturer capabilities applications signed architecture technology domains packages symbian design subdivided technology domains comprises software packages technology domain roadmap symbian foundation team technology managers manage technology domain roadmaps package allocated technology domain based functional package contributes influenced packages themes symbian foundation hopes encourage strong community form generate discussion review symbian model illustrates scope technology domains platform packages packages owned maintained package owner named individual organization symbian foundation accepts code contributions wider symbian community responsible package symbian kernel symbian kernel eka2 supports fast real time response build single core phone phone single processor core executes user applications signalling stack real time kernel microkernel architecture minimum basic primitives functionality maximum robustness availability responsiveness termed nanokernel extended kernel implement abstractions scheduler memory management device drivers networking telephony file support services os services layer base services layer inclusion device drivers kernel true microkernel design symbian features pre emptive multitasking memory protection operating systems created desktop computers epoc approach multitasking inspired vms based asynchronous server based events symbian os created systems design principles mind follow principles symbian microkernel request callback approach services maintains separation user interface engine os optimised power battery based devices rom based systems features xip entrancy shared libraries applications os follow object oriented design model view controller mvc os iterations diluted approach response market demands notably introduction real time kernel platform security model versions strong emphasis conserving resources exemplified symbian specific programming idioms descriptors cleanup stack methods exist conserve storage space symbian programming event based central processing unit cpu switched power mode applications dealing event programming idiom called active objects symbian approach threads processes driven reducing overheads operating model layers base services layer lowest level reachable user operations includes file server user library plug framework manages plug ins store central repository dbms cryptographic services includes window server basic services completely functional port created layer services symbian microkernel architecture minimum kernel maximise robustness availability responsiveness scheduler memory management device drivers services networking telephony filesystem support os services layer base services layer inclusion device drivers kernel true microkernel eka2 real time kernel termed nanokernel basic primitives requires extended kernel implement abstractions symbian designed emphasise compatibility devices removable media file systems development epoc led adopting fat internal file remains object oriented persistence model underlying fat provide posix style interface streaming model internal data formats rely apis create data file manipulations data dependence difficulties data migration networking communication subsystem main servers called etel epoc telephony esock epoc sockets c32 responsible serial communication plug scheme esock prt protocol modules implement networking protocol schemes subsystem code supports short range communication links bluetooth irda usb volume user interface ui code base classes substructure contained symbian os actual user interfaces maintained parties major uis s60 uiq moap contributed symbian 2009 symbian graphics layout font rendering libraries native symbian applications built framework classes defined application architecture application class document class application user interface class classes create fundamental application behaviour remaining functions application view data model data interface created independently interact solely apis classes fit model syncml java providing set apis os multimedia frameworks vendors expected supply plug ins frameworks parties helix player multimedia codecs advantage apis functionality phone models vendors lot flexibility phone vendors deal integration symbian os phone symbian includes reference user interface called techview basis starting customisation environment symbian code runs user interface psion series personal organiser production phone user interface symbian ui variants platforms symbian advanced os version spun graphical user interfaces company companies android os cosmetic guis symbian guis referred platforms modifications integrations complicated applications developed symbian gui platforms compatible led os fragmentation user interfaces platforms based symbian os include version comparison † manufactured sharp▲ software update service nokia belle symbian s60 phones discontinued december 2015market share competition q1 2004 4 million symbian phones shipped double q1 2003 symbian impressed progress japan devices shipped q3 2004 growth 201 compared q3 2003 market share growing 30 50 united popular market share q3 2004 palm os 43 windows mobile 25 attributed north american customers preferring wireless pdas smartphones nokia popularity 16 november 2006 100 millionth smartphone running os shipped 21 july 2009 250 devices running symbian os produced 2006 symbian 73 smartphone market compared 22 market quarter 2011 2006 symbian powered phones sold japan representing 11 symbian total worldwide shipments 89 million november 2007 figure 30 achieving market share 65 june 2007 japanese market symbian lost market share market dramatically grown competing platforms entering market sales increased timeframe symbian share global smartphone market dropped 52 2008 47 2009 shipments symbian devices grew 74 units 78 units q2 2009 q2 2010 shipments symbian devices grew 41 units 19 178 910 units 27 129 340 compared increase units android units rim units apple prior reports device shipments published february 2010 symbian devices formed 47 share smart mobile devices shipped 2009 rim 20 apple 15 ios windows ce windows mobile android smart mobile device sales symbian devices market leaders 2010 statistics symbian devices formed 37 share smart mobile devices sold android 22 rim 16 apple 15 ios estimates mobile devices shipped symbian os q2 2010 385 2009–10 motorola samsung lg sony ericsson announced withdrawal symbian favour alternative platforms including google android windows phone q2 2012 idc worldwide market share dropped time criticism users symbian countries latin alphabets russia ukraine criticizing complicated method language switching user type latin letter menu languages item arrow choose english language languages press button typing latin letter user repeat procedure return native keyboard method slows typing touch phones qwerty phones procedure remains time consuming mobile operating systems nokia s40 phones enable switching initially selected languages single gesture versions firmware original nokia n97 running symbian series 60 5th edition heavily criticized buggy contributed ram installed phone november 2010 smartphone blog symbian criticized performance symbian default browser recommended alternative browser opera mobile nokia senior vice president harlow promised updated browser quarter 2011 versions editions symbian led fragmentation apps software incompatible installed versions symbian malware symbian os subject variety viruses cabir send phone phone bluetooth advantage flaws symbian os user install software prominent warnings trusted rely social engineering form messages malware purporting utility game application symbian view average mobile phone user worry security symbian os unix style capability model permissions process object installed software theoretically unable damaging costing user money sending network data digitally signed traceable commercial developers afford cost apply software signed symbian signed program developers option signing programs set features include access bluetooth irda gsm cellid voice calls gps operators opted disable certificates symbian signed certificates hostile programs listed require input user form malware threat symbian os form cooked firmware demonstrated international malware conference malcon december 2010 indian hacker atul alex bypassing platform security symbian os devices hacked remove platform security introduced os onwards allowing users execute unsigned code altering files access locked os hack criticised nokia increasing threat posed mobile viruses unsigned code executed 
25845862	computerscience	international robot exhibition irex largest robot trade fair event staged tokyo japan 1973 organized japan robot association jara company nikkan kogyo shimbun companies japan exhibit robot technology robots examples robots displayed previous exhibitions 
26086272	computerscience	siri pronounced virtual assistant apple ios watchos macos homepod tvos operating systems assistant voice queries natural language user interface answer questions recommendations perform actions delegating requests set internet services software adapts users individual language usages searches preferences continuing returned individualized siri spin project originally developed sri international artificial intelligence center speech recognition engine nuance communications siri advanced machine learning technologies function original american british australian voice actors recorded respective voices 2005 unaware recordings eventual usage siri voice assistant released app ios february 2010 acquired apple months siri players game iphone 4s release october 2011 time separate app removed ios app store siri integral apple products adapted hardware devices including iphone models ipad ipod touch mac airpods apple homepod siri supports wide range user commands including performing phone actions checking basic scheduling events reminders handling device settings searching internet navigating finding entertainment engage ios integrated apps release ios 2016 apple limited party access siri including party messaging apps payments ride sharing internet calling apps release ios 11 apple updated siri voices human voices supports follow questions language translation additional party actions siri original release iphone 4s 2011 received mixed reviews received praise voice recognition contextual knowledge user including calendar appointments criticized requiring stiff user commands lack flexibility criticized lacking nearby inability understand english accents 2016 2017 media reports siri lacking innovation competing voice assistants technology companies reports concerned siri limited set features bad voice recognition undeveloped service integrations causing trouble apple field artificial intelligence cloud based services basis complaints reportedly stifled development caused apple prioritization user privacy executive power struggles company development siri spin sri international artificial intelligence center offshoot defense advanced projects agency darpa funded calo project founded dag kittlaus adam cheyer tom gruber siri speech recognition engine nuance communications speech technology company officially acknowledged apple nuance nuance ceo paul ricci confirmed 2011 technology conference speech recognition sophisticated machine learning techniques including convolutional neural networks short term memory initial siri prototype implemented active platform joint project artificial intelligence center sri international vrai ecole polytechnique fédérale lausanne active platform focus phd thesis led didier guzzoni joined siri chief scientist apple notion digital personal assistant originally concept video 1987 called knowledge navigator voices original american voice siri july 2005 susan bennett unaware eventually voice assistant report verge september 2013 voice actors machine learning developments hints allison dufty voice siri disproven dufty wrote absolutely positively voice siri citing growing pressure bennett revealed role siri october claim proven primeau american audio forensics expert apple confirmed original british male voice jon briggs technology journalist discovered voice siri watching television spoke role november 2011 acknowledging voice knowing recordings final usage form original australian voice karen jacobsen voice artist australia gps girl interview voice actors guardian briggs stated original recorded company called scansoft bought nuance apple simply licensed ios 11 apple auditioned hundreds candidates female voice recorded hours speech including personalities expressions built speech voice based deep learning technology integration siri originally released stand application ios operating february 2010 time developers intending release siri android blackberry devices months apple acquired siri october 2011 apple introduced iphone 4s beta version siri announcement apple removed existing standalone siri app app store techcrunch wrote siri app support iphone removal app store financial aspect company providing incentive customers upgrade devices party developer steven troughton smith managed port siri iphone communicate apple servers days troughton smith anonymous person nicknamed chpwn managed hack siri enabling functionalities iphone ipod touch devices additionally developers create distribute legal ports siri device capable running ios proxy server required apple server interaction apple expanded officially supported products including iphone models ipad support june 2012 ipod touch support september 2012 apple support stand siri remote september 2015 mac airpods support september 2016 homepod support february 2018 features options apple offers wide range voice commands interact siri including limited siri offers numerous pre programmed responses amusing questions questions include meaning life siri reply evidence suggests chocolate reply frankly wondered marry respond user licensing agreement cover marriage apologies initially limited female voices apple announced june 2013 siri feature gender option adding male voice counterpart september 2014 apple ability users speak hey siri enable assistant requirement physically handling device september 2015 hey siri feature updated include individualized voice recognition presumed effort prevent owner activation announcement ios june 2016 apple limited party developer access siri dedicated application programming interface api api restricts usage siri engaging party messaging apps payment apps ride sharing apps internet calling apps ios 11 siri handle follow questions supports language translation party actions including task management additionally users type siri privacy minded device learning technique improves siri suggestions privately analyzing personal usage ios applications reception siri received mixed reviews beta release integrated iphone 4s october 2011 siegler techcrunch wrote siri praising potential siri losing beta tag times siri understand execute request astonishingly imagine happen apple partners services expand siri imagine api developer alter mobile landscape writing york times david pogue praised siri language understanding ability understand context displays beautifully formatted response speaks calm female voice mind blowing inexact utterances siri understands weather tucson weekend umbrella tonight appointment patrick thursday siri responded note day appointment boston trip thursday schedule unbelievable jacqui cheng ars technica wrote apple claims siri bold demos bolder siri real potential kinds expectations bound disappointed apple product beta—an label opinion praising ability decipher casual language deliver specific accurate result providing additional cheng criticized restrictions language moved stiffer commands human interactions included phrase send jason clint sam lee dinner silver cloud siri interpreted sending message jason clint sam lee dinner silver cloud lack proper editability edit message silver cloud generated clint sam lee dinner silver cloud silver cloud google executive chairman chief eric schmidt conceded siri pose competitive threat company core search business siri criticized pro choice abortion organizations including american civil liberties union aclu naral pro choice america users siri provide location birth control abortion providers nearby directing users pro life crisis pregnancy centers natalie kerris spokeswoman apple told york times customers siri types lot intentional omissions meant offend simply bring siri beta final product coming weeks january 2016 fast company reported months siri begun confuse word abortion adoption citing health experts stated situation worse time fast company report situation changed siri offering comprehensive list planned parenthood facilities adoption clinics continue pop list siri received english speakers distinctive accents including scottish americans boston south march 2012 frank fazio filed class action lawsuit apple behalf people bought iphone 4s misled capabilities siri alleging failing function depicted apple siri commercials fazio filed lawsuit california claimed iphone 4s expensive iphone siri fails function advertised july 22 2013 district judge claudia wilken san francisco dismissed suit plaintiffs amend time reason dismissal plaintiffs document misrepresentations apple trial proceed perceived lack innovation june 2016 verge sean kane wrote upcoming major ios updates headline stating siri upgrades wo matter understand users apple talk solving siri biggest basic flaws voice recognition clunky worse apple fledged competitors space amazon alexa cortana google assistant writing verge walt mossberg questioned apple efforts cloud based services writing biggest disappointment apple cloud based services siri apple bought siri road robust digital assistant integrate services – built startup limited funds people apple bought siri giant company treat backwater restricting slowly increasing tasks telling weather sports scores movie restaurant listings controlling device functions unhappy founders left apple build service called viv occasions siri wrong answer verbalize search result position read october 2016 bloomberg reported apple plans unify teams cloud based services including single campus reorganized cloud computing resources aimed improving processing siri queries report verge june 2017 called siri voice recognition bad june 2017 wall street journal published extensive report lack innovation siri competitors advancement field voice assistants noting apple workers anxiety levels notch announcement amazon alexa journal wrote apple playing catch product category invented increasing worries technology giant lost innovation edge report cites primary apple prioritization user privacy including randomly tagged month siri searches google amazon data actively discarded user executive power struggles employees leaving apple declined comment report eddy cue apple generic data user data train systems ability improve siri performance individual users iphones swearing ios version siri ships vulgar content filter disabled default enabled user manually siri triggered cursing broadcasting discriminatory content actions carried history multiple methods techniques trigger siri swearing language filter perfect bypassed 2018 ars technica reported glitch exploited user requesting definition mother read loud siri issue response user hear definition user replies siri mention mother short motherfucker multiple youtube videos featuring responses trigger apple fixed issue silently unconfirmed videos brought attention content picked party sources oxford english dictionary supplied message corporation unknown glitch exploited vulgar content filter enabled 
26207504	computerscience	single failure spof fails entire spofs undesirable goal availability reliability business practice software application industrial overview systems robust adding redundancy potential spofs instance owner tree care company woodchipper chipper breaks unable complete current job cancel future jobs replacement redundancy achieved levels instance owner tree care company spare ready repair wood chipper fails level wood chipper bring job finally level equipment completely replace multiple failures assessment potential spof involves identifying critical components complex provoke total systems failure malfunction highly reliable systems rely individual component computing computing redundancy achieved internal component level level multiple machines level replication deploy load balancer ensure availability server cluster level availability server cluster individual server attain internal component redundancy multiple power supplies hard drives components level redundancy spare servers waiting server fails data center support center operations business logic represents potential spof level entire cluster replicated location accessed primary location unavailable typically addressed disaster recovery resiliency program paul baran donald davies developed packet switching key survivable communications networks networks including arpanet internet designed single failure multiple paths network continue communicating packets routing damage single failure path intermediate node network protocols prevent spof software engineering software engineering bottleneck occurs capacity application severely limited single component bottleneck lowest throughput transaction path performance engineering tracking bottlenecks hot spots sections code execute frequently execution count called performance analysis reduction achieved specialized tools performance analyzers profilers objective sections code perform fast improve algorithmic efficiency security mistake component compromise entire fields concept single failure applied fields engineering computers networking corporate supply chain management transportation management design structures create single failure include bottlenecks series circuits contrast parallel circuits transportation examples concept application included nipigon river bridge canada partial bridge failure january 2016 severed road traffic eastern canada western canada days located portion trans canada highway alternate detour route vehicles norwalk river railroad bridge norwalk connecticut aging swing bridge stuck closing disrupting rail traffic northeast corridor concept single failure applied fields intelligence edward snowden talked dangers single failure – sole repository 
26592482	computerscience	vibe background subtraction algorithm ieee icassp 2009 conference refined publications precisely software module extracting background moving images developed oliver barnich marc van droogenbroeck montefiore institute university liège belgium vibe patented patent covers aspects stochastic replacement spatial diffusion chronological handling vibe written programming language implemented cpu gpu fpga technical description pixel model classification process advanced techniques provide estimate temporal probability density function pdf pixel vibe approach imposes influence polychromatic space limited local neighborhood practice vibe estimate pdf set observed sample values pixel model classify compared closest values set samples model update sample values lifespan policy vibe ensures smooth exponentially decaying lifespan sample values constitute pixel models vibe deal concomitant events single model reasonable size pixel achieved choosing randomly sample replace updating pixel model sample discarded chosen replaces discarded sample pixel model result update pixel model pixel sample predicted discarded chosen random model update spatial consistency ensure spatial consistency image model handle practical situations camera movements slowly evolving background objects vibe technique developed updating process chooses random update pixel model neighborhood current pixel denoting spatial neighborhood pixel assuming decided update set samples inserting vibe update set samples pixels neighborhood chosen random result vibe produce spatially coherent post processing method model initialization model easily recover type initialization choosing set random values convenient accurate background estimate ideally segmentation algorithm segment video sequences starting frame frame initialize model temporal prior frame vibe populates pixel models values spatial neighborhood pixel precisely initializes background model values randomly pixel neighborhood frame backgroundestimate valid starting frame video sequence 
26968133	computerscience	nanonetwork nanoscale network set interconnected nanomachines devices nanometers micrometers size perform simple tasks computing data storing sensing actuation nanonetworks expected expand capabilities single nanomachines terms complexity range operation allowing coordinate share fuse nanonetworks enable applications nanotechnology biomedical field environmental military technology industrial consumer applications nanoscale communication defined ieee p1906 communication approaches classical communication paradigms revised nanoscale main alternatives communication nanoscale based electromagnetic communication molecular communication electromagnetic defined transmission reception electromagnetic radiation components based nanomaterials advancements carbon molecular electronics door generation electronic nanoscale components nanobatteries nanoscale energy harvesting systems nano memories logical circuitry nanoscale nano antennas communication perspective unique properties observed nanomaterials decide specific bandwidths emission electromagnetic radiation time lag emission magnitude emitted power input energy time main alternatives electromagnetic communication nanoscale envisioned experimentally demonstrated receive demodulate electromagnetic wave nanoradio electromechanically resonating carbon nanotube decode amplitude frequency modulated wave graphene based nano antennas analyzed potential electromagnetic radiators terahertz bandmolecular molecular communication defined transmission reception molecules molecular communication techniques classified type molecule propagation walkaway based flow based diffusion based communication walkway based molecular communication molecules propagate pre defined pathways carrier substances molecular motors type molecular communication achieved coli bacteria chemotaxis flow based molecular communication molecules propagate diffusion fluidic medium flow turbulence guided predictable hormonal communication blood streams human body type propagation flow based propagation realized carrier entities motion constrained average specific paths random component pheromonal range molecular communications diffusion based molecular communication molecules propagate spontaneous diffusion fluidic medium molecules subject solely laws diffusion predictable turbulence fluidic medium pheromonal communication pheromones released fluidic medium air water diffusion based architecture examples transport include calcium signaling cells quorum sensing bacteria based macroscopic theory ideal diffusion impulse response unicast molecular communication channel reported paper detect concentration encoded molecular signal detection methods named sampling based detection energy based detection proposed approach based concentration amplitude sample suitable time instant symbol duration approach based total accumulated molecules received entire symbol duration reduce impact isi controlled pulse based molecular communication scheme analysed realize multilevel amplitude modulation based ideal diffusion comprehensive study pulse based binary concentration encoded molecular communication investigated 
27034279	computerscience	kuka systems gmbh division kuka aktiengesellschaft augsburg international supplier engineering services flexible automated manufacturing solutions 900 employees countries globally kuka systems’ plants equipments automotive manufacturers bmw chrysler ford volvo volkswagen daimler manufacturers industrial sectors airbus astrium siemens range includes products services task automation industrial processing metallic metallic materials industries including automotive energy aerospace rail vehicles agricultural machinery history acetylene factory augsburg founded 1898 johann josef keller jakob knappich production cost domestic municipal lighting household appliances automobile headlights 1905 production extended innovative autogenous welding equipment war keller knappich resumed production safety manual power winches manufacturing vessels result bayerische kesselwagen gmbh formed 1922 company responsible development production superstructures municipal vehicles street cleaning machines sewage trucks garbage trucks 1927 business division garbage truck kuka company’s time “keller und knappich augsburg” development manufacture spot welding equipment 1936 kuka 000 employees major destruction company war 1945 kuka started manufacturing welding machines appliances products double cylinder circular knitting machine portable typewriter princess kuka introduced industrial fields gained independence supply sector 1956 kuka manufactured automatic welding refrigerators washing machines supplied multi spot welding volkswagen friction welding machine production 1967 arc welding method applied time kuka 1971 delivery robotic welding class magnetic arc welding machine market production robot “famulus” 1973 kuka succeeded entering robot production 1978 601 60 robot production mass production 1981 kuka’s main activities independent companies kuka schweissanlagen und roboter gmbh kuka umwelttechnik gmbh kuka wehrtechnik gmbh sold rheinmetall 1999 1982 lsw maschinenfabrik gmbh bremen subsidiary kuka 1993 laser roof seam welding systems manufactured welding systems expanded adhesive bonding sealing technologies time kuka tools equipment manufacturers schwarzenberg gmbh expanded business china usa 1996 kuka schweissanlagen gmbh independent company market leader european welding equipment manufacturers supply pressing tools automobile walls strength steel 2002 company launched kuka roboscan remote laser welding head 2003 2006 kuka systems operating bodyshell factory toledo america produces bodywork jeep wrangler chrysler internationalization expansion business units technologies reshaping tooling bonding sealing kuka schweissanlagen gmbh kuka systems gmbh 2007 2010 kuka newly developed standardized cell concept welding solutions kuka flexiblecube automation sector kuka systems offers standard customized solutions industrial production automation joining technologies component handling activity technologies tested production processes optimized prior development addition kuka systems offers engineering individual counseling customized special production solutions planned optimized operation customer late 2017 kuka announced 250 employees kuka systems terminated management named trouble projects reason fields application aerospace kuka systems supplied tig welding cell upper stage ariane launcher rocket tig welding stands tungsten inert gas welding special form arc welding core activities kuka systems company apparatuses appliances construction aircraft structural elements boeing bell airbus kuka systems respective customers automotive kuka systems portfolio includes spectrum production automation joining assembling vehicle body structures scale automated production facilities highly flexible manufacturing systems production individual equipments subassemblies assembly complete body structures mechanical equipments assembling discs mounting systems vehicle bodies chassis called “marriage” component installation bmw chrysler ford volvo volkswagen daimler customers business sector production rail vehicles manufacturers rail vehicles customers kuka systems construction locomotives subway wagons setting innovative highly automated production lines freight wagons production photovoltaic modules kuka systems offers solutions step photovoltaic module production brick sawing cell handling cross tie soldering framing packaging modules welding technology – kuka systems represents industrial sectors examples production baby strollers production white bsh bosch und siemens hausgeräte gmbh 
27046146	computerscience	arithmetic logic unit alu combinational digital electronic circuit performs arithmetic bitwise operations integer binary contrast floating unit fpu operates floating alu fundamental building block types computing circuits including central processing unit cpu computers fpus graphics processing units gpus single cpu fpu gpu multiple alus inputs alu data operated called operands code indicating operation performed alu output result performed operation designs alu status inputs outputs convey previous operation current operation alu external status registers signals alu variety input output nets electrical conductors convey digital signals alu external circuitry alu operating external circuits apply signals alu inputs response alu produces conveys signals external circuitry outputs data basic alu parallel data buses consisting input operands result output data bus signals conveys binary integer typically bus widths signals comprising bus identical match native word size external circuitry encapsulating cpu processor opcode opcode input parallel bus conveys alu operation selection code enumerated specifies desired arithmetic logic operation performed alu opcode size bus determines maximum operations alu perform bit opcode sixteen alu operations alu opcode machine language opcode encoded bit field machine language opcode status outputs status outputs individual signals convey supplemental result current alu operation purpose alus commonly status signals alu operation status output signals stored external registers future alu operations implement multiple precision arithmetic controlling conditional branching collection bit registers store status outputs treated single multi bit register referred status register condition code register inputs status inputs additional alu performing operation typically single carry bit stored carry previous alu operation circuit operation alu combinational logic circuit meaning outputs change asynchronously response input normal operation stable signals applied alu inputs time propagation delay passed signals propagate alu circuitry result alu operation appears alu outputs external circuitry connected alu responsible ensuring stability alu input signals operation allowing sufficient time signals propagate alu sampling alu result external circuitry controls alu applying signals inputs typically external circuitry employs sequential logic control alu operation paced clock signal frequency ensure time alu outputs settle worst conditions cpu alu addition operation routing operands sources registers alu operand inputs control unit simultaneously applies alu opcode input configuring perform addition time cpu routes alu result output destination register receive sum alu input signals held stable clock allowed propagate alu destination register cpu waits clock clock arrives destination register stores alu result alu operation completed alu inputs set alu operation functions basic arithmetic bitwise logic functions commonly supported alus basic purpose alus typically include operations repertoires bit shift operations alu shift operations operand shift left depending opcode shifted operand appears simple alus typically shift operand bit position complex alus employ barrel shifters shift operand arbitrary bits operation single bit shift operations bit shifted operand appears carry bit shifted operand depends type shift applications multiple precision arithmetic integer arithmetic computations multiple precision arithmetic algorithm operates integers larger alu word size algorithm treats operand collection alu size fragments arranged vice versa bit alu 24 bit integer codice treated collection bit fragments codice codice codice size fragment matches alu word size alu operate piece operand algorithm alu operate operand fragments generate fragment partial multi precision result partial generated written region storage designated multiple precision result process repeated operand fragments generate complete collection partials result multiple precision operation arithmetic operations addition subtraction algorithm starts invoking alu operation operands fragments producing partial carry bit algorithm writes partial designated storage processor machine typically stores carry bit alu status register algorithm advances fragment operand collection invokes alu operation fragments stored carry bit previous alu operation producing partial carry bit carry bit stored status register partial written designated storage process repeats operand fragments processed complete collection partials storage comprise multi precision arithmetic result multiple precision shift operations operand fragment processing depends shift direction left shift operations fragments processed bit partial—which conveyed stored carry bit—must bit left shifted operand conversely operands processed shift operations bit partial bit shifted operand bitwise logical operations logical logical operand fragments processed arbitrary partial depends operand fragments stored carry bit previous alu operation complex operations alu designed perform complex functions circuit complexity cost power consumption larger size impractical alus limited simple functions executed speeds short propagation delays external processor circuitry responsible performing complex functions orchestrating sequence simpler alu operations computing square root implemented depending alu complexity implementations transition fastest expensive slowest costly square root calculated processors simple alus perform calculation multiple alu operations performed implementation alu implemented stand integrated circuit ic 74181 complex ic alu typically instantiated synthesizing description written vhdl verilog hardware description language vhdl code describes simple bit alu history mathematician john von neumann proposed alu concept 1945 report foundations called edvac cost size power consumption electronic circuitry infancy age serial computers computers pdp simple alu operated data bit time wider word size programmers earliest computers multiple discrete single bit alu circuits 1948 whirlwind i employed sixteen math units enable operate 16 bit 1967 fairchild introduced alu implemented integrated circuit fairchild 3800 consisting bit alu accumulator integrated circuit alus emerged including bit alus am2901 74181 devices typically bit slice capable meaning carry signals facilitated multiple interconnected alu chips create alu wider word size devices popular bit slice minicomputers microprocessors 1970s transistors insufficient die space word alu result microprocessors employed narrow alu required multiple cycles machine language instruction examples includes popular zilog z80 performed bit additions bit alu time transistor geometries shrank moore law feasible build wider alus microprocessors modern integrated circuit ic transistors magnitude microprocessors fit highly complex alus ics modern alus wide word widths architectural enhancements barrel shifters binary multipliers perform single clock cycle operations required multiple operations earlier alus 
27547393	computerscience	inspiration recognition science technology international youth organization operates robotics competition lego league lego league jr tech challenge competitions founded dean kamen woodie flowers 1989 expressed goal develop inspire students engineering technology fields philosophy expressed organization coopertition gracious professionalism operates facility headquarters manchester hampshire holds educational programs day camps students teachers structure operates profit public charity corporation licenses qualified teams affiliated schools youth organizations participate competitions teams pay fee fees majority redistributed pay teams kit services consist majority revenue supreme body board directors includes corporate executives government officials executive advisory board senior advisors advisors include engineers involved volunteers senior organizers day day operations senior management team consisting president vice presidents activities robotics competition scale program developed robotics competition frc designed inspire school students engineers real experience engineers develop robot inaugural robotics competition held 1992 manchester memorial school gymnasium 000 school teams totaling 46 000 students australia brazil canada france turkey israel mexico netherlands united united kingdom compete annual competition competition challenge teams reuse components previous robots weigh batteries bumpers kit issued team base set registration kit cost 000 addition teams allowed spend 500 robot purpose rule lessen influence money teams competitiveness details game released saturday january saturday falls january teams weeks construct robot accomplish game tasks 2011 teams participated 48 regional district competitions march effort qualify championship louis april previous championships held atlanta georgia houston texas walt disney epcot october 2009 announced championship event held louis missouri 2011 2013 robotics competition scholarships participants program 2011 14 worth scholarships 128 colleges universities associations corporations district competition introduced michigan 2017 expanded include districts pacific northwest mid atlantic washington dc england georgia north carolina ontario israel created 2017 ontario israel districts districts united district competition changed traditional regional events allowing teams compete multiple events ranking algorithm determine teams advance level competition pushes regions districts california texas york pushed district tech challenge 2005 fvc pilot season featured demonstration vex challenge linear scale mock 2004 frc competition 2005 2006 pilot season fvc teams played pipe hustle game racquet balls ramps 2006 2007 ftc season tech challenge teams competed hangin challenge softballs rotating platforms hanging bar larger atlas ball larger vex robots harder manipulate competitions held united canada mexico 2008 2009 ftc season kit introduced moved vex platform vendors create custom kit control ftc tetrix based lego mindstorms nxt brain including secondary specialized controllers overcome limitations nxt teams bluetooth link nxt laptop running ftc driver station software team drivers usb gamepads control robots 2015 2016 ftc season partnership qualcomm lego mindstorms nxt replaced brain robot android device communicates separate driver station android device wifi direct addition students allowed mit app inventor android studio java language program robots lego league 1998 lego league fll program robotics competition formed aimed 14 students utilizes lego mindstorms sets ev3 nxt rcx build palm sized lego robots programmed robolab software rcx based systems mindstorms nxt ev3 software nxt ev3 based systems autonomously compete teams robolab software based national instruments labview industrial control engineering software combination interchangeable lego bricks sensors aforementioned software provide preteens teenagers capability build simple models real life robotic systems competition utilizes element themed game deals real situation students learn season simplistic nature games team startup costs association lego extensive competitions profile sponsors tech challenge robotics competition 2009 14 725 teams 56 countries participated local regional national international competitions compared 600 teams roughly countries frc lego league jr lego league jr variation lego league aimed elementary school children kids ages build lego models dealing fll challenge model moving component teams participate exhibitions country demonstrate explain models award opportunities championship championship annual event celebrates finale programs bringing final rounds event championship split locations louis missouri houston texas 2017 rise teams 2018 2020 championships held detroit michigan houston texas 2014 championship announced 2015 structure bring olympic village feeling involves rearrangement programs city support supporting organization individual teams typically rely funding sources takes funds regional events championship 2010 recipient google project 100 grant intra team teams request team mentors students contribute costs running team pay fee donate tools facilities inter team teams frequently teams support providing funds tools facilities gracious professionalism coopertition core tenets philosophy gracious professionalism gracious professionalism major belief community regional national competition judges teams graciously professional gracious professionalism competing playing field team competition team set team matched teams match random team ally match opponent match traditionally shares resources competition allies element gracious professionalism share resources opponent team tool robot expected team opposing team team hand compete helps student learn success learning helping matter circumstances mind judges gracious professionalism award robotics competition tournament team outstanding gracious professionalism term gracious professionalism created dr woodie flowers national advisor pappalardo professor emeritus mechanical engineering massachusetts institute technology community common method monetary resource sponsorship teams community surrounding team majority teams based school school district schools provide infrastructure team local governments individual citizens provide funds support teams local universities colleges funds teams corporate corporate donations grants provide majority mature team funds major donors include bae systems google raytheon national instruments government speech kickoff event founder dean kamen student participants homework assignment involves spreading word increasing attendance regionals 2005 mentoring rookie teams specific scholarships applied 2004 researching capabilities motors disseminating teams 2006 2007 dean homework team contact government officials mayors legislators governors federal officials invite regional championship expose competition increase level political awareness 2008 inform media 2009 homework team students mentors persons involved team register goal registration process provide data demonstrate people benefited experiences robotics encourage funding robotics events championship atlanta speakers included president united george herbert walker bush 2008 united secretary education arne duncan 2010 2010 undersecretary commerce director patent trademark office jon dudas selected president championship louis president united barack obama spoken pre recorded message 2011 2014 received attention politicians canada ontario mpp bob delaney ontario mpp vic fedeli remarks legislative assembly ontario frc experiences support nasa robotics alliance project major supporter philosophy seeks promote philosophy teamwork collaboration engineers encourages competing teams remain friendly helping terms frequently applied ethos gracious professionalism coopertition terms coined woodie flowers kamen support respect competitors integrity actions concept gracious professionalism grew robotics class flowers taught massachusetts institute technology coopertition patented patent 507 169 dean kamen timeline note championship game held 
27586972	computerscience	3d vision geforce 3d vision stereoscopic gaming kit nvidia consists shutter glasses driver software enables stereoscopic vision direct3d game degrees compatibility examples shutter glasses electrically controlled mechanical shutter glasses middle century lcd shutter glasses appeared 1980s sega segascope sega game console master nvidia 3d vision gaming kit introduced 2008 technology mainstream consumers pc gamers kit specially designed 120 hz lcd monitors compatible crt monitors 1024×768×120 hz refresh rates dlp projectors 3lcd projectors requires compatible graphics card nvidia geforce 200 series shutter glasses glasses wireless protocol charged usb cable allowing 60 hours continuous wireless emitter connects usb port interfaces underlying driver software vesa stereo port connecting supported dlp sets standalone operation pc installed nvidia 3d vision driver allowed nvidia includes pair shutter glasses 3d vision kit sku 942 10701 0003 lens operates 60 hz alternate create 120 hz dimensional experience version 3d vision supports select 120 hz monitors 720p dlp projectors passive polarized displays zalman stereo driver stereo driver software perform automatic stereoscopic conversion 3d models submitted application rendering stereoscopic views standard mono view automatic driver modes automatic mode 3d vision driver controls screen depth convergence stereo separation explicit mode control screen depth separation textures performed game developer proprietary nvapi quad buffered mode developers control rendering avoiding automatic mode driver rendered stereo picture left frame buffers buffers history roots nvidia stereo driver traced software supplied wired elsa revelator shutter glasses 1990s nvidia acquired technology support stereoscopic display technologies including stereoscopic shutter glasses version driver nvidia graphics cards 2008 nvidia undertook major rewrite driver converted windows display driver model compatible windows vista nvidia glasses stereo driver renamed 3d vision driver 
28037054	computerscience	margin nearest neighbor lmnn classification statistical machine learning algorithm metric learning learns pseudometric designed nearest neighbor classification algorithm based semidefinite programming class convex optimization goal supervised learning classification learn decision rule categorize data instances pre defined classes nearest neighbor rule assumes training data set labeled instances classes classifies data instance class majority vote closest labeled training instances closeness measured pre defined metric margin nearest neighbors algorithm learns global pseudo metric supervised fashion improve classification accuracy nearest neighbor rule setup main intuition lmnn learn pseudometric data instances training set surrounded instances share class label achieved leave error special cross validation minimized training data consist data set set class categories algorithm learns pseudometric type defined matrix positive semi definite euclidean metric special identity matrix generalization falsely referred mahalanobis metric figure illustrates metric varying circles set equal distance center euclidean set circle modified mahalanobis metric ellipsoid algorithm distinguishes types special data target neighbors impostors target neighbors target neighbors selected learning instance target neighbors 11 share class label 12 target neighbors data nearest neighbors learned metric denote set target neighbors data 14 impostors impostor data data 16 class label 17 nearest neighbors learning algorithm minimize impostors data instances training set algorithm margin nearest neighbors optimizes matrix semidefinite programming objective twofold data target neighbors close impostors figure optimization illustrative learned metric input vector surrounded training instances class classified correctly 22 nearest neighbor rule optimization goal achieved minimizing average distance instances target neighborsthe goal achieved constraining impostors 24 unit target neighbors 16 pushing local neighborhood inequality constraint stated margin unit fixes scale matrix 28 alternative choice 29 result rescaling 28 factor 31 final optimization slack variables 37 absorb violations impostor constraints sum minimized constraint ensures positive semi definite optimization instance semidefinite programming sdp sdps tend suffer computational complexity sdp instance solved efficiently underlying geometric properties impostor constraints naturally satisfied enforced runtime suited solver technique set method set constraints actively enforced monitors remaining satisfied constraints occasionally ensure correctness extensions efficient solvers lmnn extended multiple local metrics 2008 paper extension improves classification error involves expensive optimization 2009 publication journal machine learning weinberger saul derive efficient solver semi definite program learn metric mnist handwritten digit data set hours involving billions pairwise constraints source matlab implementation freely authors kumal extended algorithm incorporate local invariances multivariate polynomial transformations improved regularization 
28108358	computerscience	comau consorzio macchine utensili italian multinational company based turin italy subsidiary automaker fiat chrysler automobiles comau integrated company industrial automation field international network 35 operative centers 15 manufacturing plants innovation centers worldwide company offers services products technologies meet specific manufacturing industries ranging automotive railway heavy industrial renewable energy industry products technologies assembly powertrain technologies range 3d laser systems robotized cutting processes roller hemming palletizing transfer systems machining manual semi automated automated assembly testing components services comau international network expert technicians provide comprehensive management maintenance support service offerings range industrial process maintenance support including building utility maintenance developing projects improving production equipment increasing productivity efficiency assets systems integration comau capacity participate project phase developing concept creating business plan design manufacturing entire plant includes performing process engineering 3d development simulation tools concepts plan factory formation comau 1973 consorzio macchine utensili unite businesses based turin surrounding supplying equipment togliattigrad vaz plant russia 1977 mst morando colubra lamsat merged single company named comau industriale comau officially founded bringing plants industrial activities comau industriale renamed comau finanziaria growth expansion 1984 company branched europe comau productivity systems founded start development commercial industrial activities north america comau finanziaria gained majority italtech specialized injection molding machines plastic materials 1988 acquired berto lamet sheet metal die producer specialized product process engineering berto lamet tea company manufactured injection molds 1990 spanish company mecaner specialized producing sheet metal dies 1995 company grew south america europe north america asia comau brasil ind ltda comau argentina launched comau business units joining mercosur market germany comau deutschland gmbh established comau productivity systems expanded structure changed comau north america additionally representative office beijing china set 1996 comau france founded company officially changed comau 1997 company gained majority geico producer painting systems automotive industry comau india pvt pune set company headquarters southeast asia comau poland sp production plant sheet metal dies operation tychy offering maintenance services comau service launched provide maintenance services customers worldwide 1999 comau french company sciaky producer body systems welding guns company renamed comau sciaky comau gained majority renault automation france company specializing engineering metal cutting mechanical assembly body final assembly fiat acquires progressive tool industries pico company experienced body systems manufacturing subsequently renamed comau pico pico estil luton comau estil south africa aims uitenhage renamed comau south africa pty 2000 comau automotive equipment colt shanghai comau belgium established develop maintenance services northern europe comau systems services operations madrid comau acquired companies automotive product process engineering industrialization germann intec gmbh team resources romania comau românia comau australia adelaide 2001 2002 comau ingest sverige ab established sweden 2003 comau russia srl comau shanghai international trading operations focus import export activities comau sciaky owner gerbi sciaky company france produced electrical welding guns changing sciaky 2004 comau service france comau sciaky sciaky consolidated comau france 2005 comau germann intec gmbh merged comau deutschland gmbh 2007 comau germann intec gmbh started germany focus engineering activities 2013 comau expanded presence china sites comau turkey comau czech serve middle eastern european markets comau established office munich germany expanded mexico comau são paulo comau thailand established 2015 2016 comau humanufacturing innovation center pontedera pisa italy company location california united 2016 comau expanded activities united kingdom 2017 engineering facility north east england corporate structure management fca comau managed board directors board statutory auditors board directors oversees company performance committees charged specific advisory functions supported body attributed independent responsibilities powers services comau industrial maintenance services markets equipment production processes asset management services include sales assistance maintenance packages facility management planning international network specialists provide services professional maintenance partnerships modular approach 
28139201	computerscience	akinator online game mobile app french company elokence gameplay attempts determine fictional real life character player thinking series questions manner game questions artificial intelligence program learns questions experience players gameplay questionnaire user press play button popular character object frequently mind musician athlete political personality video game mother father actor fictional film character internet personality akinator cartoon genie series questions required answers hack potential character answer narrowed single option 20 questions program automatically character chose correct character guessed wrong times row program prompt user input character expand database choices predicts answer based tree match algorithm aki awards rewarded guessing character update allowed user purchase vip clothing game currency animals objects counted real character akinator players decide characters based rules critical reception express rated akinator list iphone apps week september 2009 excite france stated akinator interactive revolutionary attractive entertaining europe game reached peak popularity 2009 
28358620	computerscience	post editing postediting process humans amend machine generated translation achieve acceptable final product person post edits called post editor concept post editing linked pre editing process translating machine translation gained pre editing source textfor applying principles controlled languageand post editing machine output distinct editing refers process improving human generated process revision field translation post edited revised ensure quality language choices proofread correct simple mistakes post editing involves correction machine translation output ensure meets level quality negotiated advance client post editor light post editing aims output simply understandable post editing stylistically advances machine translation post editing alternative manual translation practically assisted translation cat tools support post editing machine translated output post editing machine translation machine translation left labs start actual purpose late seventies institutions european commission pan american health organization corporations caterpillar motors studies post editing appeared eighties linked implementations develop guidelines training association machine translation americas amta european association machine translation eamt set post editing special 1999 nineties advances power connectivity sped machine translation development allowed deployment browser including adjunct main search engines google translate bing translator yahoo babel fish wider acceptance perfect machine translation accompanied wider acceptance post editing demand localisation services growing pace met human translation assisted translation memory translation management technologies industry bodies translation automation users society taus expect machine translation post editing play bigger role machine translation suggests pre editing light post editing studies eighties distinguished degrees post editing context european commission translation service defined conventional rapid rapid light post editing wording light post editing implies minimal intervention post editor strictly required user sense expectation client inbound purposes urgently short time span post editing involves level intervention achieve degree quality negotiated client post editor expectation outcome understandable stylistically assimilation dissemination inbound outbound purposes post editing expectation level quality indistinguishable human translation assumption takes effort translators source post edit machine generated version advances machine translation changing language pairs tasks engines customised domain specific quality data clients requesting translators post edit translating scratch belief attain quality cost light classification developed nineties machine translation rom suit advances machine translation light post editing language pairs tasks source pre edited raw machine output gisting purposes requiring subsequent human intervention post editing efficiency post editing raw machine translation human translation required industry advises post editing double productivity manual translation fourfold light post editing post editing efficiency difficult predict studies academia industry claimed post editing faster translating scratch language pairs translators experience agreement time saved post editing practice industry reports time savings 40 academic studies time savings realistic conditions 15–40 professionals claim takes correction translate scratch efficiency greatly improved translation memory technology conjunction post editing translation memory stores segments post edited bilingual central repository future populating quality translations sentences phrases future translations continuously increase translation productivity time improving translation quality saving post edited future translation projects post editing language industry post editing “a nascent profession” profile post editor studied post editing overlaps translating editing partially ideal post editor translator keen trained specific skills required bilingual background translation easier train actual post editors tend professional translators house employees employed conditions professional translators dislike post editing reasons paid rates conventional translations international association professional translators interpreters iapti vocal quality machine translation output post editing requires post editing effort machine translation neural vertical customised machine translation engine translation efficiency gains measured tracking time linguists correct machine translation translation environment xtm cloud translation management assisted translation tool post editing times linguistic quality assessment post edited texts compared figures post editing pie translation industry survey 50 language service providers offered 85 accounted throughput memsource based translation tool claims 50 percent translations english spanish french languages platform combining translation memory machine translation post editing translation crowdsourcing portals unbabel november 2014 claimed post edited 11 productivity volume estimates moving targets advances machine translation driven post edited fed engines post editing quality machine translation widespread post editing 
28934119	computerscience	machine learning natural language processing topic model type statistical model discovering abstract topics occur collection documents topic modeling frequently mining tool discovery hidden semantic structures body intuitively document topic expect document frequently dog bone documents dogs cat meow documents cats equally document typically concerns multiple topics proportions document cats 90 dogs times dog cat topics produced topic modeling techniques clusters topic model captures intuition mathematical framework examining set documents discovering based statistics topics document balance topics topic models referred probabilistic topic models refers statistical algorithms discovering latent semantic structures extensive body age written material encounter day simply processing capacity topic models organize offer insights understand collections unstructured bodies originally developed mining tool topic models detect instructive structures data genetic images networks applications fields bioinformatics history topic model papadimitriou raghavan tamaki vempala 1998 called probabilistic latent semantic analysis plsa created thomas hofmann 1999 latent dirichlet allocation lda common topic model generalization plsa developed david blei andrew michael jordan 2002 lda introduces sparse dirichlet prior distributions document topic topic word distributions encoding intuition documents cover topics topics topic models extensions lda pachinko allocation improves lda modeling correlations topics addition word correlations constitute topics hierarchical latent tree analysis hlta alternative lda models word occurrence tree latent variables latent variables correspond soft clusters documents interpreted topics topic models context approaches temporal include block newman determination temporal dynamics topics pennsylvania gazette 1728–1800 griffiths steyvers topic modeling abstracts journal pnas identify topics rose fell popularity 1991 2001 nelson analyzing change topics time richmond times dispatch understand social political continuities richmond american civil war yang torget mihalcea applied topic modeling methods newspapers 1829–2008 mimno topic modelling 24 journals classical philology archaeology spanning 150 topics journals change time journals time yin introduced topic model geographically distributed documents document positions explained latent regions detected inference chang blei included network linked documents relational topic model model links websites author topic model rosen zvi models topics authors documents improve topic detection documents authorship hlta applied collection papers published machine learning venues aipano cse ust researchers track trends identify papers read conference organizers journal editors identify reviewers submissions algorithms practice researchers attempt fit model parameters data corpus heuristics maximum likelihood fit survey blei describes suite algorithms researchers starting papadimitriou attempted design algorithms probable guarantees assuming data generated model question design algorithms model create data techniques include singular decomposition svd method moments 2012 algorithm based negative matrix factorization nmf introduced generalizes topic models correlations topics 
28972386	computerscience	blackberry tablet os operating blackberry based qnx neutrino real time operating designed adobe air blackberry webworks applications blackberry playbook tablet blackberry tablet os tablet running operating qnx subsidiary rim blackberry tablet os supports standard blackberry java applications support android apps announced sandbox app players ported developers installed sideloading users blackberry tablet os native development kit develop native applications gnu toolchain closed beta testing device blackberry tablet os blackberry playbook tablet qnx based operating blackberry replaced standing blackberry os handsets version 
29068812	computerscience	jump server jump host jumpbox network access manage devices separate security zone common managing host dmz trusted networks computers background 1990s location facilities common provide access dissimilar security zones jump server concept emerged meet jump server span networks typically conjunction proxy service socks provide access administrative desktop managed device ssh tunneling common jump servers facto method access definition jump server hardened monitored device spans dissimilar security zones controlled access user access tightly controlled monitored implementation jump servers typically secure zone dmz provide transparent management devices dmz management session established jump server acts single audit traffic single user accounts managed prospective administrator log jump server gain access dmz assets access logged audit unix typical configuration hardened unix unix machine configured ssh local firewall administrator connects target machine dmz ssh connection administrator personal jump server ssh forwarding access target machine ssh tunnel target host insecure protocols manage servers creating special firewall rules exposing traffic network windows typical configuration windows server running remote desktop services administrators connect isolates secure infrastructure configuration administrator workstation security risks jump server potential risk network design improving security jump server including level risk jump server represent vpn suitable security replacement 
29395237	computerscience	national supercomputing center tianjin located national defense science technology university tianjin china fastest supercomputers top500 project list supercomputers tianhe 1a located facility history tianjin institute active 1984 developed 16 bit tq 0671 microcomputer national supercomputing center facilities direction purview national supercomputing center council consisting national defense science technology university departments tianjin economic technological development zone tianjin binhai administrative committee facilities people beijing tianjin center built purpose encouraging initiating technological development scientific innovation tianjin binhai plans include commercial military built fulfill primary objectives commercial affiliate tianjin center phpc100 personal supercomputer 2008 size normal desktop 40 times speed 2010 generation model released august 12 2015 center forced shut time offline august 14 widespread infrastructural damage security concerns incurred result 2015 tianjin port disaster tianhe 1a october 2010 tianhe 1a separate supercomputer unveiled hpc 2010 china equipped 14 336 xeon x5670 processors 168 nvidia tesla m2050 purpose gpus 048 nudt ft1000 heterogeneous processors installed computing power counted machine official linpack statistics october 2010 tianhe 1a theoretical peak performance 701 petaflops carry computations petroleum exploration aircraft simulation access meaning services countries 
29421208	computerscience	national supercomputing center shenzhen houses fastest machine china fastest 2010 nebulae shenzhen top500 supercomputer list cray oak ridge national laboratory tennessee 
29545609	computerscience	qp quantum platform family lightweight source software frameworks building responsive modular real time embedded applications systems cooperating event driven active objects actors overview qp family consists qp qp qp nano frameworks quality controlled documented commercially licensable qp frameworks bare metal single chip microcontrollers completely replacing traditional real time operating rtos ports ready examples major cpu families qp qp traditional os rtos posix linux qnx windows vxworks threadx microc os freertos behavior active objects actors qp hierarchical machines uml statecharts frameworks support manual coding uml machines automatic code generation graphical qm modeling tool qp frameworks qm modeling tool medical devices defense aerospace robotics consumer electronics wired wireless telecommunication industrial automation transportation background active objects inherently support automatically enforce practices concurrent programming active objects dramatically improve ability reason concurrent software contrast raw rtos tasks trouble reasons raw tasks offer automation practices patterns active objects raise level abstraction naked threads express intent improving productivity active objects operate vacuum require software infrastructure framework minimum execution thread active object queuing events event based timing services resource constrained embedded systems biggest concern scalability efficiency frameworks frameworks accompanying modeling tools traditionally built conventional rtos adds memory footprint cpu overhead final solution qp frameworks designed efficiency minimal footprint ground rtos stand configuration compared conventional rtoses qp frameworks provide footprint ram data space rom code space active objects block blocking mechanisms semaphores conventional rtos characteristics event driven active objects perfect fit single chip microcontrollers mcus productivity boost level abstraction raw rtos tasks resource utilization power efficiency event driven systems cpu processing events chip power sleep mode qp architecture components qp consists universal uml compliant event processor qep portable event driven real time framework qf tiny completion kernel qk software tracing qs qep quantum event processor universal uml compliant event processor enables direct coding uml machines uml statecharts highly maintainable machine element mapped code precisely unambiguously traceability qep supports hierarchical nesting enables reusing behavior repeating actions transitions qf quantum framework highly portable event driven real time application framework concurrent execution machines designed real time embedded systems qk quantum kernel tiny preemptive blocking completion kernel designed executing machines completion rtc fashion qs quantum spy software tracing enables live monitoring event driven qp applications minimal target resources stopping slowing code supported processors types qp frameworks qp qp qp nano easily adapted microprocessor architectures compilers adapting qp software called porting qp frameworks designed ground porting easy bare metal qp ports exist processor architectures supported operating systems qp qp frameworks traditional operating systems rtoses qp ports exist oses rtoses licensing qp framework types dual licensed source gplv2 traditional closed source license users distribute qp embedded user upgradable devices retain proprietary status code fee types commercial royalty closed source licenses 
30337685	computerscience	project denver codename microarchitecture designed nvidia implements armv8 64 32 bit instruction sets combination simple hardware decoder software based binary translation dynamic recompilation denver binary translation layer runs software level operating stores commonly accessed optimized code sequences 128 mb cache stored main memory denver wide superscalar pipeline design suitable integration sips cores gpu display controller dsp image processor die constituting chip soc project denver targeted mobile computers personal computers servers supercomputers respective cores integration tegra soc series nvidia initially denver cores 28nm structure sizes tegra model t132 updated denver2 design 16nm structure sizes tegra model t186 2018 published refined follow design codename carmel based armv8 64 bit variant superscalar functional safety dual execution parity ecc integrated tegra xavier soc offering total cores dual core pairs published testings carmel cores integrated jetson agx development kit party experts september 2018 noticeably increased performance expected real physical manifestation compared predecessors systems doubts quickness setup implies carmel design tegra model t194 designed 12 nm structure size chips dual core denver cpu paired kepler based gpu solution form tegra k1 dual core 3 ghz denver based k1 htc nexus tablet released november 2014 note quad core tegra k1 based denver nvidia tegra x2 denver2 armv8 64bit cores a57 armv8 64bit cores coherent hmp heterogeneous multi processor architecture approach history existence project denver revealed 2011 consumer electronics march 2011 article ceo jen hsun huang revealed project denver 64 bit armv8 architecture cpu development hundreds engineers 32 bit arm instruction set armv7 compatibility project denver started stexar company colorado x86 compatible processor binary translation projects transmeta stexar acquired nvidia 2006 tom hardware engineers intel amd hp sun transmeta denver team extensive experience designing superscalar cpus execution instruction vliw simultaneous multithreading smt charlie demerjian project denver cpu internally translate arm instructions internal instruction set firmware cpu demerjian project denver originally intended support arm x86 code code morphing technology transmeta changed armv8 64 bit instruction set nvidia license intel patents consumer device shipping denver cpu cores google nexus announced october 15 2014 tablet manufactured htc features dual core tegra k1 soc nexus 64 bit android device consumers 
30471424	computerscience	linguee service online dictionary language pairs services leo linguee incorporates search engine access amounts bilingual sentence pairs online translation aid linguee differs machine translation services babelfish function translation memory technology linguee specialized webcrawlers search internet bilingual texts divide parallel sentences paired sentences identified undergo automatic quality evaluation human trained machine learning algorithm estimates quality translation user set pairs fuzzy search access ranking search previous quality assurance compliance influenced search term users rate translations manually machine learning trained continuously sources addition serving bilingual patent translated texts eu parliament protocols laws european union eur lex sources operator linguee offers access 100 translations history concept linguee conceived fall 2007 google employee dr gereon frahling developed leonard fink business idea awarded 2008 main prize competition founded federal ministry economics technology germany april 2009 service public linguee operated deepl gmbh linguee gmbh based cologne august 2017 linguee team publicly announced launch deepl translator freely translation service capable translating major european languages 
30781473	computerscience	windows embedded industry windows embedded posready windows embedded service wepos operating subfamily developed windows embedded family products based windows nt windows embedded industry designed industrial devices cash registers automated teller machines service checkouts windows embedded industry release windows iot enterprise superseding windows embedded industry windows embedded standard releases windows embedded service wepos based windows xp sp2 designed service situations wepos expanded windows embedded family products version windows embedded windows update agent update installed deployed image service pack sp3 wepos released october 2008 lifecycle support policy internet explorer january 12 2016 ie6 support dropped wepos supported platforms wepos supported platform ie7 windows embedded service released 24 2005 windows embedded posready 2009 based windows xp sp3 version offers features windows embedded service localization xps support framework installed windows embedded posready 2009 released december 2008 prior xp support windows xp users reported regedit tool operating trick windows update accepting updates targeting posready 2009 posready 2009 notable xp derived operating receive official support windows embedded posready windows embedded posready version windows embedded industry based windows platform released july 2011 windows embedded industry based windows windows embedded industry released april 2013 pro enterprise versions pro version pre installed oem devices enterprise version volume licensing channel enterprise version embedded specific features designed integrate seamlessly windows enterprise alaska airlines windows embedded industry flight entertainment devices windows embedded industry based windows windows embedded industry released october 17 2013 industry pro enterprise versions windows embedded industry update released april 16 2014 
30830244	computerscience	rt thread source real time operating embedded devices distributed apache licence rt thread developed rt thread development team based china concentrated development aimed change current situation china source real time operating microcontroller tcp ip protocol stack lwip lightweight tcp ip protocol stack capabilities cpu architectures cpu architectures supported arm avr32blackfinia32 x86 m16cmips niosppcrxunicore32nec v850xilinx 
30860279	computerscience	image editing encompasses processes altering images digital photographs traditional photo chemical photographs illustrations traditional analog image editing photo retouching tools airbrush modify photographs editing illustrations traditional art medium graphic software programs broadly vector graphics editors raster graphics editors 3d modelers primary tools user manipulate enhance transform images image editing programs render create art scratch basics image editing raster images stored form grid picture elements pixels pixels image color brightness image editors change pixels enhance image pixels changed individually sophisticated algorithms image editors article refers bitmap graphics editors alter photographs raster graphics vector graphics software adobe illustrator coreldraw xara designer pro inkscape create modify vector images stored descriptions lines bézier curves pixels easier rasterize vector image vectorize raster image vectorizing raster image focus field vision vector images modified easily descriptions shapes easy rearrangement scalable rasterizable resolution automatic image enhancement camera image editing programs offer basic automatic image enhancement features correct color hue brightness imbalances image editing features red eye removal sharpness adjustments zoom features automatic cropping called automatic happen user interaction offered button mouse button selecting option menu additionally automatic editing features offer combination editing actions user interaction digital data compression image file formats data compression reduce file size save storage space digital compression images camera image editor images stored jpeg format compression cameras programs user set level compression compression algorithms png file format lossless lost file saved contrast jpeg file format lossy compression algorithm compression lost ultimately reducing image quality restored jpeg knowledge human brain eyes perceive color loss noticeable image editor features listed capabilities graphic manipulation programs list inclusive myriad choices application features selection prerequisites applications mentioned method selecting image applying change selectively entire picture graphics programs accomplishing advanced facilities edge detection masking alpha compositing color channel based extraction border selected image animated marching ants user distinguish selection border image background layers feature common graphics applications layers analogous sheets transparent acetate separate elements combined picture stacked capable individually positioned altered blended layers elements layers fundamental workflow norm majority programs market enables maximum flexibility user maintaining destructive editing principles ease image size alteration image editors resize images process called image scaling larger image resolution cameras produce images reduced size internet image editor programs mathematical process called resampling calculate pixel values spacing larger original pixel values images internet 640 480 pixels equal megapixels cropping image digital editors crop images cropping creates image selecting desired rectangular portion image cropped unwanted image discarded image cropping reduce resolution cropped original image resolution primary reason cropping improve image composition image cutting image background selection tool outline figure element picture traced selected background removed depending intricate edge difficult cleanly individual hairs require lot green screen technique chroma key easily remove background histogram image editors provisions create image histogram image edited histogram plots pixels image vertical axis brightness horizontal axis algorithms digital editor user visually adjust brightness pixel dynamically display adjustments improvements picture brightness contrast noise reduction image editors feature algorithms add remove noise image jpeg artifacts removed dust scratches removed image speckled noise reduction estimates scene noise substitute obtaining cleaner image excessive noise reduction leads loss application subject trade undesirability noise reduction artifacts noise invade images pictures light settings picture antiqued adding uniform monochrome noise removal unwanted elements image editors remove unwanted branches clone tool removing distracting elements draws focus subject improving composition selective color change image editors color swapping abilities selectively change color specific items image selected items specific color range image orientation image editors capable altering image rotated direction degree mirror images created images horizontally flipped vertically flopped rotation degrees level horizon correct verticality building rotated images require cropping remove gaps image edges perspective control distortion image editors user distort transform shape image special effects preferred method correcting typical perspective distortion photographs oblique angle rectilinear subject care performing task image reprocessed interpolation adjacent pixels reduce image definition mimics perspective control lens achieves correction camera loss definition lens correction photo manipulation packages functions correct images lens distortions including pincushion fisheye barrel distortions corrections subtle improve appearance photographs enhancing images graphics process improving quality digitally stored image manipulating image software easy image lighter darker increase decrease contrast advanced photo enhancement software supports filters altering images programs specialized image enhancement called image editors sharpening softening images graphics programs sharpen blur images unsharp masking deconvolution portraits pleasing selectively softened skin background subject stand achieved camera aperture image editor selection blurring edge enhancement extremely common technique images sharper purists frown result appearing unnatural form image sharpening involves form contrast finding average color pixels pixel radius contrasting pixel average color image clearer seemingly adding details printing photographic industries increasing local contrasts sharpening images selecting merging images graphics applications capable merging individual images single file orientation placement image controlled selecting raster image rectangular requires separating edges background silhouetting digital analog cutting image physical picture clipping paths add silhouetted images vector graphics layout files retain vector data alpha compositing soft translucent edges selecting images silhouette image soft edges including selecting image background sampling colors selecting edges raster tracing converting clipping path raster selection image selected copied pasted file separate file selection saved alpha channel popular create composite image transparent layers background image layer image layer image layer mask merged hidden layer impression background layer performing merge manner preserves pixel data layers easily enable future merged image slicing images tool digital image editing software image slicer images graphical user interfaces easily sliced labeled saved separately images handled individually display medium dynamic swapping interactivity animating image final presentation special effects image editors list special effects create unusual images skewed distorted scores special effects applied image include forms distortion artistic effects geometric transforms texture effects combinations custom curves settings image editors photoshop mimic pseudo solarisation photographic circles sabattier stamp clone tool clone stamp tool selects samples picture pixels paint marks clone stamp tool acts brush change size allowing cloning pixel wide hundreds change opacity produce subtle clone choice clone align clone align sample photoshop tool called clone stamp called rubber stamp tool change color depth software change color depth images common color depths 16 256 65 536 16 colors jpeg png image formats capable storing 16 colors equal 256 luminance values color channel addition grayscale images bits created conversion sampling color image grayscale conversion reducing file size dramatically original photographic print monochrome color tint introduced aging effects contrast change brightening image editors provisions simultaneously change contrast images brighten darken image underexposed images improved feature advances allowed intelligent exposure correction pixels luminosity threshold brightened brightening underexposed shadows rest image exact transformation applied color channel vary editor editor gimp applies input color range brightness contrast −1 range addition capability changing images brightness contrast linear fashion current image editors provide opportunity manipulate images gamma gamma correction bringing details hard monitors shadows image editing software called curves tool color menu reference gamma program program documentation strictly speaking curves tool simple gamma correction construct complex curves multiple inflection dedicated gamma correction tool achieve color adjustments color images altered variety colors faded tones changed curves tools color balance improved picture shot indoors daylight film shot camera white balance incorrectly set special effects sepia tone grayscale image addition complicated procedures mixing color channels advanced graphics editors red eye occurs flash photos pupil light flash passes eye pupil reflects fundus eyeball eliminated stage dynamic blending advanced dynamic blending concept introduced photographer elia locardi blog blame monkey photographic process capturing multiple bracketed exposures land cityscape specific span time changing natural artificial lighting environment captured exposure brackets manually blended single dynamic range image post processing software dynamic blending images serve display consolidated moment final image blend span time visually appears represent single instant printing controlling print size quality digital images requires understanding pixels inch ppi variable stored image file control size printed image adobe photoshop image size dialog image editor user manipulate pixel dimensions size image printed document parameters produce printed image desired size quality pixels inch image pixel inch monitor dots inch printed document image size dialog image calculator sorts 1600 1200 image resolution 200 ppi produce printed image 6 inches image 400 ppi produce printed image 3 inches change resolution 800 ppi image prints 5 inches printed images data 1600 1200 pixels pixels closer prints images sharp larger quality image depend capability printer 
30863105	computerscience	asymmetric multiprocessing amp cpus treated equally hardware operating level cpu execute operating code cpu perform operations amp systems cpu execute operating code perform operations symmetric regard processor roles attached peripherals cpus asymmetric respect peripheral attachment asymmetric multiprocessing method handling multiple cpus symmetric multiprocessing smp provide expensive options systems smp additionally amp applications dedicated embedded systems individual processors dedicated specific tasks design time multiprocessing cpu cpu arithmetic logic engine executes user applications multiple cpus set program instructions executed time cpus user mode instruction set running job rescheduled cpu background history size computers 1960s 1970s cost effective increase compute power add cpu computers close fastest peak price performance ratio standard speed cpus expensive cpu fast adding cpu expensive complete peripherals requiring floor space increased operations staff notable amp offerings manufacturers burroughs b5000 decsystem 1055 ibm 360 model 65mp dual cpu machines built universities adding cpu operating developed single cpu systems extending handle multiple cpus efficiently reliably time gap operating systems intended single cpus initially extended provide minimal support cpu minimal support operating “boot” processor allowed user programs burroughs b5000 processor hardware capable running control code systems allowed operating processors attached peripherals processor attached peripherals processors burroughs b5000 b5500 option burroughs b5000 “processor b” processor “processor a” connection peripherals processors shared main memory processor control operating processor user job executed processor job access operating processor halted signaled processor requested operating service processor b5500 processor processor designated processor switch engineer panel processor processor processors shared main memory hardware access processors peripherals processor respond peripheral interrupts job processor required operating service rescheduled processor responsible initiating processor activity responding interrupts indicating completion practice meant user jobs processor processor access intrinsic library routines require kernel support operating schedule cdc 6500 6700 control data corporation offered configurations cdc 6000 series featured central processors cdc 6500 cdc 6400 central processors cdc 6700 cdc 6600 cdc 6400 central processor systems organized multiprocessors article operating peripheral processors user application cpus terms asmp smp properly apply multiprocessors decsystem 1055 digital equipment corporation dec offered dual processor version decsystem 1050 ka10 processors offering extended processors pdp pdp 11 74 digital equipment corporation developed released multiprocessor pdp 11 pdp 11 74 running multiprocessor version rsx 11m processor operating code perform peripherals accessible processors peripherals attached cpus processor peripheral attached perform operation peripheral request processor peripheral attached perform operation vax 11 782 dec multi processor vax vax 11 782 asymmetric dual processor processor access devices univac 1108 univac 1108 successors cpus computers univac exec operating surviving documentation operating path asymmetric symmetric multiprocessing ibm 370 model 168 options ibm 370 model 168 attaching processor ibm 3062 attached processing unit processor access channels b5000 processor processor vax 11 782 option offered complete cpu 360 model 65mp 
30873116	computerscience	3d graphics 3d modeling process developing mathematical representation surface object inanimate living dimensions specialized software product called 3d model 3d models referred 3d artist displayed dimensional image process called 3d rendering simulation physical phenomena model physically created 3d printing devices models created automatically manually manual modeling process preparing geometric data 3d graphics plastic arts sculpting 3d modeling software class 3d graphics software produce 3d models individual programs class called modeling applications modelers models dimensional 3d models represent physical body collection 3d space connected geometric entities triangles lines curved surfaces collection data 3d models created hand algorithmically procedural modeling scanned surfaces defined texture mapping 3d models in 3d graphics and cad predates widespread 3d graphics on personal computers many computer games used pre rendered images 3d models as sprites before computers render real time designer model directions views designer object created intended compared original vision design designer company figure improvements product 3d models wide variety fields medical industry detailed models organs created multiple image slices mri ct scan movie industry characters objects animated real life motion pictures video game industry assets video games science sector highly detailed models chemical compounds architecture industry demonstrate proposed buildings landscapes lieu traditional physical architectural models engineering community designs devices vehicles structures host decades earth science community started construct 3d geological models standard practice 3d models basis physical devices built 3d printers cnc machines representation 3d models divided categories solid modeling create functionally identical objects differences variations created edited conventions fields differences types approximations model reality models manifold holes cracks meaningful real object polygonal meshes lesser extent subdivision surfaces common representation level sets representation deforming surfaces undergo topological fluids process transforming representations objects middle coordinate sphere circumference polygon representation sphere called tessellation step polygon based rendering objects broken abstract representations primitives spheres cones called meshes nets interconnected triangles meshes triangles squares popular proven easy rasterise surface triangle planar projection convex polygon representations rendering techniques tessellation step included transition abstract representation rendered scene modeling process popular represent model modeling stage consists shaping individual objects scene modeling techniques including modeling performed dedicated program cinema 4d maya 3ds max blender lightwave modo application component shaper lofter 3ds max scene description language pov ray strict distinction phases modeling scene creation process caligari truespace realsoft 3d complex materials blowing sand clouds liquid sprays modeled particle systems mass 3d coordinates polygons texture splats sprites assigned human models commercial application human virtual models appeared 1998 lands human virtual models created company virtual mode enabled users create model 3d clothing modern programs creation virtual human models poser 3d clothing development cloth simulation software marvelous designer clo3d optitex enabled artists fashion designers model dynamic 3d clothing dynamic 3d clothing virtual fashion catalogs dressing 3d characters video games 3d animation movies digital doubles movies clothes avatars virtual worlds secondlife compared 2d methods 3d photorealistic effects achieved wireframe modeling indistinguishable final form graphic art software includes filters applied 2d vector graphics 2d raster graphics transparent layers advantages wireframe 3d modeling exclusively 2d methods include disadvantages compare 2d photorealistic rendering include software learning curve difficulty achieving photorealistic effects photorealistic effects achieved special rendering filters included 3d modeling software worlds artists combination 3d modeling editing 2d rendered images 3d model 3d model market market 3d models 3d content textures scripts exists – individual models collections online marketplaces 3d content individual artists sell content created including turbosquid cgstudio creativemarket sketchfab cgtrader artists goal additional assets created projects artists earn money content companies save money buying pre models paying employee create scratch marketplaces typically split sale artist created asset artists 40 95 sales marketplace artist retains ownership 3d model customer buys model artists sell products stores offering products price intermediaries numerous marketplaces specialized 3d printing models emerged 3d printing marketplaces combination models sharing sites built capability platforms offer 3d printing services demand software model rendering dynamic viewing items 3d printing file sharing platforms include shapeways sketchfab pinshape thingiverse turbosquid cgtrader threeding myminifactory grabcad 3d printing 3d printing form additive manufacturing technology dimensional object created laying build successive layers material 3d printing create objects create objects complex expensive molds created objects multiple 3d printed edited simply editing 3d model avoids additional tooling save time money 3d printing testing idea production process physical form person company ideain upsurge companies offering personalized 3d printed models objects scanned designed cad software printed customer requirements mentioned 3d models purchased online marketplaces printed individuals companies commercially 3d printers enabling production objects spare mathematical models medical equipment 3d modeling industries films animation gaming interior designing architecture medical industry interactive representations anatomy wide 3d software constructing digital representation mechanical models manufactured cad cam software fields software construct assemble observe functionality 3d modelling field industrial design products 3d modeled representing clients media event industries 3d modelling stage set design owl translation vocabulary x3d provide semantic descriptions 3d models suitable indexing retrieval 3d models features geometry dimensions material texture diffuse reflection transmission spectra transparency reflectivity opalescence glazes varnishes enamels opposed unstructured textual descriptions 5d virtual museums exhibitions google street view google arts culture rdf representation 3d models reasoning enables intelligent 3d applications automatically compare 3d models volume testing 3d solid model 3d solid models tested depending simulation mechanism design analysis motor designed assembled correctly depending 3d modeling program mechanism tool user motor machine assembled correctly operates design tested pool pump simulation water running pump water flows pump verify product developed correctly modified meet requirements 
30874683	computerscience	linguistic morphology retrieval stemming process reducing inflected derived word stem base root form—generally written word form stem identical morphological root word sufficient map stem stem valid root algorithms stemming studied science 1960s search engines treat stem synonyms query expansion process called conflation program subroutine stems word called stemming program stemming algorithm stemmer examples stemmer english operating stem cat identify strings cats catlike catty stemming algorithm reduce fishing fished fisher stem fish stem word porter algorithm reduces argue argued argues arguing argus stem argu history published stemmer written julie beth lovins 1968 paper remarkable influence paper refers earlier major attempts stemming algorithms professor john tukey princeton university algorithm developed harvard university michael lesk direction professor gerard salton algorithm developed james dolby consultants los altos california stemmer written martin porter published july 1980 issue journal program stemmer facto standard algorithm english stemming dr porter received tony kent strix award 2000 stemming retrieval implementations porter stemming algorithm written freely distributed implementations contained subtle flaws result stemmers match potential eliminate source error martin porter released official software bsd licensed implementation algorithm 2000 extended building snowball framework writing stemming algorithms implemented improved english stemmer stemmers languages paice husk stemmer developed chris paice lancaster university late 1980s iterative stemmer features externally stored set stemming rules standard set rules trong stemmer removal replacement replacement technique avoids separate stage process recode provide partial matching paice developed direct measurement comparing stemmers based counting stemming stemming errors algorithms types stemming algorithms respect performance accuracy stemming obstacles overcome simple stemmer inflected form lookup table advantages approach simple fast easily handles exceptions disadvantages inflected forms explicitly listed table unfamiliar handled perfectly regular cats cat table languages simple morphology english table sizes modest highly inflected languages turkish hundreds potential inflected forms root lookup approach preliminary speech tagging avoid overstemming production technique lookup table stemmer produced semi automatically word inverted algorithm automatically generate forms running runs runned runly forms valid constructions suffix stripping algorithms suffix stripping algorithms rely lookup table consists inflected forms root form relations typically list rules stored path algorithm input word form root form examples rules include suffix stripping approaches enjoy benefit simpler maintain brute force algorithms assuming maintainer knowledgeable challenges linguistics morphology encoding suffix stripping rules suffix stripping algorithms regarded crude poor performance dealing exceptional relations solutions produced suffix stripping algorithms limited lexical categories suffixes exceptions speech formulated set rules lemmatisation attempts improve challenge prefix stripping implemented languages prefixing suffixing additional algorithm criteria suffix stripping algorithms variety reasons reason algorithm constrains output word real word language approaches require word exist language lexicon set language alternatively suffix stripping approaches maintain database list morphological word roots exist real approaches check list existence term prior decision typically term exist alternate action alternate action involve criteria existence output term serve algorithm alternate suffix stripping rules suffix stripping rules apply input term creates ambiguity rule apply algorithm assign human hand stochastically priority rule algorithm reject rule application existent term overlapping rule english term friendlies algorithm identify ies suffix apply rule achieve result friendl friendl lexicon rule rejected improvement basic suffix stripping suffix substitution stripping rule substitution rule replaces suffix alternate suffix exist rule replaces ies algorithm varies algorithm design illustrate algorithm identify ies suffix stripping rule suffix substitution rule apply stripping rule existent term lexicon substitution rule substitution rule applied friendlies friendly friendl diving details common technique apply rules cyclical fashion recursively scientists applying suffix substitution rule scenario pass identify matching rules term friendly stripping rule identified accepted summary friendlies substitution friendly stripping friend helps illustrate difference rule based approach brute force approach brute force approach algorithm search friendlies set hundreds thousands inflected word forms ideally root form friend rule based approach rules mentioned applied succession converge solution chances rule based approach slower lookup algorithms direct access solution rule based options combinations choose result lemmatisation algorithms complex approach determining stem word lemmatisation process involves determining speech word applying normalization rules speech speech detected prior attempting root languages stemming rules change depending word speech approach highly conditional obtaining correct lexical category speech overlap normalization rules categories identifying wrong category unable produce category limits benefit approach suffix stripping algorithms basic idea stemmer grasp word stemmed apply accurate normalization rules suffix stripping rules modify stem stochastic algorithms stochastic algorithms involve probability identify root form word stochastic algorithms trained learn table root form inflected form relations develop probabilistic model model typically expressed form complex linguistic rules nature suffix stripping lemmatisation stemming performed inputting inflected form trained model model produce root form internal ruleset suffix stripping lemmatisation decisions involved applying rule stem word return word apply rules sequentially applied grounds output word probability correct probability incorrect typically measured lemmatisation algorithms stochastic word belong multiple speech probability assigned account surrounding called context context grammars account additional assigning probabilities speech speech chosen normalization rules applied input word produce normalized root form gram analysis stemming techniques gram context word choose correct stem word hybrid approaches hybrid approaches approaches unison simple suffix tree algorithm consults lookup table brute force store entire set relations language lookup table store minute frequent exceptions word exception list apply suffix stripping lemmatisation output result affix stemmers linguistics term affix refers prefix suffix addition dealing suffixes approaches attempt remove common prefixes word indefinitely identify leading prefix removed approaches mentioned earlier apply affix stripping study affix stemming european languages matching algorithms algorithms stem database set documents stem stems mentioned valid common strings brows browse browsing stem word algorithm match stems database applying constraints relative candidate stem word short prefix stem considered stem word language challenges academic focused english language porter stemmer algorithm languages investigated hebrew arabic considered difficult languages stemming english stemmers trivial occasional dries person singular form verb dry axes plural axe axis stemmers harder design morphology orthography character encoding target language complex italian stemmer complex english verb inflections russian complex noun declensions hebrew complex nonconcatenative morphology writing vowels requirement prefix stripping hebrew stems characters multilingual stemming multilingual stemming applies morphological rules languages simultaneously rules single language interpreting search query commercial systems multilingual stemming exist error metrics error measurements stemming algorithms overstemming understemming overstemming error separate inflected stemmed root been—a false positive understemming error separate inflected stemmed root not—a false negative stemming algorithms attempt minimize type error reducing type lead increasing porter stemmer stems universal university universe univers overstemming etymologically modern meanings domains treating synonyms search engine reduce relevance search understemming porter stemmer alumnus alumnu alumni alumni alumna alumnae alumna english word latin morphology synonyms conflated applications stemming approximate method basic meaning mentioning daffodils closely mentioning daffodil morphological stem idiomatic meanings closely user searching marketing satisfied documents mentioning markets marketing retrieval stemmers common elements query systems search engines effectiveness stemming english query systems limited led retrieval researchers deem stemming irrelevant alternative approach based searching grams stems stemmers provide benefits languages english domain analysis stemming determine domain vocabularies domain analysis commercial products commercial companies stemming 1980s produced algorithmic lexical stemmers languages snowball stemmers compared commercial lexical stemmers varying google search word stemming 2003 search fish returned fishing software search algorithms vary word stemming programs simply search substrings fish fishing searching fishes occurrences word fish 
30928751	computerscience	multilinear principal component analysis mpca multilinear extension principal component analysis pca mpca employed analysis arrays cube hyper cube informally referred data tensor arrays decomposed analyzed modeled origin mpca traced tucker decomposition peter kroonenberg mode pca mode pca 2000 lathauwer restated tucker kroonenberg concise numerical computational terms siam paper entitled multilinear singular decomposition hosvd paper rank rank r1 r2 rn approximation tensors circa 2001 vasilescu reframed data analysis recognition synthesis multilinear tensor based insight observed data compositional consequence causal factors data formation suited multi modal data tensor analysis power tensor framework showcased analyzing human motion joint angles facial images textures terms causal factors data formation human motion signatures cvpr 2001 icpr 2002 recognition – tensorfaces eccv 2002 cvpr 2003 graphics – tensortextures siggraph 2004 historically mpca referred mode pca terminology coined peter kroonenberg 1980 2005 vasilescu terzopoulos introduced multilinear pca terminology differentiate linear multilinear tensor decomposition differentiate computed 2nd statistics data tensor mode axis subsequent multilinear independent component analysis computed statistics tensor mode axis multilinear pca applied compute causal factors data formation signal processing tool data tensors individual observation vectorized observations treated matrix concatenated data tensor mpca computes set orthonormal matrices mode data tensor analogous orthonormal row column space matrix computed matrix svd transformation aims capture variance accounting variability data data tensor mode axis algorithm mpca solution alternating square als approach iterative nature pca mpca centered data centering complicated tensors dependent feature selection mpca features supervised mpca feature selection object recognition unsupervised mpca feature selection employed visualization task extensions extensions mpca developed 
30972463	computerscience	apache opennlp library machine learning based toolkit processing natural language supports common nlp tasks language detection tokenization sentence segmentation speech tagging named entity extraction chunking parsing coreference resolution tasks required build advanced processing services 
31009313	computerscience	paul raymond hudak july 15 1952 – april 29 2015 american professor science yale university involvement design haskell programming language textbooks haskell music chair department master saybrook college died april 29 2015 leukemia 
31238416	computerscience	tatoeba collaborative online database sentences geared foreign language learners japanese term tatoeba 例えば　 tatoeba meaning online dictionaries focus tatoeba focuses translation complete sentences addition structure database interface emphasize relationships sentence multiple translations single language translations languages visible indirect translations involve chain stepwise links language aim project aim tatoeba project create database sentences translations developing language learning application idea project creates data programmers focus coding application data collected project freely creative commons attribution license content november 2017 tatoeba corpus 000 000 sentences 319 languages 21 languages 90 corpus languages 000 sentences 13 languages 100 000 sentences interface 25 languages tatoeba current tanaka corpus public domain series 150 000 english japanese sentence pairs compiled hyogo university professor yasuhito tanaka released 2001 undergoing revisions actual statistic languages https tatoeba epo stats sentences language history tatoeba founded trang ho 2006 originally hosted project sourceforge project multilangdict interface users registered search language retrieve sentences sentence tatoeba database displayed translations languages direct indirect translations differentiated sentences tagged content subject matter dialect vulgarity individual comment threads facilitate feedback corrections users cultural notes 2016 200 000 sentences 19 languages audio readings sentences browsed language tag audio registered users add sentences translate proofread existing target language native tongue preferred users translate native strongest language add sentences native language translating adding target language translations linked original sentence automatically users freely edit sentences adopt correct sentences owner comment sentences advanced contributors rank ordinary contributors tag link unlink sentences corpus maintainers rank advanced contributors untag delete sentences modify owned sentences typically owner fails respond request change database structure tatoeba basic data structure series nodes links sentence node link bridges sentences meaning license entire tatoeba database published creative commons attribution license freeing academic grants tatoeba received grant mozilla drumbeat december 2010 tatoeba infrastructure sponsored google summer code 2014 edition usage parallel corpora tatoeba variety natural language processing tasks machine translation tatoeba data data treebanking japanese statistical machine translation wwwjdic japanese english dictionary bilingual sentence pairs japanese reading translation practice manythings offline edition selected content tatoeba – 83 932 phrases esperanto translations languages – appeared edition multilingual dvd esperanto elektronike electronic esperanto published 000 copies july 2011 tab delimited data ready import anki software downloaded manythings anki 
31663650	computerscience	kaggle online community data scientists machine learners owned google kaggle users publish data sets explore build models based data science environment data scientists machine learning engineers enter competitions solve data science challenges kaggle start offering machine learning competitions offers public data platform cloud based workbench data science short form education march 2017 google announced acquiring kaggle kaggle community june 2017 kaggle announced passed 000 000 registered users kagglers community spans 194 countries largest diverse data community ranging starting researchers kaggle competitions regularly attract teams individuals kaggle community thousands public datasets code snippets called kernels kaggle researchers publish papers peer reviewed journals based performance kaggle competitions march 2017 sigma investments fund running competition kaggle code trading algorithm kaggle competitions public competitions kaggle offers private competitions limited kaggle participants kaggle offers tool data science teachers academic machine learning competitions kaggle class kaggle hosts recruiting competitions data scientists compete chance interview leading data science companies facebook winton capital walmart impact kaggle competitions kaggle hundreds machine learning competitions company founded competitions ranged improving gesture recognition kinect improving search higgs boson cern competitions successful projects including art hiv chess ratings traffic forecasting famously geoffrey hinton george dahl deep neural networks win competition hosted merck vlad minh hinton students deep neural networks win competition hosted adzuna helped power deep neural networks technique kaggle community tianqi chen university washington kaggle power xgboost random forest main methods win kaggle competitions academic papers published basis findings kaggle competitions key live leaderboard encourages participants continue innovating existing practice winning methods frequently written kaggle blog hunch financials march 2017 fei fei chief scientist google announced google acquiring kaggle keynote google 
31692117	computerscience	raspberry pi series single board computers developed united kingdom raspberry pi foundation promote teaching basic science schools developing countries original model popular anticipated selling target market robotics include peripherals keyboards mice accessories included official unofficial bundles organisation raspberry pi consists arms models developed raspberry pi foundation pi model released foundation set raspberry pi trading eben upton ceo develop model raspberry pi trading responsible developing technology foundation educational charity promote teaching basic science schools developing countries raspberry pi foundation raspberry pis sold february 2015 selling british november 2016 sold 11 units 12 5m march 2017 selling purpose july 2017 sales reached 15 march 2018 sales reached 19 pis sony factory pencoed wales china japan generations released models generations raspberry pis released models feature broadcom chip soc integrated arm compatible central processing unit cpu chip graphics processing unit gpu processor speed ranges 700 mhz 4 ghz pi 3 model board memory ranges 256 mb 1 gb ram secure digital cards store operating program memory sdhc raspberry pi microsdhc raspberry pi sizes boards usb ports video output hdmi composite video supported standard 5 mm sleeve jack audio output level output gpio pins support common protocols i²c models 8p8c ethernet port pi 3 pi zero w board wi 802 11n bluetooth prices range 35 generation raspberry pi 1 model b released february 2012 simpler cheaper model a 2014 foundation released board improved design raspberry pi 1 model b boards credit card sized represent standard mainline form factor improved models released compute module released april 2014 embedded applications raspberry pi 2 random access memory released february 2015 raspberry pi zero size reduced input output purpose input output gpio capabilities released november 2015 2017 mainline raspberry pi 28 february 2017 raspberry pi zero w launched version wi bluetooth capabilities 12 january 2018 raspberry pi zero wh launched version pre soldered gpio headers raspberry pi 3 model b released february 2016 ghz 64 bit quad core processor board wifi bluetooth usb boot capabilities pi day 2018 model 3b launched faster ghz processor times faster gigabit ethernet throughput limited 300 mbit internal usb 2 connection ghz dual band wi 100 mbit options power ethernet poe usb boot network boot card required hardware raspberry pi hardware evolved versions feature variations memory capacity peripheral device support block diagram describes model b model a pi zero lack ethernet usb hub components ethernet adapter internally connected additional usb port model a pi zero usb port connected chip soc pi 1 model b models usb ethernet chip port usb hub ports pi 1 model b pi zero usb port connected soc micro usb otg port processor broadcom bcm2835 soc generation raspberry pi includes 700 mhz arm11 76jzf processor videocore iv graphics processing unit gpu ram level l1 cache 16 kb level l2 cache 128 kb level cache gpu soc stacked ram chip edge visible 1176jz cpu original iphone clock rate mated faster gpu earlier v1 model raspberry pi 2 broadcom bcm2836 soc 900 mhz 32 bit quad core arm cortex a7 processor 256 kb shared l2 cache raspberry pi 2 v1 upgraded broadcom bcm2837 soc 2 ghz 64 bit quad core arm cortex a53 processor soc raspberry pi 3 underclocked default 900 mhz cpu clock speed v1 bcm2836 soc production late 2016 raspberry pi 3 broadcom bcm2837b0 soc 4 ghz 64 bit quad core arm cortex a53 processor 512 kb shared l2 cache performance operating 700 mhz default generation raspberry pi real performance roughly equivalent 041 gflops cpu level performance 300 mhz pentium 1997–99 gpu 1 gpixel 5 gtexel graphics processing 24 gflops purpose computing performance graphical capabilities raspberry pi roughly equivalent performance xbox 2001 raspberry pi 2 v1 included quad core cortex a7 cpu running 900 mhz 1 gb ram 4–6 times powerful predecessor gpu identical original parallelised benchmarks raspberry pi 2 v1 14 times faster raspberry pi 1 model b raspberry pi 3 quad core arm cortex a53 processor times performance raspberry pi 1 suggested highly dependent task threading instruction set benchmarks raspberry pi 3 80 faster raspberry pi 2 parallelised tasks overclocking raspberry pi systems chip overclocked 800 mhz 1000 mhz reports raspberry pi 2 overclocked extreme 1500 mhz discarding safety features voltage limitations raspbian linux distro overclocking options boot software command running sudo raspi config voiding warranty pi automatically shuts overclocking chip temperature reaches override automatic voltage overclocking settings voiding warranty appropriately sized heat sink protect chip overheating versions firmware option choose overclock turbo presets attempt maximise performance soc impairing lifetime board monitoring core temperature chip cpu load dynamically adjusting clock speeds core voltage demand cpu running hot performance throttled cpu chip temperature acceptable performance temporarily increased clock speeds 1 ghz depending individual board turbo settings overclock presets turbo preset sdram clock originally 500 mhz changed 600 mhz 500 mhz card corruption simultaneously mode core clock speed lowered 450 250 mhz medium mode 333 250 mhz raspberry pi zero runs 1 ghz cpu generation raspberry pi board require cooling heat sink fan overclocked raspberry pi 3 generate heat overclocked ram beta model b boards 128 mb allocated default gpu leaving 128 mb cpu 256 mb release model b model a splits default split 192 mb ram cpu sufficient standalone 1080p video decoding simple 3d 224 mb linux 1080p framebuffer fail video 3d 128 mb heavy 3d video decoding xbmc comparatively nokia 701 128 mb broadcom videocore iv model b 512 mb ram standard memory split files arm256 start elf arm384 start elf arm496 start elf initially released 256 mb 384 mb 496 mb cpu ram 256 mb 128 mb 16 mb video ram week rpf released version start elf read entry config txt gpu mem xx dynamically assign ram 16 256 mb 8 mb steps gpu method memory splits obsolete single start elf 256 mb 512 mb raspberry pis raspberry pi 2 raspberry pi 3 1 gb ram raspberry pi zero zero w 512 mb ram networking model a pi zero ethernet circuitry commonly connected network external user supplied usb ethernet wi adapter ethernet port built usb ethernet adapter smsc lan9514 chip raspberry pi 3 pi zero w wireless equipped 4 ghz wifi 802 11n bluetooth based broadcom bcm43438 fullmac chip official support monitor mode implemented unofficial firmware patching pi 3 100 mbit ethernet port raspberry pi 3b features dual band ieee 802 11b ac wifi bluetooth gigabit ethernet limited 300 mbit usb bus soc special purpose features pi usb device usb gadget plugged usb port machine configured multiple serial device ethernet device originally requiring software patches mainline raspbian distribution 2016 pi boot usb flash drive firmware limitations models pi board peripherals raspberry pi operated generic usb keyboard mouse usb storage usb midi converters virtually device component usb capabilities peripherals attached pins connectors surface raspberry pi video video controller generate standard modern resolutions hd hd monitor resolutions ntsc pal standard crt resolutions shipped custom overclocking support resolutions 640×350 ega 640×480 vga 800×600 svga 1024×768 xga 1280×720 720p hdtv 1280×768 wxga variant 1280×800 wxga variant 1280×1024 sxga 1366×768 wxga variant 1400×1050 sxga 1600×1200 uxga 1680×1050 wxga 1920×1080 1080p hdtv 1920×1200 wuxga resolutions 2048×1152 3840×2160 15 hz frame rate convincing video note allowing resolutions imply gpu decode video formats resolutions pis reliably 265 resolutions commonly resolutions common formats hd raspberry pi 3 265 decoding hardware cpu powerful predecessors fast decoding 265 encoded videos software gpu raspberry pi 3 runs clock frequencies 300 mhz 400 mhz compared previous versions 250 mhz raspberry pis generate 576i 480i composite video signals style crt screens expensive monitors standard connectorseither rca 5 mm phono connector depending models television signal standards supported pal bghid pal pal ntsc ntsc real time clock current raspberry pi models built real time clock unable track time day independently workaround program running pi retrieve time network time server user input boot time knowing time powered provide consistency time file pi automatically saves current time shutdown loads time boot real time hardware clock battery backup ds1307 i²c interface note conflicts camera csi interface effectively disabling camera specifications interfaces 200 pin ddr2 dimm connector purpose input output gpio connector raspberry pi 1 models a pi 2 model b pi 3 models  pi zero zero w gpio j8 40 pin pinout raspberry pi models 26 pins model rev pad called p5 board p6 schematics pins offering access additional gpio connections models provide gpio access status led gpio 16 models provide gpio access status led gpio 47 power status led gpio 35 software operating systems raspberry pi foundation raspbian debian based linux distribution download party ubuntu windows iot core risc os specialised media centre distributions promotes python scratch main programming languages support languages default firmware closed source unofficial source operating systems raspberry pi including formally verified microkernel party operating systems official include ubuntu mate windows 10 iot core risc os specialised distributions kodi media centre classroom management driver apis raspberry pi videocore iv gpu binary blob loaded gpu boot time card additional software initially closed source driver code released actual driver closed source gpu code application software calls closed source time libraries openmax opengl openvg source driver linux kernel calls closed source videocore iv gpu driver code api kernel driver specific closed libraries video applications openmax opengl openvg egl openmax egl source kernel driver firmware official firmware freely redistributable binary blob closed source minimal proof concept source firmware aimed initializing starting arm cores performing minimal startup required arm capable booting minimal linux kernel patches remove dependency mailbox interface responsive raspberry pi variants raspberry pi actively developed commits mid 2017 reception technology writer glyn moody project 2011 potential replacing machines supplementing march 2012 stephen pritchard echoed bbc micro successor sentiment itpro alex hope author gen report hopeful engage children excitement programming author ian livingstone suggested bbc involved building support device branding bbc nano chris williams writing register inclusion programming languages kids ruby scratch basic start equip children skills future – remains effective centre computing history supports raspberry pi project feeling usher era release board showcased arm ceo warren east event cambridge outlining google ideas improve science technology education harry fairhead suggests emphasis improving educational software existing hardware tools google app inventor return programming schools adding hardware choices simon rockman writing zdnet blog opinion teens happened 1980s october 2012 raspberry pi t3 innovation award futurist mark pesce cited borrowed raspberry pi inspiration ambient device project moorescloud october 2012 british society reacted announcement enhanced specifications stating sink teeth february 2015 switched mode power supply chip designated u16 raspberry pi 2 model b version 1 initially released version vulnerable flashes light light xenon camera flashes green red laser pointers bright lights continuously symptom raspberry pi 2 spontaneously rebooting lights flashed chip initially users commenters suspected electromagnetic pulse emp xenon flash tube causing interfering digital circuitry ruled tests light blocked card aimed raspberry pi 2 narrowed u16 chip covering chip main processor u16 blu tack opaque poster mounting compound light sole culprit emp confirmed laser pointer tests opaque covering shield laser pointers shield xenon flashes u16 chip bare silicon plastic cover chip scale package wafer level package block light unofficial workarounds include covering u16 opaque material electrical tape lacquer poster mounting compound balled bread putting raspberry pi 2 avoiding photos board xenon flash issue caught release raspberry pi 2 commercial electronic devices routinely subjected tests susceptibility radio interference standard common practice susceptibility optical interference june 2017 raspberry pi royal academy engineering macrobert award citation award raspberry pi inexpensive credit card sized microcomputers redefining people engage computing inspiring students learn coding science providing innovative control solutions industry community raspberry pi community jamie ayre floss software company adacore exciting project community blogger russell davis community strength foundation concentrate documentation teaching community developed fanzine platform called magpi 2015 handed raspberry pi foundation volunteers continued house series community raspberry jam events held education enquiries board united kingdom received schools private sectors times hoped businesses sponsor purchases advantaged schools ceo premier farnell government country middle east expressed providing board schoolgirl enhance employment prospects 2014 raspberry pi foundation hired community including teachers software developers launch set learning resources foundation started teacher training called picademy aim helping teachers prepare teaching computing curriculum raspberry pi classroom 2018 nasa launched jpl source rover project scaled curiosity rover raspberry pi control module encourage students hobbyists involved mechanical software electronics robotics engineering automation developers applications leveraging raspberry pi automation programmers effort modify raspberry pi cost affordable solution energy monitoring power consumption cost raspberry pi popular economical alternative expensive commercial solutions industrial automation june 2014 techbase polish industrial automation manufacturer designed industrial based raspberry pi compute module called modberry device numerous interfaces notably rs 485 232 serial ports digital analogue inputs outputs economical wire buses automation industry design compute module harsh industrial environments leading conclusion raspberry pi limited science projects industrial iot solution achieve goals industry march 2018 suse announced commercial support suse linux enterprise raspberry pi model support undisclosed customers implementing industrial monitoring raspberry pi commercial products otto digital camera created incorporates raspberry pi compute module crowd funded 2014 kickstarter campaign slice digital media player compute module heart crowd funded august 2014 kickstarter campaign software running slice based kodi astro pi project launched december 2014 event held space agency astro pi competition officially january primary secondary school aged children residents united kingdom mission british esa astronaut tim peake deployed computers board international space station loaded winning code orbit collected data generated earth distributed winning teams covered themes competition included spacecraft sensors satellite imaging space measurements data fusion space radiation organisations involved astro pi competition include space agency ukspace raspberry pi esero esa history 2006 concepts raspberry pi based atmel atmega644 microcontroller schematics pcb layout publicly foundation trustee eben upton assembled teachers academics enthusiasts devise inspire children inspired acorn bbc micro 1981 model a model b model b names references original models british educational bbc micro developed acorn computers arm prototype version mounted package size usb memory stick usb port hdmi port foundation goal offer versions priced 25 35 started accepting priced model b 29 february 2012 cost model a february 2013 cost 20 november 2014 26 november 2015 cheapest raspberry pi raspberry pi zero launched £4 
32472154	computerscience	deep learning deep structured learning hierarchical learning broader family machine learning methods based learning data representations opposed task specific algorithms learning supervised semi supervised unsupervised deep learning architectures deep neural networks deep belief networks recurrent neural networks applied fields including vision speech recognition natural language processing audio recognition social network filtering machine translation bioinformatics drug design medical image analysis material inspection board game programs produced comparable superior human experts deep learning models vaguely inspired processing communication patterns biological nervous systems differences structural functional properties biological brains human brains incompatible neuroscience evidences definition deep learning class machine learning algorithms overview modern deep learning models based artificial neural network include propositional formulas latent variables organized layer wise deep generative models nodes deep belief networks deep boltzmann machines deep learning level learns transform input data abstract composite representation image recognition application raw input matrix pixels representational layer abstract pixels encode edges layer compose encode arrangements edges layer encode nose eyes fourth layer recognize image importantly deep learning process learn features optimally level completely obviate hand tuning varying layers layer sizes provide degrees abstraction deep deep learning refers layers data transformed precisely deep learning systems substantial credit assignment path cap depth cap chain transformations input output caps causal connections input output feedforward neural network depth caps network hidden layers output layer parameterized recurrent neural networks signal propagate layer cap depth unlimited universally agreed threshold depth divides shallow learning deep learning researchers agree deep learning involves cap depth cap depth universal approximator sense emulate function layers add function approximator ability network deep models cap extract features shallow models extra layers learning features deep learning architectures constructed greedy layer layer method deep learning helps disentangle abstractions pick features improve performance supervised learning tasks deep learning methods obviate feature engineering translating data compact intermediate representations akin principal components derive layered structures remove redundancy representation deep learning algorithms applied unsupervised learning tasks benefit unlabeled data abundant labeled data examples deep structures trained unsupervised manner neural history compressors deep belief networks interpretations deep neural networks interpreted terms universal approximation theorem probabilistic inference universal approximation theorem concerns capacity feedforward neural networks single hidden layer finite size approximate continuous functions 1989 proof published george cybenko sigmoid activation functions generalised feed multi layer architectures 1991 kurt hornik probabilistic interpretation derives field machine learning features inference optimization concepts training testing fitting generalization probabilistic interpretation considers activation nonlinearity cumulative distribution function probabilistic interpretation led introduction dropout regularizer neural networks probabilistic interpretation introduced researchers including hopfield widrow narendra popularized surveys bishop history term deep learning introduced machine learning community rina dechter 1986 artificial neural networks igor aizenberg colleagues 2000 context boolean threshold neurons learning algorithm supervised deep feedforward multilayer perceptrons published alexey ivakhnenko lapa 1965 1971 paper deep network layers trained method data handling algorithm deep learning architectures built vision neocognitron introduced kunihiko fukushima 1980 1989 yann lecun applied standard backpropagation algorithm reverse mode automatic differentiation 1970 deep neural network purpose recognizing handwritten zip codes mail algorithm training required days 1991 systems recognizing isolated hand written digits recognizing objects matching images handcrafted object model weng suggested human brain monolithic object model 1992 published cresceptron method performing object recognition cluttered scenes natural images cresceptron started purpose visual learning natural 3d worlds cresceptron cascade layers neocognitron neocognitron required human programmer hand merge features cresceptron learned features layer supervision feature represented convolution kernel cresceptron segmented learned object cluttered scene analysis network max pooling deep neural networks imagenet tests cresceptron reduce position resolution factor 2x2 cascade generalization 1994 andré carvalho mike fairhurst david bisset published experimental multi layer boolean neural network weightless neural network composed layers organising feature extraction neural network module soft multi layer classification neural network module gsn independently trained layer feature extraction module extracted features growing complexity previous layer 1995 brendan frey demonstrated train days network connected layers hidden units wake sleep algorithm developed peter dayan hinton factors contribute slow speed including vanishing gradient analyzed 1991 sepp hochreiter simpler models task specific handcrafted features gabor filters support vector machines svms popular choice 1990s 2000s artificial neural network ann computational cost lack understanding brain wires biological networks shallow deep learning recurrent nets anns explored methods outperformed uniform internal handcrafting gaussian mixture model hidden markov model gmm hmm technology based generative models speech trained discriminatively key difficulties analyzed including gradient diminishing weak temporal correlation structure neural predictive models additional difficulties lack training data limited computing power speech recognition researchers moved neural nets pursue generative modeling exception sri international late 1990s funded government nsa darpa sri studied deep neural networks speech speaker recognition heck speaker recognition team achieved success deep neural networks speech processing 1998 national institute standards technology speaker recognition evaluation sri experienced success deep neural networks speaker recognition unsuccessful demonstrating success speech recognition principle elevating raw features hand crafted optimization explored architecture deep autoencoder raw spectrogram linear filter bank features late 1990s superiority mel cepstral features stages fixed transformation spectrograms raw features speech waveforms produced excellent larger scale aspects speech recognition deep learning method called short term memory lstm recurrent neural network published hochreiter schmidhuber 1997 lstm rnns avoid vanishing gradient learn deep learning tasks require memories events happened thousands discrete time steps speech 2003 lstm started competitive traditional speech recognizers tasks combined connectionist temporal classification ctc stacks lstm rnns 2015 google speech recognition reportedly experienced dramatic performance jump 49 ctc trained lstm google voice search 2006 publications geoff hinton ruslan salakhutdinov osindero tehdeep learning art systems disciplines vision automatic speech recognition asr commonly evaluation sets timit asr mnist image classification range vocabulary speech recognition tasks steadily improved convolutional neural networks cnns superseded asr ctc lstm successful vision impact deep learning industry 2000s cnns processed estimated 20 checks written yann lecun industrial applications deep learning scale speech recognition started 2010 2009 nips workshop deep learning speech recognition motivated limitations deep generative models speech possibility capable hardware scale data sets deep neural nets dnn practical believed pre training dnns generative models deep belief nets dbn overcome main difficulties neural nets discovered replacing pre training amounts training data straightforward backpropagation dnns context dependent output layers produced error rates dramatically art gaussian mixture model gmm hidden markov model hmm advanced generative model based systems nature recognition errors produced types systems characteristically offering technical insights integrate deep learning existing highly efficient time speech decoding deployed major speech recognition systems analysis 2009 2010 contrasted gmm generative speech models dnn models stimulated industrial investment deep learning speech recognition eventually leading pervasive dominant industry analysis comparable performance error rate discriminative dnns generative models 2010 researchers extended deep learning timit vocabulary speech recognition adopting output layers dnn based context dependent hmm constructed decision trees advances hardware enabled renewed 2009 nvidia involved called “big bang” deep learning “as deep learning neural networks trained nvidia graphics processing units gpus google brain nvidia gpus create capable dnns determined gpus increase speed deep learning systems 100 times gpus suited matrix vector math involved machine learning gpus speed training algorithms magnitude reducing running times weeks days specialized hardware algorithm optimizations efficient processing deep learning revolution 2012 team led dahl merck molecular activity challenge multi task deep neural networks predict biomolecular target drug 2014 hochreiter deep learning detect target toxic effects environmental chemicals nutrients household products drugs tox21 data challenge nih fda ncats additional impacts image object recognition 2011 2012 cnns trained backpropagation decades gpu implementations nns including cnns fast implementations cnns max pooling gpus style ciresan colleagues progress vision 2011 approach achieved time superhuman performance visual pattern recognition contest 2011 icdar chinese handwriting contest 2012 isbi image segmentation contest 2011 cnns play major role vision conferences june 2012 paper ciresan leading conference cvpr max pooling cnns gpu dramatically improve vision benchmark records october 2012 krizhevsky scale imagenet competition margin shallow machine learning methods november 2012 ciresan icpr contest analysis medical images cancer detection miccai grand challenge topic 2013 2014 error rate imagenet task deep learning reduced trend scale speech recognition wolfram image identification project publicized improvements image classification extended challenging task generating descriptions captions images combination cnns lstms researchers assess october 2012 imagenet victory anchored start deep learning revolution transformed industry neural networks artificial neural networks artificial neural networks anns connectionist systems computing systems inspired biological neural networks constitute animal brains systems learn progressively improve ability tasks examples task specific programming image recognition learn identify images cats analyzing images manually labeled cat cat analytic identify cats images applications difficult express traditional algorithm rule based programming ann based collection connected units called artificial neurons analogous biological neurons biological brain connection synapse neurons transmit signal neuron receiving postsynaptic neuron process signal signal downstream neurons connected neurons represented real typically neurons synapses weight varies learning proceeds increase decrease strength signal sends downstream typically neurons organized layers layers perform kinds transformations inputs signals travel input output layer traversing layers multiple times original goal neural network approach solve human brain time attention focused matching specific mental abilities leading deviations biology backpropagation passing reverse direction adjusting network reflect neural networks variety tasks including vision speech recognition machine translation social network filtering playing board video games medical diagnosis 2017 neural networks typically units millions connections magnitude neurons human brain networks perform tasks level humans recognizing playing deep neural networks deep neural network dnn artificial neural network ann multiple layers input output layers dnn correct mathematical manipulation input output linear relationship linear relationship network moves layers calculating probability output dnn trained recognize dog breeds image calculate probability dog image breed user review select probabilities network display threshold return proposed label mathematical manipulation considered layer complex dnn layers deep networks goal eventually network trained decompose image features identify trends exist samples classify images similarities requiring human input dnns model complex linear relationships dnn architectures generate compositional models object expressed layered composition primitives extra layers enable composition features layers modeling complex data units performing shallow network deep architectures include variants basic approaches architecture success specific domains compare performance multiple architectures evaluated data sets dnns typically feedforward networks data flows input layer output layer looping dnn creates map virtual neurons assigns random numerical values weights connections weights inputs multiplied return output network didn’t accurately recognize pattern algorithm adjust weights algorithm parameters influential determines correct mathematical manipulation process data recurrent neural networks rnns data flow direction applications language modeling short term memory effective convolutional deep neural networks cnns vision cnns applied acoustic modeling automatic speech recognition asr challenges anns issues naively trained dnns common issues overfitting computation time dnns prone overfitting layers abstraction model rare dependencies training data regularization methods ivakhnenko unit pruning weight decay regularization sparsity regularization applied training combat overfitting alternatively dropout regularization randomly omits units hidden layers training helps exclude rare dependencies finally data augmented methods cropping rotating training sets increased size reduce chances overfitting dnns training parameters size layers units layer learning rate initial weights sweeping parameter space optimal parameters feasible cost time computational resources tricks batching computing gradient training examples individual examples speed computation processing capabilities core architectures gpus intel xeon phi produced speedups training suitability processing architectures matrix vector computations alternatively engineers types neural networks straightforward convergent training algorithms cmac cerebellar model articulation controller neural network require learning rates randomized initial weights cmac training process guaranteed converge step batch data computational complexity training algorithm linear respect neurons involved applications automatic speech recognition scale automatic speech recognition convincing successful deep learning lstm rnns learn deep learning tasks involve multi intervals speech events separated thousands discrete time steps time step corresponds lstm forget gates competitive traditional speech recognizers tasks initial success speech recognition based scale recognition tasks based timit data set 630 speakers major dialects american english speaker reads sentences size configurations importantly timit task concerns phone sequence recognition word sequence recognition weak phone bigram language models strength acoustic modeling aspects speech recognition easily analyzed error rates listed including measured percent phone error rates summarized 1991 debut dnns speaker recognition late 1990s speech recognition 2009 2011 lstm 2003 2007 accelerated progress major major commercial speech recognition systems cortana xbox skype translator amazon alexa google apple siri baidu iflytek voice search range nuance speech products based deep learning image recognition common evaluation set image classification mnist database data set mnist composed handwritten digits includes 60 000 training examples 000 examples timit size users multiple configurations comprehensive list set deep learning based image recognition superhuman producing accurate human contestants occurred 2011 deep learning trained vehicles interpret 360° camera views facial dysmorphology analysis fdna analyze human malformation connected database genetic syndromes visual art processing closely progress image recognition increasing application deep learning techniques visual art tasks dnns proven capable identifying style period painting capturing style painting applying visually pleasing manner arbitrary photograph generating striking imagery based random visual input fields natural language processing neural networks implementing language models 2000s lstm helped improve machine translation language modeling key techniques field negative sampling word embedding word embedding word2vec representational layer deep learning architecture transforms atomic word positional representation word relative dataset position represented vector space word embedding rnn input layer network parse sentences phrases effective compositional vector grammar compositional vector grammar probabilistic context grammar pcfg implemented rnn recursive auto encoders built atop word embeddings assess sentence similarity detect paraphrasing deep neural architectures provide constituency parsing sentiment analysis retrieval spoken language understanding machine translation contextual entity linking writing style recognition classification developments generalize word embedding sentence embedding google translate short term memory network google neural machine translation gnmt based machine translation method learns millions examples translates sentences time pieces google translate supports languages network encodes semantics sentence simply memorizing phrase phrase translations english intermediate language pairs drug discovery toxicology percentage candidate drugs fail win regulatory approval failures caused insufficient efficacy target undesired interactions target effects unanticipated toxic effects explored deep learning predict biomolecular targets targets toxic effects environmental chemicals nutrients household products drugs atomnet deep learning structure based rational drug design atomnet predict candidate biomolecules disease targets ebola virus multiple sclerosis customer relationship management deep reinforcement learning approximate direct marketing actions defined terms rfm variables estimated function natural interpretation customer lifetime recommendation systems recommendation systems deep learning extract meaningful features latent factor model content based music recommendations multiview deep learning applied learning user preferences multiple domains model hybrid collaborative content based approach enhances recommendations multiple tasks bioinformatics autoencoder ann bioinformatics predict gene ontology annotations gene function relationships medical informatics deep learning predict sleep quality based data wearables predictions health complications electronic health record data deep learning efficacy healthcare artificial intelligence deep learning relation healthcare healthcare field benefits universalization artificially intelligent machines perform tasks measuring blood pressure learn interpret major development drastically advance diagnostic abilities correlation observe survival rates diseases focus prevention disease approach treat disease acquired variant artificial intelligence called “deep learning software “learns recognize patterns distinct layers… neural network layer operates independently concert separating aspects color size shape integrating outcomes” medical imaging forbes 2018 advancement visual tools vital advancement medical diagnostics key idea we’ve utilized artificial intelligence basic level—by teaching machines perform human skills advancement ideas explored machine learning deep learning impact healthcare continue yield success future discovery “these visual tools hold promise transforming diagnostic medicine search cancer individual cell level forbes 2018 https forbes sites robertpearl 2018 03 13 artificial intelligence healthcare 7169a8941d75 https sas en solutions health life sciences htmlmobile advertising finding mobile audience mobile advertising challenging data considered assimilated target segment created serving server deep learning interpret dimensioned advertising datasets data collected request serve internet advertising cycle form basis machine learning improve selection image restoration deep learning applied inverse denoising super resolution inpainting film colorization applications include learning methods shrinkage fields effective image restoration trains image dataset deep image prior trains image restoration financial fraud detection deep learning applied financial fraud detection anti money laundering deep anti money laundering detection spot recognize relationships similarities data road learn detect anomalies classify predict specific events solution leverages supervised learning techniques classification suspicious transactions unsupervised learning anomaly detection military united department defense applied deep learning train robots tasks observation relation human cognitive brain development deep learning closely class theories brain development neocortical development proposed cognitive neuroscientists 1990s developmental theories instantiated computational models predecessors deep learning systems developmental models share property proposed learning dynamics brain wave nerve growth factor support organization analogous neural networks utilized deep learning models neocortex neural networks employ hierarchy layered filters layer considers prior layer operating environment passes output original input layers process yields organizing stack transducers tuned operating environment 1995 description stated infant brain organize influence waves called trophic factors regions brain connected sequentially layer tissue maturing brain mature variety approaches investigate plausibility deep learning models neurobiological perspective hand variants backpropagation algorithm proposed increase processing realism researchers argued unsupervised forms deep learning based hierarchical generative models deep belief networks closer biological reality respect generative neural network models neurobiological evidence sampling based processing cerebral cortex systematic comparison human brain organization neuronal encoding deep networks established analogies reported computations performed deep learning units actual neurons neural populations representations developed deep learning models measured primate visual single unit population levels commercial activity organizations employ deep learning applications facebook lab performs tasks automatically tagging uploaded pictures names people google deepmind technologies developed capable learning play atari video games pixels data input 2015 demonstrated alphago learned game beat professional player google translate lstm translate 100 languages 2015 blippar demonstrated mobile augmented reality application deep learning recognize objects real time 2008 researchers university texas austin ut developed machine learning framework called training agent manually evaluative reinforcement tamer proposed methods robots programs learn perform tasks interacting human instructor developed tamer algorithm called deep tamer introduced 2018 collaboration army laboratory arl ut researchers deep tamer deep learning provide robot ability learn tasks observation deep tamer robot learned task human trainer watching video streams observing human perform task person robot practiced task coaching trainer feedback “good job” “bad job ”criticism comment deep learning attracted criticism comment field science theory main criticism concerns lack theory surrounding methods learning common deep architectures implemented understood gradient descent theory surrounding algorithms contrastive divergence converge fast approximating deep learning methods looked black box confirmations empirically theoretically deep learning looked step realizing strong encompassing solution power deep learning methods lack functionality realizing goal psychologist gary marcus realistically deep learning larger challenge building intelligent machines techniques lack representing causal relationships obvious performing logical inferences integrating abstract knowledge objects typically powerful systems watson techniques deep learning element complicated ensemble techniques ranging statistical technique bayesian inference deductive reasoning alternative emphasis limits deep learning author speculated train machine vision stack perform sophisticated task discriminating master amateur figure drawings hypothesized sensitivity represent rudiments trivial machine empathy author proposed anthropology identifies concern aesthetics key element behavioral modernity reference idea artistic sensitivity inhere levels cognitive hierarchy published series graphic representations internal deep 20 30 layers neural networks attempting discern essentially random data images trained demonstrate visual appeal original notice received 000 comments subject time frequently accessed article guardian errors deep learning architectures display problematic behaviors confidently classifying unrecognizable images belonging familiar category ordinary images misclassifying minuscule perturbations correctly classified images goertzel hypothesized behaviors limitations internal representations limitations inhibit integration heterogeneous multi component artificial intelligence agi architectures issues addressed deep learning architectures internally form homologous image grammar decompositions observed entities events learning grammar visual linguistic training data equivalent restricting commonsense reasoning operates concepts terms grammatical production rules basic goal human language acquisition artificial intelligence cyberthreat deep learning moves lab experience artificial neural networks vulnerable hacks deception identifying patterns systems function attackers modify inputs anns ann match human observers recognize attacker subtle image ann match image human search target manipulation termed “adversarial attack 2016 researchers ann doctor images trial error fashion identify focal generate images deceived modified images looked human eyes printouts doctored images photographed tricked image classification defense reverse image search fake image submitted tineye instances refinement search image identify images piece psychedelic spectacles fool facial recognition thinking ordinary people celebrities allowing person impersonate 2017 researchers stickers signs caused ann misclassify anns trained detect attempts deception leading attackers defenders arms race defines malware defense industry anns trained defeat ann based anti malware software repeatedly attacking defense malware continually altered genetic algorithm tricked anti malware retaining ability damage target demonstrated sounds google voice command address download malware “data poisoning” false data continually smuggled machine learning system’s training set prevent achieving mastery 
32538946	computerscience	international journal applied mathematics science peer reviewed quarterly scientific journal published jointly university zielona góra lubuskie scientific society 1991 editor chief józef korbicz journal covers fields control theory applied mathematics scientific computing science indexing abstracting journal abstracted indexed list indexing services journal journal citation reports journal 2016 impact factor 420 
32543240	computerscience	firefox os project boot gecko b2g discontinued source operating smartphones tablet computers smart tvs designed mozilla external contributors based rendering engine firefox browser gecko linux kernel commercially released 2013 firefox os designed provide complete community based alternative operating running applications installed application marketplace applications standards approaches javascript html5 robust privilege model apis communicate hardware cellphone hardware mozilla firefox os competed commercially developed operating systems apple ios google android windows phone blackberry blackberry samsung linux foundation tizen jolla sailfish os december 2015 mozilla announced development firefox os smartphones september 2016 announced development successors firefox os include community developed b2g os acadine technologies h5os discontinued kaios technologies kaios panasonic screen history firefox os publicly demonstrated february 2012 android compatible smartphones december 16 2014 fourteen operators 28 countries offered firefox os phones december 2015 mozilla announced sales firefox os smartphones carriers mozilla announced firefox os smartphones discontinued 2016 development firefox os smartphones cease release version time reported acadine technologies startup founded gong president mozilla corporation mozilla staff employees mission developing carrier partnerships firefox os derivative h5os january 2016 mozilla announced firefox os power panasonic uhd tvs announced firefox os pivot connected devices september 2016 mozilla announced firefox os ceased b2g code removed mozilla central project inception roll commencement project july 25 2011 andreas gal director mozilla corporation announced boot gecko project b2g mozilla dev platform mailing list project proposal pursue goal building complete standalone operating gaps developers build apps equals native apps built iphone android windows phone announcement identified apis expose device os capabilities telephone camera privilege model safely expose applications prove capabilities level code boot android compatible device led blog coverage ars technica mozilla b2g motivated desire demonstrate standards based potential competitive alternative existing single vendor application development stacks offered dominant mobile operating systems 2012 andreas gal expanded mozilla aims characterized current set mobile operating systems walled gardens firefox os accessible completely standards there’s proprietary software technology involved changed 2014 digital rights management drm gal software stack html5 established developers assumption employed mozilla webapi intended w3c standards attempt bridge capability gap exists native frameworks applications goal efforts enable developers build applications webapi standards compliant browser rewrite application platform development history july 2012 boot gecko rebranded firefox os mozilla desktop browser firefox screenshots appearing august 2012 september 2012 analysts strategy analysts forecast firefox os account global smartphone market 2013 commercial availability february 2013 mozilla announced plans global commercial roll firefox os mozilla announced press conference start mobile congress barcelona wave firefox os devices consumers brazil colombia hungary mexico montenegro poland serbia spain venezuela mozilla announced lg electronics zte huawei tcl corporation committed firefox os devices december 2013 features release including conference calling silent sms authentication mobile billing improved push notifications settings track async pan zoom apz included version improve user interface responsiveness optimize firefox os 128 mb platform version 3t 128 mb device version unfinished 2015 mozilla ported firefox os experimental version mips32 100 tablet android kitkat mozilla developing os smart feature phones firefox os discontinued january 2017 digital rights management drm 2014 gal announced change writing future versions firefox browser include drm implementation drm firefox browser version 38 august 2015 attempts matchstick based firefox os add drm caused demise matchstick decision boing boing called suicide drm demonstrations mobile congress 2012 mozilla telefónica announced spanish telecommunications provider intended deliver devices 2012 based html5 apis mozilla announced support project adobe qualcomm deutsche telekom’s innovation labs project mozilla demonstrated sneak preview software apps running samsung galaxy phones replacing usual android operating august 2012 nokia employee demonstrated os running raspberry pi firefox os compatible devices including otoro pandaboard emulator arm x86 desktop nexus nexus 4g samsung galaxy galaxy nexus nexus mips port created imagination technologies march 2015 december 2012 mozilla rolled update released firefox os simulator downloaded add firefox version firefox os simulator version released july 2013 announced july 11 2013 mozilla planned 25 firefox smartphone displayed mwc built spreadtrum mozilla collaborated handset makers wireless carriers provide firefox powered smartphones europe latin america cellphone launches led marketer john bernard india mozilla planned launching 25 partnership intex spice price 33 converted 999 rupees core technologies initial development involves major software layers gonk gonk consists linux kernel user space hardware abstraction layer hal kernel user space libraries common source projects linux libusb bluez hal shared android project gps camera gonk basically extremely simple linux distribution gecko perspective simply porting target gecko port gecko gonk port gecko os port gecko android development team control gonk developers expose features interfaces required comprehensive mobile platforms gecko access mobile oses gonk gecko direct access telephony stack display framebuffer access os gecko gecko browser engine firefox os gecko implements standards css javascript gecko includes networking stack graphics stack layout engine virtual machine javascript porting layers gaia gaia user interface firefox os controls drawn screen gaia includes default implementations lock screen screen telephone dialer contacts application messaging application camera application gallery support classic phone apps mail calendar calculator marketplace gaia written css javascript interfaces operating apis implemented gecko standard apis oses browsers release history forks panasonic continue develop operating smart tvs screen powered firefox os acadine technologies derived h5os firefox os gong founder company overseen development firefox os serving president mozilla corporation fork called kaios feature phones including alcatel onetouch flip cingular flip reliance jio jiophone lyf f30c intex turbo 4g primary features bring support 4g lte wi gps wi html5 based apps battery life touch devices optimized user interface memory energy launched company kaios technologies company president president branch tcl mobile t2 mobile branch tcl corporation responsible maintaining modules kaios comparison android firefox os android linux kernel firefox os gecko engine linux kernel render screen output apps written html5 css javascript cooperative languages internet webpages essence apps firefox os webapps os browser stored content hand android design manner windows dedicated path operation functionality apps coded java android studio android broader set controls development options compared achieved html5 css js android enjoys maturity support firefox os featured essentials required smartphone firefox launched official device germany 2014 alcatel touch device 5” hvga screen cortex a5 processor 256mb ram 512mb storage december 2015 mozilla launched 12 smartphones 24 countries criticisms chris ziegler technology blog verge wrote firefox os app distribution pre iphone era requiring application developers deal multiple carriers app stores mobile congress mozilla ceo gary kovacs firefox os advantage users install app mozilla sought search functionality built firefox os core feature platform janne lindqvist mobile security researcher rutgers university winlab expressed concern discovery mechanism based platform mozilla spokesperson stated mozilla required developers package downloadable apps zip file cryptographically signed store originated assuring reviewed addition apps coming search limited access device programming interfaces applications user grants permission access devices officially unofficially supported devices structural similarities firefox os android mozilla platform devices ship android ports firefox os original versions heavily modified fit device question note firefox os stated designed developers consumer phones emulators testing apps os desktop designed os testing developers firefox os specific devices developers firefox os specific devices consumers firefox os ported devices 
32546327	computerscience	gopro marketed gopro stylised gopro american technology company founded 2002 nick woodman manufactures eponymous action cameras develops mobile apps video editing software founded woodman labs company eventually focused connected sports genre developing action cameras video editing software developed quadcopter drone karma released october 2016 january 2018 karma discontinued company hired jpmorgan chase pursue options selling company month ceo denied gopro continued business manufacturing action cameras history company founded nick woodman 2002 motivated 2002 surfing trip australia hoping capture quality action photos amateur photographers close quality equipment reasonable prices gopro woodman surfing friends aspired professional surfers pro ultimate goal filmed water time camera range branded hero aim capture close action shots subject hero woodman raised portion initial capital selling bead belts 20 vw van fashionable camera straps received 230 000 parents invest business 2004 company sold camera 35 film digital video cameras introduced fixed lens hd video camera wide 170 degree lens paired create 360 video june 2014 company announced appointment executive tony bates president reporting woodman january 2016 gopro partnered periscope live streaming growing employees 500 2015 company responded weak sales fourth quarter cutting workforce 100 workers january 2016 november 2016 company announced laying additional 200 employees effort reduce costs company announced president tony bates stepping 2016 270 employees laid march 2017 250 additional layoffs january 2018 bringing company workforce 000 peak share gopro valued 86 march 26 2018 81 corporate actions march 30 2011 gopro acquired cineform acquisition included cineform 444 video codec film slumdog millionaire company claimed codec hd 3d editing faster convenient sacrificing image quality incorporated company 3d hero shortly acquisition march 2013 gopro issued dmca takedown notice digitalrev posted review product citing trademark breach copyright notice retracted days citing erroneous enforcement february 29 2016 gopro spent 105 acquired start stupeflix vemory video editing tools replay splice ipo february 2014 gopro submitted confidential filing initial public offering ipo securities exchange commission 19 2014 gopro filed shares price company stated hoped raise 100 sale shares money pay debt 111 march 31 2014 acquire invest complementary businesses technologies assets planned list nasdaq stock exchange symbol gpro expected price range 21 24 share june 25 2014 gopro sold 17 shares initial investors 24 share totaling 427 2m ipo price company valued 95 percent shares allotted loyal3 technology platform investors participate reason gopro decision public potential media company generate additional revenue content cameras create product lines hero cameras woodman camera founding company eventually introducing gopro 35mm hero september 2004 san diego action sports retailer trade gopro sold 150 000 worth products 2006 company introduced digital hero video capability generated 800 000 revenue gopro sales quadrupled 2014 company selling hero3 editions colors capable filming supporting 4k uhd video 12 photographs hero4 introduced 24 september 2014 september 28th 2017 gopro released hero camera claims improved stabilization hero models capable capturing 4k video 60 fps july 11 2018 gopro announced sold 30 hero cameras inception gopro karma gopro karma grip gopro karma gopro consumer drone discontinuation january 2018 2014 gopro entered discussions dji private label model built gopro branding failure negotiations gopro entered agreement 3d robotics 3dr partnership based 3dr flight controllers 3dr failed meet agreed timelines result gopro control development process mid 2015 scheduled released 2016 gopro karma project delayed times gopro karma announced introduction october 23 2016 karma released models hero5 session cameras features removable handheld stabilizer gimbal integrated design customers complained power failure operation gopro recalled karma drones customers refunds february 2017 gopro launched karma drone january 2018 gopro cutting 20 percent global workforce putting drone business disappointing fourth quarter company expects sales 340 short previous projection 480 average analyst estimate 472 revenue 80 hit discounting karma drones hero cameras holiday season gopro fusion november 2017 gopro launched fusion camera omnidirectional camera capable recording 360 degree footage fusion gopro feature increased maximum resolution 2k accessories gopro produces mounting accessories cameras including mount suction cup chest harness jaws type flexible clamp dog harness surfing mount video editing company developed gopro studio simple video editing software edit camera footage reported gopro intended content provider app hero5 called gopro quik share edit videos easier edit shoot photos videos gopro app released 2015 content company april 2014 gopro listed adweek brand channels youtube based combination views shares comments engagement content uploaded daily additional source revenue company transformation media company 2014 gopro created additional channels gopro content youtube virgin america xbox live extended playstation network 2015 hd hero cameras gopro sells fixed lens cameras viewfinders including touchscreen viewfinder bit lcd camera access menu controlled shutter buttons hero4 black dimensions 41 mm 59 mm 30 mm weighs 88 grams 152 grams housing images 12 megapixels captured cameras sold polycarbonate hd housing glass lens rated shockproof waterproof quick release buckle threads attach gopro mounts housing metal buttons connect camera controls skeleton backdoor option audio recording camera mount watertight shockproof products hero cameras 35mm 35mm camera model 001 april 13 2005 dimensions weighed included camera quick release camera strap ski glove adapter lash pivot fly functional depth water reusable wrist camera included roll 24 exposure kodak 400 film digital digital hero released 2006 model sq907 mini cam 640×460 camera shot vga definition 320x240 fps video maximum digital hero1 32 mb internal memory slot digital digital hero3 released 2007 megapixel camera shot standard definition 512×384 video rated 30 98 4 feet depth digital digital hero5 introduced december 2006 megapixel photo sensor supported standard definition 512×384 video capture aaa batteries 16 mb internal memory function 2 gb card housing rated 100 ft 30 meters depth dimensions 75 25 inches 66 44 32 mm camera designed hd hero housings standard screw mounts compatible hd hd hero shoots video maximum 1080p 30fps 720p 60fps 960 hd hero 960 shoots maximum 960p video compatible gopro electronic accessories camera compatible gopro mounts listed august 2010 led hd hero naked released range accessories shoots maximum 1080p video sensor naked camera forms basis bundles differentiated types mounts hd helmet hero hd motorsports hero hd surf hero listed january 25 2010 hero2 hero2 launched october 24 2011 11 mp image sensor improved light capability records 120 fps sold accessory packages outdoor motorsports surf editions hero3 late 2012 gopro announced hero3 cameras cameras editions black silver white versions hero3 30 25 lighter package wifi built change physical dimensions cameras compared previous generations hero1 hero2 physically identical accessories hd hero original hero2 compatible hero3 gopro versions accessories hero3 hero3 versions accessories compatible hero camera generations lot accessories compatible hd hero camera generations hero3 silver black cameras battery endurance hd hero original hero2 720p resolution 25 30 fps hd hero original hero2 stated battery runtime hours hero3 silver edition stated battery runtime hours hero3 black edition stated battery runtime hours black edition economical setting 1080p 30 fps partially contributes poor battery runtime black edition 12 mp sensor capture 4k uhd digital video 15 fps 7k video 30 fps 1440p 48 fps 1080p 60 fps 960p 100 fps 720p 120 fps wvga 240 fps black edition includes wifi remote black edition record 25 30 fps 720p wvga resolutions record fast frame rates resolutions deliberate firmware limitation manufacturer expect camera model resolutions frame rates silver edition 11 mp sensor hero2 white edition 5 mp sensor hd hero original hero3 october 2013 gopro released hero3 black silver editions replacing hero3 generation hero3 white edition remains gopro device hero3 camera models claim dramatically improved light performance waterproof enclosure 20 lighter 15 hero3 gopro hero3 camera housing 20 hero3 cameras claimed improved image sharpness close focus 3 ft hero3 expense distant focus sharp hero3 audio functionality wind noise reduction battery life claimed 30 hero3 model efficiency capacity battery dimensions black edition video modes 1440p48 1080p60 960p100 720p120 4k15 7k30 shoot 12 stills 30 fps hero3 black edition offers optional function firmware called superview increases field view additional functions including dynamic light situation adjustment quality recording modes bitrates white balance applied black edition continues include wifi remote ability record 25 30 fps 720p wvga modes record fast frame rates resolutions intentional firmware limitation battery runtime hero3 black edition hero3 black edition 30–50 battery runtime hero2 hero1 silver edition video modes 1080p60 720p120 shoot stills fps contrast black edition silver edition record 25 30 fps supported resolutions hero3 silver edition 25 50 battery runtime recording hero3 black edition batteries difference runtime depends resolution fps combination wifi gopro mobile application recording difference runtime increases fps lowered additional functions deactivated cameras battery runtime hero3 silver edition battery runtime hero2 hero1 hero3 hd camera awarded 2013 technology engineering emmy award contribution television hero september 2014 gopro released entry level camera named simply hero priced 130 hero4 black hero4 silver gopro hero capture 5mp images 5fps burst option record 1080p 30 25fps 720p 60 50fps microsd card 32gb lcd touch display waterproof 40m hero4 september 2014 gopro announced hero4 black edition silver edition replace respective hero3 generation predecessors hero session budget camera announced hero4 black edition 12 megapixel cmos fixed maximum aperture focus adds bluetooth connectivity highlight tag protune photo processor claimed gopro fast hero3 black edition doubling frame rates resolutions hero4 black edition record 4k uhd video 3840×2160 frame rate 24 25 30 fps superview mode 4k 25 fps rates resolutions hero4 black edition shoots stills maximum 12 maximum burst rate 30 fps wi disabled 4k 30 gopro claims hero4 black edition battery life 65 minutes increasing maximum 1h 50 720p 240 hero4 black battery form factor predecessors initial comparisons hero3 hero4 black edition video model range performance close range hero4 silver edition basically hero3 black edition addition micro speaker built touchscreen display protune photo highlight tag gopro clocked cortex a9 missing black edition integrated analog digital converter supports wider variety professional sensitivity external microphones video modes supported hero4 silver edition hero3 black processing speed thermal requirements encoding 4k video 3840×2160 supports wi bluetooth ambarella a9 chip soc hero4 black hero session released july 2015 50 40 lighter compared versions gopro hero4 camera hero4 models maintain 264 video codec previous versions mp4 file formats gopro claims mono microphone black silver editions dynamic range hero3 hero4 black silver editions improved light performance hero lcd june 2015 company started sell gopro hero lcd video recording 1080p 60 fps megapixel photos gopro hero lcd touchscreen preview shot frame scene letting user navigate menu feature camera instant camera editing gopro hero lcd waterproof built waterproof waterproof 131 feet 40 device includes feature hilight tagging built video editing function user label main shooting video process view desired footage built wi bluetooth user friendly modes quikcapture superview auto light hero october 2015 gopro released entry level camera gopro hero camera previous hero lcd 1080p 60 fps 720p 60 fps video resolution fps burst photo resolution built wi bluetooth waterproof 40 modes superview auto light quikcapture timelapse mode automatically captures photos set time intervals 60 lcd built touchscreen display lighter hero lcd hero weighs 123 hero lcd weighs 127 housing remained hero5 hero5 black hero5 session introduced september 2016 waterproof support 4k video recording 30 fps 1080p 120 fps automatic upload footage cloud voice controls hero6 hero6 black introduced september 28 2017 camera waterproof supports 4k hevc video recording 60 fps 1080p 240 fps automatic upload footage cloud voice controls ghz wi gopro custom chip soc gp1 fusion fusion released november 24 2017 cameras record 360° panorama video hero 2018 hero 2018 edition entry level camera introduced march 29 2018 model offers features functionality hero5 hero6 touchscreen built timelapse video mode resolution framerate lacking gps functionality exposure control firmware modded include gopro hero black capabilities hero7 hero7 white hero7 silver hero7 black gopro cameras released september 30 2018 hero7 black offers hypersmooth video stabilization improved timelapse video capabilities livestreaming gopro karma drone karma drone october 23 2016 drone compatible hero5 hero4 black silver drone 20 minutes battery life stabilizer attached karma grip karma grip hour battery life november 2016 pro announced recall karma drone reports loss electrical power drone operation february 2017 company announced karma drone return stores redesigned battery latch january 2018 gopro announced discontinuing karma drone exiting drone marketplace gopro omni camera rig synchronizes gopro hero4 black cameras allowing users stitch virtual reality 360° videos gopro session session mini camera released gopro camera controlled gopro app camera button camera’s actual features app gopro session estimated meters 33 feet underwater linechips starting hero6 gopro stopped ambarella soc started starting gp1gopro gp1 gopro gp1 chip main task image processing replaces earlier ambarella soc launched gopro hero6 soc designed collaberation socionext gp1 encodes video 265 codec hevc resolutions 4k60 7k120 1080p240 unstabilized 4k30 7k60 1080p120 digitally stabilized microphone support cameras official external microphone support hero7 black hero6 black hero5 black hero5 session hero4 black hero3 hero3 cameras lacks official support external microphone hero cameras hero 2018 hero 2014 hero hero lcd hero4 session 
32707853	computerscience	textual entailment te natural language processing directional relation fragments relation holds truth fragment te framework entailing entailed texts termed hypothesis textual entailment pure logical entailment relaxed definition entails ⇒ typically human reading infer true alternatively ⇒ typically human reading justified inferring proposition expressed proposition expressed relation directional entails reverse entails determining relationship holds informal task overlaps formal tasks formal semantics satisfying strict condition imply satisfaction strict conditioned additionally textual entailment partially subsumes word entailment examples textual entailment illustrated examples relations positive te entails hypothesis negative te contradicts hypothesis te entail contradict ambiguity natural language characteristic natural language meanings contained single meaning expressed texts variability semantic expression dual language ambiguity result mapping language expressions meanings task paraphrasing involves recognizing texts meaning creating shorter conveys textual entailment weakens relationship unidirectional mathematical solutions establish textual entailment based directional property relation comparison directional similarities texts involved approaches textual entailment measures natural language understanding semantic interpretation generality remains active approaches refinements approaches considered word embedding logical models graphical models rule systems contextual focusing machine learning practical scale solutions avoid complex methods surface syntax lexical relationships correspondingly accurate art systems human performance study humans agreement dataset 95 25 time algorithms 2016 achieved 90 applications natural language processing applications question answering extraction summarization multi document summarization evaluation machine translation systems recognize target meaning inferred variants typically entailment larger prediction filter trivial obvious predictions 
33451925	computerscience	blackberry proprietary mobile operating blackberry smartphones developed blackberry limited motion blackberry based qnx unix operating originally developed qnx software systems company acquired blackberry april 2010 supports application framework qt version models features android runtime android applications prior version blackberry supported adobe air runtime user interface combination gestures touch based interactions navigation control control device press physical buttons exception power button switches device supports hardware keyboards including support touch input october 26 2015 blackberry announced plans release apis software development kits sdks adopt qt version future updates versions focus security privacy enhancements blackberry leap smartphone blackberry blackberry operating 2016 blackberry limited ceased smartphones licensed tcl communication manufacture blackberry mobile blackberry mobile smartphones abandoned blackberry favor android operating 2017 blackberry keyone blackberry phone ship android blackberry limited priv december 15 2017 blackberry announced support blackberry blackberry os devices blackberry support operating 2019 history operating originally called bbx changed blackberry blocked bbx trademark legal action basis international software november 12 2012 ceo thorsten heins announced january 30 2013 launch blackberry operating version smartphones running operating devices z10 touchscreen device q10 device equipped physical keyboard announced simultaneously january 30 2013 company announced blackberry playbook tablet receive update blackberry 2013 subsequently blackberry stated releasing q1 2014 financial blackberry playbook receiving update blackberry citing hardware provide experience blackberry focusing future devices blackberry continued support develop playbook separate tablet os 14 2013 blackberry os launched brought improvements features requested users 13 september 2013 asia blackberry announced launch blackberry os blackberry device z30 providing performance increases previous blackberry devices june 18 2014 blackberry announced official relationship amazon update bundling amazon appstore 15 december 2017 blackberry ceo john chen announced support blackberry blackberry os devices operating expected life 2019 built software packages support facebook dropbox evernote linkedin features controls touchscreen predominant input method blackberry addition hardware keyboard devices users gestures keyboard shortcuts navigate instance user unlock device return screen swiping gestures offer additional modes interaction instance gesture unread notifications user swipes edge middle finger touchscreen finger moved curved motion user enter blackberry hub devices hardware keyboard keyboard shortcuts reach applications perform specific functions multitasking user returns screen application application minimized called active frame active frame miniaturized window application running background user return application tapping active frame close tapping icon active frames widget functionality bits widgets android instance calendar application upcoming events meetings blackberry limits active applications varies device blackberry hub blackberry collates emails sms mms calls notifications blackberry hub messages notifications continuous list sorted user filter application email inbox user create view messages notifications hub instance user facebook message hub facebook application user perform actions facebook application applications support hub features applications written native sdk notifications unsupported applications collated generic notifications tab miscellaneous notable features blackberry include applications preloaded blackberry applications users perform tasks activities include browser documents powerpoint word excel files story maker video music stitching app applications notes reminders calculator clock music media weather file management cloud services box dropbox integrated default addition blackberry messaging service blackberry messenger included supports video chat voip screen sharing party applications blackberry applications written native sdk android applications compiled api levels 10–18 support varies version applications written adobe air supported version blackberry distribution platform blackberry amazon appstore version version android application packages installed previous versions android applications installed blackberry sideloading required packaging applications native package format bar release january 2013 blackberry 70 000 party applications 2013 blackberry live conference blackberry announced 120 000 applications developers offered applications access google play store sanctioned blackberry google applications depend google play services framework android applications require api level 18 blackberry devices released devices blackberry supports blackberry smartphones version blackberry leap smartphone blackberry blackberry operating blackberry devices running android developer activities engagement strategy building launch company substantial engaged developers active courting developers solving issues transparent development updates company teams engage developers focused acquiring premier applications parties team focused engaging broader development community building platforms application count prototype smartphones 2012 company released prototype touch screen smartphone blackberry developers blackberry jam conference orlando florida dev alpha device resembled blackberry playbook version operating developers develop applications physical device september 2012 developer prototype released september 2012 dev alpha includes faster processor internal improvements developer device dev alpha announced november 29 2012 developer prototype demonstrate physical keyboard capabilities blackberry acquisition dev alpha device based meaning developers developed apps blackberry dev alpha devices chance receiving device blackberry developer released blackberry jam europe 2013 event february 2013 portathons pre launch portathons held blackberry received 19 000 applications submitted weekend reception reviews blackberry positive david pogue york times software simple master elegantly designed surprisingly complete offers features offers tailored corporate raised blackberry aloft glory days walt mossberg wall street journal referred operating logical easy mossberg praised virtual keyboard camera software messaging hub criticized application ecosystem cloud capabilities immaturity features gizmodo kyle wagner blackberry screen bb10 single implementation multitasking mobile os wagner hub function bit junk drawer reports refers tragic flaw major os blackberry feel integrated wagner review based initial reviews bb10 os updated times issues addressed comparison launch crackberry views features positively takes account os brand blackberry hub polished solution efficiently managing influx messages coming mention minor discrepancies finally fixed future updates released battery life improvements ringtone disabled bedside mode criticizes limited customization options compared blackberry os alert tone volumes alert light colour apps blackberry impressed quality apps blackberry offer notes application ecosystem android ios age brand finishes doubtlessly z10 traction wild summary blackberry predecessor blackberry assembled seamlessly elegant practical integrated package q2 2013 blackberry platform developers platform legacy blackberry release blackberry months launch blackberry platform 15 mobile developers blackberry compatibility layer android software allowed developers repackage android apps distribution blackberry advertised feature received poor reception android apps performed abysmally phone sluggish ugly disconnected core os apps software emulation android gingerbread version bear relationship rest operating versions ability users manually install android app packages blackberry passport amazon appstore bundled blackberry provide additional source party android software blackberry ceo john chen hoped amazon smartphone phone bolster adoption amazon store attract major developers blackberry ecosystem phone commercial failure led blackberry decision develop android phone blackberry priv 
33520674	computerscience	software defined networking sdn technology approach cloud computing facilitates network management enables programmatically efficient network configuration improve network performance monitoring sdn meant address static architecture traditional networks decentralized complex current networks require flexibility easy troubleshooting sdn attempts centralize network intelligence network component disassociating forwarding process network packets data plane routing process control plane control plane consists controllers considered brain sdn network intelligence incorporated intelligence centralization drawbacks security scalability elasticity main issue sdn sdn commonly openflow protocol remote communication network plane elements purpose determining path network packets network switches emergence 2011 2012 openflow companies exclusive solution proprietary techniques include cisco systems network environment nicira network virtualization platform wan applies technology wide network wan history history sdn principles traced separation control data plane public switched telephone network simplify provisioning management architecture data networks internet engineering task force ietf decouple control forwarding functions proposed interface standard published 2004 appropriately named forwarding control element separation forces forces proposed companion softrouter architecture additional standards ietf pursued separating control data include linux netlink ip services protocol path computation element pce based architecture attempts failed gain traction reasons internet community viewed separating control data risky potential failure control plane vendors concerned creating standard application programming interfaces apis control data planes result increased competition source software split control data plane architectures traces roots ethane project stanford sciences department ethane simple switch design led creation openflow api openflow created 2008 witnessed creation nox—an operating networks openflow continued stanford including creation testbeds evaluate protocol single campus network wan backbone connecting multiple campuses academic settings production networks based openflow switches nec hewlett packard based quanta whiteboxes starting 2009 academia deployments nicira 2010 control ovs onix developed ntt google notable deployment google b4 deployment 2012 google acknowledged openflow onix deployments datacenters time deployment china mobile networking foundation founded 2011 promote sdn openflow 2014 interop tech field day software defined networking demonstrated avaya shortest path bridging ieee 802 1aq openstack automated campus extending automation data center device removing manual provisioning service delivery concept sdn architectures decouple network control forwarding functions enabling network control programmable underlying infrastructure abstracted applications network services openflow protocol sdn technologies sdn architecture network architecture explosion mobile devices content server virtualization advent cloud services trends driving networking industry examine traditional network architectures conventional networks hierarchical built tiers ethernet switches arranged tree structure design sense client server computing dominant static architecture suited dynamic computing storage enterprise data centers campuses carrier environments key computing trends driving network paradigm include architectural components list defines explains architectural components sdn control plane implementation sdn control plane follow centralized hierarchical decentralized design initial sdn control plane proposals focused centralized solution single control entity global view network simplifies implementation control logic scalability limitations size dynamics network increase overcome limitations approaches proposed literature fall categories hierarchical distributed approaches hierarchical solutions distributed controllers operate partitioned network view decisions require network wide knowledge logically centralized root controller distributed approaches controllers operate local view exchange synchronization messages enhance knowledge distributed solutions suitable supporting adaptive sdn applications key issue designing distributed sdn control plane decide placement control entities parameter propagation delay controllers network devices context networks objectives considered involve control path reliability fault tolerance application requirements applications sdmn software defined mobile networking sdmn approach design mobile networks protocol specific features implemented software maximizing generic commodity hardware software core network radio access network proposed extension sdn paradigm incorporate mobile network specific functionalities 3gpp rel 14 control user plane separation introduced mobile core network architectures pfcp protocol wan wan wide network wan managed principles software defined networking main driver wan wan costs affordable commercially leased lines alternative partial replacement expensive mpls lines control management administered separately hardware central controllers allowing easier configuration administration lan lan local network lan built principles software defined networking key differences topology network security application visibility control management quality service lan decouples control management data planes enable policy driven architecture wired wireless lans lans characterized cloud management wireless connectivity presence physical controller security sdn paradigm sdn architecture enable facilitate enhance network security applications controller central view network capacity reprogram data plane time security sdn architecture remains question studied couple times community paragraphs focus security applications revisited sdn sdn investigated security applications built sdn controller aims mind distributed denial service ddos detection mitigation botnet worm propagation concrete applications basically idea consists periodically collecting network statistics forwarding plane network standardized manner openflow apply classification algorithms statistics detect network anomalies anomaly detected application instructs controller reprogram data plane mitigate security application leverages sdn controller implementing moving target defense mtd algorithms mtd algorithms typically attack network difficult usual periodically hiding changing key properties network traditional networks implementing mtd algorithms trivial task difficult build central authority determining protected key properties changed sdn network tasks straightforward centrality controller application periodically assign virtual ips hosts network mapping virtual ip real ip performed controller application simulate fake closed filtered ports random hosts network add noise reconnaissance phase scanning performed attacker additional security sdn enabled networks gained flowvisor flowchecker single hardware forwarding plane sharing multiple separated logical networks approach hardware resources production development purposes separating monitoring configuration internet traffic scenario logical topology called slice conjunction approach flowchecker realizes validation openflow rules deployed users slice sdn controller applications deployed scale scenarios requires comprehensive checks programming errors called nice 2012 introducing overarching security architecture requires comprehensive protracted approach sdn introduced designers secure sdn compromise scalability architecture called seca sdn nfv security architecture data delivery sdn distributed applications datacenters replicate data purpose synchronization fault resiliency load balancing data closer users reduces latency users increases perceived throughput applications hadoop replicate data datacenter multiple racks increase fault tolerance data recovery easier operations require data delivery machine datacenter multiple machines datacenters process reliably delivering data machine multiple machines referred reliable data delivery rgdd sdn switches rgdd installation rules forwarding multiple outgoing ports openflow support tables version sdn central controller carefully intelligently setup forwarding trees rgdd trees built paying attention network congestion load status improve performance mctcp scheme delivery nodes datacenters relies regular structured topologies datacenter networks dccast quickcast approaches fast efficient data content replication datacenters private wans relationship nfv nfv network function virtualization concept complements sdn nfv dependent sdn sdn concepts nfv disunites software hardware enable flexible network deployment dynamic operation nfv deployments typically commodity servers network services software versions hardware based software based services nfv environment called virtual network functions vnf sdn nfv hybrid program efficiency elastic scalable capabilities nfv aimed accelerating service innovation provisioning standard virtualization technologies sdn agility controlling generic forwarding devices routers switches sdn controllers hand nfv agility network applications virtualized servers implement virtualized network function vnf standalone entity existing networking orchestration paradigms inherent benefits leveraging sdn concepts implement manage nfv infrastructure management orchestration vnfs multivendor platforms defined incorporate sdn nfv concerted ecosystems relationship dpi dpi deep packet inspection network application awareness sdn applications network awareness sdn radically change generic network architectures cope traditional network architectures offer interoperability sdn based network architecture capabilities separate devices software main forwarding devices routers switches dpi security appliances 
33742232	computerscience	restricted boltzmann machine rbm generative stochastic artificial neural network learn probability distribution set inputs rbms initially invented harmonium paul smolensky 1986 rose prominence geoffrey hinton collaborators invented fast learning algorithms mid 2000 rbms applications dimensionality reduction classification collaborative filtering feature learningand topic modelling trained supervised unsupervised depending task implies rbms variant boltzmann machines restriction neurons form bipartite graph pair nodes units commonly referred visible hidden units symmetric connection connections nodes contrast unrestricted boltzmann machines connections hidden units restriction efficient training algorithms class boltzmann machines gradient based contrastive divergence algorithm restricted boltzmann machines deep learning networks deep belief networks formed stacking rbms optionally fine tuning deep network gradient descent backpropagation structure standard type rbm binary valued boolean bernoulli hidden visible units consists matrix weights size connection hidden unit visible unit bias weights offsets visible units hidden units energy configuration pair boolean vectors defined asor matrix notation energy function analogous hopfield network boltzmann machines probability distributions hidden visible vectors defined terms energy function partition function defined sum configurations normalizing constant ensure probability distribution sums marginal probability visible input vector booleans sum hidden layer configurations rbm shape bipartite graph intra layer connections hidden unit activations mutually independent visible unit activations conversely visible unit activations mutually independent hidden unit activations 12 visible units 13 hidden units conditional probability configuration visible units configuration hidden units isconversely conditional probability isthe individual activation probabilities bywhere 18 denotes logistic sigmoid visible units rbm multinomial hidden units bernoulli logistic function visible units replaced softmax functionwhere discrete values visible values applied topic modeling recommender systems relation models restricted boltzmann machines special boltzmann machines markov random fields graphical model corresponds factor analysis training algorithm restricted boltzmann machines trained maximize product probabilities assigned training set 20 matrix row treated visible vector 21 equivalently maximize expected log probability training sample 21 selected randomly 20 algorithm train rbms optimize weight vector 26 contrastive divergence algorithm hinton originally developed train poe product experts models algorithm performs gibbs sampling gradient descent procedure backpropagation procedure training feedforward neural nets compute weight update basic single step contrastive divergence procedure single sample summarized practical guide training rbms written hinton 
33800942	computerscience	gremlin graph traversal language virtual machine developed apache tinkerpop apache software foundation gremlin oltp based graph databases olap based graph processors gremlin automata functional language foundation enable gremlin naturally support imperative declarative querying host language agnosticism user defined domain specific languages extensible compiler optimizer single multi machine execution models hybrid depth breadth evaluation turing completeness explanatory analogy apache tinkerpop gremlin graph databases jdbc sql relational databases gremlin traversal machine graph computing java virtual machine purpose computing vendor integration gremlin apache2 licensed graph traversal language graph vendors typically types graph vendors oltp graph databases olap graph processors table outlines graph vendors support gremlin traversal examples examples gremlin queries responses gremlin groovy environment relative graph representation movielens dataset dataset includes users rate movies users occupation movie categories movielens graph schema detailed declarative pattern matching traversals gremlin supports declarative graph pattern matching sparql instance query gremlin match step gremlin graph traversal machine gremlin virtual machine composed instruction set execution engine analogy drawn gremlin java gremlin steps instruction set traversal gremlin traversal gremlin java8 dialect gremlin language fluent style expressing graph traversal represented host language supports function composition function nesting simple requirement exists gremlin dialects including gremlin groovy gremlin scala gremlin clojure gremlin java8 traversal ultimately compiled step sequence called traversal string representation traversal steps primitives gremlin graph traversal machine parameterized instructions machine ultimately executes gremlin instruction set 30 steps steps sufficient provide purpose computing typically required express common motifs graph traversal query gremlin language instruction set virtual machine design traversal language compiles gremlin traversal machine analogous scala compiles jvm instance popular sparql graph pattern match language compiled execute gremlin machine sparql querywould compile toin gremlin java8 sparql query represented compile identical gremlin step sequence traversal gremlin machine virtual machine gremlin graph traversal machine execute single machine multi machine compute cluster execution agnosticism gremlin graph databases oltp graph processors olap 
33870510	computerscience	local algorithm image processing image denoising local filters pixels surrounding target pixel smooth image local filtering takes pixels image weighted pixels target pixel post filtering clarity loss image compared local algorithms compared denoising techniques local adds method noise error denoising process white noise desirable typically disturbing denoised product local extended image processing applications deinterlacing view interpolation definition suppose image image algorithm filtered image unfiltered image weighting function integral evaluated 11 normalizing factor common weighting functions purpose weighting function determine closely image image forms gaussian gaussian weighting function sets normal distribution 16 variable standard deviation 18 filtering parameter standard deviation 19 local image values surrounding discrete algorithm image discrete pixels discrete algorithm required 11 gaussian weighting function 19 28 square region pixels surrounding 30 pixels region 31 
33913270	computerscience	simulation gaming bimonthly peer reviewed scientific journal covers field simulation including virtual reality educational games edited timothy clapper tuomas harviainen willy kriz established 1970 published sage publications abstracting indexing simulation gaming abstracted indexed 
34061548	computerscience	feature scaling method standardize range independent variables features data data processing data normalization performed data preprocessing step motivation range values raw data varies machine learning algorithms objective functions properly normalization majority classifiers calculate distance euclidean distance features broad range values distance governed feature range features normalized feature contributes proportionately final distance reason feature scaling applied gradient descent converges faster feature scaling methods rescaling min max normalization min max scaling min max normalization simplest method consists rescaling range features scale range −1 selecting target range depends nature data 1where original normalized suppose students weight data students weights span pounds 200 pounds rescale data subtract 160 student weight divide result 40 difference maximum minimum weights normalization 4where original normalized standardization machine learning handle types data audio signals pixel values image data data include multiple dimensions feature standardization values feature data subtracting numerator unit variance method normalization machine learning algorithms support vector machines logistic regression artificial neural networks method calculation determine distribution standard deviation feature subtract feature divide values subtracted feature standard deviation 7where original feature vector feature vector standard deviation scaling unit option machine learning scale components feature vector complete vector dividing component euclidean vector applications histogram features practical l1 norm manhattan distance city block taxicab geometry feature vector learning steps scalar metric distance measure application stochastic gradient descent feature scaling improve convergence speed algorithm support vector machines reduce time support vectors note feature scaling svm result 
34500414	computerscience	udacity profit educational organization founded sebastian thrun david stavens mike sokolsky offering massive online courses moocs thrun origin udacity company desire audacious student originally focused offering university style courses focuses vocational courses professionals history udacity outgrowth science classes offered 2011 stanford university thrun stated hopes students enroll enrollment 160 000 students predecessor stanford introduction artificial intelligence 90 000 students enrolled initial classes udacity announced 2012 digital life design conference udacity funded venture capital firm charles river ventures 200 000 thrun personal money october 2012 venture capital firm andreessen horowitz led investment 15 udacity november 2013 thrun announced fast company article udacity lousy product service pivoting focus vocational courses professionals nanodegrees udacity users 12 courses 26 courseware 2014 georgia institute technology launched massive online degree science partnering udacity complete master degree program costs students 000 october 2017 udacity unity launched ‘learn arkit’ program developers improve application building skills month google partners udacity launch scholarship initiative aspiring android application developers profitable february 2018 udacity valued 1b usd raised 163m usd investors included andreessen horowitz drive capital alphabet’s venture capital arm gv courses courses courses udacity started 20 february 2012 entitled 101 building search engine taught david evans university virginia 373 programming robotic car taught thrun courses python courses 16 april 2012 encompassing range ability subject matter teachers including steve huffman peter norvig courses announced 31 2012 marked time udacity offered courses domain science courses launched start hexamester 25 june 2012 logic discrete mathematics foundations computing delayed weeks email announcement 14 august stating launched explanation 23 august 2012 entrepreneurship ep245 taught retired serial entrepreneur steve blank announced specialized courses announced collaboration google nvidia autodesk cadence design systems wolfram 18 october 2012 launched 2013 28 november 2012 thrun original class 2011 relaunched udacity cs271 list offered announced courses 
34760165	computerscience	paris graduate school digital innovation epitech european institute technology english private institution education science founded 1999 accredited french headquartered le kremlin bicêtre south paris school campuses bordeaux rennes marseille lille lyon montpellier nancy nantes nice strasbourg toulouse saint andré réunion school location barcelona spain tirana albania students receive title expert technologies recognized french cncp school particularity teach practical theoretical epitech executive mba entrepreneurship targeting executive managers science institution ionis education history epitech created 1999 advantage keen École pour informatique les techniques avancées train students specific sciences matter 2007 epitech campuses casablanca dalian bordeaux lille lyon nantes strasbourg toulouse january 2008 degree delivered recognized commission nationale certification professionnelle level 2008 campuses nice montpellier nancy marseille rennes 2009 school recognized france campuses 2013 epitech announced campus beijing china september 2013 international branches california united kingdom spain september 2014 partnership epitech partnered zup association create cademie training completely students french baccalaureate strong motivation science goal attain job software developer people stopped regular studies trained epitech teachers le kremlin bicêtre lyon diploma students receive title expert technologies recognized french cncp 
35713574	computerscience	voice intelligent personal assistant knowledge navigator built application samsung galaxy iii iii mini including nfc variant s4 s4 mini s4 active s5 s5 mini note note note note note stellar mega grand avant core ace tab tab tab galaxy camera 2013 samsung android devices application natural language user interface answer questions recommendations perform actions delegating requests set services based vlingo personal assistant galaxy s5 samsung android devices voice runs nuance vlingo capabilities voice include appointments apps setting alarms updating social network websites facebook twitter navigation voice offers multitasking automatic activation features car engine started disclaimer pops voice samsung app party galaxy s8 s8 bixby announced major update replacement voice prior phones 
36094802	computerscience	post pc era market trend observed late 2000s 2010s involving decline sales personal computers favor post pc devices include mobile devices smartphones tablet computers mobile computers wearable ubiquitous devices emphasize portability connectivity including cloud based services focused apps perform tasks ability synchronize multiple devices seamlessly term coined mit scientist david clark apple ceos gates steve jobs predicted shift mobile devices primary method computing complement pc jobs popularized term post pc 2007 launch iphone 2011 launched icloud service enabling apple product synchronize data pcs cloud services freeing ios devices dependency pc middle 2010s media sources question existence post pc era conventionally defined history term post pc david clark 1999 future computing inevitably heterogeneous network services clark connect internet including watches toasters computing appliances data stored centralized hosting services physical disks 1999 op piece newsweek ceo gates predicted landscape dubbed pc personal computers devices seamlessly synchronize data calendar events files mails pc easier accessibility user macworld expo 2001 dot bubble burst industry wide angst future pc apple founder ceo steve jobs announced strategy pc macintosh serving digital hub future mobile devices ipod mp3 player jobs stated pc dying pc moving center evolving invented 1975 76 interview gates 5th digital conference 2007 steve jobs concept gates pc post pc device category devices purpose focused specific functions phones ipods zunes category devices continue innovative lots jobs developments pcs continue morph tablet notebook curved desktop house gates suggested prevalence multiple form factors devices including sized tablets phones foot experiences living june 2010 d8 conference interviewed walt mossberg kara swisher jobs compared tablets pcs cars trucks they’re lot they’re people predicting vast majority people eventually tablets primary computing device analogous majority people drive cars conflicting apple previous digital hub strategy centered macintosh pc steve jobs unveiled apple icloud platform 2011 cloud storage data automatically synced ios products pcs ios 5 released concurrently icloud removed platform dependency pc time setup syncing software updates jobs explained icloud replace pc hub user devices online serversall user devices including pc automatically synchronize access media files platforms apple current ceo tim cook continued elaborate concept pc center digital life device level portable device user owns cook explained mobile devices tablets smartphones portable personal dramatically easier pc technologically jason perlow compared post pc devices centralized mainframe based systems 1970sbut enhanced cloud computing provide flexible heterogeneous infrastructure online services desktop virtualization serve pc applications businesses shift apps matt baxter reynolds main selling post pc devices lack functionality believing simplistic secure design intimidating consumers comparison traditional pc lack keyboard laptops contribute portability emphasis connectivity 2014 sony sold pc division vaio brand drop sales led speculate pc market dying pc market experience periods growth 2010s leading claim exact pc gaming grew 2012 expected continue growing quarter 2014 pc sales rise growth pc compatible market driven strong sales portable pcs 2014 proponents event unveiled 3rd generation ipad tim cook reported apple sold 172 ipod iphone ipad products 2011 totaling 76 company total revenue sold ipad tablets fourth quarter 2011 personal computers sold worldwide quarter 2012 worldwide pc sales dropped comparison 2011 july 2013 gartner reported worldwide pc shipments fallen quarter row marking decline history pc industry threat post pc devices producers x86 processors typically pcs smartphones tablets power arm processors manufactured companies nvidia qualcomm x86 processors sold companies intel amd decline pc sales sales processors intel continued gain market share amd quarter 2012 worldwide shipments processors declined comparison quarter 2011 sources including economist identified amazon apple google platform cloud companies key competitors post pc era mobile computing tech companies heavy dependency pc sales hewlett packard dell earnings suffer ibm struggled slowing demand hardware consulting services detractors decrease pc sales desktop computers laptops 84 global traffic march 2013 worldwide partner conference 2012 coo kevin turner attacked tim cook declaration post pc era completely incorrect upcoming windows operating game changer gates pc landscape apple mobile pc devices operating systems ios os windows designed accommodate traditional pcs tablets updated interface optimized touchscreen introduction windows store service app store obtaining touch optimized software compliment introduced windows rt special stripped variant operating built devices arm architecture commonly smartphones tablets windows 8 devices including tablets closer nature traditional pcs windows rt designed closed reliable platform closer nature post pc devices ipad included desktop programs internet explorer office 2013 apps presentation january 2012 intel senior vice president tom kilroy questioned arrival post pc era citing survey college students 66 respondents considered pc device daily lives 2011 intel introduced ultrabook—specifications marketing platform class subnotebook emphasis portability responsiveness productivity lasting battery life 2012 intel introduced atom chip designs android smartphones windows 8 tablets codenamed medfield clover trail intel stated clover trail tablets achieve day battery life windows rt devices provide compatibility applications designed previous versions windows windows spurred oem convertible devices form factor devices laptop tablet keyboard accessory docked google produces android operating tablets smartphones introduced chrome osan operating designed personal computing built popular chrome browser 2009 shipping netbooks chromebooks chrome os designed users frequently applications cloud based services google play drive applications applications os fullscreen browser update 2012 introduced desktop environment closer operating systems windows rt ultimately cannibalized tablets running standard windows operating system—a market incentivised decision optimize windows devices drop windows oem license fees devices screens inches size 2015 quietly mothballed windows rt production remaining party devices windows revised mobile strategy focusing unification functionality device classes including extension windows app platform software coded support multiple device classes running windows based operating tailoring user experience based input devices—particularly convertible laptops tablets windows mobile iteration windows phone smartphones tablets platform supports ability devices attached external display docking station pc interface usb mouse keyboard support 
36190617	computerscience	kai professor department science princeton university pioneering contributions distributed shared memory dsm founding leading storage deduplication company data domain acquired emc corporation 2009 background received degree yale university 1986 joined princeton university prior received degree jilin university degree university science technology china chinese academy sciences academic contribution 1986 kai published phd dissertation entitled shared virtual memory loosely coupled microprocessors field distributed shared memory dsm users program shared memory programming model clusters huge extend idea distributed object based systems operating systems improve dsm performance joining princeton led scalable performance inexpensive multiprocessor shrimp project investigated build performance servers cluster princeton career led scalable project attacked bottleneck supercomputers protected user level communication contributed remote direct memory access rdma mechanism virtual interface architecture standard infiniband standard communication mechanisms direct access file dafs led scalable display wall project explores build resolution wall size display visualize massive datasets colleagues stanford labelled image dataset called imagenet vision community develop object recognition classification methods image data colleagues princeton developing methods efficiently manage analyze vast data generated increasingly sophisticated fields ranging genomics neuroscience entrepreneur experience sabbatical princeton 2001 ben zhu brian biles founded data domain corporation built commercial deduplication storage dollar market june 2009 emc corporation acquired data domain outbidding netapp previous offer 2010 data domain product captured 64 share market purpose built backup devices worldwide including mainframes data domain served initial chief executive officer ceo chief technology officer cto october 2001 august 2002 september 2002 served chief scientist responsible leading strategic direction data domain product vision prior joining data domain served industry consultant bell labs digital equipment corporation intel nec served director pattern insight served advisory board emc corporation inphi corporation intel labs innovation center samsung corporation awards elected association computing machinery acm fellow institute electrical electronics engineers ieee fellow 1998 2011 2012 elected national academy engineering received overseas outstanding contribution award china federation 2008 
36279735	computerscience	google feature google search google app android ios google proactively delivered users predict based search habits factors form informational cards google branding functionality continues google app feed google included google android jelly bean launched july 2012 galaxy nexus smartphone support service ios april 29 2013 features 2014 google cards notification center chrome os chrome browser removed notification center chrome popular science named google innovation 2012 2015 google gradually phased reference google google app removing remaining october 2016 including replacing cards feed google 2016 google showcased intelligent personal assistant google assistant evolution google google assistant engage dialogue user history late 2011 reports surfaced google enhancing product google voice search version android originally codenamed majel majel barrett wife gene roddenberry voice systems star trek franchise codenamed assistant june 27 2012 google unveiled google premier demonstration android jelly bean google 2012 october 29 2012 google received update google play store bringing addition gmail cards google displays cards pulled user gmail account flight package tracking hotel reservations restaurant reservations gmail account google apps account additions movie concert stock news cards based users location search history included facility create calendar events voice input instance appointment dinner steve thursday 7pm december 2012 update google search application brought features google including cards nearby events searching camera museum shop airplane boarding passes mail united airlines instance airlines addition google cards weather upcoming travel destinations birthday reminders monthly summaries biking walking activities voice action features included update include ability post google song recognition capabilities ability scan bar codes search update hit google removed search camera feature march 21 2013 executive chairman google eric schmidt stated google submitted ios version google apple review app awaiting approval true apple denied april 29 2013 google ios update operating google search application based google chrome code review december 2012 google expected integrated desktop version google chrome seth rosenblatt cnet rumored google serve igoogle replacement november 2013 15 2013 google 2013 google announced upcoming release google desktop platforms—the feature accessible google chrome google chrome os january 16 2014 alpha version google desktop google chrome canary release app lacks cards mobile version google public alerts nearby photos activity summary stocks march 24 2014 google started rolling google google chrome users signed google account browser functionality google implemented aspect google search application recognized repeated actions user performs device common locations repeated calendar appointments search queries display relevant user form cards leveraged google knowledge graph project assemble detailed search analyzing meaning connections specialized cards comprise january 2015 google introduced ability participating installed party apps generate cards launch included apps airbnb ebay guardian pandora radio lyft tap android marshmallow google supported additional feature tap user perform searches context displayed app user activates feature holding button voice command content current screen parsed keywords names people television programs films —which generate cards display suggestions actions users voice questions subjects cards reception scott webster cnet praised google ability remind users events based location histories check ins commended providing instantly clean intuitive manner user requesting review ryan paul ars technica claims voice activated apps including siri voice recognition major issue notes ability type queries users alternatives commentators google predictive power reveals data google routines daily lives october 2014 review android central google outperforming competition siri cortana 
37187592	computerscience	science thompson construction algorithm called mcnaughton yamada thompson algorithm method transforming regular expression equivalent nondeterministic finite automaton nfa nfa match strings regular expression algorithm credited ken thompson regular expressions nondeterministic finite automata representations formal languages instance processing utilities regular expressions advanced search patterns nfas suited execution algorithm practical compile regular expressions nfas theoretical view algorithm proof accept languages regular languages nfa deterministic powerset construction minimized optimal automaton regular expression nfa interpreted decide regular expressions language converted equivalent minimal deterministic finite automaton thompson construction powerset construction dfa minimization automata agree renaming regular expressions languages agreed algorithm algorithm recursively splitting expression constituent subexpressions nfa constructed set rules precisely regular expression automaton transition function respects properties rules rules depicted aho 2007  122 nfa subexpressions expression ε converted toa symbol input alphabet converted tothe union expression converted tostate ε initial final intermediate nfa merge ε transitions final nfa concatenation expression converted tothe initial initial nfa final initial final final nfa kleene star expression converted toan ε transition connects initial final nfa nfa ε transition final initial repetition expression star operator rules expression symbol rules base prove mathematical induction regular expression converted equivalent nfa examples informal result bigger step step application algorithm picture result thompson construction codice pink oval corresponds teal oval corresponds green oval corresponds orange oval corresponds blue oval corresponds ε application algorithm picture result thompson construction algorithm regular expression codice denotes set binary multiples upper logical structure syntax tree expression denoting concatenation assumed variable arity subexpressions named reference purposes left nondeterministic finite automaton thompson algorithm subexpression colored ε transition label clarity unlabelled transitions ε transitions entry exit root expression start accept automaton algorithm steps equivalent minimal deterministic automaton relation algorithms thompson algorithms constructing nfas regular expressions earlier algorithm mcnaughton yamada converse thompson construction kleene algorithm transforms finite automaton regular expression glushkov construction algorithm thompson construction ε transitions removed 
37681800	computerscience	4dx motion picture technology owned developed south korean company cj 4dplex cj 4dx motion picture presentation augmented environmental effects seat motion wind rain lights scents standard video audio theaters specially designed equipped 4dx technology experience introduced commercially 2009 release journey center earth seoul south korea history 4dx launched south korean theater chain cj cgv release cinema journey center earth seoul 2009 2010 technology success 4dx screening avatar cgv expanded theaters south korea company 4dx theater china 14 april 2012 release titanic 3d vietnam 21 january 2014 release frankenstein completion merger megastar cinemas june 2011 mexican cineplex company cinépolis invested 25 partnered cj 11 4dx 4dx plaza acoxpa mall mexico city release disney 4dx theater north america western hemisphere company expanded theaters south american theaters releases prometheus july 2012 brazil dreamworks animation rise guardians 12 december 2012 peru despicable july 2013 colombia company guatemala 17 december 2013 release 4dx theater central america company 4dx theater india 2014 costa rica company set 4dx theater 14 september 2014 release maze runner 2012 cnn travel named cgv gangbyeon 4dx theater movie theatres paramount pictures film 4dx major cineplex 19 june 2011 thailand cinema park 22 december 2012 russia cinema city 4dx israel 19 july 2012 planet rishon lezion theater release amazing spider company 4dx theaters europe hungary 21 march 2013 release croods bulgaria czech republic 22 2013 23 2013 release fast furious poland 22 november 2013 release romania mid 2015 bucharest release constanța timișoara 26 april 2013 japanese cineplex chain korona nagoya release iron 2013 cgv released 4dx trailer starring lee byung hun 12 june 2013 taiwanese cineplex chain vieshow cinemas release steel 19 july 2013 cine hoyts 4dx reina chile release turbo august 2013 4dx technology achieved 000 seats 16 countries 58 cities 23 august 2013 indonesia blitzmegaplex 4dx theater release venezuela cinex 21 december 2013 release frozen 28 september 2013 ume international cineplex 4dx theater chongqing release jurassic park 3d 12 december 2013 croatian cinema chain blitz cinestar 4dx releases frozen ukrainian theater chain planeta kino 4dx premiere 18 december 2013 slim black seats vox cinemas 4dx theater united arab emirates 22 december 2013 24 march 2014 cj 4dplex signed deal aeg bring technology united country 4dx theater regal cinemas live stadium 14 theater los angeles operated regal entertainment 26 june 2014 los angeles natural choice location carry 4dx byung hwan choi ceo cj 4dplex bring experience movie magic aeg owner host exciting entertainment venues strategic partner welcoming audiences moviegoing experience screened marvel studios premiered paramount day 4dx showings sold 30 april 2014 ayala malls cinema 4dx philippines release amazing spider september 2014 variety reported technology success united talks theater chains deals 20 november 2014 mexico based international movie exhibition chain cinepolis launched india 4dx technology enabled screen thane maharashtra 30 january 2015 cineworld launched united kingdom 4dx theater milton keynes release 22 october sheffield cinema british 4dx cinema crawley 18 november fourth based stevenage 29 april 2016 birmingham broad street dr strange 26 2016 4dx theater wandsworth branch december 2016 release rogue star wars story 16 december 2015 africa 4dx theater cape town south africa 15 july 2016 serbia 4dx theater novi sad november 2016 canada 4dx theater toronto doctor strange 2016 films cinema screens 4dx technology cumulatively reached 15 viewers 15 march 2017 france 4dx theater paris 11 october 2017 pathé cinemas announced 4dx theaters netherlands december 2017 18 october 2017 4dx theater wrocław poland 27 october 2017 4dx complex australia owned village cinemas century city cinema 13 december 2017 4dx theater kinepolis brussels antwerp belgium 13 december 2017 4dx theater pathe charleroi belgium 22 december 2017 company announced extended agreement les cinémas gaumont pathé additional 20 4dx cinemas original 30 bringing total 50 4dx cinemas 50 locations openend 2020 40 locations france netherlands switzerland belgium 26 april 2018 ireland 4dx theater cineworld dublin 2018 cineworld 4dx cinema middlesbrough united kingdom 19th 4dx screen country 12th september 2018 hollywood megaplex announced 4dx cinema pasching 4dx cinema austria 11th october 2018 nordisk film announced 4dx cinema uppsala sweden promising country description theater built retrofitted special equipment support 4dx features including seats dimensions vibrate leg ticklers wind water fog bubbles rain snow air storm lighting sound effects motion picture 4dx features theater 4dx track programmed existing video audio tracks 4dx movie standard movie addition 4dx track controls 4dx features playback programming track cj 4dplex cj cgv subsidiary developed technology participation studio produced original movie programming 4dx track movie typically takes month 4dx locations january 2nd 2019 4dx technology active 61 countries angola australia austria bahamas belgium brazil bulgaria canada cambodia chile china colombia costa rica croatia czech republic denmark egypt france guatemala hong kong hungary india indonesia ireland israel japan lebanon south korea kuwait malaysia mexico mongolia netherlands nigeria norway oman panama peru philippines poland portugal puerto rico romania russia serbia slovakia south africa spain sweden switzerland taiwan thailand trinidad tobago turkey ukraine united arab emirates united kingdom united dominican republic venezuela vietnam 4dx partners jan 2019 cj 4dplex partnered cinema chains 
37698148	computerscience	nuttx real time operating rtos emphasis standards compliance footprint scalable bit 32 bit microcontroller environments primary governing standards nuttx posix ansi standards additional standard apis unix common rtoses vxworks functionality standards functionality deeply embedded environments – fork nuttx released 2007 gregory nutt permissive bsd license implementation nuttx written exclusively kconfig configure generate gnu makefiles nuttx distribution combines kernel substantial middleware board support driver code kernel nuttx code written original author gregory nutt source maintained exclusively gregory nutt community contributions approved networking network stack included nuttx derived uip micro ip originally developed adam dunkels 
37752641	computerscience	apache giraph apache project perform graph processing data giraph utilizes apache hadoop mapreduce implementation process graphs facebook giraph performance improvements analyze edges 200 machines minutes giraph based paper published google graph processing called pregel compared graph processing libraries cassovary 
37815827	computerscience	astrostatistics discipline spans astrophysics statistical analysis data mining process vast data produced automated scanning cosmos characterize complex datasets link astronomical data astrophysical theory branches statistics involved astronomical analysis including nonparametrics multivariate regression multivariate classification time series analysis bayesian inference professional association practitioners represented international astrostatistics association affiliated international statistical institute international astronomical union astrostatistics astroinformatics american astronomical society astroinformatics astrostatistics american statistical association astrostatistics cosmostatistics initiative organizations participate astrostatistics astroinformatics portal 
37862937	computerscience	context artificial neural networks rectifier activation function defined positive argument input neuron ramp function analogous wave rectification electrical engineering activation function introduced dynamical network hahnloser 2000 strong biological motivations mathematical justifications demonstrated time 2011 enable training deeper networks compared activation functions prior 2011 logistic sigmoid inspired probability theory logistic regression practical counterpart hyperbolic tangent rectifier popular activation function deep neural networks unit employing rectifier called rectified linear unit relu rectified linear units applications vision speech recognition deep neural nets softplus smooth approximation rectifier analytic functionwhich called softplus smoothrelu function derivative softplus logistic function logistic function smooth approximation derivative rectifier heaviside step function multivariable generalization single variable softplus logsumexp argument set logsumexp function gradient softmax softmax argument set multivariable generalization logistic function logsumexp softmax machine learning variants noisy relus rectified linear units extended include gaussian noise noisy relus givingnoisy relus success restricted boltzmann machines vision tasks leaky relus leaky relus positive gradient unit active parametric relus parametric relus prelus idea coefficient leakage parameter learned neural network parameters note equivalent toand relation maxout networks elus exponential linear units activations closer speeds learning elus classification accuracy relus 12formula 13 hyper parameter tuned 14 constraint advantages rectifying activation functions separate specific excitation unspecific inhibition neural abstraction pyramid trained supervised learn vision tasks 2011 rectifier linearity enable training deep supervised neural networks requiring unsupervised pre training rectified linear units compared sigmoid function activation functions faster effective training deep neural architectures complex datasets 
38143080	computerscience	mobileye israeli subsidiary intel corporation develops vision based advanced driver assistance systems adas providing warnings collision prevention mitigation mobileye headquarters main centre located jerusalem operating company mobileye vision technology company sales marketing offices jericho york shanghai china tokyo japan düsseldorf germany march 2017 intel announced agreed 15 takeover mobileye largest acquisition israeli company history mobileye founded 1999 amnon shashua researcher hebrew university evolved academic technical solution vision detect vehicles camera software algorithms processor receiving license technology owned yissum incorporate company ziv aviram set company headquarters jerusalem israel company developed algorithms custom accelerator processor chip called eyeq chip mobileye proprietary image processing algorithms eyeq chip testing chip software algorithms sold commercial products original equipment manufacturer oem customers company clients automotive manufacturers bmw motors volvo companies electronics suppliers integrated mobileye technologies companies cars optional accessory buying car standard option cars 2006 mobileye set aftermarket department sells finished products manufactured mobileye philippines factory imi aftermarket products sold international network distributors continents sell products fleets trucks buses car dealerships car accessory shops august 2015 tesla motors announced mobileye technology enable drive solution incorporated model cars august 2015 deadly crash driving model active autopilot public june 2016 mobileye issued statement technology wo recognize crossing trailer accident 2018 july 2016 mobileye announced partnership tesla eyeq3 eyeq 15 vehicles sold 2017 january 2017 mobileye bmw intel announced developing fleet autonomous vehicles road 2017 companies plan develop autonomous vehicles consumer market 2021 march 2017 intel announced deals mobileye 15 deal completed august rothschild citigroup financial advisors intel raymond james advising mobileye 29 october 2018 intel mobileye parent company released plans autonomous ride hailing service launch israel press briefing volkswagen announced automobile supplier mobileye implementing driving capabilities israeli car distributor champion motors providing fleet support operations intel program launch 2019 timeline commercial availability 2022 technologies firm technology based optical vision systems motion detection algorithms running custom hardware accelerator eyeq chip competing systems combination visual detection radar laser scanning firm vehicle detection algorithms recognize motorised vehicles cars motorcycles trucks day night time conditions firm version performs vehicle detection based functions single camera mounted rear view mirror usual approach radars laser scanners stereo cameras 2011 firm introduced oem production vision collision warning nhtsa compliant multiple bmw opel vehicles lane departure warning systems vehicle electronic systems monitor position vehicle roadway lane warn driver vehicle deviates deviate lane mobileye version launched multiple production platforms 2007 2008 bmw volvo firm pedestrian detection technology based mono cameras pattern recognition classifiers image processing optic flow analysis static moving pedestrians detected range 30 m vga resolution imagers firm announced 2008 mid 2010 launch application emergency braking collision mitigation pedestrians mobileye announced 2009 generation volvo radar vision fusion lane departure warning vehicle detection radar vision fusion enhanced collision mitigation braking volvo s60 vehicle 2008 bmw series cars equipped mobileye traffic sign recognition systems developed cooperation automotive supplier continental adaptive highbeam systems automatically raises lowering beams inconveniencing oncoming preceding traffic firm version intelligent headlight control production bmw series 2011 firm introduced multi functional bundles including vision based fcw opel zafira opel insignia 2016 mobileye announced deal renault nissan digital maps automaker driverless cars aftermarket 2007 firm offered range aftermarket vision based adas systems based core technology production models offer lane departure warning collision warning headway monitoring warning speed urban collision warning intelligent headlamp control speed limit indication tsr pedestrian collision warning including bicycles systems integrated fleet management systems investments 2007 2011 company raised 160 2013 company sold 25 private shares 400 blue chip investors mobileye biggest investors colmobil ceo shmuel harlap held stake acquisition israel billionaire joining founders amnon shashua ziv aviram billionaire club competition mobileye competition tier automotive suppliers technology companies including google competitors developing adas technology include https seeingmachines machines cognitive technologies continental bosch omnivision technologies nxp freescale texas instruments toshiba renesas electronics corp denso green hills software qualcomm tomtom 
38455554	computerscience	julia level purpose dynamic programming language originally designed address performance numerical analysis computational science typical separate compilation fast usable client server level systems programming specification language distinctive aspects julia design include type parametric polymorphism types dynamic programming language multiple dispatch core programming paradigm concurrent parallel distributed computing direct calling fortran libraries glue code julia garbage collected eager evaluation includes efficient libraries floating calculations linear algebra random generation regular expression matching libraries fast fourier transforms bundled julia history julia started 2009 jeff bezanson stefan karpinski viral shah alan edelman set create language level fast 14 february 2012 team launched blog post explaining language mission karpinski julia reason pretty bezanson chose recommendation friend 2012 launch julia community grown 000 000 downloads august 2018 juliacon academic conference julia users developers held annually 2014 version released august 2014 version october 2015 version october 2016 versions earlier maintained julia released june 2017 stable release version august 2018 julia release testing packages knowing upgrade version released august 2018 julia huge undertaking optimizer syntax syntax stable semantics iteration interface simplified release candidate julia julia rc1 released august 2018 final version day team stated code runs warnings julia identically julia julia released 21 january 2019 exception stack language feature promised semantic versioning julia external packages syntax julia julia julia breaking additions standard library explained julia news file bugfix releases expected roughly monthly julia term support julia schedule bugfix releases pipeline release julia 15 march 2019 notable julia attracted profile clients investment manager blackrock time series analytics british insurer aviva risk calculations 2015 federal reserve bank york julia models economy noting language model estimation times faster previous matlab implementation julia founders established julia computing 2015 provide paid support training consulting services clients julia remains 2017 juliacon conference jeffrey regier keno fischer announced celeste project julia achieve peak performance 54 petaflops threads 9300 knights landing knl nodes cori cray xc40 supercomputer 5th fastest time november 2017 8th fastest julia joins fortran level languages petaflops computations achieved julia creators recipients 2019 james wilkinson prize numerical software awarded creation julia innovative environment creation performance tools enable analysis solution computational science language features official main features language multiple dispatch termed multimethods lisp generalization single dispatch polymorphic mechanism common object oriented programming oop languages inheritance julia concrete types subtypes abstract types indirectly subtypes type type hierarchy concrete types subtyped composition inheritance traditional object oriented languages inheritance subtyping julia draws inspiration dialects lisp including scheme common lisp shares features dylan multiple dispatch oriented dynamic language features algol form infix syntax lisp prefix syntax julia expression fortress numerical programming language features multiple dispatch sophisticated parametric type common lisp object clos adds multiple dispatch common lisp functions generic functions julia dylan fortress extensibility default built functions generic extensible dylan multiple dispatch fundamental julia user defined functions basic built operations codice generic dylan type support parametric types typical lineage languages default clos dispatch common lisp parametric types extended dispatch semantics extension clos metaobject protocol convergent design fortress features multiple dispatch parametric types julia fortress statically dynamically typed separate compiling executing phases language features summarized table default julia runtime pre installed user source code standalone executable julia source code built buildexecutable jl julia syntactic macros metaprogramming lisp macros powerful substitution macros preprocessor languages level abstract syntax trees asts julia macro hygienic supports deliberate capture desired anaphoric macros codice construct interaction julia official distribution includes interactive session called julia read–eval–print loop repl experiment code fragment represents sample session strings concatenated automatically println repl user access mode pressing codice codice prompt preceding command history commands including sessions code tested julia interactive saved file codice extension command typing julia supported jupyter online interactive notebooks environment languages julia keyword exported fortran shared library functions individually julia unicode 11 support utf strings default julia source code meaning allowing option common math symbols operators ∈ codice operator julia packages supporting markup languages xml json bson databases implementation julia core implemented julia llvm dependency assembly parser scheme femtolisp llvm compiler infrastructure project generation 64 bit 32 bit optimized machine code depending platform julia runs exceptions pcre standard library implemented julia notable aspect julia implementation speed factor relative optimized code magnitude faster python benchmark claims disputed development julia 2009 source version publicized february 2012 current future platforms julia jit mcjit llvm julia generates native machine code function bytecodes virtual machine vm translated bytecode running java jvm dalvik android julia support tiers supports x86 64 processors 64 bit optimized generations ia 32 x86 processors 32 bit mode x86 cpus pre pentium era supports tiers tier supports armv8 aarch64 processors supports armv7 armv6 aarch32 caveats platforms mainstream cpus mainstream operating systems tier support tier build external support meaning package gpus platforms compiled source code original raspberry pi options changed download executables source julia built arm platforms armv8 data center cloud processors cavium thunderx arm 48 cores arm v7 32 bit tier support binaries x86 arm v8 64 bit powerpc 64 bit community support ptx 64 bit meaning nvidia cuda gpus external support julia supported raspbian support armv7 pis julia support promoted raspberry pi foundation sponsors julia received contributions 800 developers worldwide dr jeremy kepner mit lincoln laboratory founding sponsor julia project days addition funds gordon betty moore foundation alfred sloan foundation intel agencies nsf darpa nih nasa faa essential development julia julia computing company julia computing founded viral shah deepak vinchhi alan edelman jeff bezanson stefan karpinski keno fischer june 2017 julia computing raised 6m seed funding catalyst founder collective 
38556048	computerscience	network functions virtualization network function virtualization nfv network architecture concept technologies virtualization virtualize entire classes network node functions building blocks connect chain create communication services nfv relies differs traditional server virtualization techniques enterprise virtualized network function vnf consist virtual machines running software processes standard volume servers switches storage devices cloud computing infrastructure custom hardware appliances network function virtual session border controller deployed protect network typical cost complexity obtaining installing physical network protection units examples nfv include virtualized load balancers firewalls intrusion detection devices wan accelerators background product development telecommunication industry traditionally rigorous standards stability protocol adherence quality reflected term carrier grade designate equipment demonstrating reliability model inevitably led product cycles slow pace development reliance proprietary specific hardware bespoke application specific integrated circuits asics rise competition communication services fast moving organizations operating scale public internet google talk skype netflix spurred service providers disrupt status quo history october 2012 specification network functions virtualisation published white paper conference darmstadt germany software defined networking sdn openflow european telecommunications standards institute etsi representatives telecommunication industry europe publication white paper produced depth materials including standard terminology definition nfv references vendors operators adopt network virtualization framework nfv framework consists main components building block nfvi nfv mano nfv platform nfvi role consists virtual physical processing storage resources virtualization software nfv mano role consists vnf nfvi managers virtualization software operating hardware controller nfv platform implements carrier grade features manage monitor platform components recover failures provide effective security – required public carrier network practical aspects service provider nfv design implements virtualized network functions vnfs vnf automatically provide usable product service provider customers build complex services notion service chaining multiple vnfs sequence deliver service aspect implementing nfv orchestration process build highly reliable scalable services nfv requires network instantiate vnf instances monitor repair service provider business services rendered attributes referred carrier grade features allocated orchestration layer provide availability security operation maintenance costs importantly orchestration layer manage vnfs irrespective underlying technology vnf orchestration layer manage sbc vnf vendor running vmware vsphere ims vnf vendor running kvm distributed nfv initial perception nfv virtualized capability implemented data centers approach – – nfv presumes emphasizes widest flexibility physical location virtualized functions ideally virtualized functions located effective expensive service provider locate nfv locations data center network node customer premises approach distributed nfv emphasized nfv developed standardized prominent released nfv isg documents advantages service provider locate virtualized functionality customer premises advantages range economics performance feasibility functions virtualized etsi nfv isg approved public multi vendor proof concept poc nfv conducted cyan rad fortinet certes networks chicago june 2014 sponsored centurylink based rad’s dedicated customer edge nfv equipment running fortinet’s generation firewall ngfw certes networks’ virtual encryption decryption engine virtual network functions vnfs cyan’s blue planet orchestrating entire ecosystem rad nfv solution layer layer network termination unit ntu equipped nfv x86 server module functions virtualization engine customer edge commercially month 2014 rad organized nfv alliance ecosystem vendors international systems integrators specializing nfv applications nfv modularity benefits designing developing software vnfs vendors structure software software components implementation view software architecture package components images deployment view software architecture vendor defined software components called vnf components vnfcs vnfs implemented vnfcs assumed loss generality vnfc instances map vm images vnfcs scale scale allocate flexible virtual cpus vnfc instances network management layer scale scale vertically vnfc provide throughput performance scalability expectations single single platform network management layer scale scale horizontally vnfc activating multiple instances vnfc multiple platforms reach performance architecture specifications compromising vnfc function stabilities adopters architecture blueprints implemented nfv modularity principles relationship sdn sdn software defined networking concept nfv refer domains network functions virtualization nfv deep packet inspection dpi efficiently complement sdn functions essence software defined networking sdn approach build data networking equipment software separates abstracts elements systems decoupling control plane data plane control plane resides centrally forwarding components remain distributed control plane interacts northbound southbound northbound direction control plane common abstracted view network level applications programs apis southbound direction control plane programs forwarding behavior data plane device level apis physical network equipment distributed network nfv dependent sdn sdn concepts implement virtualized network function vnf standalone entity existing networking orchestration paradigms inherent benefits leveraging sdn concepts implement manage nfv infrastructure management orchestration vnfs multivendor platforms defined incorporate sdn nfv concerted ecosystems nfv infrastructure central orchestration management takes operator requests vnf translates processing storage network configuration bring vnf operation operation vnf monitored capacity utilization adapted functions accomplished sdn concepts nfv considered primary sdn service provider environments apparent sdn incorporate concepts introduced nfv initiative examples include centralized controller controlling distributed forwarding function virtualized existing processing routing equipment industry impact nfv proven popular standard infancy applications numerous virtualization mobile base stations platform service paas content delivery networks cdn fixed access environments potential benefits nfv anticipated virtualization network functions deployed purpose standardized hardware expected reduce capital operational expenditures service product introduction times major network equipment vendors announced support nfv coincided nfv announcements major software suppliers provide nfv platforms equipment suppliers build nfv products realize anticipated benefits virtualization network equipment vendors improving virtualization technology incorporate carrier grade attributes required achieve availability scalability performance effective network management capabilities minimize total cost ownership tco carrier grade features implemented efficiently requires nfv solutions efficient redundant resources achieve nines availability 99 999 computing resource compromising performance predictability nfv platform foundation achieving efficient carrier grade nfv solutions software platform running standard multi core hardware built source software incorporates carrier grade features nfv platform software responsible dynamically reassigning vnfs failures traffic load plays role achieving availability numerous initiatives underway align promote nfv carrier grade capabilities etsi nfv proof concept atis platform nfv project carrier network virtualization awards supplier ecosystems vswitch key component nfv platforms responsible providing connectivity vm vm vms vms network performance determines bandwidth vnfs cost efficiency nfv solutions standard vswitch ovs performance shortcomings resolved meet nfvi solutions performance improvements reported nfv suppliers ovs accelerated vswitch avs versions virtualization changing availability measured achieved nfv solutions vnfs replace traditional function dedicated equipment shift equipment based availability service based layered approach virtualizing network functions breaks explicit coupling specific equipment availability defined availability vnf services nfv technology virtualize wide range network function types service availability expectations nfv platforms support wide range fault tolerance options flexibility enables csps optimize nfv solutions meet vnf availability requirement management orchestration mano etsi controlling nfv environment automation orchestration separate stream mano nfv outlining flexibility controlled performance study performance study nfv focused throughput latency jitter virtualized network functions vnfs nfv scalability terms vnfs single physical server support 
38870173	computerscience	machine learning feature learning representation learning set techniques automatically discover representations feature detection classification raw data replaces manual feature engineering machine learn features perform specific task feature learning motivated machine learning tasks classification require input mathematically computationally convenient process real data images video sensor data yielded attempts algorithmically define specific features alternative discover features representations examination relying explicit algorithms feature learning supervised unsupervised supervised supervised feature learning learning features labeled data data label compute error term degree fails produce label feedback correct learning process reduce minimize error approaches include supervised dictionary learning dictionary learning develops set dictionary representative elements input data data represented weighted sum representative elements dictionary elements weights minimizing average representation error input data l1 regularization weights enable sparsity representation data nonzero weights supervised dictionary learning exploits structure underlying input data labels optimizing dictionary elements supervised dictionary learning technique applied dictionary learning classification jointly optimizing dictionary elements weights representing data parameters classifier based input data minimization formulated objective function consists classification error representation error l1 regularization representing weights data enable sparse representation data l2 regularization parameters classifier neural networks neural networks family learning algorithms network consisting multiple layers inter connected nodes inspired animal nervous nodes viewed neurons edges viewed synapses edge weight network defines computational rules passing input data network input layer output layer network function neural network characterizes relationship input output layers parameterized weights appropriately defined network functions learning tasks performed minimizing cost function network function weights multilayer neural networks perform feature learning learn representation input hidden layer subsequently classification regression output layer popular network architecture type siamese networks unsupervised unsupervised feature learning learning features unlabeled data goal unsupervised feature learning discover dimensional features captures structure underlying dimensional input data feature learning performed unsupervised enables form semisupervised learning features learned unlabeled dataset employed improve performance supervised setting labeled data approaches introduced clustering clustering approach vector quantization set vectors clustering clusters subsets vector belongs cluster closest computationally hard suboptimal greedy algorithms developed clustering unlabeled set inputs clusters centroids clusters produce features features produced simplest add binary features sample feature iff centroid learned closest sample consideration distances clusters features transforming radial basis function technique train rbf networks coates note variants behave sparse coding algorithms comparative evaluation unsupervised feature learning methods coates lee clustering transformation outperforms invented auto encoders rbms image classification task improves performance domain nlp named entity recognition competes brown clustering distributed word representations neural word embeddings principal component analysis principal component analysis pca dimension reduction unlabeled set input data vectors pca generates dimension input data singular vectors largest singular values data matrix row data matrix input data vector shifted sample input subtracting sample data vector equivalently singular vectors eigenvectors largest eigenvalues sample covariance matrix input vectors singular vectors feature vectors learned input data represent directions data largest variations pca linear feature learning approach singular vectors linear functions data matrix singular vectors generated simple algorithm iterations iteration projection data matrix eigenvector subtracted singular vector singular vector largest singular residual data matrix pca limitations assumes directions variance pca relies orthogonal transformations original data exploits moments data characterize data distribution pca effectively reduce dimension input data vectors correlated dominant eigenvalues local linear embedding local linear embedding lle nonlinear learning approach generating dimensional neighbor preserving representations unlabeled dimension input approach proposed roweis saul 2000 idea lle reconstruct original dimensional data dimensional maintaining geometric properties neighborhoods original data set lle consists major steps step neighbor preserving input data xi reconstructed weighted sum nearest neighbor data optimal weights minimizing average squared reconstruction error difference input reconstruction constraint weights sum step dimension reduction vectors dimensional space minimizes representation error optimized weights step note step weights optimized fixed data solved squares step dimensional optimized fixed weights solved sparse eigenvalue decomposition reconstruction weights step capture intrinsic geometric properties neighborhood input data assumed original data lie smooth dimensional manifold intrinsic geometric properties captured weights original data expected manifold weights step lle compared pca lle powerful exploiting underlying data structure independent component analysis independent component analysis ica technique forming data representation weighted sum independent gaussian components assumption gaussian imposed weights uniquely determined components follow gaussian distribution unsupervised dictionary learning unsupervised dictionary learning utilize data labels exploits structure underlying data optimizing dictionary elements unsupervised dictionary learning sparse coding aims learn basis functions dictionary elements data representation unlabeled input data sparse coding applied learn overcomplete dictionaries dictionary elements larger dimension input data aharon proposed algorithm svd learning dictionary elements enables sparse representation multilayer deep architectures hierarchical architecture biological neural inspires deep learning architectures feature learning stacking multiple layers learning nodes architectures designed based assumption distributed representation observed data generated interactions factors multiple levels deep learning architecture output intermediate layer viewed representation original input data level representation produced previous level input produces representations output fed levels input layer raw data output final layer final dimensional feature representation restricted boltzmann machine restricted boltzmann machines rbms building block multilayer learning architectures rbm represented undirected bipartite graph consisting binary hidden variables visible variables edges connecting hidden visible nodes special boltzmann machines constraint intra node connections edge rbm weight weights connections define energy function based joint distribution visible hidden nodes devised based topology rbm hidden visible variables independent conditioned visible hidden variables conditional independence facilitates computations rbm viewed single layer architecture unsupervised feature learning visible variables correspond input data hidden variables correspond feature detectors weights trained maximizing probability visible variables hinton contrastive divergence algorithm training rbm solving maximization result sparse representations sparse rbm proposed enable sparse representations idea add regularization term objective function data likelihood penalizes deviation expected hidden variables constant autoencoder autoencoder consisting encoder decoder paradigm deep learning architectures hinton salakhutdinov encoder raw data image input produces feature representation output decoder extracted feature encoder input reconstructs original input raw data output encoder decoder constructed stacking multiple layers rbms parameters involved architecture originally trained greedy layer layer manner layer feature detectors learned fed visible variables training rbm current approaches typically apply training stochastic gradient descent methods training repeated stopping criteria satisfied 
39219444	computerscience	ieee international electron devices meeting iedm annual micro nanoelectronics conference held december serves forum reporting technological breakthroughs semiconductor device technologies design manufacturing physics modeling circuit device interaction iedm moore’s law gordon moore published predictions article electronics magazine 1965 refined talk iedm people referring moore law moore’s law complexity integrated circuits double iedm brings managers engineers scientists industry academia government discuss nanometer scale cmos transistor technology advanced memory displays sensors mems devices quantum nanoscale devices emerging phenomena optoelectronics power energy harvesting ultra speed devices process technology device modeling simulation conference encompasses discussions presentations devices silicon compound organic semiconductors emerging material systems addition technical paper presentations iedm includes multiple plenary presentations panel sessions tutorials short courses invited talks entrepreneurship panel session conducted experts field globe 64th annual iedm held hilton san francisco union square hotel december 1–5 2018 sponsor international electron devices meeting sponsored electron devices society institute electrical electronics engineers ieee history annual technical meeting electron devices renamed international electron devices meeting mid 1960s october 24–25 1955 shoreham hotel washington 700 scientists engineers attendance time transistor electron tube reigned predominant electron device technology papers art electron device technology majority companies bell telephone laboratories rca corporation hughes aircraft sylvania electric products electron devices meeting driven factors commercial opportunities fast growing solid branch electronics government desire solid components microwave tubes aerospace defense iedm 2017 2017 ieee international devices meeting hilton san francisco union square december 2–6 2017 highlights included nobel prize winner hiroshi amano speaking ‘transformative electronics’ amd president ceo lisa speaking multi chip technologies performance computing intel globalfoundries detailing competing finfet technology platforms ibm’s dan edelstein retrospective copper interconnect copper interconnect wiring chips revolutionized industry 20 iedm 2016 2016 ieee international devices meeting hilton san francisco union square december 3–7 2016 2016 edition iedm emphasized topics advanced transistors memory technologies brain inspired computing bioelectronics power electronics iedm 2015 2015 international electron devices meeting washington hilton hotel december 5–9 2015 major topics included ultra transistors advanced memories power devices mobile internet iot applications alternatives silicon transistors 3d integrated circuit ic technology broad range papers addressing fastest growing specialized micro nanoelectronics including silicon photonics physically flexible circuits brain inspired computing iedm 2014 2014 international electron devices meeting hilton san francisco union square december 15–17 2014 2014 edition iedm emphasized 14 nm finfet transistor processes power electronics bio sensors mems nems technologies medical applications memory devices display sensor technologies 3d device architectures 
39419809	computerscience	nokia asha platform mobile operating os computing platform designed borderline smartphones based software smarterphone acquired nokia platform inherits ui similarities meego harmattan replaces series 40 nokia devices user interface design team headed peter skillman webos design meego nokia n9 successor meltemi project nokia developing linux platform replace series 40 cancelled july 2012 phone based platform nokia asha 501 asha 500 asha 502 dual sim asha 503 announced nokia october 2013 phone nokia asha 230 announced february 24 2014 pre installed asha platform apps platform java apps rendered nokia xpress browser gecko rendering engine mobile operating lacks true multitasking radio music app background mode advertised multitasking swiping fastlane apps close applications minimizing features notification centre named fastlane accessible swiping left screen platform supplemented nokia software platform nokia customised version android nokia draws cues asha platform including fastlane notification centre company memo released july 2014 announced cutbacks kill asha series 40 range favor solely producing encouraging lumia windows phone products meltemi rumoured project meltemi codename linux based operating handsets reported june 2011 n9 announcement lumia debut nokia ceo stephen elop reportedly referenced meltemi clipper reported june 2012 meltemi project cancelled reasons variously reported restructuring efforts focusing series 40 asha devices fundings start project asha platform insider report claimed device running meltemi os ready axed december 2014 pictures meltemi prototype device leaked internet interface based meego harmattan n9 book operation elop authors called meltemi project biggest secrets elop era nokia project nokia officially confirmed existed authors explain meltemi originated project 2010 ceo olli pekka kallasvuo clipper device sibling nokia lumia 610 tablet device developing markets planned company programme asha platform addition june 2012 announced nokia centre ulm germany development close cuts book main reason meltemi cancellation costs bringing market hit company cash assets hard time financially struggling platform evolution asha platform java apis api nokia gesture api nokia frame animator api file selection api image scaling api network api contact api phone settings api jsr 172 services jsr 177 security trust jsr 179 location jsr 211 content handler jsr 234 multimedia supplements jsr 256 mobile sensor api jsr 238 mobile internationalization jsr 75 file pim jsr 82 bluetooth jsr 118 midp jsr 135 mobile media jsr 139 cldc jsr 184 3d graphics jsr 205 messaging jsr 226 vector graphics supported models nokia asha 501asha platform features compared whatsapp easy capture share videos exchange activesync voip fastlane personalised closely integrated social networks java apis compared share api voip apisupported models asha 500 asha 502 dual sim nokia asha 501 firmware update 11 asha platform features compared 3gjava apis compared nonesupported models asha 503reception verge commented platform recognition nokia unable windows phone smartphone devices hedging commitment windows phone platform competition asha platform main competition firefox os samsung java based rex platform optimised handsets entry level android handsets competition platform 
39791384	computerscience	carplay apple standard enables car radio head unit display controller iphone iphone models ios worldwide vehicle manufacturers incorporating carplay infotainment systems time carplay retrofitted vehicles aftermarket vehicle audio hardware apple major vehicle manufacturers partnering carplay chevrolet lamborghini mercedez benz audi nissan bmw ferrari gmc volvo major brands coming equipped carplay software carplay access apple apps phone music apple maps imessage ibooks podcasts party apps iheartradio radioplayer spotify radio overcast pocket casts google play music clammr npr audiobooks audible developers apply apple entitlement develop carplay enabled apps limited support google maps waze released ios 12 sept 2018 carplay extends siri support voice dictation feedback primary input messages narrating comprehensive weather stock reports displaying weather chart siri inhibits voice commands displaying search carplay hardware carplay software runs connected iphone carplay interface audio display connection car infotainment depending car maker implementation carplay controlled touch screen rotary cursor dial trackpad buttons instrument cluster steering wheel carplay supported specialized aftermarket head units dongle attachment tablet manufacturers cars carplay major brands manufacturers carplay models include lada tesla motors infiniti announced 2019 availability aftermarket head units purchased alpine clarion kenwood pioneer sony jvc history predecessor concept carplay subsequently android auto based apple ios feature called ipod result joint development bmw technology office usa palo alto california apple result exploratory cooperation ipod enabled vehicles infrastructure host analog video audio supporting ios device receiving inputs button presses knob rotations car infotainment drive hosted user interface vehicle built display ios feature announced wwdc 2010 shipped implemented infrastructure bmw vehicles starting 2011 bmw mini option called plugin paved cross oem platforms introducing concept requiring car specific interface apps opposed mirrorlink simple insufficient mirroring smartphone screen development development codename stark apple eddy cue announced ios car 2013 wwdc january 2014 reported apple hardware oriented corporate culture led release delays carplay launched current branding geneva motor march 2014 ferrari mercedes benz volvo car manufacturers adoption june 2013 bmw initially announced carplay implemented changed policy november 2013 siri eyes mode offered dealer installed accessory honda accord acura rdx ilx models december honda offered additional integration featuring hondalink services canada models civic fit september 2014 ferrari car version carplay november 2014 hyundai announced sonata sedan carplay quarter 2015 december 2015 volvo implemented carplay 2016 xc90 january 2016 apple releases list detailing car models support carplay october 2017 2018 honda gold wing motorcycle support carplay january 2018 2019 toyota avalon toyota model apple carplay july 2018 mazda car play support existing vehicles equipped mzd connect supporting vehicles manufactured 2014 competition automotive alliance android auto implementation android devices vehicle manufacturers systems syncing car smartphones bmw assist hyundai blue link ilane myford touch ford sync onstar toyota entune motors released api development apps interact vehicle software systems mirrorlink standard car smartphone connectivity implemented vehicles honda volkswagen seat buick skoda mercedes benz citroën smart phones multiple manufacturers including apple htc sony samsung 
39965010	computerscience	atlas bipedal humanoid robot developed american robotics company boston dynamics funding oversight defense advanced projects agency darpa robot designed variety search rescue tasks unveiled public july 11 2013 design development design production atlas overseen darpa agency united department defense cooperation boston dynamics robot hands developed sandia national laboratories developed irobot 2013 darpa program manager gill pratt compared prototype version atlas child child barely walk child falls lot  atlas based boston dynamics earlier petman humanoid robot hydraulically actuated limbs constructed aluminum titanium stands feet tall weighs 330 pounds 150 kg illuminated blue leds atlas equipped vision systems – laser rangefinder stereo cameras controlled board – hands fine motor skill capabilities limbs possess total 28 degrees freedom atlas navigate rough terrain climb independently arms legs 2013 prototype version tethered power supply october 2013 boston dynamics uploaded video atlas withstand hit projectiles balance leg 2014 atlas robots programmed teams competed darpa robotics challenge robot ability perform tasks including vehicle driving door power tool variety robots competed contest inspired 2011 fukushima daiichi nuclear disaster carries usd prize winning team 2015 darpa robotics finals atlas ihmc robotics named running korean team kaist robot drc hubo margin minutes completing entire time 50 26 atlas generation february 23 2016 boston dynamics released video version atlas robot youtube version atlas designed operate outdoors buildings specialized mobile manipulation adept walking wide range terrain including snow electrically powered hydraulically actuated sensors body legs balance lidar stereo sensors head avoid obstacles assess terrain navigation manipulate objects objects moved version atlas tall head shorter drc atlas weighs atlas november 16 2017 boston dynamics released update video atlas robot youtube video atlas jumping boxes 180 degrees jumping performing backflip 2018 boston dynamics released update video atlas robot youtube video atlas running grass uneven terrain jumping log lying grass october 12 2018 boston dynamics released update video atlas robot youtube video atlas running jumping boxes applications atlas intended aid emergency services search rescue operations performing tasks shutting valves doors operating powered equipment environments humans survive department defense stated 2013 robot offensive defensive warfare 2015 darpa competition robotics atlas complete tasks reactions atlas unveiled public july 11 2013 york times debut striking computers grow legs physical describing robot giant – shaky – step anticipated age humanoid robots gary bradski specialist artificial intelligence declared species robo sapiens emerging 
40205956	computerscience	wolfram language multi paradigm computational communication language developed wolfram programming language mathematical symbolic computation program mathematica wolfram programming cloud emphasizes symbolic computation functional programming rule based programming employ arbitrary structures data includes built functions generating running turing machines creating graphics audio analyzing 3d models matrix manipulations solving differential equations extensively documented wolfram language released raspberry pi 2013 goal raspberry pi users included recommended software bundle raspberry pi foundation beginners caused controversy wolfram language proprietary nature plans port wolfram language intel edison announced board introduction ces 2014 short lived proposal wolfram libraries compatible unity game engine game developers access language level functions naming language officially named june 2013 programming language mathematica forms 30 mathematica initial release 2013 internally referred names wolfram language names wolfram considered include lingua express popular culture stephen wolfram son christopher wolfram involved helping create alien language film arrival wolfram language portions written language wolfram language analyze images attempt interpret served model characters approached film 2017 wolfram live stream internal wolfram language development meetings meetings viewers encouraged submit questions comments development programming language viewers functions developed functions solve complex issues faced stephen wolfram development team live streamed meetings viewed twitch youtube live facebook live 
40409788	computerscience	deep learning convolutional neural network cnn convnet class deep neural networks commonly applied analyzing visual imagery cnns variation multilayer perceptrons designed require minimal preprocessing shift invariant space invariant artificial neural networks siann based shared weights architecture translation invariance characteristics convolutional networks inspired biological processes connectivity pattern neurons resembles organization animal visual cortex individual cortical neurons respond stimuli restricted region visual field receptive field receptive fields neurons partially overlap cover entire visual field cnns pre processing compared image classification algorithms network learns filters traditional algorithms hand engineered independence prior knowledge human effort feature design major advantage applications image video recognition recommender systems image classification medical image analysis natural language processing design convolutional neural network consists input output layer multiple hidden layers hidden layers cnn typically consist convolutional layers relu layer activation function pooling layers connected layers normalization layers description process convolution neural networks convention mathematically cross correlation convolution cross correlation operation significance indices matrix weights convolutional convolutional layers apply convolution operation input passing result layer convolution emulates response individual neuron visual stimuli convolutional neuron processes data receptive field connected feedforward neural networks learn features classify data practical apply architecture images neurons shallow deep architecture input sizes images pixel relevant variable instance connected layer image size 100 100 10000 weights neuron layer convolution operation brings solution reduces parameters allowing network deeper parameters instance image size tiling regions size shared weights requires 25 learnable parameters resolves vanishing exploding gradients training traditional multi layer neural networks layers backpropagation pooling convolutional networks include local global pooling layers combine outputs neuron clusters layer single neuron layer max pooling maximum cluster neurons prior layer average pooling average cluster neurons prior layer connected connected layers connect neuron layer neuron layer principle traditional multi layer perceptron neural network mlp receptive field neural networks neuron receives input locations previous layer connected layer neuron receives input element previous layer convolutional layer neurons receive input restricted subarea previous layer typically subarea square shape size input neuron called receptive field connected layer receptive field entire previous layer convolutional layer receptive entire previous layer weights neuron neural network computes output applying function input values coming receptive field previous layer function applied input values vector weights bias typically real learning neural network progresses incremental adjustments biases weights vector weights bias called filter represents feature input shape distinguishing feature cnns neurons share filter reduces memory footprint single bias single vector weights receptive fields sharing filter receptive field bias vector weights history cnn design vision processing living organisms receptive fields visual cortex hubel wiesel 1950s 1960s cat monkey visual cortexes neurons individually respond regions visual field eyes moving region visual space visual stimuli affect firing single neuron receptive field neighboring cells overlapping receptive fields receptive field size location varies systematically cortex form complete map visual space cortex hemisphere represents contralateral visual field 1968 paper identified basic visual cell types brain hubel wiesel proposed cascading model types cells pattern recognition tasks neocognitron origin cnn architecture neocognitron introduced kunihiko fukushima 1980 inspired mentioned hubel wiesel neocognitron introduced basic types layers cnns convolutional layers downsampling layers convolutional layer units receptive fields cover patch previous layer weight vector set adaptive parameters unit called filter units share filters downsampling layers units receptive fields cover patches previous convolutional layers unit typically computes average activations units patch downsampling helps correctly classify objects visual scenes objects shifted variant neocognitron called cresceptron fukushima spatial averaging weng introduced method called max pooling downsampling unit computes maximum activations units patch max pooling modern cnns supervised unsupervised learning algorithms proposed decades train weights neocognitron cnn architecture trained backpropagation neocognitron require units located multiple network positions trainable weights idea appears 1986 book version paper experiments backpropagation algorithm neocognitrons developed 1988 temporal signals design improved 1998 generalized 2003 simplified time delay neural networks time delay neural network tdnn convolutional network trained gradient descent backpropagation algorithm tdnn introduced 1980s alex waibel japan fukushima earlier published neocognitron original cnn architecture fukushima gradient descent train networks tdnns fixed size convolutional networks share weights temporal dimension speech signals processed time invariantly analogous translation invariance offered cnns tiling neuron outputs cover timed stages image recognition cnns trained gradient descent recognize hand written zip code involved convolutions kernel coefficients laboriously hand designed yann lecun 1989 propagation learn convolution kernel coefficients images hand written learning automatic performed manual coefficient design suited broader range image recognition image types approach foundation modern vision lenet lenet pioneering level convolutional network lecun 1998 classifies digits applied banks recognize hand written checks digitized 32x32 pixel images ability process resolution images requires larger layers convolutional neural networks technique constrained availability computing resources shift invariant neural network shift invariant neural network proposed image character recognition 1988 architecture training algorithm modified 1991 applied medical image processing automatic detection breast cancer mammograms convolution based design proposed 1988 application decomposition dimensional electromyography convolved signals convolution design modified 1989 convolution based designs neural abstraction pyramid feed architecture convolutional neural networks extended neural abstraction pyramid lateral feedback connections recurrent convolutional network flexible incorporation contextual iteratively resolve local ambiguities contrast previous models image outputs resolution generated gpu implementations cnns invented 1980s breakthrough 2000s required fast implementations graphics processing units gpus 2004 jung standard neural networks greatly accelerated gpus implementation 20 times faster equivalent implementation cpu 2005 paper emphasised gpgpu machine learning gpu implementation cnn 2006 chellapilla implementation times faster equivalent implementation cpu subsequent gpus initially types neural networks cnns unsupervised neural networks 2010 dan ciresan idsia deep standard neural networks layers trained gpu supervised learning method backpropagation network outperformed previous machine learning methods mnist handwritten digits benchmark 2011 extended gpu approach cnns achieving acceleration factor 60 impressive 2011 cnns gpu win image recognition contest achieved superhuman performance time 15 2011 september 30 2012 cnns image competitions 2012 improved performance literature multiple image databases including mnist database norb database hwdb1 dataset chinese characters cifar10 dataset dataset 60000 32x32 labeled rgb images subsequently gpu based cnn alex krizhevsky imagenet scale visual recognition challenge 2012 deep cnn 100 layers imagenet 2015 contest distinguishing features traditional multilayer perceptron mlp models image recognition connectivity nodes suffer curse dimensionality scale resolution images 1000×1000 pixel image rgb color channels dimensions feasibly process efficiently scale connectivity cifar images size 32×32×3 32 wide 32 color channels single connected neuron hidden layer regular neural network 32 32 072 weights 200×200 image lead neurons 200 200 120 000 weights network architecture account spatial structure data treating input pixels pixels close ignores locality reference image data computationally semantically connectivity neurons wasteful purposes image recognition dominated spatially local input patterns convolutional neural networks biologically inspired variants multilayer perceptrons designed emulate behavior visual cortex models mitigate challenges posed mlp architecture exploiting strong spatially local correlation natural images opposed mlps cnns distinguishing features properties cnns achieve generalization vision weight sharing dramatically reduces parameters learned lowering memory requirements running network allowing training larger powerful networks building blocks cnn architecture formed stack distinct layers transform input volume output volume holding class scores differentiable function distinct types layers commonly discussed convolutional layer convolutional layer core building block cnn layer parameters consist set learnable filters kernels receptive field extend depth input volume pass filter convolved height input volume computing dot product entries filter input producing dimensional activation map filter result network learns filters activate detects specific type feature spatial position input stacking activation maps filters depth dimension forms output volume convolution layer entry output volume interpreted output neuron region input shares parameters neurons activation map local connectivity dealing dimensional inputs images impractical connect neurons neurons previous volume network architecture spatial structure data account convolutional networks exploit spatially local correlation enforcing sparse local connectivity pattern neurons adjacent layers neuron connected region input volume extent connectivity hyperparameter called receptive field neuron connections local space height extend entire depth input volume architecture ensures learnt filters produce strongest response spatially local input pattern spatial arrangement hyperparameters control size output volume convolutional layer depth stride padding spatial size output volume computed function input volume size kernel field size convolutional layer neurons stride applied padding border calculating neurons fit volume byformula integer strides incorrect neurons tiled fit input volume symmetric setting padding stride ensures input volume output volume size spatially completely neurons previous layer neural network designer decide portion padding parameter sharing parameter sharing scheme convolutional layers control parameters relies reasonable assumption patch feature compute spatial position compute positions denoting single dimensional slice depth depth slice constrain neurons depth slice weights bias neurons single depth slice share parameters pass depth slice convolutional layer computed convolution neuron weights input volume common refer sets weights filter kernel convolved input result convolution activation map set activation maps filter stacked depth dimension produce output volume parameter sharing contributes translation invariance cnn architecture parameter sharing assumption sense input images cnn specific centered structure expect completely features learned spatial locations practical inputs centered image expect eye specific hair specific features learned image common relax parameter sharing scheme simply layer locally connected layer pooling layer concept cnns pooling form linear sampling linear functions implement pooling max pooling common partitions input image set overlapping rectangles region outputs maximum intuitively exact location feature rough location relative features idea pooling convolutional neural networks pooling layer serves progressively reduce spatial size representation reduce parameters memory footprint computation network control overfitting common periodically insert pooling layer successive convolutional layers cnn architecture pooling operation form translation invariance pooling layer operates independently depth slice input resizes spatially common form pooling layer filters size 2×2 applied stride downsamples depth slice input height discarding 75 activations max operation depth dimension remains unchanged addition max pooling pooling units functions average pooling ℓ2 norm pooling average pooling historically fallen favor compared max pooling performs practice aggressive reduction size representation trend filters discarding pooling layers altogether region pooling roi pooling variant max pooling output size fixed input rectangle parameter pooling component convolutional neural networks object detection based fast cnn architecture relu layer relu abbreviation rectified linear unit applies saturating activation function effectively removes negative values activation map setting increases nonlinear properties decision function network receptive fields convolution layer functions increase nonlinearity saturating hyperbolic tangent 11 12 sigmoid function 13 relu preferred functions trains neural network times faster penalty generalization accuracy connected layer finally convolutional max pooling layers level reasoning neural network connected layers neurons connected layer connections activations previous layer regular convolutional artificial neural networks activations computed affine transformation matrix multiplication bias offset vector addition learned fixed bias term loss layer loss layer specifies training penalizes deviation predicted output true labels final layer neural network loss functions tasks softmax loss predicting single class mutually exclusive classes sigmoid cross entropy loss predicting independent probability values 14 euclidean loss regressing real valued labels 15 choosing hyperparameters cnns hyperparameters standard multilayer perceptron mlp usual rules learning rates regularization constants apply mind optimizing filters feature map size decreases depth layers input layer tend filters layers equalize computation layer product feature values pixel position roughly constant layers preserving input require keeping total activations feature maps times pixel positions decreasing layer feature maps controls capacity depends examples task complexity filter shape common filter shapes literature vary greatly chosen based dataset challenge level granularity create abstractions proper scale dataset overfitting max pooling shape typical values 2×2 input volumes warrant 4×4 pooling layers choosing larger shapes dramatically reduce dimension signal result excess loss overlapping pooling windows perform regularization methods regularization process introducing additional solve posed prevent overfitting cnns types regularization empirical dropout connected layer occupies parameters prone overfitting method reduce overfitting dropout training stage individual nodes dropped probability 16 probability 17 reduced network left incoming outgoing edges dropped node removed reduced network trained data stage removed nodes reinserted network original weights training stages probability hidden node dropped input nodes intuitively lost input nodes testing time training finished ideally sample average 18 dropped networks unfeasible values 19 approximation network node output weighted factor 17 expected output node training stages biggest contribution dropout method effectively generates 18 neural nets model combination time single network tested avoiding training nodes training data dropout decreases overfitting method improves training speed model combination practical deep neural networks technique reduce node interactions leading learn robust features generalize data dropconnect dropconnect generalization dropout connection output unit dropped probability 16 unit receives input random subset units previous layer dropconnect dropout introduces dynamic sparsity model differs sparsity weights output vectors layer connected layer dropconnect sparsely connected layer connections chosen random training stage stochastic pooling major drawback dropout benefits convolutional layers neurons connected stochastic pooling conventional deterministic pooling operations replaced stochastic procedure activation pooling region picked randomly multinomial distribution activities pooling region approach hyperparameters combined regularization approaches dropout data augmentation alternate view stochastic pooling equivalent standard max pooling copies input image local deformations explicit elastic deformations input images delivers excellent performance mnist data set stochastic pooling multilayer model exponential deformations selections layers independent artificial data degree model overfitting determined power training receives providing convolutional network training examples reduce overfitting networks trained data approach generate data scratch perturb existing data create input images asymmetrically cropped percent create examples label original explicit stopping simplest methods prevent overfitting network simply training overfitting chance occur disadvantage learning process halted parameters simple prevent overfitting limit parameters typically limiting hidden units layer limiting network depth convolutional networks filter size parameters limiting parameters restricts predictive power network reducing complexity function perform data limits overfitting equivalent norm weight decay simple form regularizer weight decay simply adds additional error proportional sum weights l1 norm squared magnitude l2 norm weight vector error node level acceptable model complexity reduced increasing proportionality constant increasing penalty weight vectors l2 regularization common form regularization implemented penalizing squared magnitude parameters objective l2 regularization intuitive interpretation heavily penalizing peaky weight vectors preferring diffuse weight vectors multiplicative interactions weights inputs property encouraging network inputs inputs lot l1 regularization common form combine l1 l2 regularization called elastic regularization l1 regularization leads weight vectors sparse optimization neurons l1 regularization sparse subset inputs invariant noisy inputs max norm constraints form regularization enforce absolute upper bound magnitude weight vector neuron projected gradient descent enforce constraint practice corresponds performing parameter update normal enforcing constraint clamping weight vector 23 neuron satisfy 24 typical values 25 3–4 papers report improvements form regularization hierarchical coordinate frames pooling loses precise spatial relationships level nose mouth image relationships identity recognition overlapping pools feature occurs multiple pools helps retain translation extrapolate understanding geometric relationships radically viewpoint orientation scale hand people extrapolating shape recognize viewpoint common deal train network transformed data orientations scales lighting network cope variations computationally intensive data sets alternative hierarchy coordinate frames neurons represent conjunction shape feature pose relative retina pose relative retina relationship coordinate frame retina intrinsic features coordinate frame representing embed coordinate frame features recognized consistency poses nose mouth poses consistent prediction pose approach ensures level entity level nose mouth agree prediction pose vectors neuronal activity represent pose pose vectors spatial transformations modeled linear operations easier network learn hierarchy visual entities generalize viewpoints human visual imposes coordinate frames represent shapes applications image recognition cnns image recognition systems 2012 error rate 23 percent mnist database reported paper cnn image classification reported learning process surprisingly fast paper published 2011 achieved mnist database norb database subsequently cnn called alexnet imagenet scale visual recognition challenge 2012 applied facial recognition cnns achieved decrease error rate paper reported 97 percent recognition rate 600 images subjects cnns assess video quality objective manual training root square error imagenet scale visual recognition challenge benchmark object classification detection millions images hundreds object classes ilsvrc 2014 scale visual recognition challenge highly ranked team cnn basic framework winner googlenet foundation deepdream increased average precision object detection 439329 reduced classification error 06656 result network applied 30 layers performance convolutional neural networks imagenet tests close humans algorithms struggle objects ant stem flower person holding quill hand trouble images distorted filters increasingly common phenomenon modern digital cameras contrast kinds images rarely trouble humans humans tend trouble issues classifying objects fine grained categories breed dog species bird convolutional neural networks handle 2015 layered cnn demonstrated ability spot wide range angles including upside partially occluded competitive performance network trained database 200 000 images included angles orientations 20 images batches 128 images 50 000 iterations video analysis compared image data domains applying cnns video classification video complex images temporal dimension extensions cnns video domain explored approach treat space time equivalent dimensions input perform convolutions time space fuse features convolutional neural networks spatial temporal stream short term memory lstm recurrent units typically incorporated cnn account inter frame inter clip dependencies unsupervised learning schemes training spatio temporal features introduced based convolutional gated restricted boltzmann machines independent subspace analysis natural language processing cnns explored natural language processing cnn models effective nlp achieved excellent semantic parsing search query retrieval sentence modeling classification prediction traditional nlp tasks drug discovery cnns drug discovery predicting interaction molecules biological proteins identify potential treatments 2015 atomwise introduced atomnet deep learning neural network structure based rational drug design trains dimensional representations chemical interactions image recognition networks learn compose spatially proximate features larger complex structures atomnet discovers chemical features aromaticity sp3 carbons hydrogen bonding subsequently atomnet predict candidate biomolecules multiple disease targets notably treatments ebola virus multiple sclerosis health risk assessment biomarkers aging discovery cnns naturally tailored analyze collection time series data representing week human physical activity streams augmented rich clinical data including death register nhanes study simple cnn combined cox gompertz proportional hazards model produce proof concept digital biomarkers aging form mortality predictor checkers game cnns game checkers 1999 2001 fogel chellapilla published papers convolutional neural network learn play checkers evolution learning process prior human professional games focused minimal set contained checkerboard location type pieces ultimately program blondie24 tested 165 games players ranked earned win program chinook expert level play cnns december 2014 clark storkey published paper cnn trained supervised learning database human professional games outperform gnu win games monte carlo tree search fuego fraction time fuego play announced 12 layer convolutional neural network correctly predicted professional 55 positions equalling accuracy dan human player trained convolutional network play games search beat traditional search program gnu 97 games matched performance monte carlo tree search program fuego simulating playouts positions couple cnns choosing moves policy network evaluating positions network driving mcts alphago beat human player time fine tuning applications training data convolutional neural networks require training data avoid overfitting common technique train network larger data set domain network parameters converged additional training step performed domain data fine tune network weights convolutional networks applied training sets human interpretable explanations training prediction common practice vision human interpretable explanations required critical systems driving cars black box models suffice advances visual salience spatial temporal attention critical spatial regions temporal instants visualized justify cnn predictions architectures deep networks deep network dqn type deep learning model combines deep cnn learning form reinforcement learning earlier reinforcement learning agents dqns learn dimensional sensory inputs preliminary 2014 accompanying paper february 2015 application atari 2600 gaming deep reinforcement learning models preceded deep belief networks convolutional deep belief networks cdbn structure convolutional neural networks trained deep belief networks exploit 2d structure images cnns pre training deep belief networks provide generic structure image signal processing tasks benchmark standard image datasets cifar cdbns popular culture convolutional neural networks mentioned 2017 infinity born 
40683387	computerscience	memoq proprietary assisted translation software suite runs windows operating systems developed hungarian software company memoq fordítástechnológiai zrt memoq translation technologies provider translation management software established 2004 cited fastest growing companies translation technology sector 2012 2013 memoq translation memory terminology machine translation integration reference management desktop client server application environments history memoq translation environment tool released 2006 product created memoq translation technologies company founded hungary language technologists balázs kis istván lengyel gábor ugray software grown popularity frequent tent applications translation rated cat tool proz study 2013 tool june 2010 survey 458 translators sdl trados wordfast déjà omegat desktop versions translators translator pro edition project managers project manager edition installed hosted server applications offering integration desktop versions browser interface active online forums users provide independent advice support software functions online tutorials created professional trainers active users commercial debut version memoq distributed postcardware configuration 2018 supported memoq editions contained principal modules supporting features integrated environment spelling dictionaries lists nontranslatable terms autocorrection rules auto translation rules enable matching insertion expressions based regular expressions supported source document formats memoq 2015 supports dozens file types including markup tagged formats xml xliff sdlxliff sdl trados studio native format translation opendocument files plain files word excel powerpoint adobe file formats psd pdf indesign supported formats languages memoq link languages file formats handling translation memories glossaries translation memory format memoq proprietary stored files folder bearing translation memory external data imported delimited formats translation memory exchange format tmx translation memory data exported tmx memoq server based translation memories memoq server plug external translation memory sources memoq translation memories bilingual translation translation segments compared translation units stored translation memory exact fuzzy matches inserted translated glossaries handled integrated terminology module glossaries imported tmx delimited formats exported delimited multiterm xml glossaries include languages language variants term matching glossary entries based parameters consideration capitalization partial fuzzy matches factors terms avoided marked forbidden properties glossary entry integration machine translation postediting memoq integrated machine translation postediting translation workflow selection conditions plug machine translation machine generated translation units tus inserted match active translation memory translator post edit machine translation attempt sense memoq includes plug ins support systems omniscien technologies asia online globalese itranslate4 eu kantanmt systran google translate translator pseudotranslation engine systems integrated application programming interface api interoperability cat tools designers memoq consistent policy interoperability functional compatibility software tools processes involving translation implementation standards xliff tmx handling proprietary formats translation support tools providing exchange formats easily handled environments implementation standards translation environment tools memoq implements standards official facto sharing translation files reference include xliff xliff doc tmx translation files tmx delimited standard common format translation memory data import tmx export tbx tmx xml delimited terminology import xml delimited export proprietary format support proprietary formats environments supported extents include star transit project packages pxf ppf sdl trados studio sdlppx sdlxliff trados formats ttx bilingual doc rtf wordfast pro txml project package formats translation file translation memory exchange package terminology settings data transferable translation file formats limitations elements footnote structures bilingual doc rtf files wordfast trados workbench terminology export supports configuration proprietary xml definition sdl multiterm exchange formats memoq supports bilingual exchange formats review translation 
41184517	computerscience	google brain deep learning artificial intelligence team google formed 2010s google brain combines machine learning systems engineering google scale computing resources mission google brain mission machines intelligent improve people lives team focuses constructing models degrees flexibility capable learning features data computation efficiently google brain team describes approach fits broader deep learning subfield ensures ultimately difference practical expertise systems complements approach allowing build tools accelerate unlock practical history called google brain project 2011 time collaboration google fellow jeff dean google researcher greg corrado stanford university professor andrew deep learning techniques crack artificial intelligence 2006 2011 collaborating dean corrado build scale deep learning software distbelief google cloud computing infrastructure google brain started google project successful graduated google astro teller google brain paid entire cost google june 2012 york times reported cluster 16 000 computers dedicated mimicking aspects human brain activity trained recognize cat based digital images youtube videos story covered national public radio smartplanet march 2013 google hired geoffrey hinton leading researcher deep learning field acquired company dnnresearch headed hinton hinton dividing future time university google breakthroughs artificial intelligence devised encryption october 2016 google brain experiment encrypting communications sets devised cryptographic algorithms protect communications time aimed evolving crack generated encryption study proved successful initial ais learn develop communications scratch experiment ais created alice bob eve goal experiment alice send message bob decrypt eve intercept message ais specific instructions encrypt messages solely loss function consequence experiment communications alice bob successful bob misinterpreting alice message eve intercepting communications rounds evolution cryptography alice bob communicate safely study allowed concluding ais devise encryption cryptographic algorithms prescribed reveal breakthrough message encryption future image enhancement february 2017 google brain announced image enhancement neural networks details resolution pictures examples transform pictures 8x8 resolution 32x32 software utilizes neural networks generate images called conditioning network maps pixels resolution picture resolution lowering resolution 8×8 match prior network analyzes pixelated image add details based resolution pictures upscaling original 8×8 picture adds pixels based knowledge picture lastly outputs networks combined create final image represents breakthrough enhancement resolution pictures details real image guesses technology impressive facing real testing enhanced picture real humans fooled time celebrity 28 bedroom pictures compares previous disappointing normal bicubic scaling fool human google translate google brain team reached breakthroughs google translate google brain project september 2016 team launched google neural machine translation gnmt learning framework learn examples introduction increased quality google translate translations pilot languages difficult create improvements 103 languages addressing google brain team develop multilingual gnmt extended previous enabling translations multiple languages shot translations translations languages explicitly google announced google translate translate transcribing neural networks translate speech language language transcribing researchers google brain intermediate step avoided neural networks learn exposed hours spanish audio english layers neural networks replicating human brain link subsequently manipulate audio waveform transformed english robotics traditional robotics robotics researched google brain team automatically learn acquire skills machine learning 2016 google brain team collaborated researchers google demonstrate robotics experiences teach efficiently robots 800 000 grasping attempts 2017 team explored approaches learning skills reinforcement learning interaction objects human demonstration build goal google brain team continue robots learn tasks learning practice deal complex tasks google products project technology android operating speech recognition photo search google video recommendations youtube team location google brain initially established google fellow jeff dean visiting stanford professor andrew 2014 team included jeff dean geoffrey shields greco rado quoc le ilya sutskever alex kelly alex krizhevsky samy bengio vincent vanhoucke 2017 team include anelia angelova samy bengio greg corrado george dahl michael isard anjuli kannan hugo larochelle quoc le chris olah vincent vanhoucke vijay vasudevan fernanda viegas chris lattner created apple programming language swift tesla autonomy team months joined google brain team august 2017 google brain based mountain view california satellite accra amsterdam beijing berlin cambridge massachusetts london montreal york city paris pittsburgh princeton san francisco tokyo toronto zurich google brain residency program google brain residency program targeted people eager devote passion machine learning artificial intelligence enrollees hands experience google team program lasted 12 months program graduates universities degree bas ds science physics mathematics neuroscience industry experience picked researchers google brain team forefront machine learning topics program allowed team flexibly combine professional knowledge application algorithms natural language understanding robotics neuroscience genetics reception google brain received depth coverage wired magazine york times technology review national public radio 
41755648	computerscience	deepmind technologies british artificial intelligence company founded september 2010 owned alphabet company based london centres canada france united acquired google 2014 company created neural network learns play video games fashion humans neural turing machine neural network access external memory conventional turing machine mimics short term memory human brain company headlines 2016 alphago program beat human professional player lee sedol champion game match subject documentary film beat human professional player time october 2015 program alphazero beat powerful programs playing chess shogi japanese chess days play reinforcement learning history start founded demis hassabis shane legg mustafa suleyman 2010 hassabis legg met university college london gatsby computational neuroscience unit interviews demis hassabis start artificial intelligence technology teaching play games seventies eighties primitive compared games included breakout pong space invaders introduced game time prior knowledge rules spending time learning game eventually expert “the cognitive processes human game understand attempt master goal founders create purpose effective major venture capital firms horizons ventures founders fund invested company entrepreneurs scott banister elon musk jaan tallinn investor adviser company 26 january 2014 google announced company acquired deepmind 500 agreed deepmind technologies sale google facebook reportedly negotiations deepmind technologies 2013 company renamed google deepmind 2014 deepmind received company award cambridge laboratory september 2015 deepmind royal nhs trust signed initial sharing agreement isa develop clinical task management app streams google acquisition company established artificial intelligence ethics board ethics board remains mystery google deepmind declining reveal sits board deepmind amazon google facebook ibm founding partnership organization devoted society interface deepmind unit called deepmind ethics society focused ethical societal questions raised artificial intelligence featuring prominent philosopher nick bostrom advisor october 2017 deepmind launched team investigate ethics machine learning deepmind technologies goal solve intelligence achieve combining techniques machine learning systems neuroscience build powerful purpose learning algorithms formalize intelligence implement machines understand human brain demis hassabis explains google released paper 2016 safety avoiding undesirable behaviour learning process deepmind released publications 2017 deepmind released gridworld source testbed evaluating algorithm learns disable kill switch exhibits undesirable behaviours company published systems play games developing systems ranging strategy games arcade games shane legg human level machine intelligence achieved machine learn play wide range games perceptual stream input output transfer understanding games describing playing atari 2600 video games pong game video olympics breakout space invaders seaquest beamrider enduro bert reportedly led company acquisition google hassabis mentioned popular sport game starcraft future challenge requires level strategic thinking handling imperfect demonstration deepmind progress starcraft occurred january 24 2019 starcrafts twitch channel deepmind’s youtube channel july 2018 researchers deepmind trained systems play famous game quake iii arena time spent training caught overtook people game deep reinforcement learning opposed ais ibm deep blue watson developed pre defined purpose function scope deepmind claims pre programmed learns experience raw pixels data input technically deep learning convolutional neural network form learning form model reinforcement learning video games notably arcade games space invaders breakout altering code understand play game time plays games notably breakout efficient game human deepmind played current record games space invaders pac bert deepmind applied video games 1970s 1980s ongoing complex 3d games doom appeared 1990s alpha october 2015 program called alphago developed deepmind beat european champion fan hui dan dan professional time artificial intelligence defeated professional player computers played amateur level considered difficult computers win compared games chess larger possibilities prohibitively difficult traditional methods brute force march 2016 beat lee sedol—a 9th dan player ranked players world—with score game match 2017 future summit alphago game match jie time continuously held ranking supervised learning protocol studying games played humans alphago technology developed based deep reinforcement learning approach alphago rest technologies market alphago ‘brain’ introduced moves based historical tournament data moves increased gradually eventually processed 30 aim mimic human player eventually played learned defeats wins learned improve time increased winning rate result 2017 improved version alphago defeated alphago 100 games alphago strategies taught alphago beat predecessor days processing power alphago comparison original alphago months learn play alphazero modified version alphago gained superhuman abilities chess shogi alphago alphazero learned solely play deepmind artificial intelligence protein folding toughest science december 2018 deepmind tool alphafold 13th critical assessment techniques protein structure prediction casp predicting accurate structure 25 43 proteins “this lighthouse project major investment terms people resources fundamental real scientific demis hassabis guardian demonstration power deepmind application bodes understanding cures diseases serves component potential noble prize worth breakthroughs decade version called alphastar january 24 2019 specialized playing real time strategy game starcraft alphastar reinforced learning learn basics based replays human players played enhance skills time presentation alphastar knowledge equivalent 200 playing time consecutive matches professional players lost technology alphago deep neural networks policy network evaluate probabilities network assess positions policy network trained supervised learning subsequently refined policy gradient reinforcement learning network learned predict winners games played policy network training networks employed lookahead monte carlo tree search mcts policy network identify candidate probability moves network conjunction monte carlo rollouts fast rollout policy evaluated tree positions trained reinforcement learning played millions games guide increase win rate learning games played humans input features black white stones board single neural network separate policy networks simplified tree search relies neural network evaluate positions sample moves monte carlo rollouts reinforcement learning algorithm incorporates lookahead search training loop alphago employed 15 people millions computing resources ultimately computing power alphago running specialized processors google tpus alphago 48 wavenet wavenet deepmind deep generative model raw audio waveforms wavenet originally computationally intensive consumer products debuted 2016 late 2017 ready consumer applications google assistant 2018 google launched commercial speech product cloud speech based wavenet miscellaneous contributions google google stated deepmind algorithms greatly increased efficiency cooling data centers addition deepmind alphabet researchers assists google play personalized app recommendations deepmind collaborated android team google creation features people devices running android pie ninth installment google mobile operating features adaptive battery adaptive brightness machine learning conserve energy devices running operating easier time deepmind techniques scale typical machine learning applications requiring magnitude compute power deepmind health july 2016 collaboration deepmind moorfields eye hospital announced develop applications healthcare deepmind applied analysis anonymised eye scans searching signs diseases leading blindness august 2016 programme university college london hospital announced aim developing algorithm automatically differentiate healthy cancerous tissues head neck projects royal london nhs foundation trust imperial college healthcare nhs trust develop clinical mobile apps linked electronic patient records staff royal hospital reported december 2017 access patient data app saved ‘huge time’ ‘phenomenal’ difference management patients acute kidney injury result data staff mobile phones alerts change patient condition enables staff responded patients visual form november 2017 deepmind announced partnership cancer centre imperial college london goal improving breast cancer detection applying machine learning mammography additionally february 2018 deepmind announced department veterans affairs attempt machine learning predict onset acute kidney injury patients broadly deterioration patients hospital stay doctors nurses treat patients deepmind developed app called streams sends alerts doctors patients risk acute risk injury 13 november 2018 deepmind announced health division streams app absorbed google health privacy advocates announcement betrayed patient trust appeared contradict previous statements deepmind patient data connected google accounts services spokesman deepmind patient data separate google services projects nhs data sharing controversy april 2016 scientist data sharing agreement deepmind royal london nhs foundation trust operates london hospitals estimated patients treated annually agreement deepmind health access admissions discharge transfer data accident emergency pathology radiology critical care hospitals included personal details patients diagnosed hiv suffered depression undergone abortion conduct seek outcomes health conditions complaint filed commissioner office ico arguing data pseudonymised encrypted 2016 scientist published article claiming project failed secure approval confidentiality advisory medicines healthcare products regulatory agency 2017 sky news published leaked letter national data guardian dame fiona caldicott revealing considered opinion data sharing agreement deepmind royal inappropriate legal basis commissioner office ruled july 2017 royal hospital failed comply data protection handed personal data patients deepmind deepmind ethics society october 2017 deepmind expanded focus include ethics google eu policy manager verity harding leading team sean legassick goal fund external themes privacy transparency fairness economic impacts governance accountability managing risk morality values address challenges result team hopes understand ethical implications aid society beneficial subdivision deepmind completely separate unit partnership major tech companies partnership artificial intelligence benefit people society deepmind 
41918927	computerscience	applied mathematical analysis shearlets multiscale framework efficient encoding anisotropic features multivariate classes originally shearlets introduced 2006 analysis sparse approximation functions natural extension wavelets accommodate multivariate functions typically governed anisotropic features edges images wavelets isotropic objects capable capturing phenomena shearlets constructed parabolic scaling shearing translation applied generating functions fine scales essentially supported skinny directional ridges parabolic scaling law reads length² wavelets shearlets affine unified treatment continuum digital situation leading faithful implementations constitute orthonormal basis form frame allowing stable expansions arbitrary functions properties shearlets ability provide optimally sparse approximations sense optimality cartoon functions imaging sciences cartoon functions serve model anisotropic features compactly supported closed piecewise singularity curve bounded curvature decay rate error term shearlet approximation largest coefficients shearlet expansion optimal log factor constant 12 depends maximum curvature singularity curve maximum magnitudes 14 15 approximation rate improves term approximation rate wavelets providing 17 class functions shearlets directional representation sparse approximation anisotropic features providing unified treatment continuum digital realm faithful implementation extensions shearlet systems 18 comprehensive presentation theory applications shearlets definition continuous shearlet systems construction continuous shearlet systems based parabolic scaling matrices change resolution shear matrices change orientation finally translations change positioning comparison curvelets shearlets shearings rotations advantage shear operator 21 leaves integer lattice invariant 22 23 unified treatment continuum digital realm guaranteeing faithful digital implementation 24 continuous shearlet generated 25 defined asand continuous shearlet transform mapdiscrete shearlet systems discrete version shearlet systems 28 discretizing parameter set 29 numerous approaches popular byfrom discrete shearlet shearlet generator 25 defined byand discrete shearlet transform defined byexamples 34 function satisfying discrete calderón condition 36 37 38 denotes fourier transform instance choose 40 meyer wavelet 41 42 43 andone typically chooses 45 smooth bump function 24 byis called classical shearlet discrete shearlet 48 constitutes parseval frame consisting bandlimited functions compactly supported shearlet systems compactly supported function 24 chosen 48 forms frame shearlet elements 48 compactly supported providing superior spatial localization compared classical shearlets bandlimited compactly supported shearlet form parseval frame function represented shearlet expansion frame property cone adapted shearlets drawback shearlets defined directional bias shearlet elements shearing parameters recognizable frequency tiling classical shearlets figure examples frequency support shearlet increasingly aligns 55 axis shearing parameter 56 infinity analyzing function fourier transform concentrated 55 axis deal frequency domain divided frequency conic regions figure cone adapted discrete shearlet consists frequency domains generated functions 59 lattice sampling factor 60wherewiththe systems 64 65 basically reversed roles 66 67 correspond conic regions 68 69 finally scaling function 70 frequency 71 
42003835	computerscience	tango named project tango testing augmented reality computing platform developed authored advanced technology projects atap skunkworks division google vision enable mobile devices smartphones tablets detect position relative gps external signals application developers create user experiences include indoor navigation 3d mapping physical space measurement environmental recognition augmented reality windows virtual product emerge atap tango developed team led scientist johnny lee core contributor kinect interview june 2015 lee developing hardware software technologies understand precisely google produced devices demonstrate tango technology discontinued peanut phone yellowstone inch tablet 000 devices sold june 2015 chiefly researchers software developers building applications platform summer 2015 qualcomm intel announced developing tango reference devices models device manufacturers mobile chipsets ces january 2016 google announced partnership lenovo release consumer smartphone summer 2016 feature tango technology marketed consumers noting 500 price form factor inches time companies announced application incubator applications developed device launch lenovo tech 2016 lenovo launched consumer phone based tango releasing tango 15 december 2017 google announced support tango march 2018 favor arcore overview tango emerging 3d sensing vision products designed standalone mobile phone tablet chiefly concerned determining device position orientation environment software integrating types functionality generate data device degrees freedom axes orientation axes position detailed dimensional environment project tango project graduate google 2012 applications mobile devices tango java apis access data real time addition api integrating tango unity game engine enables rapid conversion creation games user interact navigate game space moving rotating tango device real space apis documented google developer applications tango enables apps track device position orientation detailed 3d environment recognize environments applications store navigation visual measurement mapping utilities presentation design tools variety immersive games augmented expo 2015 johnny lee demonstrated construction game builds virtual structure real space showroom app users view size virtual automobile customize features hybrid nerf gun mounted tango screen dodging shooting monsters superimposed reality multiplayer vr app multiple players converse virtual space avatar movements match real life movements tango apps distributed play google encouraged development apps hackathons app contest promotional discounts development tablet tango apps measureit measuring objects solar simulator wayfair testing furniture arrangements cydalion navigation app people visual impairments devices platform software developers model device manufacturers google created tango devices peanut phone peanut production tango device released quarter 2014 android phone qualcomm msm8974 quad core processor additional special hardware including fisheye motion camera rgb camera color image infrared depth detection movidius vision processing units performance accelerometer gyroscope testing competing models mars lab university minnesota peanut devices distributed access partners including university researchers vision robotics application developers technology startups google stopped supporting peanut device september 2015 tango software stack evolved versions android device yellowstone tablet yellowstone inch tablet tango functionality released june 2014 sold project tango tablet development kit features 3 ghz quad core nvidia tegra k1 processor 128gb flash memory 1920x1200 pixel touchscreen 4mp color camera fisheye lens motion tracking camera projector rgb camera integrated depth sensing 4g lte connectivity device sold official project tango google play store 27 2017 tango tablet considered officially unsupported google testing nasa 2014 peanut phones delivered international space station nasa project develop autonomous robots navigate variety environments including outer space soccer ball sized 18 sided polyhedral spheres robots developed nasa ames center adjacent google campus mountain view california andres martinez spheres manager nasa researching effective tango vision based navigation abilities performing localization navigation mobile flyer iss intel realsense smartphone announced intel developer forum august 2015 offered public developer kit january 2016 incorporated realsense zr300 camera optical features required tango fisheye camera lenovo phab pro lenovo phab pro commercial smartphone tango technology device announced 2016 launched august purchase november phab pro inch screen snapdragon 652 processor 64 internal storage rear facing 16 megapixels camera camera asus zenfone asus zenfone announced ces 2017 commercial smartphone tango technology runs tango daydream vr snapdragon 821 6gb 8gb ram 128 256gb internal memory depending configuration exclusive launch carrier announced verizon targeted release summer 2017 collaborators partners creating project tango google collaborated developers countries organizations including bosch bsquare compalcomm eth zurich flyby media george washington university mmsolutions movidius university minnesota mars lab jpl vision ologic omnivision source robotics foundation paracosm sunny optical technology pmd technologies mantis vision prizmiq intermodalics sagivtech partnerships announced companies include apelab autodesk aisle411 bosch defective studios durovis dive infineon jpl left field labs legacy games limbic moback nvyve omnivision otherworld interactive pmd technologies sagivtech sidekick speck design stinkdigital inuitive 
42119832	computerscience	cortana virtual assistant created windows windows mobile windows phone invoke smart speaker band surface headphones xbox ios android windows mixed reality amazon alexa cortana set reminders recognize natural voice requirement keyboard input answer questions bing search engine cortana english portuguese french german italian spanish chinese japanese language editions depending software platform region history cortana demonstrated time build developer conference april 2–4 2013 san francisco launched key ingredient planned makeover future operating systems windows phone windows named cortana synthetic intelligence character halo video game franchise originating bungie folklore jen taylor character voice actress returning voice personal assistant specific version development development cortana started 2009 speech products team manager zig serafin chief scientist larry heck heck serafin established vision mission range plan digital personal assistant built team expertise create initial prototypes cortana develop cortana digital assistant team interviewed human personal assistants interviews inspired unique features cortana including assistant notebook feature originally cortana meant codename petition windows phone uservoice proved popular codename official expansion platforms january 2015 announced availability cortana windows desktops mobile devices merging windows phone operating 26 2015 announced cortana mobile platforms android release set july 2015 android apk file cortana leaked release officially released ios version december 2015 e3 2015 announced cortana xbox universally designed windows update console cortana services integrated cortana numerous products edge browser bundled windows cortana assistant deeply integrated edge browser cortana hours restaurant sites retail coupons websites weather address bar worldwide partners conference 2015 demonstrated cortana integration upcoming products gigjam conversely announced late april 2016 block bing edge complete cortana searches raising questions anticompetitive behavior company windows car concept includes cortana concept drivers restaurant reservations build 2016 announced plans integrate cortana skype instant messaging service bot users food book trips transcribe video messages calendar appointments cortana addition bots cortana underline phrases skype conversations relate contacts corporations writer engadget criticised cortana integration skype responding specific keywords feeling chatting search engine impersonal bots replied bing music bot brought adele song announced build 2016 cortana cloud synchronise notifications windows mobile windows action center notifications android devices december 2016 announced preview calendar service enabled people delegate scheduling meetings cortana users interact cortana including email conversations cortana check people availability outlook calendar google calendar email schedule meeting service relied automation human based computation 2017 collaboration harman kardon announced invoke voice activated speaker featuring cortana premium speaker cylindrical design offers 360 degree sound ability receive calls skype features cortana functionality cortana set reminders recognize natural voice requirement keyboard input answer questions bing search engine current weather traffic conditions sports scores biographies searches windows bing search engine links edge screen reader narrator links internet explorer windows phone universal bing smartsearch features incorporated cortana replaces previous bing search app activated user presses search button device cortana includes music recognition service cortana simulate rolling dice flipping coin cortana concert watch monitors bing searches determine bands musicians user integrates band watch band windows phone devices connected bluetooth reminders phone notifications lumia denim mobile phone series launched october 2014 active listening cortana enabling invoked phrase hey cortana controlled usual devices united kingdom o2 received lumia denim update feature clarified bug fixed cortana integrates services foursquare provide restaurant local attraction recommendations lifx control smart light bulbs notebook cortana stores personal location data reminders contacts notebook draw add data learn user specific patterns behaviors users view collected control privacy level control comparable assistants users delete notebook reminders cortana built reminders specific contact remind user communication contact specific time phone specific location originally reminders specific device cortana installed windows synchronises reminders devices design versions cortana form nested animated circles animated activities searching talking main color scheme includes black white background shades blue respective circles phone notification syncing cortana windows mobile android capable capturing device notifications sending windows device user view notifications phone windows action center feature announced 2016 released miscellaneous cortana disturb mode users quiet hours windows phone users users change settings cortana calls users names nicknames library easter eggs pre determined remarks prediction cortana correctly predicted winners 14 matches football 2014 fifa cup knockout stage including semi finals incorrectly picked brazil netherlands play match streak topped paul octopus correctly predicted germany 2010 fifa cup matches final cortana forecast sports nba nfl super bowl icc cricket cup european football leagues cortana solve mathematical equations convert units measurement determine exchange rates currencies including bitcoin integrations cortana integrate party apps windows service starting late 2016 cortana integrated wunderlist service allowing cortana add reminders skills build 2017 conference announced cortana party skills capability amazon alexa feb 16 2018 announced connected skills ecobee honeywell lyric honeywell total connect comfort lifx link kasa geeni support ifttt august 15 2018 cortana alexa integration public preview privacy concerns cortana indexes stores user disabled windows search search local cortana delete user data stored servers deleted user action criticized requests bing file called threshold appcache cortana searches start menu cortana disabled windows cortana disabled users aged 13 regions languages version cortana speaks british accent british idioms chinese version xiao speaks mandarin chinese icon featuring eyes regions united kingdom english localised version cortana voiced ginnie watson anglo french actress singer songwriter voice artist united english localised version cortana voiced jen taylor voice actress voices cortana namesake virtual assistant halo video game series table identifies localized version cortana applies windows mobile windows versions assistant technology natural language processing capabilities cortana derived tellme networks bought 2007 coupled semantic search database called satori updating cortana updates delivered independently main windows phone os allowing provide features faster pace cortana features updated manner features hey cortana require windows phone update service qualcomm snapdragon sensorcore technology 
42153967	computerscience	file scigen sample png thumb fake paper construction location identitysplit created scigen paper generator software composes scholarly papers style academic journals conference proceedings typically generator technical jargon field compose sentences grammatically correct erudite nonsensical prose supported tables figures references valid randomly inserted relevant examples include postmodernism generator snarxiv scigen generate science papers accepted publication 
42164234	computerscience	apache spark source distributed purpose cluster computing framework originally developed university california berkeley amplab spark codebase donated apache software foundation maintained spark interface programming entire clusters implicit data parallelism fault tolerance overview apache spark architectural foundation resilient distributed dataset rdd read multiset data items distributed cluster machines maintained fault tolerant dataframe api released abstraction rdd dataset api spark rdd primary application programming interface api spark dataset api encouraged rdd api deprecated rdd technology underlies dataset api spark rdds developed 2012 response limitations mapreduce cluster computing paradigm forces linear dataflow structure distributed programs mapreduce programs read input data disk map function data reduce map store reduction disk spark rdds function set distributed programs offers deliberately restricted form distributed shared memory spark facilitates implementation iterative algorithms visit data set multiple times loop interactive exploratory data analysis repeated database style querying data latency applications reduced magnitude compared apache hadoop mapreduce implementation class iterative algorithms training algorithms machine learning systems formed initial impetus developing apache spark apache spark requires cluster manager distributed storage cluster management spark supports standalone native spark cluster hadoop yarn apache mesos distributed storage spark interface wide variety including hadoop distributed file hdfs mapr file mapr fs cassandra openstack swift amazon s3 kudu custom solution implemented spark supports pseudo distributed local mode development testing purposes distributed storage required local file scenario spark single machine executor cpu core spark core spark core foundation project distributed task dispatching scheduling basic functionalities exposed application programming interface java python scala centered rdd abstraction java api jvm languages usable jvm languages julia connect jvm interface mirrors functional model programming driver program invokes parallel operations map filter reduce rdd passing function spark schedules function execution parallel cluster operations additional joins rdds input produce rdds rdds immutable operations lazy fault tolerance achieved keeping track lineage rdd sequence operations produced reconstructed data loss rdds type python java scala objects rdd oriented functional style programming spark restricted forms shared variables broadcast variables reference read data nodes accumulators program reductions imperative style typical rdd centric functional programming scala program computes frequencies occurring set files prints common variant takes anonymous function performs simple operation single data item pair items applies argument transform rdd rdd spark sql spark sql component spark core introduced data abstraction called dataframes support structured semi structured data spark sql domain specific language dsl manipulate dataframes scala java python sql language support command interfaces odbc jdbc server dataframes lack compile time type checking afforded rdds spark typed dataset supported spark sql spark streaming spark streaming spark core fast scheduling capability perform streaming analytics ingests data mini batches performs rdd transformations mini batches data design enables set application code written batch analytics streaming analytics facilitating easy implementation lambda architecture convenience penalty latency equal mini batch duration streaming data engines process event event mini batches include storm streaming component flink spark streaming support built consume kafka flume twitter zeromq kinesis tcp ip sockets spark separate technology based datasets called structured streaming level interface support streaming mllib machine learning library spark mllib distributed machine learning framework spark core distributed memory based spark architecture times fast disk based implementation apache mahout benchmarks mllib developers alternating squares als implementations mahout gained spark interface scales vowpal wabbit common machine learning statistical algorithms implemented shipped mllib simplifies scale machine learning pipelines including graphx graphx distributed graph processing framework apache spark based rdds immutable graphs immutable graphx unsuitable graphs updated transactional manner graph database graphx separate apis implementation massively parallel algorithms pagerank pregel abstraction mapreduce style api predecessor bagel formally deprecated spark graphx support property graphs graphs properties attached edges vertices graphx viewed spark memory version apache giraph utilized hadoop disk based mapreduce apache spark graphx initially started project uc berkeley amplab databricks donated apache software foundation spark project history spark initially started matei zaharia uc berkeley amplab 2009 sourced 2010 bsd license 2013 project donated apache software foundation switched license apache february 2014 spark level apache project november 2014 spark founder zaharia company databricks set record scale sorting spark spark excess 1000 contributors 2015 active projects apache software foundation active source data projects popularity platform 2014 paid programs assembly fellowships data incubator started offering customized training courseshosting spark cloud spark deployed traditional premises data center cloud cloud organizations deploy spark acquire hardware specific setup expertise providers amazon services google cloud platform offering managed spark solutions enterprise strategy esg global 43 respondents cloud primary deployment spark reasons customers perceived cloud advantage spark faster time deployment availability frequent feature functionality updates elasticity geographic coverage costs linked actual utilization 
42792244	computerscience	riot operating networked memory constrained systems focus power wireless internet iot devices source software released gnu lesser public license lgpl unclonable license independent community riot referred linux internet background initially developed freie universität berlin fu berlin institut national recherche en informatique en automatique inria hochschule für angewandte wissenschaften hamburg haw hamburg riot kernel inherited firekernel originally developed sensor networks technical aspects riot based microkernel architecture contrast operating systems memory tinyos contiki riot application programming programming languages multithreading real time abilities riot runs bit avr atmega 16 bit ti msp430 32 bit arm cortex processors native port enables riot linux macos process enabling standard development debugging tools gnu compiler collection gcc gnu debugger valgrind wireshark riot partly portable operating interface posix compliant riot multiple network stacks including ipv6 6lowpan content centric networking standard protocols rpl user datagram protocol udp transmission control protocol tcp coap source code riot source code github developed international community source developers 
43144075	computerscience	android auto mobile app developed google mirror features android device smartphone car compatible dash entertainment head unit dashcam android device paired head unit mirrors qualified apps device vehicle display simple driver friendly user interface supported apps include gps mapping navigation music playback sms telephone search supports touchscreen button controlled head unit displays hands operation voice commands encouraged minimize driving distraction android auto debuted google 2014 app released 19 march 2015 android auto automotive alliance announced 2014 joint effort 28 automobile manufacturers nvidia tech supplier 28 countries functionality common android auto deployed android mobile device running android auto app acting master vehicle dashboard head unit supports functionality user android device connected vehicle head unit serve external display android device supported software car specific user interface android auto app android auto iterations device required connected usb car alternatively november 2016 google option android auto regular app android device tethered car head unit android powered head units simply personal phone tablet vehicle addition january 2018 announced jvckenwood exhibiting wireless android auto enabled head units ces 2018 capable operating wired connection availability android auto january 2019 36 countries availability apps varies app support android auto sdk released allowing parties modify apps android auto initially apis music messaging apps expected android auto mobile device access automobile sensors inputs gps quality gps antennas steering wheel mounted buttons sound directional speakers directional microphones wheel speed compass mobile antennas partial access car data feature development ces 2018 google confirmed google assistant coming android auto supported apps include gps navigationmusictelephony messagingpodcasts podcatchersyou list android auto compatible apps google play store head unit support 2015 hyundai manufacturer offer android auto support 2015 hyundai sonata automobile manufacturers offer android auto support cars include abarth acura alfa romeo audi bentley buick cadillac chevrolet chrysler dodge fiat ford gmc honda hyundai infiniti jaguar land rover jeep kia lamborghini lexus lincoln mahindra mahindra maserati mazda mercedes benz mitsubishi nissan opel peugeot ram renault seat Škoda ssangyong subaru suzuki tata motors cars volkswagen volvo additionally aftermarket car audio systems supporting android auto add technology host vehicles including pioneer kenwood panasonic sony 
43169442	computerscience	eclipse deeplearning4j deep learning programming library written java java virtual machine jvm computing framework wide support deep learning algorithms deeplearning4j includes implementations restricted boltzmann machine deep belief deep autoencoder stacked denoising autoencoder recursive neural tensor network word2vec doc2vec glove algorithms include distributed parallel versions integrate apache hadoop spark deeplearning4j source software released apache license developed machine learning headquartered san francisco tokyo led adam gibson supported commercially startup skymind bundles dl4j tensorflow keras deep learning libraries enterprise distribution called skymind intelligence layer deeplearning4j contributed eclipse foundation october 2017 introduction deeplearning4j relies programming language java compatible clojure includes scala application programming interface api powered source numerical computing library nd4j central processing units cpus graphics processing units gpus deeplearning4j commercial academic applications code hosted github support forum maintained gitter framework composable meaning shallow neural nets restricted boltzmann machines convolutional nets autoencoders recurrent nets create deep nets varying types extensive visualization tools computation graph distributed training deeplearning4j occurs cluster neural nets trained parallel iterative reduce hadoop yarn spark deeplearning4j integrates cuda kernels conduct pure gpu operations distributed gpus scientific computing jvm deeplearning4j includes dimensional array class nd4j scientific computing java scala functions numpy python effectively based library linear algebra matrix manipulation production environment datavec vectorization library machine learning datavec vectorizes file formats data types input output format hadoop mapreduce data types columns scalars termed vectors datavec designed vectorize csvs images sound video time series nlp deeplearning4j includes vector space modeling topic modeling toolkit implemented java integrating parallel gpus performance designed handle sets deeplearning4j includes implementations term frequency–inverse document frequency tf–idf deep learning mikolov word2vec algorithm doc2vec glove reimplemented optimized java relies distributed stochastic neighbor embedding sne word cloud visualizations real integrations real deeplearning4j include network intrusion detection cybersecurity fraud detection financial sector anomaly detection industries manufacturing recommender systems commerce advertising image recognition deeplearning4j integrated machine learning platforms rapidminer prediction weka machine learning model server deeplearning4j serves machine learning models inference production developer edition skil skymind intelligence layer model server serves parametric machine learning models decisions data inference stage machine learning workflow data pipelines model training model server tool data science deployed real production environment server internet model server server receives request returns data model server receives data returns decision prediction data image model server return label image identifying animals photographs skil model server import models python frameworks tensorflow keras theano cntk overcoming major barrier deploying deep learning models benchmarks deeplearning4j fast caffe trivial image recognition tasks multiple gpus programmers unfamiliar hpc jvm parameters adjusted optimize neural network training time include setting heap space garbage collection algorithm employing heap memory pre saving data pickling faster etl optimizations lead 10x acceleration performance deeplearning4j api languages java scala python clojure kotlin deeplearning4j multiple api languages including java scala python clojure kotlin scala api called scalnet keras serves python api clojure wrapper dl4clj core languages performing scale mathematical operations deep learning cuda tensorflow keras deeplearning4j tensorflow keras deeplearning4j deeplearning4j import models tensorflow python frameworks created keras 
43269639	computerscience	bernd bruegge born 1951 german scientist professor technische universität münchen tum head chair applied software engineering adjunct associate professor carnegie mellon university cmu pittsburgh bibliography born 1951 bruegge received bachelor degree science university hamburg 1978 master degree science carnegie mellon university 1982 phd degree science carnegie mellon university 1985 bruegge professor technische universität münchen munich 1997 2000 2003 deutsche telekom committee committee munich district nonprofit association 2003 cio colloquium scientific advisory board 2009 bruegge liaison professor german national academic foundation bruegge received awards principal modeling semantics computational intelligence machine learning knowledge management representation process support human factors process models methodologiespublications bernd bruegge author books author academic papers 
43502368	computerscience	machine learning vanishing gradient difficulty training artificial neural networks gradient based learning methods backpropagation methods neural network weights receives update proportional partial derivative error function respect current weight iteration training gradient vanishingly effectively preventing weight changing worst completely neural network training traditional activation functions hyperbolic tangent function gradients range backpropagation computes gradients chain rule multiplying compute gradients layers layer network meaning gradient error signal decreases exponentially layers train slowly propagation allowed researchers train supervised deep artificial neural networks scratch initially success hochreiter diploma thesis 1991 formally identified reason failure vanishing gradient layered feedforward networks recurrent networks trained unfolding deep feedforward networks layer created time step input sequence processed network activation functions derivatives larger values risks encountering exploding gradient solutions multi level hierarchy overcome methods proposed jürgen schmidhuber multi level hierarchy networks 1992 pre trained level time unsupervised learning fine tuned backpropagation level learns compressed representation observations fed level approach ideas feed neural network unsupervised pre training structure neural network learn feature detectors network trained supervised propagation classify labeled data deep belief network model hinton 2006 involves learning distribution level representation successive layers binary real valued latent variables restricted boltzmann machine model layer level features layer guarantees increase bound log likelihood data improving model trained properly layers learned deep architecture generative model reproducing data sampling model ancestral pass level feature activations hinton reports models effective feature extractors dimensional structured data short term memory technique recurrent neural networks short term memory lstm network 1997 hochreiter schmidhuber 2009 deep multidimensional lstm networks demonstrated power deep learning nonlinear layers winning icdar 2009 competitions connected handwriting recognition prior knowledge languages learned faster hardware hardware advances meant 1991 2015 power delivered gpus increased fold standard backpropagation feasible networks layers deeper vanishing gradient recognized schmidhuber notes basically winning image recognition competitions reallyovercome fundamental original models tackling vanishing gradient hinton 2006 trained xeon processor gpus residual networks effective resolve vanishing gradient residual neural networks resnets confused recurrent neural networks prior resnets deeper network training error shallow network intuitively understood data disappearing layers network meaning output shallow layer diminished layers deeper network yielding worse result intuitive hypothesis splitting deep network layer chunks passing input chunk straight chunk residual output chunk input chunk reintroduced helped eliminate disappearing signal extra parameters learning algorithm resnets yielded training error error shallower counterparts simply reintroducing outputs shallower layers network compensate vanishing data note resnets ensemble shallow nets resolve vanishing gradient preserving gradient flow entire depth network – avoid simply constructing ensembles short networks ensemble construction activation functions rectifiers relu suffer vanishing gradient saturate direction behnke relied sign gradient rprop training neural abstraction pyramid solve image reconstruction localization neural networks optimized universal search algorithm space neural network weights random guess systematically genetic algorithm approach based gradient avoids vanishing gradient 
43561218	computerscience	word embedding collective set language modeling feature learning techniques natural language processing nlp phrases vocabulary mapped vectors real conceptually involves mathematical embedding space dimension word continuous vector space dimension methods generate mapping include neural networks dimensionality reduction word occurrence matrix probabilistic models explainable knowledge base method explicit representation terms context word phrase embeddings underlying input representation boost performance nlp tasks syntactic parsing sentiment analysis development technique linguistics word embeddings discussed distributional semantics aims quantify categorize semantic similarities linguistic items based distributional properties samples language data underlying idea word characterized company popularized firth technique representing vectors roots 1960s development vector space model retrieval reducing dimensions singular decomposition led introduction latent semantic analysis late 1980s 2000 bengio series papers neural probabilistic language models reduce dimensionality representations contexts learning distributed representation bengio 2003 word embeddings styles expressed vectors occurring expressed vectors linguistic contexts occur styles studied lavelli 2004 roweis saul published science locally linear embedding lle discover representations dimensional data structures developed gradually 2010 partly advances quality vectors training speed model branches word embeddings 2013 team google led tomas mikolov created word2vec word embedding toolkit train vector space models faster previous approaches word embedding techniques rely neural network architecture traditional gram models unsupervised learning limitations main limitations word embeddings word vector space models meanings word conflated single representation single vector semantic space sense embeddings solution individual meanings represented distinct vectors space biological sequences biovectors word embeddings grams biological sequences dna rna proteins bioinformatics applications proposed asgari mofrad named bio vectors biovec refer biological sequences protein vectors protvec proteins amino acid sequences gene vectors genevec gene sequences representation applications deep learning proteomics genomics asgari mofrad biovectors characterize biological sequences terms biochemical biophysical interpretations underlying patterns vectors vectors extension word embeddings entire sentences documents researchers hope improve quality machine translation software software training word embeddings includes tomas mikolov word2vec stanford university glove allennlp elmo fasttext gensim indra deeplearning4j principal component analysis pca distributed stochastic neighbour embedding sne reduce dimensionality word vector spaces visualize word embeddings clusters examples application instance fasttext calculate word embeddings corpora sketch engine online 
44232885	computerscience	honda uni cub concept axis balancing personal transporter barrier indoor environments osaka motor 2013 history successor 2009 honda u3 demonstrated osaka motor 2013 launch announced design operation controlled weight shifting manner segway unit balancing direction including sideways wheels larger driving wheel travelling direction trailing steering wheel 90 degrees drive wheel steering wheel constructed multiple planet wheels wheel moved laterally moving main wheel powered planet wheels steering wheel rotate avoid steering wheel dragging steering wheel rotated balance balance laterally planet wheels drive wheel powered appropriately measuring 510 315 620 weighing 25 uni cub powered lithium ion battery speed range seat height 620 footrests designed double support stands 
44359594	computerscience	fei fei born 1976 publishes fei fei professor science stanford university director stanford university human centered institute stanford vision learning lab served director stanford artificial intelligence lab sail 2013 2018 2017 founded ai4all nonprofit organization increase diversity inclusion field artificial intelligence expertise includes artificial intelligence machine learning deep learning vision cognitive neuroscience prolific researchers field leading scientist principal investigator imagenet critical dataset vision project deep learning revolution education immigrated china family settled parsippany troy hills jersey graduated parsippany school 1995 inducted hall fame parsippany school 2017 degree physics princeton university 1999 honors phd degree electrical engineering california institute technology caltech 2005 primary phd supervisor pietro perona secondary supervisor christof koch faculty caltech time study graduate studies supported national science foundation graduate fellowship paul daisy soros fellowships americans career 2005 august 2009 assistant professor electrical engineering department university illinois urbana champaign science department princeton university joined stanford 2009 assistant professor promoted associate professor tenure 2012 professor 2017 stanford served director stanford artificial intelligence lab sail 2013 2018 overseeing fastest growth lab period founding director stanford’s university level initiative human centered institute director dr john etchemendy provost stanford university sabbatical stanford university january 2017 fall 2018 joined google cloud chief scientist vice president google team focuses democratizing technology lowering barrier entrance businesses developers including developments products automl returned stanford university continue professorship fall 2018 nonprofit founder chairperson nonprofit organization ai4all mission educate generation technologists thinkers leaders promoting diversity inclusion human centered principles prior’s establishing ai4all 2017 student olga russakovsky assistant professor princeton university founded directed precursor program stanford called sailors stanford lab outreach summers sailors annual summer camp stanford dedicated 9th grade school girls education established 2015 changed ai4all stanford 2017 2018 ai4all launched summer programs addition stanford including princeton university carnegie melon university boston university california berkeley canada’s simon fraser university machine learning vision cognitive neuroscience computational neuroscience published 180 peer reviewed papers appears science neuroscience journals including nature proceedings national academy sciences journal neuroscience conference vision pattern recognition international conference vision conference neural processing systems european conference vision international journal vision ieee transactions pattern analysis machine intelligence pioneer researcher bringing humanity imagenet project revolutionized field scale visual recognition lead team students collaborators organize international competition imagenet recognition tasks called imagenet scale visual recognition challenge ilsvrc 2010 2017 academic community “many catalyst boom experiencing today” article quartz li’s vision contributed called natural scene understanding story telling images recognized international association pattern recognition 2016 delivered talk main stage ted vancouver 2015 viewed times fei fei li’s expanded healthcare collaborating closely prof arnold milstein stanford recognized national leader improving healthcare delivery 
44578554	computerscience	machine learning mathematical optimization loss functions classification computationally feasible loss functions representing price paid inaccuracy predictions classification identifying category observation belongs vector space inputs     –1 vector space outputs function maps incomplete noise measurement probabilistic components underlying process generate result goal learning minimize expected risk defined aswhere loss function probability density function process generated data equivalently written asin practice probability distribution unknown utilizing training set 12 independently identically distributed sample pointsdrawn data sample space seeks minimize empirical riskas proxy expected risk statistical learning theory detailed description computational ease standard practice write loss functions functions variable classification loss functions written solely terms product true classifier predicted 16 selection loss function frameworkimpacts optimal 18 minimizes empirical risk computational complexity learning algorithm binary nature classification natural selection loss function assuming equal cost false positives false negatives 0–1 indicator function takes predicted classification equals true class predicted classification match true class selection modeled bywhere 20 heaviside step function loss function convex smooth solving optimal solution hard combinatorial optimization result substitute continuous convex loss function surrogates tractable commonly learning algorithms addition computational tractability solutions learning loss surrogates recovery actual solution original classification surrogates bounds classification utilizing bayes theorem optimal 21 binary classification equivalent tofurthermore convex loss function 23 24 function minimizes loss 25 26 decreasing neighborhood 27where 28 sign function proof note 25 practice loss function differentiable origin confers consistency property convex loss functions convex loss functions lead consistent 0–1 loss function presence infinite data bound difference convex loss function expected risk simplifying expected risk classification properties binary classification simplify calculation expected risk integral equality properties equality −1 values fourth 32 result solve minimizers 33 convex loss functions properties differentiating equality respect 34 setting derivative equal minimizers loss function surrogates easily functions 16 36 square loss commonly regression square loss function written function 37 utilized classification defined asthe square loss function convex smooth matches 0–1 indicator function 40 square loss function penalize outliers excessively leading slower convergence rates sample complexity logistic loss hinge loss functions addition functions yield values 16 42 perform square loss function values 43 penalized severely signs 16 match benefit square loss function structure lends easy cross validation regularization parameters tikhonov regularization solve regularization parameter leave cross validation time solve single minimizer 33 square loss function isthis function notably equals 21 0–1 loss function 49 50 predicts classifications classification absolute certainty hinge loss hinge loss function defined asthe hinge loss tight convex upper bound 0–1 indicator function hinge loss equals 0–1 indicator function 53 54 addition empirical risk minimization loss equivalent classical formulation support vector machines svms correctly classified lying margin boundaries support vectors penalized margin boundaries wrong hyperplane penalized linear fashion compared distance correct boundary hinge loss function convex continuous smooth differentiable 55 hinge loss function gradient descent methods stochastic gradient descent methods rely differentiability entire domain hinge loss subgradient 55 utilization subgradient descent methods svms utilizing hinge loss function solved quadratic programming minimizer 33 hinge loss function isgeneralized smooth hinge loss generalized smooth hinge loss function parameter 59 defined aswhereit monotonically increasing reaches 62logistic loss logistic loss function defined asthis function displays convergence rate hinge loss function continuous gradient descent methods utilized logistic loss function assign penalty functions correctly classify confidence values 64 penalized structure leads logistic loss function sensitive outliers data minimizer 33 logistic loss function isthis function undefined 49 50 tending ∞ −∞ predicts smooth curve grows 36 increases equals 70 cross entropy loss log loss alternative label convention 71 72 cross entropy loss defined asthe cross entropy loss closely kullback leibler divergence empirical distribution predicted distribution function naturally represented product true label predicted convex minimized stochastic gradient descent methods cross entropy loss ubiquitous modern deep neural networks exponential loss exponential loss function defined asit penalizes incorrect predictions hinge loss larger gradient 
44628427	computerscience	cloud robotics field robotics attempts invoke cloud technologies cloud computing cloud storage internet technologies centred benefits converged infrastructure shared services robotics connected cloud robots benefit powerful computation storage communication resources modern data center cloud process share robots agent machines smart objects humans humans delegate tasks robots remotely networks cloud computing technologies enable robot systems endowed powerful capability reducing costs cloud technologies build lightweight cost smarter robots intelligent brain cloud brain consists data center knowledge base task planners deep learning processing environment models communication support components cloud robots components rapyuta source cloud robotics framework based roboearth engine developed robotics researcher ethz framework robot connected rapyuta secured computing environment rectangular boxes ability heavy computation cloud addition computing environments tightly interconnected bandwidth connection roboearth knowledge repository extensional project roboearth knowledge processing combines knowledge representation reasoning methods techniques acquiring knowledge grounding knowledge physical serve common semantic framework integrating sources scale computational learns publicly internet resources simulations real life robot trials accumulates robotics comprehensive interconnected knowledge base applications include prototyping robotics household robots driving cars goal direct project name—to create centralised online brain robots tap project dominated stanford university cornel university project supported national science foundation office naval army office google qualcomm alfred sloan foundation national robotics initiative goal advance robotics united competitive economy myrobots service connecting robots intelligent devices internet regarded social network robots smart objects facebook robots socialising collaborating sharing robots benefit interactions sharing sensor insight perspective current ros robot operating eco support cloud robotics ros flexible distributed framework robot software development collection tools libraries conventions aim simplify task creating complex robust robot behaviour wide variety robotic platforms library ros pure java implementation called rosjava android applications developed robots android booming market users field cloud robotics c2ro c2ro cloud robotics platform processes real time applications collision avoidance object recognition cloud latency times prevented applications processed cloud requiring computational hardware graphics processing unit gpu c2ro published peer reviewed paper ieee pimrc17 platform autonomous navigation services robots limited computational hardware raspberry pi cloud c2ro eventually claimed platform demonstrate cloud based slam simultaneous localization mapping robobusiness september 2017 noos cloud robotics service providing centralised intelligence robots connected service live december 2017 noos api developers access services vision deep learning slam noos developed maintained ortelio limitations cloud robotics robots benefit advantages cloud computing cloud solution robotics challenges development cloud robotics potential issues challenges risks environmental security concentration computing resources users cloud computing environment represents concentration security threats size significance cloud environments targeted virtual machines bot malware brute force attacks attacks data privacy security hosting confidential data cloud service providers involves transfer considerable organisation control data security provider cloud huge clients include personal data household robot hacked users risk personal privacy security house layout life snapshot view accessed leaked criminals robot hacked controlled user danger ethical ethics robotics cloud based robotics considered robot connected networks risk accessed people robot control carries illegal activities responsible history term cloud robotics appeared public lexicon talk james kuffner 2010 ieee ras international conference humanoid robotics entitled cloud enabled robots cloud robotics term encompassing concepts sharing distributed intelligence fleet learning networked robots modern cloud computing days robot development common computation separated actual robot mechanism connected wires power control wireless communication technology developed forms experimental remote brain robots developed controlled onboard compute resources robot control safety wirelessly connected powerful remote heavy processing term cloud computing popularized launch amazon ec2 2006 marked availability capacity networks cost computers storage devices widespread adoption hardware virtualization service oriented architecture correspondence popular science july 2006 kuffner wrote robot programmed learned perform task share model relevant data cloud connected robots publications events cloud robotics chronological 
44743346	computerscience	eric xing professor carnegie mellon university researcher machine learning computational biology statistical methodology biography xing received physics tsinghua university 1993 molecular biology rutgers university 1999 science university california berkeley 2004 awards including recipient nsf career award alfred sloan fellowship academic life xing collaborators developed petuum framework distributed machine learning massive data models wide spectrum algorithms honors awards 2016 elected fellow aaai 
44969722	computerscience	series 30 abbreviated s30 software platform application user interface nokia branded mobile devices platform introduced nokia september 2013 appearing nokia 108 main nokia feature phone operating series 30 series 40 platforms 2014 user interface s30 technically completely unrelated s30 s30 devices support maui runtime environment mre developed mediatek devices included support j2me applications models support java j2me applications capable running built online applications opera mini browser bing search msn weather skype groupme chat s30 models online shop downloading apps games platform nokia mobile 2014 hmd global 2016 devices selling brand nokia list devices feature phones series 30 platform single dual sim models multimedia support maximum accepted video resolution 854×480 
45081735	computerscience	science shared memory memory simultaneously accessed multiple programs intent provide communication avoid redundant copies shared memory efficient passing data programs depending context programs single processor multiple separate processors memory communication single program multiple threads referred shared memory hardware hardware shared memory refers typically block random access memory ram accessed central processing units cpus multiprocessor shared memory systems shared memory easy program processors share single view data communication processors fast memory accesses location issue shared memory systems cpus fast access memory cache memory complications technologies crossbar switches omega networks hypertransport bus dampen bottleneck effects heterogeneous architecture processor architecture integrates types processors cpus gpus shared memory memory management unit mmu cpu input–output memory management unit iommu gpu share characteristics common address space alternatives shared memory distributed memory distributed shared memory set issues software software shared memory eithersince processes access shared memory regular memory fast communication opposed mechanisms ipc named pipes unix domain sockets corba hand scalable communicating processes running machine ipc methods internet domain sockets—not unix domain sockets—can network care avoid issues processes sharing memory running separate cpus underlying architecture cache coherent ipc shared memory transfer images application server unix systems istream object returned comarshalinterthreadinterfaceinstream libraries windows dynamic libraries held memory mapped multiple processes customized individual process symbol resolved duplicated mechanism write transparently copies write attempted write succeed private support unix systems posix standardized api shared memory posix shared memory function codice sys mman posix interprocess communication posix xsi extension includes shared memory functions codice codice codice codice unix api shared memory shmget sys shm bsd systems provide anonymous mapped memory processes shared memory created codice persistent stays explicitly removed process drawback process crashes fails clean shared memory stay shutdown posix codice api mapping files memory mapping shared allowing file contents shared memory linux distributions based kernel offer dev shm shared memory form ram disk writable directory directory user create files stored memory redhat debian based distributions include default support type ram disk completely optional kernel configuration file support windows windows codice codice functions map region file memory multiple processes cross platform support libraries provide portable object oriented access shared memory functionality boost boost interprocess library qt qsharedmemory class programming language support native support shared memory programming languages php api create shared memory posix functions 
46194161	computerscience	nodemcu source iot platform includes firmware runs esp8266 wi soc espressif systems hardware based esp 12 module term nodemcu default refers firmware development kits firmware lua scripting language based elua project built espressif os sdk esp8266 source projects lua cjson spiffs history nodemcu created shortly esp8266 december 30 2013 espressif systems production esp8266 esp8266 wi soc integrated tensilica xtensa lx106 core iot applications projects nodemcu started 13 oct 2014 hong committed file nodemcu firmware github months project expanded include hardware platform developer huang committed gerber file esp8266 board named devkit v0 month tuan ported mqtt client library contiki esp8266 soc platform committed nodemcu project nodemcu support mqtt iot protocol lua access mqtt broker update 30 jan 2015 devsaurus ported u8glib nodemcu project enabling nodemcu easily drive lcd screen oled vga displays summer 2015 creators abandoned firmware project independent contributors summer 2016 nodemcu included 40 modules resource constraints users select modules relevant project build firmware tailored projects esp8266 arduino core arduino developing mcu boards based avr processors arm sam mcu arduino modify arduino ide easy change ide support alternate toolchains arduino compiled processors introduction board manager sam core core collection software components required board manager arduino ide compile arduino source file target mcu machine language esp8266 enthusiasts developed arduino core esp8266 wifi soc popularly called esp8266 core arduino ide leading software development platform esp8266 based modules development boards including nodemcus pins nodemcu access gpio purpose input output pin mapping table api documentation d0 gpio16 gpio read write support drain interrupt pwm i²c wire 
46426137	computerscience	national supercomputer center guangzhou houses tianhe fastest supercomputer measured 33 86 petaflop quadrillions calculations tianhe operated national university defence technology owned chinese government 
46728817	computerscience	classic mac os colloquial term series operating systems developed macintosh family personal computers apple 1984 2001 starting mac os macintosh operating credited popularized graphical user interface concept included macintosh sold era developed updates software conjunction introduction macintosh systems apple released original macintosh january 24 1984 version software official partially based lisa os released apple lisa 1983 agreement allowing xerox shares apple favorable price concepts xerox parc alto apple ceo steve jobs macintosh team previewed operating consisted macintosh toolbox rom folder set files loaded disk macintosh software 1987 apple rebranded mac os 1996 starting officially version macintosh clone program program release mac os 1997 major release mac os 1999 initial versions software application time introduction cooperative multitasking extension called multifinder integrated operating support virtual memory mid 1990s contemporary operating systems windows nt os nextstep brought pre emptive multitasking protected memory access controls multi user capabilities desktop computers macintosh limited memory management susceptibility conflicts extensions provide additional functionality networking support device led criticism operating factor apple declining market share time aborted attempts creating successor macintosh software called taligent copland development effort spearheaded steve jobs return apple 1997 apple replaced mac os operating 2001 named mac os retained user interface design elements classic mac os overlap application frameworks compatibility operating systems completely origins architectures final updates mac os released 2001 interoperability mac os classic signifies historical mac os reference classic environment compatibility layer helped ease transition mac os initial concept macintosh project started late 1978 jef raskin envisioned easy cost average consumer september 1979 raskin engineer prototype atkinson apple lisa team introduced raskin burrell smith service technician hired earlier apple original concept macintosh deliberately sought minimize user conceptual awareness operating basic tasks required operating knowledge systems accomplished mouse gestures graphic controls macintosh differentiate contemporaries dos command interface consisting tersely abbreviated textual commands january 1981 steve jobs completely macintosh project jobs apple engineers visited xerox parc december 1979 months lisa macintosh projects begun hearing pioneering gui technology developed xerox parc xerox employees raskin jobs negotiated visit xerox alto smalltalk development tools exchange apple stock options final lisa macintosh operating systems concepts xerox alto elements graphical user interface created apple including menu bar pull menus concepts drag drop direct manipulation ibm pc kb rom power post basic input output bios mac rom larger 64 kb holds key os code original mac rom coded andy hertzfeld original macintosh team conserve precious rom space writing routines assembly language code optimized hacks clever programming tricks addition rom coded kernel macintosh toolbox desktop accessories das icons operating represent folders application software designed susan kare designed icons windows bruce horn steve capps wrote macintosh finder macintosh utilities apple aggressive advertising machine created company bought advertisement space 1984 november december edition newsweek magazine apple successful marketing macintosh outsold sophisticated predecessor lisa apple developed product named macworks allowed lisa emulate macintosh software time discontinued rebranded macintosh xl lisa operating advances macintosh operating architecture compatibility versions mac os compatible motorola 68000 family macintoshes apple introduced computers powerpc hardware os ported support architecture mac os version 68k processor 68040 systems prior powerpc g3 based systems stored physical rom motherboard initial purpose avoid limited storage floppy disks support macs hard disk model mac bootable rom 1991 mac classic model architecture completely graphical os interface lowest level console command mode boot time errors finding functioning disk drives communicated user graphically icon distinctive chicago bitmap font chime death series beeps contrast dos cp computers time display messages mono spaced font black background require keyboard mouse input provide niceties level mac os depends core software rom motherboard ensure apple computers licensed clones copyright protected roms apple mac os mac clones manufacturers macintosh clones capable running mac os 1995 1997 apple licensed macintosh roms companies notably power computing umax motorola machines versions classic mac os steve jobs clone licensing program returning apple 1997 support macintosh clones exhibited version include mac os logo variation original happy mac startup icon mac os named mac os disassociate operating apple macintosh models file systems macintosh originally macintosh file mfs flat file level folders replaced 1985 hierarchical file hfs true directory tree file systems compatible improved file named hfs hfs mac os extended announced 1997 implemented 1998 files file systems dos windows unix operating systems fork contrast mfs hfs files forks data fork sort file file systems document bitmaps image file resource fork structured data menu definitions graphics sounds code segments incorporated program file format systems executable file consist resources including code segments data fork data file data fork resource fork word processor file data fork styling resource fork application doesn’t recognize styling read raw hand forks provide challenge interoperability operating systems copying transferring mac os file mac default implementations simply strip file resource fork data files contained nonessential resource fork window size location program files inoperative resources necessitated encoding schemes binhex macbinary allowed user encode dual forked file single stream inversely single stream encoded reconstitute dual forked file usable mac os release history apple goal creating appliance simplicity explicit distinction operating software hardware runs versions operating distinct software consists user visible files file finder application file management displays desktop files contained folder directory labeled folder resource files printer driver interact version operating based version files releases application time desk accessories special application shells multi mac switcher discussed multifinder visible reflected version finder major leaps late 1990s apple retroactively releases single software 1987 apple introduced package titled apple macintosh software update time macintosh operating offered distinct retail product included 800k disks manuals cost 49 usd software freely user bulletin board services product box update operating version software disks tools tools utilities bootable user boot floppy contained tools user instance tools disk printer drivers utilities disk disk aid apple hd setup disks named tools users press commonly referred version tools primary feature multifinder extension programs cooperative multitasking model meaning time background applications running application yielded control change functions applications calling handle events existing applications share time automatically perform tasks background users choose multifinder sticking single application time software short time countries including united canada european countries software software referred consolidation release macintosh software producing complete stable lasting operating major hardware introductions requiring additional support 68030 processor 44 mb superdrive debuting macintosh iix macintosh 30 include support specialized laptop features introduction macintosh portable finder unified version closely matching alleviating confusion caused considerable differences earlier systems mac os 13 1991 released major upgrade adding user interface overhaul applications stability improvements features introduction coincides release support 68040 macintosh era numerous macintosh platform including proliferation macintosh models 68k power macintosh transition rise windows increasing networking explosion popularity internet features virtual memory support party add accompanying 32 bit memory addressing increasing amounts ram motorola 68030 cpu 68020 cpus 68551 pmmu process involves routines os code 32 bits pointer address—prior systems upper 8 bits flags change 32 bit clean 32 bit clean existing machines thousands applications time process completed ease transition memory control panel switch disable feature allowing compatibility applications notable feature built cooperative multitasking software function optional multifinder introduced aliases symbolic links unix shortcuts introduced versions windows shadows ibm os extensions enhanced moved subfolder subfolder folder created control panels apple includes extensions manager party program simplified process enabling disabling extensions apple menu desk accessories purpose user folders applications—or desired—appear menu placing aliases apple menu items subfolder folder introduced applescript scripting language automating tasks 32 bit quickdraw supporting called true color imaging extension truetype outline font standard trash earlier empties automatically shutting computer—or multifinder running launching application reimplements trash special hidden folder allowing files remain reboots user deliberately chose trash command bugfix release minor features major features moving fonts file fonts folder folder resource copying utility resedit font mover required installing fonts macintosh operating cost money previous versions sold cost floppies received pro sibling version extra features version support powerpc based macs introduces enablers method support models updating actual file leads extra files folder model supported introduces features based shareware applications apple bought included powerpc machines stability partly memory manager issues handling errors powerpc code powerpc exceptions map type 11 issues affect 68k architecture machines contemporary apple failed copland effort release windows 95 coincides apple purchase shareware enhancements include features mac os stability improved powerpc based macs mac os dropped moniker trademarkable license os growing market party macintosh clone manufacturers mac os required 32 bit clean roms dropped support mac 68000 processor mac mac iix mac iicx mac 30 mac os mac os released july 26 1997 month steve jobs facto ceo apple released mac os moving difficult time apple initially planned mac os renumbered exploit legal loophole accomplish jobs goal terminating party manufacturers licenses shutting macintosh clone market mac os features abandoned copland project leaving underlying operating unchanged multi threaded finder included files copied background gui changed appearance shaded greyscale named platinum ability change appearance themes skins control panel platinum shipped capability appearance api layer os apple sold copies mac os weeks availability 3 million months light apple financial difficulties time grassroots movement mac users upgrade save apple pirate refused redistribute os mac os mac os introduced updated version hierarchical file named hfs fixed limitations earlier continued macos macos sierra replaced apple file interface separating network features printing improvements application switching underlying technical respects mac os mac os mac os focuses speed stability 68k code replaced modern code native powerpc improved appearance user interface theming feature cut late development mac os mac os major revision classic mac os released october 23 1999 steady evolution mac os development releases mac os numbered mac os improved support airport wireless networking introduced implementation multi user support true multi user operating mac os multiple desktop users data settings improved sherlock search engine search plug ins mac os improved memory implementation management applescript improved tcp ip networking control mac os centralized apple software update install os hardware updates features included fly file encryption software code signing keychain technologies remote networking file server packages improved list usb drivers mac os transitional technologies application developers adopt mac os features introduction os public ease transition included apis file bundling carbon library apps link traditional api libraries—apps adapted natively mac os mac os update launched classic environment mac os final update classic mac os version released december 2001 transition mac os macos originally named mac os 2012 os 2016 apple current mac operating officially succeeded classic mac os 2001 originally marketed simply version mac os history independent earlier mac os releases macos architectural legacy successor mac os classic mac os legacy classic mac os unix based operating built nextstep technology developed late 1980s 1997 apple purchased company ceo steve jobs returned apple macos bsd codebase xnu kernel core set components based apple source darwin operating version operating mac os server released 1999 retains platinum appearance classic mac os resembles openstep desktop version mac os march 24 2001 supporting aqua user interface versions operating released mac os renamed os 2012 macos 2016 users classic mac os upgraded mac os criticized difficult user friendly original mac os lack features reimplemented os slower hardware hardware incompatibilities os drivers printers scanners tablets written mac os compatible mac os lack mac os support apple computers macintosh users continued classic mac os original release mac os steve jobs encouraged people upgrade mac os staging mock funeral mac os wwdc 2002 classic powerpc versions mac os including mac os tiger include compatibility layer running mac applications classic environment originally codenamed blue box environment runs complete mac os operating version mac os application applications ported carbon api mac os seamless classic applications retain original mac os appearance gain mac os aqua appearance rom powerpc based macs shipped mac os mac os mac os installed user—it installed default hardware revisions released mac os written classic mac os applications function properly environment compatibility assured software written unaware actual hardware interact solely operating classic environment intel based mac systems incompatibility mac os x86 hardware emulation 68k emulators party macintosh emulators vmac basilisk executor eventually classic mac os intel based pcs emulators restricted emulating 68k series processors versions mac os succeeded required powerpc processors required mac rom image hardware interface supporting real mac rom chip requiring image dubious legal standing rom image infringe apple intellectual property notable exception executor commercial software product abacus development product 100 reverse engineered code apple technology extremely achieved minor subset functionality programs completely compatible extremely crash prone executor filled niche market porting 68k mac applications x86 platforms development ceased 2002 source code released author late 2008 emulators mac rom images offered complete mac os compatibility versions offered excellent performance modern x86 processor performance increased exponentially apple included mac 68k emulator seamlessly powerpc based versions classic mac os powerpc emulators comparison 68k emulator development powerpc support difficult justify anticipated wide performance overhead emulated powerpc architecture prove correct pearpc project availability 7th 8th generation x86 processors employing architecture paradigms powerpc pearpc emulator capable emulating powerpc processors required versions mac os maintained emulators slower native operating powerpc emulator sheepshaver 1998 beos powerpc platform 2002 sourced efforts port platforms originally designed x86 platforms required actual powerpc processor machine running hypervisor powerpc processor support mac os emulate memory management unit examples include shapeshifter developer created sheepshaver fusion ifusion classic mac os powerpc coprocessor accelerator card method equal speed macintosh processor respect 68k series real macs running mmu trap mode hampering performance apple rosetta powerpc emulator intel based macs support classic mac os 
46740076	computerscience	yandex translate yandex translation service yandex intended translation language service learning statistical machine translation developed yandex constructs dictionary correspondences based analysis millions translated texts translate compares database compares base language models determine meaning expression context translation function search button translate appeared 2009 carried basis promt built russian wikipedia translation english russian addition translator built yandex browser automatically offers translate supported foreign languages september 2017 yandex translator transition neural network translation supported languages launch translator beta mode spring 2011 languages english russian ukrainian limit 000 characters translation languages translation direction determined automatically translation single texts individual manually enter prompt pop window possibility window view translation original addition machine translation accessible complete english russian russian english dictionary app devices based ios software windows phone android listen pronunciation translation original synthesised female voice translations sentences favorites relevant input field limitations yandex translate automatic translation tools limitations tool intended reader understand meaning foreign language provide accurate translations head service alexei baitin machine translation compared literary translation methodology arkady volozh mechanism translate addition version users commercial api online translator characters paid designed localization sites internet shops travel companies 
47378228	computerscience	extreme learning machines feedforward neural networks classification regression clustering sparse approximation compression feature learning single layer multiple layers hidden nodes parameters hidden nodes weights connecting inputs hidden nodes tuned hidden nodes randomly assigned updated random projection nonlinear transforms inherited ancestors changed output weights hidden nodes learned single step essentially amounts learning linear model extreme learning machine elm models main inventor guang bin huang creators models produce generalization performance learn thousands times faster networks trained backpropagation literature models outperform support vector machines svm svm suboptimal solutions classification regression applications history 2001 2010 elm focused unified learning framework generalized single hidden layer feedforward neural networks slfns including limited sigmoid networks rbf networks threshold networks trigonometric networks fuzzy inference systems fourier series laplacian transform wavelet networks achievements prove universal approximation classification capabilities elm theory 2010 2015 elm extended unified learning framework kernel learning svm typical feature learning methods principal component analysis pca negative matrix factorization nmf svm suboptimal solutions compared elm elm provide whitebox kernel mapping implemented elm random feature mapping blackbox kernel svm pca nmf considered special linear hidden nodes elm 2015 onwards increased focus hierarchical implementations elm additionally 2011 biological studies support elm theories announcement google scholar classic papers articles stood time elm papers listed artificial intelligence 2006 positions algorithms single hidden layer elm suppose output function hidden node parameters hidden node output function elm slfns hidden nodes output weight hidden node hidden layer output mapping elm 11 training samples hidden layer output matrix 12 elm 13and 14 training data target matrix 15generally speaking elm regularization neural networks tuned hidden layer mappings formed random hidden nodes kernels implementations objective function 16where 17 combinations 18 19 20 21 result learning algorithms regression classification sparse coding compression feature learning clustering special simplest elm training algorithm learns model form single hidden layer sigmoid neural networks matrix input hidden layer weights 23 activation function matrix hidden output layer weights algorithm proceeds architectures elm single hidden layer feedforward network slfn including limited sigmoid networks rbf networks threshold networks fuzzy inference networks complex neural networks wavelet networks fourier transform laplacian transform learning algorithm implementations regression classification spare coding compression feature learning clustering multi elms form multi hidden layer networks deep learning hierarchical networks hidden node elm computational elements considered classical neuron hidden node elm classical artificial neurons basis functions subnetwork formed hidden nodes theories universal approximation classification capabilities proved elm literature guang bin huang team spent 2001 2008 rigorous proofs elm universal approximation capability universal approximation capability theory nonconstant piecewise continuous function activation function elm hidden nodes activation function differential tuning parameters hidden nodes slfns approximate target function 25 hidden node parameters randomly generated continuous distribution probability 26 holds probability output weights 27 classification capability nonconstant piecewise continuous function activation function slfns tuning parameters hidden nodes slfns approximate target function 25 slfns random hidden layer mapping 29 separate arbitrary disjoint regions shapes neurons wide type nonlinear piecewise continuous functions 30 hidden neurons elm real domain sigmoid function 31fourier function 32hardlimit function 33gaussian function 34multiquadrics function 35wavelet 36 37 single mother wavelet function complex domain circular functions 38formula 39inverse circular functions 40formula 41hyperbolic functions 42formula 43inverse hyperbolic functions 44formula 45reliability black box character neural networks extreme learning machines elm major concerns repels engineers application unsafe automation tasks issue approached techniques approach reduce dependence random input approach focuses incorporation continuous constraints learning process elms derived prior knowledge specific task reasonable machine learning solutions guarantee safe operation application domains mentioned studies revealed special form elms functional separation linear read weights suited efficient incorporation continuous constraints predefined regions input space controversy main complaints academic community reinventing ignoring previous ideas improper naming popularizing debates 2008 2015 letter editor ieee transactions neural networks idea hidden layer connected inputs random untrained weights suggested original papers rbf networks late 1980s guang bin huang replied subtle differences 2015 paper huang responded complaints elm existing methods complaining negative unhelpful comments elm academic professional manner reasons intentions irresponsible anonymous attack intends destroy harmony environment arguing unifying learning platform types neural nets including hierarchical structured elm 2015 huang formal rebuttal considered malign attack replaces random weights constrained random weights 
47516715	computerscience	united nations university institute computing society unu institute united nations university unu located são lázaro macau china established 2015 unu intends assist achieve agenda bridge international academic public policy communities training generation interdisciplinary scientists computing social sciences design international development unu succeeds united nations university international institute software technology unu iist created united nations university macau 1991 agreement governments macao portugal china transfer sovereignty macau unu iist lost level visibility 2015 unu director professor michael charge building succeeding institute “from scratch ”goal goal unu nurture generation social scientists ability participate shape benefit rapid development global society start unu aims founding director professor michael goal raise profile institute centre excellence effectively responding developing crucially ”director 2015 professor directs technologies international development lab associate professor sam nunn school international affairs school interactive computing georgia institute technology founder editor chief emeritus journal technologies international development faculty associate berkman center internet society harvard university professor leads global computing column communications acm holds mit served director media lab asia india head edevelopment mit media lab labs action oriented labs developed 
47527969	computerscience	word2vec models produce word embeddings models shallow layer neural networks trained reconstruct linguistic contexts word2vec takes input corpus produces vector space typically dimensions unique word corpus assigned vector space word vectors positioned vector space share common contexts corpus located close proximity space word2vec created team researchers led tomáš mikolov google patented algorithm subsequently analysed explained researchers embedding vectors created word2vec algorithm advantages compared earlier algorithms latent semantic analysis cbow skip grams word2vec utilize model architectures produce distributed representation continuous bag cbow continuous skip gram continuous bag architecture model predicts current word window surrounding context context influence prediction bag assumption continuous skip gram architecture model current word predict surrounding window context skip gram architecture weighs nearby context heavily distant context authors note cbow faster skip gram slower job infrequent parametrization word2vec training sensitive parametrization parameters word2vec training training algorithm word2vec model trained hierarchical softmax negative sampling approximate conditional log likelihood model seeks maximize hierarchical softmax method huffman tree reduce calculation negative sampling method hand approaches maximization minimizing log likelihood sampled negative instances authors hierarchical softmax infrequent negative sampling frequent dimensional vectors training epochs increase hierarchical softmax stops sampling frequency provide frequency threshold subsampled increase training speed dimensionality quality word embedding increases dimensionality reaching marginal gain diminish typically dimensionality vectors set 100 000 context window size context window determines word included context word authors note recommended skip gram cbow extensions extension word2vec construct embeddings entire documents individual proposed extension called paragraph2vec doc2vec implemented python java scala tools java python versions supporting inference document embeddings unseen documents word vectors bioinformatics biovectors extension word vectors grams biological sequences dna rna proteins bioinformatics applications proposed asgari mofrad named bio vectors biovec refer biological sequences protein vectors protvec proteins amino acid sequences gene vectors genevec gene sequences representation applications machine learning proteomics genomics biovectors characterize biological sequences terms biochemical biophysical interpretations underlying patterns variant dna2vec correlation needleman wunsch similarity score cosine similarity dna2vec word vectors word vectors radiology intelligent word embedding iwe extension word vectors creating dense vector representation unstructured radiology reports proposed banerjee biggest challenges word2vec handle unknown vocabulary oov morphologically issue domains medicine synonyms depending preferred style radiologist infrequently corpus word2vec model encountered word forced random vector ideal representation iwe combines word2vec semantic dictionary mapping technique tackle major challenges extraction clinical texts include ambiguity narrative style lexical variations ungrammatical telegraphic phases arbitrary frequent appearance abbreviations acronyms iwe model trained institutional dataset translated institutional dataset demonstrates generalizability approach institutions analysis reasons successful word embedding learning word2vec framework understood goldberg levy word2vec objective function occur contexts embeddings measured cosine similarity note firth distributional hypothesis note explanation hand wavy argue formal explanation preferable levy 2015 superior performance word2vec embeddings downstream tasks result models choice specific hyperparameters transferring hyperparameters traditional approaches yields performances downstream tasks preservation semantic syntactic relationships word embedding approach capture multiple degrees similarity mikolov 2013 semantic syntactic patterns reproduced vector arithmetic patterns “man woman brother sister” generated algebraic operations vector representations vector representation “brother” ”man” ”woman” produces result closest vector representation “sister” model relationships generated range semantic relations country–capital syntactic relations tense–past tense assessing quality model mikolov 2013 develop approach assessing quality word2vec model draws semantic syntactic patterns discussed developed set 869 semantic relations 675 syntactic relations benchmark accuracy model assessing quality vector model user draw accuracy implemented word2vec develop set meaningful corpora model approach offers challenging simply arguing word intuitively plausible parameters model quality model parameters corpus sizes greatly affect quality word2vec model accuracy improved including choice model architecture cbow skip gram increasing training data set increasing vector dimensions increasing window size considered algorithm improvements cost increased computational complexity increased model generation time models corpora dimensions skip gram model yields accuracy consistently produces accuracy semantic relationships yielding syntactic accuracy cbow computationally expensive yields accuracy accuracy increases increases dimensions increases mikolov report doubling training data increase computational complexity equivalent doubling vector dimensions altszyler 2017 studied word2vec performance semantic tests corpus size word2vec steep learning curve outperforming word embedding technique lsa trained medium corpus size training corpus lsa performance additionally parameter setting depends task training corpus skip gram models trained medium size corpora 50 dimensions window size 15 negative samples parameter setting 
47749536	computerscience	yoshua bengio born 1964 france canadian scientist artificial neural networks deep learning bengio received bachelor engineering electrical engineering master science science phd science mcgill university post doctoral fellow mit michael jordan bell labs bengio faculty université montréal 1993 heads mila montreal institute learning algorithms director learning machines brains project canadian institute advanced geoffrey hinton yann lecun bengio considered cade metz people responsible advancement deep learning 1990s 2000s google facebook bengio stayed academia scientists 100 bengio citations day mila october 2016 bengio founded element montreal based artificial intelligence company real business applications 2017 bengio announced joining montreal based legal tech startup botler strategy adviser awards 2017 bengio named officer canada nominated fellow royal society canada received marie victorin quebec prize 
47759984	computerscience	combinatorics probability computing peer reviewed scientific journal mathematics published cambridge university press editor chief béla bollobás dpmms university memphis journal covers combinatorics probability theory theoretical science publishes issues annually journals publisher hybrid green gold access policy authors copies papers institutional repository month embargo period pay access charge papers read journal journal established bollobás 1992 fields medalist timothy gowers calls personal favourite combinatorics journals writes maintains standard abstracting indexing journal abstracted indexed journal citation reports journal 2014 impact factor 623 2007 ranked scimago journal rank quartile journal applied mathematics computational theory statistics probability theoretical science 
48411649	computerscience	harris corner detector corner detection operator commonly vision algorithms extract corners infer features image introduced chris harris mike stephens 1988 improvement moravec corner detector compared previous harris corner detector takes differential corner score account reference direction shifting patches 45 degree angles proved accurate distinguishing edges corners improved algorithms preprocess images subsequent applications introduction corner local neighborhood stands dominant edge directions corner interpreted junction edges edge sudden change image brightness corners features image termed invariant translation rotation illumination corners percentage image features restoring image minimize processed data motion tracking image stitching building 2d mosaics stereo vision image representation vision capture corners image researchers proposed corner detectors including kanade lucas tomasi klt operator harris operator simple efficient reliable corner detection popular methodologies closely based local structure matrix compared kanade lucas tomasi corner detector harris corner detector repeatability changing illumination rotation stereo matching image database retrieval exists drawbacks limitations harris corner detector fundamental technique vision applications development harris corner detection algorithm loss generality assume grayscale dimensional image image image patch shifting sum squared differences ssd patches denoted approximated taylor expansion partial derivatives thatthis produces approximationwhich written matrix form structure tensor process harris corner detection algorithm commonly harris corner detector algorithm divided steps color grayscale2 spatial derivative calculation3 structure tensor setup4 harris response calculation5 maximum suppressioncolor grayscale harris corner detector color image step convert grayscale image enhance processing speed spatial derivative calculation compute 14 structure tensor setup 15 16 construct structure tensor 17 harris response calculation step compute eigenvalue structure tensor approximation equation 18where 19 common harris response calculation 20where 21 empirically determined constant 22 maximum suppression pick optimal values corners local maxima corners window filter improvement harris laplace corner detector2 differential morphological decomposition based corner detector3 multi scale bilateral structure tensor based corner detectorapplications image alignment stitching registration2 2d mosaics creation3 3d scene modeling reconstruction4 motion detection5 object recognition6 image indexing content based retrieval7 video tracking 
48508507	computerscience	tensorflow source software library dataflow programming range tasks symbolic math library machine learning applications neural networks production google   tensorflow developed google brain team internal google released apache source license november 2015 history distbelief starting 2011 google brain built distbelief proprietary machine learning based deep learning neural networks grew rapidly diverse alphabet companies commercial applications google assigned multiple scientists including jeff dean simplify refactor codebase distbelief faster robust application grade library tensorflow 2009 team led geoffrey hinton implemented generalized backpropagation improvements allowed generation neural networks accuracy instance 25 reduction errors speech recognition tensorflow tensorflow google brain generation version released february 11 2017 reference implementation runs single devices tensorflow multiple cpus gpus optional cuda sycl extensions purpose computing graphics processing units tensorflow 64 bit linux macos windows mobile computing platforms including android ios flexible architecture easy deployment computation variety platforms cpus gpus tpus desktops clusters servers mobile edge devices tensorflow computations expressed stateful dataflow graphs tensorflow derives operations neural networks perform multidimensional data arrays referred tensors google conference june 2016 jeff dean stated 500 repositories github mentioned tensorflow google tensor processing unit tpu 2016 google announced tensor processing unit tpu application specific integrated circuit hardware chip built machine learning tailored tensorflow tpu programmable accelerator designed provide throughput precision arithmetic bit oriented running models training google announced running tpus data centers deliver magnitude optimized performance watt machine learning 2017 google announced generation availability tpus google compute engine generation tpus deliver 180 teraflops performance organized clusters 64 tpus provide 11 petaflops february 2018 google announced tpus beta google cloud platform tensorflow lite 2017 google announced software stack mobile development tensorflow lite january 2019 tensorflow team released developer preview mobile gpu inference engine opengl compute shaders android devices metal compute shaders ios devices applications google officially released rankbrain october 26 2015 tensorflow google released tensorflow jupyter notebook environment requires setup machine learning crash mlcc march 2018 google released machine learning crash mlcc originally designed equip google employees practical artificial intelligence machine learning fundamentals google rolled tensorflow workshops cities finally releasing public features tensorflow stable python apis api compatibility guarantee java javascript swift release party packages haskell julia scala rust ocaml crystal applications applications tensorflow foundation automated image captioning software deepdream rankbrain handles substantial search queries replacing supplementing traditional static algorithm based search 
48715673	computerscience	vision saliency map image pixel unique quality goal saliency map simplify change representation image meaningful easier analyze pixel grey level unique color quality color image pixel quality saliency map obvious saliency image segmentation result saliency map set contours extracted image edge detection pixels region respect characteristic computed property color intensity texture saliency background saliency image segmentation vision image segmentation process partitioning digital image multiple segments sets pixels superpixels goal segmentation simplify change representation image meaningful easier analyze image segmentation typically locate objects boundaries lines curves images precisely image segmentation process assigning label pixel image pixels label share characteristics result image segmentation set segments collectively cover entire image set contours extracted image edge detection pixels region respect characteristic computed property color intensity texture adjacent regions respect characteristic applied stack images typical medical imaging contours image segmentation create 3d reconstructions interpolation algorithms marching cubes implementation calculate distance pixel rest pixels frame pixel range 255 equation expanded form equation total pixels current frame restructure frequency belongs 255 frequencies expressed form histogram computational time histogram time complexity time complexity saliency map algorithm time complexity computational time histogram time complexity pixel frame multiply equation 256 times operation time complexity algorithm equals pseudocode code pseudo matlab code read data video sequences read data superpixel process frame spnum1 spnum2 represent pixel current frame previous pixel calculate color distance pixel process contract function process saliency map store maps filefolder difference algorithms major difference function difference contract function spnum1 spnum2 represent current frame’s pixel contract function saliency function spnum1 current frame’s pixel spnum2 represent previous frame’s pixel contract function saliency function contract function pixel frame center distance saliency map apply saliency function frame current frame’s saliency map previous frame’s saliency map image saliency result saliency function 
48813654	computerscience	sparse dictionary learning representation learning method aims finding sparse representation input data sparse coding form linear combination basic elements basic elements elements called atoms compose dictionary atoms dictionary required orthogonal complete spanning set setup dimensionality signals represented signals observed properties lead seemingly redundant atoms multiple representations signal provide improvement sparsity flexibility representation applications sparse dictionary learning field compressed sensing signal recovery compressed sensing dimensional signal recovered linear measurements signal sparse sparse signals satisfy sparsity condition sparse representation signal wavelet transform directional gradient rasterized matrix matrix dimensional vector transferred sparse space recovery algorithms basis pursuit cosamp fast iterative algorithms recover signal key principles dictionary learning dictionary inferred input data emergence sparse dictionary learning methods stimulated signal processing typically represent input data components approach practice predefined dictionaries fourier wavelet transforms dictionary trained fit input data improve sparsity applications data decomposition compression analysis fields image denoising classification video audio processing sparsity overcomplete dictionaries immense applications image compression image fusion inpainting statement input dataset dictionary representation minimized representations sparse formulated optimization 8formula required constrain atoms reach arbitrarily values allowing arbitrarily values 12 controls trade sparsity minimization error minimization convex ℓ0 norm solving hard norm ensure sparsity convex optimization respect variables 14 fixed jointly convex 15 properties dictionary dictionary defined undercomplete 17 overcomplete 18 typical assumption sparse dictionary learning complete dictionary provide improvement representational view considered undercomplete dictionaries represent setup actual input data lies dimensional space dimensionality reduction techniques principal component analysis require atoms 19 orthogonal choice subspaces crucial efficient dimensionality reduction trivial dimensionality reduction based dictionary representation extended address specific tasks data analysis classification main downside limiting choice atoms overcomplete dictionaries require atoms orthogonal basis allowing flexible dictionaries richer data representations overcomplete dictionary sparse representation signal famous transform matrix wavelets transform fourier transform formulated elements changed sparsely represents signal learned dictionaries capable sparse solution compared predefined transform matrices algorithms optimization solved convex respect dictionary sparse coding fixed algorithms based idea iteratively updating finding optimal sparse coding 20 dictionary sparse approximation sparse coding developed algorithms solve matching pursuit lasso incorporated algorithms method optimal directions mod method optimal directions mod methods introduced tackle sparse dictionary learning core idea solve minimization subject limited components representation vector 22here 23 denotes frobenius norm mod alternates sparse coding method matching pursuit updating dictionary computing analytical solution 24 25 moore penrose pseudoinverse update 26 renormalized fit constraints sparse coding process repeated convergence residue mod proved efficient method dimensional input data 27 requiring iterations converge complexity matrix inversion operation computing pseudoinverse dimensional intractable shortcoming inspired development dictionary learning methods svd svd algorithm performs svd core update atoms dictionary basically generalization enforces element input data 28 encoded linear combination 29 elements identical mod approach 30this algorithm essence dictionary 31 constraint orthogonal matching pursuit iteratively update atoms dictionary manner 33the steps algorithm include rank approximation residual matrix 34 updating 35 enforcing sparsity 36 update algorithm considered standard dictionary learning variety applications shares weaknesses mod efficient signals dimensionality possibility stuck local minima stochastic gradient descent apply widespread stochastic gradient descent method iterative projection solve idea method update dictionary stochastic gradient project constraint set step occurs iteration expression 38 random subset 40 41 gradient step lagrange dual method algorithm based solving dual lagrangian efficient solve dictionary complications induced sparsity function lagrangian 42 43 constraint norm atoms 44 called dual variables forming diagonal matrix 45 provide analytical expression lagrange dual minimization 47 applying optimization methods dual newton method conjugate gradient 49solving computational hard dual variables 50 lot times variables primal lasso approach optimization formulated 51 52is permitted error reconstruction lasso estimate 53by minimizing square error subject norm constraint solution vector formulated 54 55controls trade sparsity reconstruction error global optimal solution online dictionary learning sparse codingparametric training methods parametric training methods aimed incorporate worlds realm analytically constructed dictionaries learned construct powerful generalized dictionaries applied arbitrary sized signals notable approaches include online dictionary learning lasso approach common approaches sparse dictionary learning rely input data 59 training dataset algorithm real scenario size input data fit memory assumption input data form stream lie field study online learning essentially suggests iteratively updating model data 60 dictionary learned online manner method gradually update dictionary data sparse representation learning helps drastically reduce memory store dataset huge size applications dictionary learning framework linear decomposition input signal basis elements learned data led art image video processing tasks technique applied classification built specific dictionaries class input signal classified finding dictionary sparsest representation properties signal denoising learn dictionary represent meaningful input signal sparse noise input sparse representation sparse dictionary learning applied image video audio processing tasks texture synthesis unsupervised clustering evaluations bag model sparse coding empirically outperform coding approaches object category recognition tasks dictionary learning analyse medical signals medical signals include electroencephalography eeg electrocardiography ecg magnetic resonance imaging mri functional mri fmri ultrasound tomography usct assumptions analyze signal 
48838704	computerscience	artec 3d developer manufacturer 3d scanning hardware software company headquartered luxembourg offices united america santa clara russia moscow artec 3d products services industries including engineering healthcare media design entertainment education fashion historic preservation 2013 artec 3d launched automated body 3d scanning shapify creates 3d portraits called “shapies ”technology 3d scanners capture geometry objects produce dimensional digital model artec’s 3d scanners structured light scanners operate projecting light pattern form multiple parallel beams object projecting grid pattern object scanners capture deformation distortion multiple angles calculate distance specific object triangulation dimensional coordinates digitally reconstruction real object light scanners utilize blue light white light artec’s scanners choice light impact processes concepts technology hardware eva handheld color scanner released 2012 capture process scanner designed capture medium objects device scan 214 148 mm closest range 536 371 mm furthest 3d resolution 5 mm 3d accuracy 1 mm eva operate distances object capturing 16 frames data exported obj ply wrl stl aop ascii ptx e57 xyzrgb files types eva require warm period powering spider 3d handheld color scanner released 2013 designed capture complex objects resolution accuracy device 3d resolution 1 mm accuracy 05mm spider require markers manual alignment post processing requires 30 minute warm period achieve maximum accuracy scans exported file formats including obj stl space spider 3d handheld color scanner released 2015 space spider utilizes blue led light source 3d resolution 1 mm 05 mm accuracy operates distances 170 mm 350 mm object device initially developed international space station incorporates advanced temperature control prevent overheating common issue electronics space scanner requires warm period minutes achieve maximum accuracy guarantee precision hours constant rayray portable 3d laser scanner designed capturing objects 110 meters released 2018 ray produces scans submillimeter accuracy minimum noise requiring reduced post processing times artec ray suitable reverse engineering inspection applications historical preservation indoors outdoors compact lidar solution mobile internal battery users hours onsite scanning color integrated megapixel cameras scans artec studio software offers range post processing tools scans exported geomagic design additional processing options  it’s control ray distance iphone ipad artec remote app wifi remote user previews select multiple scan scan save data card change scan settings check battery scanner status shapify booth automatic 3d body scanning booth unveiled 2014 artec’s handheld scanners stationary platform 3d scanners rotate person 360 degrees capture 700 surfaces 12 data captured automatically watertight color 3d printable model minutes shapify booths bought leased businesses worldwide broadway facial recognition biometric developed artec artec brand device equipped 3d vision differentiates nuanced geometry accuracy fractions millimeter requires facial recognition registration time broadway 3d distance range recognize 60 people minute technology utilized international airport sochi enhance security leading 2014 winter olympics software artec studio software program 3d scanning post processing data captured split “scans processed fused 3d model artec studio includes automatic post processing mode called “autopilot prompts users questions characteristics object scanned option guided post processing pipeline autopilot mode automatically align scans global coordinate determine algorithms post processing clean captured data remove base surfaces completion scan data exported 3d systems geomagic design solidworks cad processing artec scanapp mac os supports el capitan yosemite application data captured artec eva 3d scanner macintosh data collected scanapp processed software exported windows pc processing artec studio 11 artec scanning sdk software development kit sdk individuals companies tailor existing develop software applications artec’s handheld 3d scanners industries applications artec 3d’s handheld scanners software utilized industries examples notable industry specific applications include engineering manufacturing create 3d digital models healthcare create science education assist global digitally preserve art design digitally capture 
49242352	computerscience	alphago program plays board game developed alphabet google deepmind london alphago powerful successors called alphago master alphago alphazero october 2015 original alphago program beat human professional player handicaps sized 19×19 board march 2016 beat lee sedol game match time program beaten dan professional handicaps lost lee sedol fourth game lee resigned final game final score games favour alphago recognition victory alphago awarded honorary dan korea baduk association lead challenge match lee sedol documented documentary film titled alphago directed greg kohs chosen science breakthrough runners 22 december 2016 2017 future summit successor alphago master beat jie ranked player time game match powerful alphago existed announced alphago awarded professional dan chinese weiqi association alphago successors monte carlo tree search algorithm moves based knowledge learned machine learning artificial neural network deep learning method extensive training human play neural network trained predict alphago selections winner games neural improves strength tree search quality selection stronger play iteration match alphago jie deepmind retired alphago continuing starting blank short training period alphago achieved 100 victory champion defeating alphago successor taught alphazero perceived player chess history considered difficult computers win games chess larger branching factor prohibitively difficult traditional methods alpha–beta pruning tree traversal heuristic search decades ibm deep blue beat chess champion garry kasparov 1997 match strongest programs artificial intelligence techniques reached amateur dan level beat professional player handicaps 2012 software program zen running pc cluster beat masaki takemiya 9p times stones handicap 2013 crazy stone beat yoshio ishida 9p stones handicap deepmind david silver alphago project formed 2014 neural network deep learning compete alphago represents improvement previous programs 500 games programs including crazy stone zen alphago running single matchup alphago running multiple computers 500 games played programs 77 games played alphago running single distributed version october 2015 202 cpus 176 gpus match fan hui october 2015 distributed version alphago defeated european champion fan hui dan dan professional time program beaten professional human player sized board handicap announcement news delayed 27 january 2016 coincide publication paper journal nature describing algorithms match lee sedol alphago played south korean professional player lee sedol ranked dan players games seasons hotel seoul south korea 12 13 15 march 2016 video streamed live aja huang deepmind team amateur dan player stones board alphago google cloud computing servers located united match chinese rules komi hours thinking time 60 byoyomi periods version alphago playing lee computing power fan hui match economist reported 920 cpus 280 gpus time play lee sedol international championship victories single official method ranking international sources ranked lee sedol fourth player time alphago trained lee games alphago resignations lee lee beat alphago fourth game winning resignation 180 alphago continued achieve fourth win winning game resignation prize alphago series prize donated charities including unicef lee sedol received 150 000 participating games additional 20 000 win june 2016 presentation held university netherlands aja huang deep mind team revealed rectified occurred 4th game match alphago lee 78 dubbed divine professionals play accurately maintain black advantage 78 alphago leading game lee credited game caused program computing powers diverted confused huang explained alphago policy network finding accurate continuation precisely guide alphago correct continuation 78 network determine lee 78th alphago adjustment logical continuation online games 29 december 2016 account tygem server named magister magist server chinese version south korea play games professional players changed account master 30 december moved foxgo server january 2017 january deepmind confirmed magister master played updated version alphago called alphago master january 2017 alphago master online record 60 wins losses including victories ranked player jie quietly briefed advance master version alphago losing master offered bounty 100 000 yuan 14 400 human player defeat master master played pace games day suspected player resting games adversaries included champions jie park jeong hwan yuta iyama tuo jiaxi mi yuting shi yue chen yaoye qincheng chang hao tang weixing fan tingyu zhou ruiyang jiang weijie chou chun hsun kim ji seok kang dong yun park yeong hun seong jin national champions championship runners lian xiao tan xiao meng tailing dang yifei huang yunsong yang dingxin zihao shin jinseo cho han seung sungjoon 60 games fast paced games 20 30 byo yomi master offered extend byo yomi minute playing nie weiping consideration age winning 59th game master revealed chatroom controlled dr aja huang deepmind team changed nationality united kingdom games completed founder google deepmind demis hassabis tweet playing official games collaboration organizations experts experts impressed program performance nonhuman play style jie stated humanity spent thousands improving tactics computers humans completely wrong single human touched edge truth future summit future summit held wuzhen 2017 alphago master played games jie ranked player games chinese professionals pair game collaborating team human players google deepmind offered dollars winner prizes game match jie master losing 300 000 dollars master games jie alphago awarded professional dan chinese weiqi association winning game match jie rated player alphago retired deepmind disbanded team game focus summit deepmind published 50 alphago alphago matches gift community alphago alphazero alphago team published article journal nature 19 october 2017 introducing alphago version human data stronger previous human champion defeating version playing games alphago surpassed strength alphago lee days winning 100 games reached level alphago master 21 days exceeded versions 40 days paper released arxiv december 2017 deepmind claimed generalized alphago approach single alphazero algorithm achieved 24 hours superhuman level play games chess shogi defeating champion programs stockfish elmo day version alphago grandmaster hikaru nakamura impressed alphazero chess win stating understanding alphazero basically google supercomputer stockfish hardware stockfish basically running laptop wanna match comparable stockfish running supercomputer correspondence chess player wolff morrow unimpressed claiming alphazero semifinals fair competition tcec engines play equal hardware morrow stated beat alphazero alphazero played drawish openings petroff defence alphazero beat correspondence chess game teaching tool 11 december 2017 deepmind released alphago teaching tool analyze winning rates openings calculated alphago master teaching tool collects 000 openings 230 000 human games analyzed 000 000 simulations alphago master openings include human suggestions versions version alphago tested hardware cpus gpus running asynchronous distributed mode thinking time elo ratings listed matches time ratings achieved 2016 google unveiled proprietary hardware tensor processing units stated deployed multiple internal projects google including alphago match lee sedol future summit 2017 deepmind disclosed version alphago summit alphago master revealed measured strength versions software alphago lee version lee alphago fan version alphago fan hui stones alphago master stone stronger algorithm 2016 alphago algorithm combination machine learning tree search techniques combined extensive training human play monte carlo tree search guided network policy network implemented deep neural network technology limited game specific feature detection pre processing highlight matches nakade pattern applied input neural networks neural networks initially bootstrapped human gameplay expertise alphago initially trained mimic human play attempting match moves expert players recorded historical games database 30 moves reached degree proficiency trained set play games instances reinforcement learning improve play avoid disrespectfully wasting opponent time program programmed resign assessment win probability falls beneath threshold match lee resignation threshold set 20 style play toby manning match referee alphago fan hui program style conservative alphago playing style favours probability winning lesser probability winning strategy maximising probability winning distinct human players tend maximise territorial gains explains odd moves lot moves seldom humans avoiding moves human players likes shoulder hits opponent concentrated responses 2016 victory community alphago march 2016 victory major milestone artificial intelligence regarded hard machine learning expected reach technology time experts program powerful alphago experts decade computers beat champions observers 2016 matches expected lee beat alphago games checkers solved chinook draughts player team chess computers victories popular board games serve major milestones artificial intelligence deep blue murray campbell called alphago victory era board games time compared deep blue watson alphago underlying algorithms purpose evidence scientific community progress artificial intelligence commentators alphago victory opportunity society start discussing preparations future impact machines purpose intelligence entrepreneur guy suter alphago play possess purpose intelligence wake morning decide learn firearms march 2016 researcher stuart russell stated methods progressing faster expected question term outcome urgent adding ensure increasingly powerful systems remain completely human control lot scholars stephen hawking warned 2015 matches future improving gain actual intelligence leading unexpected takeover scholars disagree expert jean gabriel ganascia believes common sense reproducible speak fears contrary raises hopes domains health space exploration scientist richard sutton people scared people paying attention china alphago sputnik moment helped convince chinese government prioritize dramatically increase funding artificial intelligence 2017 deepmind alphago team received inaugural ijcai marvin minsky medal outstanding achievements “alphago wonderful achievement perfect minsky medal initiated recognise” professor michael wooldridge chair ijcai awards committee “what impressed ijcai alphago achieves brilliant combination classic techniques art machine learning techniques deepmind closely it’s breathtaking demonstration contemporary delighted recognise award ”go community popular game china japan korea 2016 matches watched people worldwide players characterized alphago unorthodox plays seemingly questionable moves initially befuddled onlookers sense hindsight players craft style imitating players alphago totally original moves creates alphago appeared unexpectedly stronger compared october 2015 match beaten professional time advantage handicap day lee defeat jeong ahram lead correspondent south korea’s biggest daily newspapers night gloomy people drank alcohol korea baduk association organization oversees professionals south korea awarded alphago honorary dan title exhibiting creative skills pushing game progress china jie 18 recognized player time initially claimed beat alphago declined play fear style matches progressed jie stating highly lose analysing matches regaining confidence alphago displayed flaws fourth match toby manning referee alphago match fan hui hajin lee secretary international federation reason future players computers learn wrong games improve skills game lee speechless match manage upper hand single alphago total victory lee apologized losses stating game misjudged capabilities alphago powerless emphasized defeat lee dol defeat defeat mankind lee eventual loss machine inevitable stated robots understand beauty game humans lee called game victory priceless win exchange systems facebook playing darkforest based combining machine learning monte carlo tree search strong player programs 2016 defeated professional human player darkforest lost crazystone zen estimated strength crazystone zen deepzengo developed support video sharing dwango university tokyo lost 2–1 november 2016 master cho chikun holds record largest title wins japan 2018 paper nature cited alphago approach basis computing potential pharmaceutical drug molecules game alphago master white tang weixing 31 december 2016 alphago resignation white 36 praised impacts alphago documentary film raised hopes lee sedol fan hui benefitted experience playing alphago 2018 ratings changed lee sedol ranked 11th fan hui 545th community moved plays game 
49316492	computerscience	darkforest program developed facebook based deep learning techniques convolutional neural network updated version darkfores2 combines techniques predecessor monte carlo tree search mcts effectively takes tree search methods commonly chess programs randomizes update darkfmcts3 darkforest strength programs crazystone zen tested professional human player 2016 uec cup google alphago program professional player october 2015 combination techniques darkforest named liu cixin science fiction dark forest background competing human players ancient game term goal artificial intelligence go’s branching factor traditional search techniques ineffective cutting edge hardware go’s evaluation function change drastically stone change deep convolutional neural network designed term predictions darkforest improve win rate bots traditional monte carlo tree search based approaches matches human players darkfores2 achieves stable 3d ranking kgs server roughly corresponds advanced amateur human player adding monte carlo tree search darkfores2 create stronger player named darkfmcts3 achieve 5d ranking kgs server darkfmcts3 par art ais zen dolbaram crazy stone lags alphago 3rd january 2016 kgs bot tournament ais news coverage google alphago fan hui 2015 facebook hardware designs public releasing code darkforest source heavy recruiting strengthen team engineers style play darkforest neural network sort 10100 board positions powerful neural networks match level amateur players search based engines darkfores2 combines neural network approach search based machine database 250 000 real games development darkforest 220 000 training set rest neural network ability predict moves played real games darkforest accurately evaluate global board local tactics poor search based engines poor global evaluation local tactics combining approaches difficult search based engines faster neural networks solved darkfores2 running processes parallel frequent communication conventional strategies played analyzing position stones board advanced players playing subconsciously chess checkers players simply moves human players average 250 moves approach ineffective neural networks human play training systems images successful moves effectively learn interpret board grandmasters november 2015 facebook demonstrated combination mcts neural networks played style human flaws darkforest flaws play style bot plays tenuki pointlessly local powerful moves required bot losing typical behavior mcts plays bad moves loses facebook team acknowledged future improvement program architecture family darkforest programs based convolution neural networks advances darkfmcts3 combined convolutional neural networks traditional monte carlo tree search darkfmcts3 advanced version darkforest combines facebook advanced convolutional neural network architecture darkfores2 monte carlo tree search darkfmcts3 relies convolution neural networks predicts moves based current play treats board 19x19 image multiple channels channel represents aspect board based specific style play standard extended play 21 25 channels standard play players liberties represented binary channels planes respective plane true player liberties ko illegal moves represented binary plane stone placement opponent board positions represented binary planes duration stone represented real planes player lastly opponents rank represented binary planes true player 9d level true 8d level extended play additionally considers boarder binary plane true border position mask represented distance board center real position player territory binary based player location closer darkfmct3 12 layer convolutional network 384 nodes weight sharing pooling convolutional layer rectified linear unit popular activation function deep neural networks key innovation darkfmct3 compared previous approaches softmax function predict enables approach reduce parameters darkfmct3 trained 300 random selected games empirical dataset representing game stages learning rate determined vanilla stochastic gradient descent darkfmct3 synchronously couples convolutional neural network monte carlo tree search convolutional neural network computationally taxing monte carlo tree search focuses computation game play trajectories running neural network synchronously monte carlo tree search guarantee node expanded moves predicted neural network comparison systems darkfores2 beats darkforest neural network predecessor 90 time pachi search based engines 95 time kyu rating darkforest holds 2d level darkfores2 achieves stable 3d level kgs server ranked bot monte carlo tree search darkfmcts3 000 rollouts beats pachi 10k rollouts 250 games 75k rollouts achieves stable 5d level kgs server par art ais zen dolbaram crazystone 110k rollouts 3rd january kgs tournament 
49474181	computerscience	zephyr real time operating connected resource constrained devices supporting multiple architectures released apache license bsd licensed fork occurs arduino 101 software source package intel history november 2015 originally developed rocket kernel wind river systems internet iot devices february 2016 zephyr project linux foundation supporters zephyr include intel nxp semiconductors synopsys linaro runtime devicetone nordic semiconductor oticon features zephyr kernel designed resource constrained systems simple embedded environmental sensors light emitting diode led wearables sophisticated smart watches iot wireless gateways kernel offers features distinguish oses security dedicated maintaining improving security owned supported community eyes source developers vetting code increases zephyr security single address space combines application specific code custom kernel create monolithic image loaded executed system’s hardware application code kernel code execute shared address space highly configurable application incorporate abilities quantity size resources defined compile time requires resources defined compile time reduces code size increases performance minimal error checking minimal time error checking reduce code size increase performance optional error checking infrastructure assist debugging application development development services development services offer familiar services development including 
49541331	computerscience	xgboost source software library gradient boosting framework java python andjulia linux windows andmacos project description aims provide scalable portable distributed gradient boosting gbm gbrt gbdt library running single machine supports distributed processing frameworks apache hadoop apache spark apache flink gained popularity attention algorithm choice winning teams machine learning competitions history xgboost initially started project tianqi chen distributed deep machine learning community dmlc initially terminal application configured libsvm configuration file winning higgs machine learning challenge competition circles python packages built packages languages julia scala java brought library developers popular kaggle community competitions multiple packages easier respective communities integrations scikit learn python users caret package users integrated data flow frameworks apache spark apache hadoop apache flink abstracted rabit xgboost4j xgboost published tianqi chen carlos guestrin 
50073184	computerscience	generative adversarial networks gans class artificial intelligence algorithms unsupervised machine learning implemented neural networks contesting sum game framework introduced ian goodfellow 2014 technique generate photographs superficially authentic human observers realistic characteristics tests people real generated method network generates candidates generative evaluates discriminative typically generative network learns map latent space data distribution discriminative network discriminates instances true data distribution candidates produced generator generative network training objective increase error rate discriminative network fool discriminator network producing synthesised instances true data distribution practice dataset serves initial training data discriminator training discriminator involves samples dataset reaches level accuracy typically generator seeded randomized input sampled predefined latent space multivariate normal distribution samples synthesized generator evaluated discriminator backpropagation applied networks generator produces images discriminator skilled flagging synthetic images generator typically deconvolutional neural network discriminator convolutional neural network idea infer models competitive setting model discriminator proposed gauci gross 2013 method behavioral inference termed turing learning setting akin turing turing learning generalization gans models neural networks considered discriminators allowed influence processes datasets active interrogators turing idea adversarial training earlier schmidhuber 1992 application gans produce samples photorealistic images purposes visualizing interior industrial design shoes bags clothing items items games scenes networks reported facebook gans modeled patterns motion video reconstruct 3d models objects images improve astronomical images 2017 convolutional feedforward gan image enhancement automated texture synthesis combination perceptual loss focused realistic textures pixel accuracy result image quality magnification gans create 2018 painting edmond belamy sold 432 500 gans applications 
50575063	computerscience	google assistant artificial intelligence powered virtual assistant developed google mobile smart devices company previous virtual assistant google google assistant engage conversations assistant initially debuted 2016 google messaging app allo voice activated speaker google period exclusivity pixel pixel xl smartphones deployed android devices february 2017 including party smartphones android wear wear os released standalone app ios operating announcement software development kit april 2017 assistant extended support variety devices including cars party smart appliances functionality assistant enhanced party developers 2017 google assistant installed 400 devices users interact google assistant natural voice keyboard input supported nature manner google assistant search internet schedule events alarms adjust hardware settings user device user google account google announced assistant identify objects gather visual device camera support purchasing products sending money identifying songs ces 2018 assistant powered smart displays smart speakers video screens announced released july 2018 history google assistant unveiled google developer conference 18 2016 unveiling google smart speaker messaging app allo google ceo sundar pichai explained assistant designed conversational experience ambient experience extends devices month google assigned google doodle leader ryan germick hired pixar animator emma coats develop personality platform expansion level integration allo app google google assistant initially exclusive pixel pixel xl smartphones february 2017 google announced begun enable access assistant android smartphones running android marshmallow nougat select english speaking markets android tablets receive assistant rollout assistant integrated android wear included future versions android android auto october 2017 google pixelbook laptop include google assistant google assistant google pixel buds december 2017 google announced assistant released phones running android lollipop update google play services tablets running marshmallow nougat 15 2017 android police reported google assistant coming ios operating separate app confirmed days google developer conference smart displays january 2018 consumer electronics assistant powered smart displays released smart displays event lenovo sony jbl lg devices support google duo video calls youtube videos google maps directions google calendar agenda viewing smart camera footage addition services google devices devices based android google developed software google unveiled smart display google hub october 2018 utilizes platform developer support december 2016 google launched actions google developer platform google assistant actions google 3rd party developers build apps google assistant march 2017 google tools developing actions google support creation games google assistant originally limited google smart speaker actions google android ios devices 2017 time google introduced app directory overview compatible products services incentivize developers build actions google announced competition tickets google 2018 developer conference 000 walk google campus received 500 000 google april 2017 software development kit sdk released allowing party developers build hardware google assistant integrated raspberry pi cars audi volvo smart appliances including fridges washers ovens companies including irobot lg electric link google updated sdk december 2017 add features google smart speakers google assistant smartphone apps supported features include interaction google assistant nature manner google search internet schedule events alarms adjust hardware settings user device user google account google assistant engage conversation google natural language processing algorithm search card format users tap february 2017 google announced users google shop voice products google express shopping service products foods market costco walgreens petsmart bed bath launch retailers months partnerships formed google assistant maintain shopping list notetaking service google feature moved google express google app april 2017 severe loss functionality 2017 google announced assistant support keyboard typed input visual responses support identifying objects gather visual device camera support purchasing products sending money keyboard users history queries google assistant edit delete previous inputs assistant warns deleting previous inputs generate answers future november 2017 identify songs playing assistant google assistant users activate modify vocal shortcut commands perform actions device android ipad iphone configuring hub automation feature speech recognition english languages july 2018 google version assistant gained support multiple actions triggered single vocal shortcut command annual developers conference 2018 google seo announced addition voice options google assistant john legend wavenet voice synthesizer developed deepmind reduced audio samples voice actor required produce creating voice model august 2018 google bilingual capabilities google assistant existing supported languages devices reports support multilingual support setting default language android phone default option google assistant support common features speech recognition trascripted texts punctuation spelling beta feature speech enables en language users detect insert punctuation transcription speech recognize commas question marks periods transcription requests google duplex 2018 google revealed duplex extension google assistant carry natural conversations mimicking human voice assistant autonomously complete tasks calling hair salon book appointment scheduling restaurant reservation calling businesses verify holiday store hours duplex complete tasks autonomously recognize situations unable complete signal human operator finish task duplex created speak natural voice language incorporating speech disfluencies filler hmm uh common phrases mhm gotcha human intonation response latency duplex development limited release late 2018 google pixel users limited release pixel phone users atlanta york phoenix san francisco duplex restaurant reservations criticism announcement concerns ethical societal questions artificial intelligence technology duplex raises instance human operators notice speaking digital robot conversing duplex critics view unethical deceitful concerns privacy identified conversations duplex recorded virtual assistant analyze respond privacy advocates raised concerns millions vocal samples gathered consumers fed algorithms virtual assistants forms smarter features individualize user experience critics unsure term implications “the company unprecedented access human patterns preferences crucial phase artificial intelligence lead outsmarting creators transparency referred key experience technology revealed google clarified statement designing feature disclosure built we’ll appropriately identified google jurisdictions assistant inform phone recorded reception pc mark hachman favorable review google assistant step cortana siri digital trends called smarter google 
50957870	computerscience	wan acronym software defined networking wide network wan wan simplifies management operation wan decoupling separating networking hardware control mechanism concept software defined networking implements virtualization technology improve data center management operation key application wan companies build performance wans cost commercially internet access enabling businesses partially wholly replace expensive private wan connection technologies mpls american marketing firm gartner predicted 2015 2019 30 enterprises deploy wan technology branches overview wans companies extend networks distances connect remote branch offices data centers deliver applications services required perform business functions companies extend networks distances multiple carriers networks operational challenges including network congestion packet delay variation packet loss service outages modern applications voip calling videoconferencing streaming media virtualized applications desktops require latency bandwidth requirements increasing applications featuring definition video expensive difficult expand wan capability difficulties network management troubleshooting wan products designed address network enhancing replacing traditional branch routers virtualization appliances control application level policies offer network overlay expensive consumer grade internet links dedicated circuit simplifies setup process branch personnel wan products physical appliances virtual appliances remote branch offices larger offices corporate data centers increasingly cloud platforms centralized controller set policies prioritize traffic wan takes account policies availability network bandwidth route traffic helps ensure application performance meets service level agreements slas history wan consists technologies combined enhancements redundant telecommunication links connecting remote sites 1970s 25 links remote mainframe terminal access central management links focus application delivery wan started popular mid 2000s wan combines adds ability dynamically share network bandwidth connection additional enhancements include central controllers integrated analytics demand circuit provisioning network intelligence based cloud allowing centralized policy management security networking publications started term wan networking trend 2014 required characteristics firm gartner defined wan required characteristics form factors wan products physical appliances software based features features wans include resilience security quality service qos flexible deployment options simplified administration troubleshooting resilience resilient wan reduces network downtime technology feature real time detection outages automatic switch links quality service wan technology supports quality service application level awareness bandwidth priority critical applications include dynamic path selection sending application faster link splitting application paths improve performance delivering faster security wan communication secured ipsec staple wan security application optimization wans improve application delivery caching storing accessed memory speed future access deployment options wan products pre configured appliances network edge data centers branch offices remote locations virtual appliances existing network hardware appliance deployed virtual appliance cloud environments amazon services aws software service saas enterprises benefit wan services migrate application delivery corporate servers cloud based services salesforce google apps administration troubleshooting management simplicity key requirement wans gartner network equipment guis preferred command interface cli methods configuration control beneficial administrative features include automatic path selection ability centrally configure appliance pushing configuration true software defined networking approach appliances virtual appliances configured centrally based application underlying hardware online traffic engineering global view network status controller manages wan perform careful adaptive traffic engineering assigning transfer requests current usage resources links achieved performing central calculation transmission rates controller rate limiting senders rates complementary technology wan wan optimization similarities wan wan optimization collection techniques increase data transfer efficiencies wans goal accelerate application delivery branch offices data centers wan technology focuses additionally cost savings efficiency allowing cost network links perform expensive leased lines wan optimization focuses squarely improving packet delivery wan utilizing virtualization techniques assisted wan optimization traffic control network bandwidth dynamically grow shrink wan technology wan optimization separately wan vendors adding wan optimization features products wan edge routers wan edge router device routes data packets wan locations enterprise access carrier network called boundary router core router sends packets single network wans overlay simplify management existing wan edge routers lowering dependence routing protocols wan alternative wan edge routers wan hybrid wan wans hybrid wans terms interchangeably identical hybrid wan consists connection types software defined network sdn component wan mpls cloud based wan offers advanced features enhanced security seamless cloud support mobile users result naturally cloud infrastructure result cloud based wan replace mpls enabling organizations release resources tied wan investments create capabilities testing validation standard algorithm wan controllers device manufacturers proprietary algorithm transmission data algorithms determine traffic direct link switch traffic link breadth options relation software hardware wan control solutions imperative tested validated real conditions lab setting prior deployment multiple solutions testing purposes ranging purpose built network emulation appliances apply network impairments network tested reliably validate performance software based solutions marketplace network divides wan vendor market established networking vendors adding wan products offerings wan specialists starting integrate wan functionality products startups focused wan market alternatively market overview nemertes wan vendors categories based original technology space pure play wan providers wan optimization vendors link aggregation vendors network vendors network category startups focused wan market equivalent nemertes pure play wan providers category nemertes offers detailed view preexisting wan networking providers additionally nemertes describes wan market describing market strategy connectivity providers entering wan market providers include network service vendors carriers telcos content delivery networks secure wan providers online resources including networking technology podcast packet pushers updated list existing wan vendors june 2018 network named hot wan startups 
51328172	computerscience	fuchsia capability based operating developed google public project appeared github august 2016 official announcement contrast prior google developed operating systems chrome os android based linux kernel fuchsia based microkernel called zircon github project suggests fuchsia platforms embedded systems smartphones tablets personal computers 2017 fuchsia updated user interface developer writing project dumping ground dead prompting media speculation google intentions operating including possibility replacing android history august 2016 media outlets reported mysterious codebase post published github revealed google developing operating called fuchsia official announcement inspection code suggested capability universal devices including dash infotainment systems cars embedded devices traffic lights digital watches smartphones tablets pcs code differs android chrome os based zircon kernel magenta linux kernel 2017 ars technica wrote fuchsia user interface upgrade command interface reveal august developer writing fuchsia toy 20 project dumping ground dead care multiple media outlets wrote project seemingly close ties android speculating fuchsia effort replace android fixes platform november 2017 initial support swift programming language committed january 2018 google published guide fuchsia pixelbooks ars technica october 2018 reported announced google hub fuchsia os device code named astro january 2019 confirmed android app support codebase features fuchsia user interface apps written flutter software development kit allowing cross platform development abilities fuchsia android ios flutter produces apps based dart offering apps performance 120 frames flutter offers vulkan based graphics rendering engine called escher specific support volumetric soft shadows element ars technica wrote custom built google shadow heavy material design interface guidelines os driverless car google flutter software development kit offering cross platform opportunities users install fuchsia android devices ars technica users fuchsia adding bunch placeholder interfaces finding multiple similarities fuchsia interface android including apps screen settings menu split screen view viewing multiple apps review ars technica impressed progress noting pleased hardware support positive surprises support multiple mouse pointers special version android runtime fuchsia developed machines file equivalent android apk zircon fuchsia based microkernel called zircon zircon derived kernel operating intended embedded systems kernel developed travis geiselbrecht creator newos kernel haiku 
52840911	computerscience	google neural machine translation gnmt neural machine translation nmt developed google introduced november 2016 artificial neural network increase fluency accuracy google translate gnmt improves quality translation applying based ebmt machine translation method learns millions examples gnmt proposed architecture learning tested languages supported google translate framework learns time create natural translations gnmt capable translating sentences time piece piece gnmt network undertake interlingual machine translation encoding semantics sentence memorizing phrase phrase translations history google brain project established 2011 secretive google lab google fellow jeff dean google researcher greg corrado stanford university science professor andrew ng’s led biggest breakthroughs google stanford september 2016 team google announced development google neural machine translation gnmt november google translate neural machine translation nmt preference previous statistical methods smt october 2007 proprietary house smt technology google translate nmt artificial neural network capable deep learning millions examples gnmt improves quality translation broader context deduce relevant translation result rearranged adapted approach grammatically based human language gnmt proposed architecture learning tested languages supported google translate gnmt create universal interlingua aimed commonality languages considered psychologists linguists scientists translation engine enabled languages english french german spanish portuguese chinese japanese korean turkish 2016 march 2017 additional languages enabled russian hindi vietnamese thai support support hebrew arabic google translate community month mid april 2017 google netherlands announced support dutch european languages english support indian languages hindi bengali marathi gujarati punjabi tamil telugu malayalam kannada april 2017 languages supported gnmt list language translation pairs supported google translate neural machine translation nmt model july 2017 languages support translation english shot translation gnmt represent improvement google translate handle shot translation translates language japanese korean google translate translated source language english translated english target language translating language english language pairs supported 
53070745	computerscience	foveated rendering upcoming graphics rendering technique eye tracker integrated virtual reality headset reduce rendering workload greatly reducing image quality peripheral vision zone gazed fovea history ces 2016 sensomotoric instruments smi demoed 250 hz eye tracking foveated rendering solution partnership camera sensor manufacturer omnivision camera hardware july 2016 nvidia demonstrated siggraph method foveated rendering claimed invisible users ces 2019 january htc announced upcoming virtual reality headset called vive pro eye featuring eye tracking support foveated rendering chief scientist michael abrash oculus foveated rendering reduce pixels rendered virtual reality 20 times 
53639024	computerscience	bixby virtual assistant developed samsung electronics march 20 2017 samsung announced voice powered digital assistant named bixby bixby introduced samsung galaxy s8 s8 samsung galaxy tab samsung galaxy unpacked 2017 event held march 29 2017 samsung officially unveiled bixby week launch appearance event bixby sideloaded galaxy devices running android nougat bixby represents major reboot voice samsung voice assistant app introduced 2012 galaxy iii 2017 samsung announced bixby coming family hub refrigerators mobile product include virtual assistant october 2017 samsung announced release bixby annual developer conference san francisco version set rolled company’s connected products including smartphones tvs refrigerators parties allowed develop applications bixby samsung developer kit features bixby bixby voice bixby vision bixby bixby voice bixby voice user trigger bixby calling press bixby button located volume rocker phone release bixby button reprogrammable set applications assistants google assistant phone release ability removed firmware update remapped party apps bixby vision bixby vision built camera app essentially augmented reality camera identify objects real time search services offer user purchase bixby translate read qr codes recognize landmarks bixby bixby swiping screen short press bixby button vertically scrolling list bixby interact weather fitness activity buttons controlling smart gadgets bixby supports languages including chinese supports contextual search visual search language country availability samsung reported bixby operational version samsung galaxy s8 s8 devices shipped consumers april 21 2017 samsung stated key features bixby including vision reminder global launch smartphones bixby voice intended galaxy s8 s8 spring release english version postponed samsung bixby understand language april 2018 bixby 195 countries korean english chinese mandarin chinese version bixby devices officially sold mainland china bixby korean launched 2017 kst 
53785121	computerscience	visual fidelity vif reference image quality assessment based natural scene statistics notion image extracted human visual developed hamid sheikh alan bovik laboratory image video engineering live university texas austin 2006 correlate human judgments visual quality deployed core netflix vmaf video quality monitoring controls picture quality encoded videos streamed netflix accounts 35 bandwidth consumption increasing volume videos streamed globally model overview images videos dimensional visual environment common class class natural scenes natural scenes form tiny subspace space signals researchers developed sophisticated models characterize statistics real distortion processes disturb statistics image video signals unnatural vif employs natural scene statistical nss models conjunction distortion channel model quantify shared reference images vif based hypothesis shared aspect fidelity relates visual quality contrast prior approaches based human visual hvs error sensitivity measurement structure statistical approach theoretic setting yields reference quality assessment method rely hvs viewing geometry parameter constants requiring optimization competitive art methods reference image modeled output stochastic natural source passes hvs channel processed brain content reference image quantified mutual input output hvs channel brain ideally extract output hvs measure quantified presence image distortion channel distorts output natural source passes hvs channel measuring brain ideally extract image pictorially figure measures combined form visual fidelity measure relates visual quality relative image model source model gaussian scale mixture gsm statistically model wavelet coefficients steerable pyramid decomposition image model subband multi scale multi orientation decomposition extended subbands wavelet coefficients subband denotes set spatial indices subband dimensional vector subband partitioned overlapping blocks coefficients block corresponds gsm model 7where positive scalar gaussian vector variance overlapping blocks assumed independent random field 11 independent 12 distortion model distortion process modeled combination signal attenuation additive noise wavelet domain mathematically 13 denotes random field subband distorted image 14 deterministic scalar field 15 16 gaussian vector variance 17 thenformula 18further 19 modeled independent 11 12 hvs model duality hvs models nss implies aspects hvs accounted source model hvs additionally modeled based hypothesis uncertainty perception visual signals limits extracted source distorted image source uncertainty modeled visual noise hvs model hvs noise subband wavelet decomposition modeled additive white gaussian noise 22 andformula 23 random fields 24 25 gaussian vectors variance 26 27 28 29 denote visual signal output hvs mathematically 30 31 note 32 33 random fields independent 11 12 19 vif 37 denote vector blocks subband 38 defined 40 denote maximum likelihood estimate 41 42 extracted reference asformula 44while extracted image asformula 45denoting 46 blocks subband 47 wavelet decomposition 48 variables vif defined asformula 49performance spearman rank correlation coefficient srocc vif scores distorted images live image quality assessment database human opinion scores evaluated 96 suggests correlates human perception image quality par iqa algorithms 
54022970	computerscience	pytorch source machine learning library python based torch applications natural language processing developed facebook artificial intelligence uber pyro software probabilistic programming built pytorch level features history facebook operates pytorch caffe2 incompatibility difficult transform pytorch defined model caffe2 vice versa neural network exchange onnx project created facebook september 2017 converting models frameworks caffe2 merged pytorch march 2018 pytorch tensors terms programming tensors simply considered multidimensional arrays tensors pytorch numpy arrays addition tensors gpu supports cuda pytorch supports types tensors modules autograd module pytorch technique called automatic differentiation recorder records operations performed replays compute gradients technique powerful building neural networks save time epoch calculating differentiation parameters pass optim module torch optim module implements optimization algorithms building neural networks commonly methods supported build scratch nn module pytorch autograd easy define computational graphs gradients raw autograd bit level defining complex neural networks nn module 
54982564	computerscience	cloudminds operator cloud based systems intelligent robots founded 2015 concentrates realizing safe cloud computing network intelligent robots creating mixed platform machine learning safe intelligent terminals researching technologies realizing robot controller operations history founded 2015 cloudminds created cloud based intelligent robot architecture based cloud brain secure network softbank foxconn walden venture investments keytone ventures cloudminds developed depth cloud intelligence integration speed security network safe smart devices robot control technology cloudminds built human augmented robotics intelligence hari platform applied blind guiding operator created cloud based terminal “data” series constructing backbone network worldwide vbn based nuclear technologies cloudminds succeeded realizing mobile intranet cloud services mcs function improving security cloud robot remote controlling technology financial medical military public security department scale manufacturing industry product service hardware cloud connected smart machines cloudminds cloud robot operator builds platform services robots connect learn tendency household robot 2025 company determines develop ground breaking technology robotic control network cloud security mobile intranet cloud services mcs platform offers secure device cloud connection performance latency private network target partner minds smart devices products include blind guiding robot mobile device control unit generic robots stimulate ecosystem products services solve complex health care manufacturing finance industries data data cloud intelligent device serve controller robot cloud brain implemented hardware virtualization qualcomm platform cloudminds implemented gpu virtualization data data developed sandwich hardware extension architecture based special hardware interface enables support dual lte meta meta wearable device based cloud framework cloudminds takes shape helmet visually impaired people support recognition object recognition path planning obstacle avoidance software mobile intranet cloud service mobile intranet cloud service mcs xaas cloud vbn terminal design terminal technologies dual chips virtualization applies artificial intelligence activate robot mobile xaas cloud xaas cloud based original hari human augmented robotic intelligence architecture realize integration artificial intelligence human intelligence provide image recognition enterprise collaboration types services xaas cloud completed phase construction providing cloud service platform mcs vbn august 2015 cloudminds begun construct backbone network worldwide realize network path optimization protocol optimization provide safe speed internet service sdn software defined network sdp software defined boundary 
55572262	computerscience	alphago version deepmind software alphago alphago team published article journal nature 19 october 2017 introducing alphago version created data human games stronger previous version playing games alphago surpassed strength alphago lee days winning 100 games reached level alphago master 21 days exceeded versions 40 days training artificial intelligence datasets derived human experts implications development superhuman skills expert data expensive unreliable simply unavailable demis hassabis founder ceo deepmind alphago powerful constrained limits human knowledge david silver authors deepmind papers published nature alphago generalised algorithms removing learn humans google developed alphazero generalized version alphago play chess shōgi addition december 2017 alphazero beat day version alphago winning 60 games 40 hours training outperformed alphago lee elo scale alphazero defeated chess program stockfish shōgi program elmo training alphago neural network trained tensorflow 64 gpu workers 19 cpu parameter servers tpus inference neural network initially rules earlier versions alphago perceived board stones rare human programmed edge recognize unusual board positions engaged reinforcement learning playing anticipate moves moves affect game outcome days alphago played games quick succession appeared develop skills required beat humans days earlier alphago months training achieve level comparison researchers trained version alphago human games alphago master learned performed deepmind submitted initial findings paper nature april 2017 published october 2017 hardware cost hardware cost single alphago including custom components quoted 25 applications hassabis alphago algorithms benefit domains require intelligent search enormous space possibilities protein folding accurately simulating chemical reactions alphago techniques domains difficult simulate learning drive car deepmind stated october 2017 started active attempting alphago technology protein folding stated publish findings reception alphago regarded advance compared groundbreaking predecessor alphago oren etzioni allen institute artificial intelligence called alphago impressive technical result ability it—and ability train 40 days tpus guardian called major breakthrough artificial intelligence citing eleni vasilaki sheffield university tom mitchell carnegie mellon university called impressive feat “outstanding engineering accomplishment mark pesce university sydney called alphago technological advance undiscovered territory gary marcus psychologist york university cautioned alphago implicit knowledge programmers construct machines play tested domains base architecture effective playing contrast deepmind confident approach generalisable domains response reports south korean professional lee sedol previous version alphago wasn’t perfect that’s alphago potential alphago development lee wait affect players mok jin seok directs south korean national team imitating playing styles previous versions alphago creating ideas hopeful ideas alphago mok trends influenced alphago’s playing style hard understand playing alien experience i’ve mok debate gap capability alphago humans it’s computers mok reportedly begun analyzing playing style alphago players national team watched matches received impression alphago plays human predecessors mok chinese professional jie commented remarkable accomplishments program pure learning alphago strongest humans redundant improvement alphazero december 2017 deepmind team released preprint arxiv introducing alphazero program generalized alphago approach achieved 24 hours superhuman level play chess shogi defeating champion programs stockfish elmo day version alphago alphazero generalized variant alphago agz algorithm play shogi chess differences agz include source program leela based ideas alphago papers gpu tpus versions alphago rely strong alphazero strength human professional player 
55811405	computerscience	leela source software released 25 october 2017 developed belgian programmer gian carlo pascutto author chess engine sjeng engine leela leela algorithm based deepmind 2017 paper alphago original leela lot human knowledge heuristics programmed program code leela basic rules knowledge leela strong player contained neural network trained based previous games program played leela trained distributed effort coordinated leela community provide computing resources running client generates play games submits server play games train networks 500 clients connected server contribute resources community quality code contributions leela finished berrygenomics cup tournament fuzhou fujian china 28 april 2018 yorker 2018 characterized leela leela world’s successful source engines additionally 2018 team branched leela chess code base verify methods alphazero paper applied game chess alphazero google tpus replaced crowd sourcing infrastructure ability graphics card gpus opencl library expected crowd sourced training dozen hours alphazero allowed train chess match paper 
55981499	computerscience	alphazero program algorithm developed alphabet owned artificial intelligence company deepmind master chess shogi approach alphago december 2017 deepmind team released preprint introducing alphazero 24 hours achieved superhuman level play games defeating champion programs stockfish elmo day version alphago custom tensor processing units tpus google programs optimized alphazero trained solely play 000 generation tpus generate games 64 generation tpus train neural networks parallel access books endgame tables hours training deepmind estimated alphazero playing elo rating stockfish hours training algorithm decisively defeated stockfish time controlled 100 game tournament 28 wins losses 72 draws trained algorithm played single machine tpus deepmind paper alphazero published journal science december 2018 relation alphago alphazero generalized variant alphago agz algorithm play shogi chess differences agz include alphazero stockfish elmo comparing monte carlo tree search searches alphazero searches 80 000 positions chess 40 000 shogi compared 70 stockfish 35 elmo alphazero compensates evaluations deep neural network focus selectively promising variation training alphazero trained solely play 000 generation tpus generate games 64 generation tpus train neural networks parallel training alphazero periodically matched benchmark stockfish elmo alphago games determine training progressing deepmind judged alphazero performance exceeded benchmark hours training stockfish hours elmo hours alphago preliminary outcome chess alphazero chess tournament stockfish 2016 tcec champion program minute worth thinking time stockfish allocated 64 threads hash size setting stockfish tord romstad criticized suboptimal alphazero trained chess total hours tournament tournament alphazero single machine application specific tpus 100 games normal starting position alphazero 25 games white black drew remaining 72 series 100 game matches unspecified time resource constraints stockfish starting 12 popular human openings alphazero 290 drew 886 lost 24 shogi alphazero trained shogi total hours tournament 100 shogi games elmo shogi championship 27 summer 2017 tournament version yaneuraou 73 search alphazero times lost times drew chess games program minute elmo 64 threads hash size 1 gb 34 hours learning alphago alphazero 60 games lost 40 analysis deepmind stated preprint game chess represented pinnacle decades art programs based powerful engines search millions positions leveraging handcrafted domain expertise sophisticated domain adaptations alphazero generic reinforcement learning algorithm originally devised game achieved superior hours searching times positions domain knowledge rules deepmind demis hassabis chess player called alphazero play style alien wins offering counterintuitive sacrifices offering queen bishop exploit positional advantage chess dimension difficulty chess forcing win strong opponent 28–72–0 result margin victory grandmasters hikaru nakamura komodo developer larry kaufman downplayed alphazero victory arguing match closer programs access database stockfish optimized scenario romstad additionally stockfish optimized rigidly fixed time moves version shogi observers argued elmo hash size resignation settings enteringkingrule settings shogi § entering king inappropriate elmo obsolete compared programs reaction criticism papers headlined chess training hours managed time breakfast lunch wired hyped alphazero multi skilled board game champ expert joanna bryson google knack publicity putting strong position challengers hiring programmers political helps google strong negotiating governments regulators sector human chess grandmasters impressed alphazero danish grandmaster peter heine nielsen likened alphazero play superior alien species norwegian grandmaster jon ludvig hammer characterized alphazero play insane attacking chess profound positional understanding champion garry kasparov remarkable achievement expected alphago grandmaster hikaru nakamura impressed stated lot credibility simply understanding alphazero basically google supercomputer stockfish hardware stockfish basically running laptop wanna match comparable stockfish running supercomputer correspondence chess player wolff morrow unimpressed claiming alphazero semifinals fair competition tcec engines play equal hardware morrow stated beat alphazero alphazero played drawish openings petroff defence alphazero beat correspondence chess game motohiro isozaki author yaneuraou alphazero comprehensively beat elmo rating alphazero shogi stopped growing 100 200 elmo gap elmo shogi software catch 1–2 final deepmind addressed criticisms final version paper published december 2018 science clarified alphazero running supercomputer trained 000 tensor processing units tpus tpus 44 core cpu matches chess final stockfish conditions tcec superfinal 44 cpu cores syzygy endgame tablebases 32gb hash size fixed time control minute engines hours 15 finish game version stockfish version alphazero score 155 wins losses rest drawn deepmind played series games tcec positions alphazero 95 100 mini matches positions shogi stockfish elmo conditions 2017 csa championship version elmo wcsc27 combination yaneuraou 2017 kppt 79 64avx2 tournament elmo operated hardware stockfish 44 cpu cores 32gb hash size alphazero 98 games playing black 91 reactions criticisms human grandmasters impressed alphazero games stockfish champion garry kasparov pleasure watch alphazero play plays dynamic style reactions chess community muted komodo developer mark lefler called pretty amazing achievement data stockfish gained lot strength months january 2018 stockfish released fellow developer larry kaufman claimed alphazero lose match version stockfish stockfish tcec conditions kaufman argued advantage neural network based engines gpu care power consumption equal hardware contest engines access cpu gpu gpu achieves based stated strongest engine hybrid utilizes neural networks standard alpha beta search 
56306483	computerscience	deepl translator translation service launched august 2017 deepl gmbh start company linguee service supports translations major european languages deepl translations sounded natural humans compared major translation services google translate translator facebook bleu assess translation quality competitors translation considered precise nuanced speed equal competitors technology service convolutional neural networks built linguee database proprietary approach public published reported sort attention mechanism reported company petaflops machine deepl introduced paid ″pro″ version service removes limits translator offers api developers integrate translation service products privacy deepl pro deepl translator prohibit translating texts personal data freemium version pro version advertises store texts translated deepl google analytics cookies identify users associate pseudonymous user profiles 
56596980	computerscience	kizuna kizuna western japanese proclaimed artificial intelligence 2018 operates youtube channels channel games kizuna claims virtual youtuber channel avatar vlogging purposes youtube channel english japanese ami yamato debuted video 2011 adoption concept mattel involved virtual personality 2015 advertisement campaign 29 november 2016 kizuna started posting videos youtube channel channel channel games march 2017 gaming content character design created morikura en 3d modelling tomitake supervision tda identities kizuna voice actress personnel involved unknown speculate kizuna created mikumikudance software facial expression actions motion capture technology kizuna video content youtubers consisting discussions videos traditional play videos kizuna communicates japanese fans contribute translations videos discord server kizuna performed anime conventions game companies production kizuna online virtual character completely constructed software identities producers background revealed video animators producers video editors voice actors players games unknown videos maintained production standard aspects character design multi directional editing movement handling exceeding level hobbyists kizuna youtube channels managed entire production crew choice remain anonymous concept virtual idol intact caused speculation operation crew technology kizuna videos produced tokyo based digital production company activ8 crew involved kizuna design include morikura en character design tomitake 3d modelling tda modelling supervision morikura artist illustrating artworks tomitake designed 3d models tda expert mikumikudance 3d modelling field kizuna played professional actress identity publicly publicly claimed voice actor plans publicly topic speculated kizuna voice actions person sync personality kizuna aware virtual character claims independent artificial intelligence kizuna main concept character virtual setting created kizuna publicly recognized virtual youtube user october 2018 article bbc capital mattel advertisement campaign barbie 2015 concept video kizuna introduces meaning artificial intelligence pun japanese word 愛 meaning love kizuna designed beautiful 5d animated girl moe elements attracts youtube users kizuna appearance age roughly 16 revealed birthday 30th june height 156cm weight roughly 46kg measurements 85 59 83 kizuna appearance pink white color palette flowing hair coupled futuristic gradient hair dye pink wears pink wobbly hairband butterfly knot hairband double leaf heart shaped design word meaning love kizuna sleeveless white brings futuristic feel designed emphasis body slimmer embroidered chest letter arm sleeves thigh highs decorated lace thigh highs shorts form absolute territory kizuna huge fan love live love live school idol festival favorite character nico yazawa interview panora kizuna mentioned pays close attention idol keyakizaka46 nogizaka46 kizuna likes idols follow dreams character design likes spend time virtual space playing video games technology kizuna livestream record videos virtual environment considered rely software mikumikudance production crew designs 3d model manually control model movements hire voice actor animation voice mikumikudance videos vocaloid pop music allowing users import control 3d models virtual characters hatsune miku hand netizens kizuna facial expressions eye facial tracking facial recognition software facerig technology facerig live2d modules existed considerable time feel kizuna result applying technology 3d models projecting facial expressions virtual reality model hiding identities creators actors involved time omni directional motion capture technology recording actions real actors data simulate movement character virtual reality setting methods kizuna resemble real people closely terms expressions actions kizuna videos female youtubers activities youtube channel channel created 18 october 2016 kizuna started posting videos 29 november 2016 creates designs hosts series videos mix wacky elements videos designed break boundaries virtual real spaces involves activities television hosting virtual reality production crew wishes audience touch experience technology allowing users interact kizuna virtual space kizuna posts videos day youtube recognized active user video sharing platform subscribers october 2018 kizuna popular virtual personality watched japanese content creators gaining traction regions globe january 2017 kizuna joked clothes holographic projections technically naked youtube detected word naked decided video contained inappropriate content channel banned content posted video sharing niconico weeks channel unbanned february ban kizuna popularity grew tremendously subscriber count reached 100 000 25 february march kizuna uploaded 60 videos channel exceeded 200 000 subscribers comments 31 march kizuna started releasing gaming content channel named games games blocked unknown reasons 17 april unblocked resumed posting videos day channel reached subscribers 15 july 2018 games reached subscribers 14 august 2018 activities youtube channels official kizuna created twitter instagram accounts facilitate interaction fans holds limited time events occasionally valentine day chocolate giveaway 2017 kizuna accepted interview panora focusing topic virtual reality interview divided posted kizuna official 25 26 march 2017 kizuna performed interacted fans live stage animejapan april 2017 collaboration kizuna japanese video game development company asobimo announced newly created games channel kizuna periodically post videos commentary playing avabel online mmorpg designed asobimo smartphones kizuna game occasionally video advertisements game kizuna ambassador japan national tourism organization japan campaign hosted television variety titled aired japan ntv channel april 2018 voiced manager hachi anime television series magical girl aired day celebrate reaching subscribers channel 15 july 2018 kizuna released digital single morning videos youtubers kizuna acts host youtube channels creating uploading original types entertainment videos attracting viewers subscribe channels kizuna videos lots content video bloggers kizuna imitate behaviour youtubers style videos comedic technology kizuna smoothly videos add content imaginative animated style bugs software unnaturally average kizuna videos minutes video content includes chatting sharing life stories answering questions fulfilling requests hosting discussions trending topics interviews plays dancing challenges drawing discussed artificial intelligence virtual reality games likes wikipedia dedicated talked buying friends money furniture games kizuna posts videos commentaries playing games youtube virtual play host kizuna game operating techniques clumsy gaming youtubers seemingly real comments reactions games likes viewed popular gaming video kizuna play popular indie game kizuna videos involve augemented virtual reality games omnidirectional motion capture technology 3d model kizuna playing game developed virtual reality games played kizuna include extreme sports game climb person shooter game superhot drawing software tilt brush kizuna attempted english quick draw explore tokyo virtually google maps talk apple iphone assistant siri subtitles language kizuna videos japanese difficult portion viewers understand specific content videos channel games allowed bilingual fans translate japanese videos languages translations offered fans kizuna channels offer content languages including japanese english korean spanish allowed global audiences understand comments kizuna videos helped grow audience japan korean english comments portions comments kizuna videos impact kizuna chan fans spearhead virtual youtuber trend kevin allocca youtube head cultural trends singled meteoric growth channel months growth virtual personalities platform alocca trend popularity contained japan character designs kizuna revolutionary concept precursor trend virtual reality virtual youtube users live streamers 2d virtual characters hatsune miku popular audience 2d widening concept kizuna youtube video host widespread profession live streaming requests constant production original exclusive content audience 2d live streaming method regular youtube market virtual streaming alternative unable reveal camera exquisite character designs imperfections real people virtual streaming production crew create character black artificial intelligence appears times kizuna videos animated fashion tubefilter writer sam gutelle characters kizuna oddities common future verge columnist rich mccormick feels kizuna content creators technically play games food sleep bring channels flexibility types videos future youtube bbc selling virtual characters youtubers appearance age development stages fandom activities 25 december 2016 kizuna producers decided mikumikudance 3d model download edits official fans produce doujin products 3d model mikumikudance unity unreal engine spaces developers model compatible virtual reality virtual model allowed videos games business purposes required developers contacted finally model political racial religious settings create models prohibited derivative fans shared rest fanbase kizuna social media accounts youtube users accounts kizuna names repost videos official channel offers subtitles languages dancing videos 
56641018	computerscience	deepfake portmanteau deep learning fake artificial intelligence based human image synthesis technique combine superimpose existing images videos source images videos machine learning technique called generative adversarial network gan combination existing source videos fake video person persons performing action event occurred reality fake videos created person performing sex acts alter gestures politician person capabilities deepfakes create fake celebrity pornographic videos revenge porn deepfakes create fake news malicious hoaxes pornography deepfake pornography surfaced internet 2017 reddit banned sites including reddit twitter pornhub autumn 2017 anonymous reddit user pseudonym deepfakes posted porn videos internet captured attention daisy ridley deepfake deepfake videos prominent feature articles deepfake simulation woman actress gal gadot sex step brother celebrities emma watson katy perry taylor swift scarlett johansson scenes real created artificial intelligence debunked short time time reddit community fixed bugs faked videos increasingly difficult distinguish fake true content pornographic photographs videos celebrities online training data software deepfake phenomenon reported december 2017 technical scientific magazine vice leading widespread reporting media scarlet johansson frequent subject deepfake porn spoke publicly subject washington post december 2018 prepared statement expressed concern phenomenon describing internet vast wormhole darkness eats stated attempt remove deepfakes belief affect public image differing laws countries nature internet culture attempt remove deepfakes lost believes celebrities protected fame deepfakes pose grave threat women lesser prominence reputations damaged depiction involuntary deepfake pornography revenge porn united kingdom producers deepfake material prosecuted harassment calls deepfake specific crime united charges varied identity theft cyberstalking revenge porn pursued notion comprehensive statute discussed politics deepfakes misrepresent politicians video portals chatrooms argentine president mauricio macri replaced adolf hitler angela merkel replaced donald trump april 2018 jordan peele jonah peretti created deepfake barack obama public service announcement danger deepfakes january 2019 fox television affiliate kcpq aired deepfake trump oval office address mocking appearance skin color deepfake software january 2018 desktop application called fakeapp launched app users easily create share videos swapped app artificial neural network power graphics processor gigabytes storage space generate fake video detailed program lot visual material person inserted learn image aspects exchanged deep learning algorithm based video sequences images software framework tensorflow google program deepdream celebrities main targets fake sex videos people august 2018 researchers university california berkeley published paper introducing fake dancing app create impression masterful dancing ability criticisms abuses aargauer zeitung manipulation images videos artificial intelligence dangerous mass phenomenon falsification images videos advent video editing software image editing programs realism aspect deepfake targeted hoaxes revenge porn effects credibility authenticity deepfake distinguished content targeted satire genuine researcher alex champandard fast corrupted technology technical solved trust journalism primary pitfall humanity fall age determined medium content corresponds truth internet reaction websites twitter gfycat announced delete deepfake content block publishers chat platform discord blocked chat channel fake celebrity porn videos pornography pornhub plans block content reported enforcing ban reddit situation initially remained unclear subreddit suspended february 2018 policy violation involuntary pornography september 2018 google involuntary synthetic pornographic imagery” ban list allowing request block fake nudes 
